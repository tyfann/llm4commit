[
    {
        "msg": "add tag comment on CONTRIBUTING.md Fixes",
        "diff": "diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md @@ -102,4 +102,6 @@ Main contributors will review your code and possibly ask for changes before your\nIf you have any questions feel free to post them to\n[github.com/OpenZeppelin/zeppelin-solidity/issues](https://github.com/OpenZeppelin/zeppelin-solidity/issues).\n+Finally, if you're looking to collaborate and want to find easy tasks to start, [look at the issues we marked as easy](https://github.com/OpenZeppelin/zeppelin-solidity/labels/easy).\n+\nThanks for your time and code!\n",
        "date": "09.01.2017 16:27:32",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add link to easy tasks for collaboration in CONTRIBUTING.md"
    },
    {
        "msg": "add comments for TransferableToken",
        "diff": "diff --git a/contracts/token/TransferableToken.sol b/contracts/token/TransferableToken.sol @@ -2,20 +2,47 @@ pragma solidity ^0.4.8;\nimport \"./ERC20.sol\";\n+/*\n+\n+TransferableToken defines the generic interface and the implementation\n+to limit token transferability for different events.\n+\n+It is intended to be used as a base class for other token contracts.\n+\n+Over-writting transferableTokens(address holder, uint64 time) is the way to provide\n+the specific logic for limitting token transferability for a holder over time.\n+\n+TransferableToken has been designed to allow for different limitting factors,\n+this can be achieved by recursively calling super.transferableTokens() until the\n+base class is hit. For example:\n+\n+function transferableTokens(address holder, uint64 time) constant public returns (uint256) {\n+ return min256(unlockedTokens, super.transferableTokens(holder, time));\n+}\n+\n+A working example is VestedToken.sol:\n+https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/token/VestedToken.sol\n+\n+*/\n+\ncontract TransferableToken is ERC20 {\n+ // Checks whether it can transfer or otherwise throws.\nmodifier canTransfer(address _sender, uint _value) {\nif (_value > transferableTokens(_sender, uint64(now))) throw;\n_;\n}\n+ // Checks modifier and allows transfer if tokens are not locked.\nfunction transfer(address _to, uint _value) canTransfer(msg.sender, _value) returns (bool success) {\nreturn super.transfer(_to, _value);\n}\n+ // Checks modifier and allows transfer if tokens are not locked.\nfunction transferFrom(address _from, address _to, uint _value) canTransfer(_from, _value) returns (bool success) {\nreturn super.transferFrom(_from, _to, _value);\n}\n+ // Default transferable tokens function returns all tokens for a holder (no limit).\nfunction transferableTokens(address holder, uint64 time) constant public returns (uint256) {\nreturn balanceOf(holder);\n}\n",
        "date": "20.03.2017 10:16:48",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add transferability limit logic to TransferableToken contract"
    },
    {
        "msg": "add MintFinished event to MintableToken",
        "diff": "diff --git a/contracts/token/MintableToken.sol b/contracts/token/MintableToken.sol @@ -18,6 +18,7 @@ import '../ownership/Ownable.sol';\ncontract MintableToken is StandardToken, Ownable {\nevent Mint(address indexed to, uint value);\n+ event MintFinished();\nbool public mintingFinished = false;\nuint public totalSupply = 0;\n@@ -36,6 +37,7 @@ contract MintableToken is StandardToken, Ownable {\nfunction finishMinting() onlyOwner returns (bool) {\nmintingFinished = true;\n+ MintFinished();\nreturn true;\n}\n}\n",
        "date": "13.04.2017 14:23:41",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add event MintFinished() and call it in finishMinting() function"
    },
    {
        "msg": "add fix for the approve() mitigation.",
        "diff": "diff --git a/contracts/token/StandardToken.sol b/contracts/token/StandardToken.sol @@ -29,6 +29,13 @@ contract StandardToken is BasicToken, ERC20 {\n}\nfunction approve(address _spender, uint _value) {\n+\n+ // To change the approve amount you first have to reduce the addresses`\n+ // allowance to zero by calling `approve(_spender,0)` if it is not\n+ // already 0 to mitigate the race condition described here:\n+ // https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n+ if ((_amount!=0) && (allowed[msg.sender][_spender] !=0)) throw;\n+\nallowed[msg.sender][_spender] = _value;\nApproval(msg.sender, _spender, _value);\n}\n",
        "date": "17.05.2017 01:33:13",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Fix race condition in approve function"
    },
    {
        "msg": "add tests for non-revokable and revokable/burnable cases",
        "diff": "diff --git a/test/VestedToken.js b/test/VestedToken.js @@ -96,4 +96,61 @@ contract('VestedToken', function(accounts) {\nassert.equal(await token.balanceOf(accounts[7]), tokenAmount);\n})\n})\n+\n+ describe('getting a non-revokable token grant', async () => {\n+ const cliff = 10000\n+ const vesting = 20000 // seconds\n+\n+ beforeEach(async () => {\n+ await token.grantVestedTokens(receiver, tokenAmount, now, now + cliff, now + vesting, false, false, { from: granter })\n+ })\n+\n+ it('tokens are received', async () => {\n+ assert.equal(await token.balanceOf(receiver), tokenAmount);\n+ })\n+\n+ it('throws when granter attempts to revoke', async () => {\n+ try {\n+ await token.revokeTokenGrant(receiver, 0, { from: granter });\n+ } catch(error) {\n+ return assertJump(error);\n+ }\n+ assert.fail('should have thrown before');\n+ })\n+ })\n+\n+ describe('getting a revokable/burnable token grant', async () => {\n+ const cliff = 100000\n+ const vesting = 200000 // seconds\n+ const burnAddress = '0x000000000000000000000000000000000000dead'\n+\n+ beforeEach(async () => {\n+ await token.grantVestedTokens(receiver, tokenAmount, now, now + cliff, now + vesting, true, true, { from: granter })\n+ })\n+\n+ it('tokens are received', async () => {\n+ assert.equal(await token.balanceOf(receiver), tokenAmount);\n+ })\n+\n+ it('can be revoked by granter and tokens are burned', async () => {\n+ await token.revokeTokenGrant(receiver, 0, { from: granter });\n+ assert.equal(await token.balanceOf(receiver), 0);\n+ assert.equal(await token.balanceOf(burnAddress), tokenAmount);\n+ })\n+\n+ it('cannot be revoked by non granter', async () => {\n+ try {\n+ await token.revokeTokenGrant(receiver, 0, { from: accounts[3] });\n+ } catch(error) {\n+ return assertJump(error);\n+ }\n+ assert.fail('should have thrown before');\n+ })\n+\n+ it('can be revoked by granter and non vested tokens are returned', async () => {\n+ await timer(cliff);\n+ await token.revokeTokenGrant(receiver, 0, { from: granter });\n+ assert.equal(await token.balanceOf(burnAddress), tokenAmount * cliff / vesting);\n+ })\n+ })\n});\n",
        "date": "21.05.2017 11:17:24",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add tests for non-revokable and revokable/burnable token grants in VestedToken contract"
    },
    {
        "msg": "add natspec to vestedToken.sol",
        "diff": "diff --git a/contracts/token/VestedToken.sol b/contracts/token/VestedToken.sol @@ -6,8 +6,7 @@ import \"./LimitedTransferToken.sol\";\n/**\n* @title Vested token\n-* @dev This tokens can be granted to a specific address after a determined\n-amount of time.\n+* @dev Tokens that can be vested for a group of addresses.\n*/\ncontract VestedToken is StandardToken, LimitedTransferToken {\n@@ -25,9 +24,9 @@ contract VestedToken is StandardToken, LimitedTransferToken {\n* @dev Grant tokens to a specified address\n* @param _to address The address which the tokens will be granted to.\n* @param _value uint256 The amount of tokens to be granted.\n- * @param _start uint 64 The time of the begining of the grant.\n- * @param _cliff uint64 The time before the grant is enforceble.\n- * @param _vesting uint64 The time in which the tokens will be vested.\n+ * @param _start uint64 Represents time of the begining of the grant.\n+ * @param _cliff uint64 Represents the cliff period.\n+ * @param _vesting uint64 Represents the vesting period.\n*/\nfunction grantVestedTokens(\naddress _to,\n@@ -80,16 +79,18 @@ contract VestedToken is StandardToken, LimitedTransferToken {\n/**\n* @dev Check the amount of grants that an address has.\n* @param _holder address The holder of the grants.\n- * @return A uint representing the index of the grant.\n+ * @return A uint representing the total amount of grants.\n*/\nfunction tokenGrantsCount(address _holder) constant returns (uint index) {\nreturn grants[_holder].length;\n}\n/**\n- * @dev\n+ * @dev Get all information about a specifc grant.\n* @param _holder address The address which will have its tokens revoked.\n* @param _grantId uint The id of the token grant.\n+ * @return Returns all the values that represent a TokenGrant(address, value,\n+ start, cliff and vesting) plus the vested value at the current time.\n*/\nfunction tokenGrant(address _holder, uint _grantId) constant returns (address granter, uint256 value, uint256 vested, uint64 start, uint64 cliff, uint64 vesting) {\nTokenGrant grant = grants[_holder][_grantId];\n@@ -103,6 +104,13 @@ contract VestedToken is StandardToken, LimitedTransferToken {\nvested = vestedTokens(grant, uint64(now));\n}\n+ /**\n+ * @dev Get the amount of vested tokens at a specifc time.\n+ * @param grant TokenGrant The grant to be checked.\n+ * @param time uint64 The time to be checked\n+ * @return An uint representing the amount of vested tokens of a specifc grant\n+ on specifc time.\n+ */\nfunction vestedTokens(TokenGrant grant, uint64 time) private constant returns (uint256) {\nreturn calculateVestedTokens(\ngrant.value,\n@@ -113,6 +121,15 @@ contract VestedToken is StandardToken, LimitedTransferToken {\n);\n}\n+ /**\n+ * @dev Calculate amount of vested tokens at a specifc time.\n+ * @param tokens uint256 The amount of tokens grantted.\n+ * @param time uint64 The time to be checked\n+ * @param start uint64 A time representing the begining of the grant\n+ * @param _cliff uint64 Represents the cliff period.\n+ * @param _vesting uint64 Represents the vesting period.\n+ * @return An uint representing the amount of vested tokensof a specif grant.\n+ */\nfunction calculateVestedTokens(\nuint256 tokens,\nuint256 time,\n@@ -136,10 +153,22 @@ contract VestedToken is StandardToken, LimitedTransferToken {\nvestedTokens = vestedTokens.add(vestingTokens.mul(time.sub(cliff)).div(vesting.sub(cliff)));\n}\n+ /**\n+ * @dev Calculate the amount of non vested tokens at a specific time.\n+ * @param grant TokenGrant The grant to be checked.\n+ * @param time uint64 The time to be checked\n+ * @return An uint representing the amount of non vested tokens of a specifc grant\n+ on the passed time frame.\n+ */\nfunction nonVestedTokens(TokenGrant grant, uint64 time) private constant returns (uint256) {\nreturn grant.value.sub(vestedTokens(grant, time));\n}\n+ /**\n+ * @dev Calculate the date when the holder can trasfer all its tokens\n+ * @param holder address The address of the holder\n+ * @return An uint representing the date of the last transferable tokens.\n+ */\nfunction lastTokenIsTransferableDate(address holder) constant public returns (uint64 date) {\ndate = uint64(now);\nuint256 grantIndex = grants[holder].length;\n@@ -148,6 +177,12 @@ contract VestedToken is StandardToken, LimitedTransferToken {\n}\n}\n+ /**\n+ * @dev Calculate the total amount of transferable tokens of a holder at a given time\n+ * @param holder address The address of the holder\n+ * @param time uint64 The specific time.\n+ * @return An uint representing a holder's total amount of transferable tokens.\n+ */\nfunction transferableTokens(address holder, uint64 time) constant public returns (uint256 nonVested) {\nuint256 grantIndex = grants[holder].length;\nfor (uint256 i = 0; i < grantIndex; i++) {\n",
        "date": "04.05.2017 12:41:09",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Refactor VestedToken contract to support multiple address grants and improve code readability."
    },
    {
        "msg": "add doc comments to multisig wallet",
        "diff": "diff --git a/contracts/MultisigWallet.sol b/contracts/MultisigWallet.sol @@ -6,9 +6,9 @@ import \"./ownership/Shareable.sol\";\nimport \"./DayLimit.sol\";\n-/*\n+/**\n* MultisigWallet\n- * usage:\n+ * Usage:\n* bytes32 h = Wallet(w).from(oneOwner).execute(to, value, data);\n* Wallet(w).from(anotherOwner).confirm(h);\n*/\n@@ -20,26 +20,41 @@ contract MultisigWallet is Multisig, Shareable, DayLimit {\nbytes data;\n}\n+ /**\n+ * Constructor, sets the owners addresses, number of approvals required, and daily spending limit\n+ * @param _owners A list of owners.\n+ * @param _required The amount required for a transaction to be approved.\n+ */\nfunction MultisigWallet(address[] _owners, uint _required, uint _daylimit)\nShareable(_owners, _required)\nDayLimit(_daylimit) { }\n- // destroys the contract sending everything to `_to`.\n+ /**\n+ * @dev destroys the contract sending everything to `_to`.\n+ */\nfunction destroy(address _to) onlymanyowners(keccak256(msg.data)) external {\nselfdestruct(_to);\n}\n- // gets called when no other function matches\n+ /**\n+ * @dev Fallback function, receives value and emits a deposit event.\n+ */\nfunction() payable {\n// just being sent some cash?\nif (msg.value > 0)\nDeposit(msg.sender, msg.value);\n}\n- // Outside-visible transact entry point. Executes transaction immediately if below daily spend limit.\n- // If not, goes into multisig process. We provide a hash on return to allow the sender to provide\n- // shortcuts for the other confirmations (allowing them to avoid replicating the _to, _value\n- // and _data arguments). They still get the option of using them if they want, anyways.\n+ /**\n+ * @dev Outside-visible transaction entry point. Executes transaction immediately if below daily\n+ * spending limit. If not, goes into multisig process. We provide a hash on return to allow the\n+ * sender to provide shortcuts for the other confirmations (allowing them to avoid replicating\n+ * the _to, _value, and _data arguments). They still get the option of using them if they want,\n+ * anyways.\n+ * @param _to The receiver address\n+ * @param _value The value to send\n+ * @param _data The data part of the transaction\n+ */\nfunction execute(address _to, uint _value, bytes _data) external onlyOwner returns (bytes32 _r) {\n// first, take the opportunity to check that we're under the daily limit.\nif (underLimit(_value)) {\n@@ -60,8 +75,11 @@ contract MultisigWallet is Multisig, Shareable, DayLimit {\n}\n}\n- // confirm a transaction through just the hash. we use the previous transactions map, txs, in order\n- // to determine the body of the transaction from the hash provided.\n+ /**\n+ * @dev Confirm a transaction by providing just the hash. We use the previous transactions map,\n+ * txs, in order to determine the body of the transaction from the hash provided.\n+ * @param _h The transaction hash to approve.\n+ */\nfunction confirm(bytes32 _h) onlymanyowners(_h) returns (bool) {\nif (txs[_h].to != 0) {\nif (!txs[_h].to.call.value(txs[_h].value)(txs[_h].data)) {\n@@ -73,17 +91,27 @@ contract MultisigWallet is Multisig, Shareable, DayLimit {\n}\n}\n+ /**\n+ * @dev Updates the daily limit value.\n+ * @param _newLimit\n+ */\nfunction setDailyLimit(uint _newLimit) onlymanyowners(keccak256(msg.data)) external {\n_setDailyLimit(_newLimit);\n}\n+ /**\n+ * @dev Resets the value spent to enable more spending\n+ * @param _newLimit\n+ */\nfunction resetSpentToday() onlymanyowners(keccak256(msg.data)) external {\n_resetSpentToday();\n}\n// INTERNAL METHODS\n-\n+ /**\n+ * @dev Clears the list of transactions pending approval.\n+ */\nfunction clearPending() internal {\nuint length = pendingsIndex.length;\nfor (uint i = 0; i < length; ++i) {\n",
        "date": "08.05.2017 09:07:33",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Refactor MultisigWallet contract and add documentation"
    },
    {
        "msg": "add new test for a day passed scenario to the DayLimit contract",
        "diff": "diff --git a/test/DayLimit.js b/test/DayLimit.js 'use strict';\nconst assertJump = require('./helpers/assertJump');\n+const timer = require('./helpers/timer');\n-var DayLimitMock = artifacts.require('helpers/DayLimitMock.sol');\n+var DayLimitMock = artifacts.require('./helpers/DayLimitMock.sol');\ncontract('DayLimit', function(accounts) {\n+ const day = 60 * 60 * 24;\nit('should construct with the passed daily limit', async function() {\nlet initLimit = 10;\n@@ -84,4 +86,27 @@ contract('DayLimit', function(accounts) {\nassert.equal(spentToday, 3);\n});\n+ it('should allow spending if daily limit is reached and then the next has come', async function() {\n+ let limit = 10;\n+ let dayLimit = await DayLimitMock.new(limit);\n+\n+ await dayLimit.attemptSpend(8);\n+ let spentToday = await dayLimit.spentToday();\n+ assert.equal(spentToday, 8);\n+\n+ try {\n+ await dayLimit.attemptSpend(3);\n+ } catch(error) {\n+ assertJump(error);\n+ }\n+ spentToday = await dayLimit.spentToday();\n+ assert.equal(spentToday, 8);\n+\n+ await timer(day);\n+\n+ await dayLimit.attemptSpend(3);\n+ spentToday = await dayLimit.spentToday();\n+ assert.equal(spentToday, 3);\n+ });\n+\n});\n",
        "date": "02.07.2017 21:06:58",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Refactor DayLimit.js to fix import path and add test case for spending limit reset after a new day."
    },
    {
        "msg": "add NatSpec documentation on ECRecovery contract",
        "diff": "diff --git a/contracts/ECRecovery.sol b/contracts/ECRecovery.sol @@ -2,12 +2,20 @@ pragma solidity ^0.4.11;\n/**\n-* Eliptic curve signature operations\n-* Based on https://gist.github.com/axic/5b33912c6f61ae6fd96d6c4a47afde6d\n+ * @title Eliptic curve signature operations\n+ *\n+ * @dev Based on https://gist.github.com/axic/5b33912c6f61ae6fd96d6c4a47afde6d\n*/\n+\nlibrary ECRecovery {\n- // Duplicate Solidity's ecrecover, but catching the CALL return value\n+ /**\n+ * @dev Duplicate Solidity's ecrecover, but catching the CALL return value\n+ * @param hash bytes32 messahe hash from which the signature will be recovered\n+ * @param v uint8 signature version\n+ * @param r bytes32 signature r value\n+ * @param s bytes32 signature s value\n+ */\nfunction safeRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) constant returns (bool, address) {\n// We do our own memory management here. Solidity uses memory offset\n// 0x40 to store the current end of memory. We write past it (as\n@@ -34,6 +42,11 @@ library ECRecovery {\nreturn (ret, addr);\n}\n+ /**\n+ * @dev Recover signer address from a message by using his signature\n+ * @param hash bytes32 messahe hash from which the signature will be recovered\n+ * @param sig bytes signature\n+ */\nfunction recover(bytes32 hash, bytes sig) constant returns (address) {\nbytes32 r;\nbytes32 s;\n",
        "date": "02.07.2017 00:12:44",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Refactor ECRecovery library to include safeRecover and recover functions with detailed documentation."
    },
    {
        "msg": "add assert to prevent regression",
        "diff": "diff --git a/test/Ownable.js b/test/Ownable.js @@ -38,6 +38,7 @@ contract('Ownable', function(accounts) {\nlet originalOwner = await ownable.owner();\ntry {\nawait ownable.transferOwnership(null, {from: originalOwner});\n+ assert.fail()\n} catch(error) {\nassertJump(error);\n}\n",
        "date": "21.07.2017 23:04:50",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Fix transferOwnership test in Ownable contract"
    },
    {
        "msg": "add semicolon to match coding standards",
        "diff": "diff --git a/test/Ownable.js b/test/Ownable.js @@ -38,7 +38,7 @@ contract('Ownable', function(accounts) {\nlet originalOwner = await ownable.owner();\ntry {\nawait ownable.transferOwnership(null, {from: originalOwner});\n- assert.fail()\n+ assert.fail();\n} catch(error) {\nassertJump(error);\n}\n",
        "date": "21.07.2017 23:07:50",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Fix missing semicolon in assert.fail() statement"
    },
    {
        "msg": "add check to see if process is running because when we interrupt the tests via ^C, the signal also kills the background process",
        "diff": "diff --git a/scripts/test.sh b/scripts/test.sh trap cleanup EXIT\ncleanup() {\n- # Kill the testrpc instance that we started (if we started one).\n- if [ -n \"$testrpc_pid\" ]; then\n+ # Kill the testrpc instance that we started (if we started one and if it's still running).\n+ if [ -n \"$testrpc_pid\" ] && ps -p $testrpc_pid > /dev/null; then\nkill -9 $testrpc_pid\nfi\n}\n",
        "date": "24.07.2017 13:51:30",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Improve testrpc cleanup in test.sh script"
    },
    {
        "msg": "add constant qualifier",
        "diff": "diff --git a/contracts/examples/SimpleToken.sol b/contracts/examples/SimpleToken.sol pragma solidity ^0.4.11;\n-import \"./StandardToken.sol\";\n+import \"../token/StandardToken.sol\";\n/**\n@@ -12,10 +12,11 @@ import \"./StandardToken.sol\";\n*/\ncontract SimpleToken is StandardToken {\n- string public name = \"SimpleToken\";\n- string public symbol = \"SIM\";\n- uint256 public decimals = 18;\n- uint256 public INITIAL_SUPPLY = 10000;\n+ string public constant name = \"SimpleToken\";\n+ string public constant symbol = \"SIM\";\n+ uint256 public constant decimals = 18;\n+\n+ uint256 public constant INITIAL_SUPPLY = 10000;\n/**\n* @dev Contructor that gives msg.sender all of existing tokens.\n",
        "date": "24.07.2017 19:13:00",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Refactor import path and make variables constant in SimpleToken contract"
    },
    {
        "msg": "add missing parentheses in modifier",
        "diff": "diff --git a/contracts/lifecycle/Pausable.sol b/contracts/lifecycle/Pausable.sol @@ -26,7 +26,7 @@ contract Pausable is Ownable {\n/**\n* @dev modifier to allow actions only when the contract IS NOT paused\n*/\n- modifier whenPaused {\n+ modifier whenPaused() {\nrequire(paused);\n_;\n}\n",
        "date": "28.07.2017 20:59:11",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add parentheses to whenPaused modifier"
    },
    {
        "msg": "add test for finishMinting",
        "diff": "diff --git a/test/MintableToken.js b/test/MintableToken.js 'use strict';\n-const assertJump = require('./helpers/assertJump');\n+import expectThrow from './helpers/expectThrow';\nvar MintableToken = artifacts.require('../contracts/Tokens/MintableToken.sol');\ncontract('Mintable', function(accounts) {\n@@ -37,4 +37,10 @@ contract('Mintable', function(accounts) {\nassert(totalSupply, 100);\n})\n+ it('should fail to mint after call to finishMinting', async function () {\n+ await token.finishMinting();\n+ assert.equal(await token.mintingFinished(), true);\n+ await expectThrow(token.mint(accounts[0], 100));\n+ })\n+\n});\n",
        "date": "13.08.2017 22:41:25",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Refactor MintableToken test to use expectThrow helper and add test for failing to mint after finishMinting."
    },
    {
        "msg": "add comment making explicit that SafeMath.sub can throw",
        "diff": "diff --git a/contracts/token/BasicToken.sol b/contracts/token/BasicToken.sol @@ -22,6 +22,7 @@ contract BasicToken is ERC20Basic {\nfunction transfer(address _to, uint256 _value) returns (bool) {\nrequire(_to != address(0));\n+ // SafeMath.sub will throw if there is not enough balance.\nbalances[msg.sender] = balances[msg.sender].sub(_value);\nbalances[_to] = balances[_to].add(_value);\nTransfer(msg.sender, _to, _value);\n",
        "date": "29.08.2017 11:50:02",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add check for sufficient balance before transferring tokens"
    },
    {
        "msg": "add previousOwner field to OwnershipTransferred event",
        "diff": "diff --git a/contracts/ownership/Ownable.sol b/contracts/ownership/Ownable.sol @@ -10,7 +10,7 @@ contract Ownable {\naddress public owner;\n- event OwnershipTransferred(address indexed newOwner);\n+ event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n/**\n",
        "date": "06.09.2017 10:29:25",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Update OwnershipTransferred event to include previous owner address"
    },
    {
        "msg": "add whenNotPaused modifier to all of PausableToken functions that modify it's state. Fix",
        "diff": "diff --git a/contracts/token/PausableToken.sol b/contracts/token/PausableToken.sol @@ -11,11 +11,23 @@ import '../lifecycle/Pausable.sol';\ncontract PausableToken is StandardToken, Pausable {\n- function transfer(address _to, uint256 _value) whenNotPaused public returns (bool) {\n+ function transfer(address _to, uint256 _value) public whenNotPaused returns (bool) {\nreturn super.transfer(_to, _value);\n}\n- function transferFrom(address _from, address _to, uint256 _value) whenNotPaused public returns (bool) {\n+ function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused returns (bool) {\nreturn super.transferFrom(_from, _to, _value);\n}\n+\n+ function approve(address _spender, uint256 _value) public whenNotPaused returns (bool) {\n+ return super.approve(_spender, _value);\n+ }\n+\n+ function increaseApproval(address _spender, uint _addedValue) public whenNotPaused returns (bool success) {\n+ return super.increaseApproval(_spender, _addedValue);\n+ }\n+\n+ function decreaseApproval(address _spender, uint _subtractedValue) public whenNotPaused returns (bool success) {\n+ return super.decreaseApproval(_spender, _subtractedValue);\n+ }\n}\n",
        "date": "15.09.2017 20:03:41",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Refactor token transfer functions to include pause functionality"
    },
    {
        "msg": "add explicit visibility",
        "diff": "diff --git a/contracts/token/StandardToken.sol b/contracts/token/StandardToken.sol @@ -14,7 +14,7 @@ import './ERC20.sol';\n*/\ncontract StandardToken is ERC20, BasicToken {\n- mapping (address => mapping (address => uint256)) allowed;\n+ mapping (address => mapping (address => uint256)) internal allowed;\n/**\n@@ -70,15 +70,13 @@ contract StandardToken is ERC20, BasicToken {\n* the first transaction is mined)\n* From MonolithDAO Token.sol\n*/\n- function increaseApproval (address _spender, uint _addedValue)\n- returns (bool success) {\n+ function increaseApproval (address _spender, uint _addedValue) public returns (bool success) {\nallowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\nApproval(msg.sender, _spender, allowed[msg.sender][_spender]);\nreturn true;\n}\n- function decreaseApproval (address _spender, uint _subtractedValue)\n- returns (bool success) {\n+ function decreaseApproval (address _spender, uint _subtractedValue) public returns (bool success) {\nuint oldValue = allowed[msg.sender][_spender];\nif (_subtractedValue > oldValue) {\nallowed[msg.sender][_spender] = 0;\n",
        "date": "19.09.2017 08:29:03",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add visibility specifier to increaseApproval and decreaseApproval functions"
    },
    {
        "msg": "add some additional tests",
        "diff": "diff --git a/test/StandardToken.js b/test/StandardToken.js 'use strict';\nconst assertJump = require('./helpers/assertJump');\n+const expectThrow = require('./helpers/expectThrow');\nvar StandardTokenMock = artifacts.require('./helpers/StandardTokenMock.sol');\ncontract('StandardToken', function(accounts) {\n@@ -70,6 +71,17 @@ contract('StandardToken', function(accounts) {\n}\n});\n+ it('should throw an error when trying to transferFrom more than _from has', async function() {\n+ let balance0 = await token.balanceOf(accounts[0]);\n+ await token.approve(accounts[1], 99);\n+ try {\n+ await token.transferFrom(accounts[0], accounts[2], balance0+1, {from: accounts[1]});\n+ assert.fail('should have thrown before');\n+ } catch (error) {\n+ assertJump(error);\n+ }\n+ });\n+\ndescribe('validating allowance updates to spender', function() {\nlet preApproved;\n@@ -88,6 +100,13 @@ contract('StandardToken', function(accounts) {\n})\n});\n+ it('should increase by 50 then set to 0 when decreasing by more than 50', async function() {\n+ await token.approve(accounts[1], 50);\n+ await token.decreaseApproval(accounts[1], 60);\n+ let postDecrease = await token.allowance(accounts[0], accounts[1]);\n+ postDecrease.should.be.bignumber.equal(0);\n+});\n+\nit('should throw an error when trying to transfer to 0x0', async function() {\nlet token = await StandardTokenMock.new(accounts[0], 100);\ntry {\n",
        "date": "23.09.2017 17:06:14",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add error handling for transferFrom and decreaseApproval functions"
    },
    {
        "msg": "add missing code blocks to bounty docs",
        "diff": "diff --git a/docs/source/bounty.rst b/docs/source/bounty.rst @@ -14,7 +14,7 @@ To create a bounty for your contract, inherit from the base `Bounty` contract an\nNext, implement invariant logic into your smart contract.\n-Your main contract should inherit from the Target class and implement the checkInvariant method. This is a function that should check everything your contract assumes to be true all the time. If this function returns false, it means your contract was broken in some way and is in an inconsistent state. This is what security researchers will try to acomplish when trying to get the bounty.\n+Your main contract should inherit from the `Target` class and implement the ```checkInvariant()``` method. This is a function that should check everything your contract assumes to be true all the time. If this function returns false, it means your contract was broken in some way and is in an inconsistent state. This is what security researchers will try to acomplish when trying to get the bounty.\nAt contracts/YourContract.sol::\n@@ -35,7 +35,7 @@ At ```migrations/2_deploy_contracts.js```::\ndeployer.deploy(YourBounty);\n};\n-Next, add a reward to the bounty contract\n+Next, add a reward to the bounty contract.\nAfter deploying the contract, send reward funds into the bounty contract.\n",
        "date": "01.10.2017 22:34:58",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Refactor checkInvariant method and add missing punctuation."
    },
    {
        "msg": "add shortcut for vestedAmount after vesting end",
        "diff": "diff --git a/contracts/token/TokenVesting.sol b/contracts/token/TokenVesting.sol @@ -70,6 +70,8 @@ contract TokenVesting is Ownable {\nfunction vestedAmount(ERC20Basic token) constant returns (uint256) {\nif (now < cliff) {\nreturn 0;\n+ } else if (now >= end) {\n+ return token.balanceOf(this);\n} else {\nuint256 currentBalance = token.balanceOf(this);\nuint256 totalBalance = currentBalance.add(released[token]);\n",
        "date": "28.08.2017 17:05:15",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add condition to return total token balance if vesting period has ended"
    },
    {
        "msg": "add preconditions to constructor",
        "diff": "diff --git a/contracts/token/TokenVesting.sol b/contracts/token/TokenVesting.sol @@ -31,6 +31,10 @@ contract TokenVesting is Ownable {\n* @param _end timestamp of the moment when all balance will have been vested\n*/\nfunction TokenVesting(address _beneficiary, uint256 _cliff, uint256 _end) {\n+ require(_beneficiary != 0x0);\n+ require(_cliff > now);\n+ require(_end > _cliff);\n+\nbeneficiary = _beneficiary;\ncliff = _cliff;\nend = _end;\n",
        "date": "28.08.2017 17:13:59",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add input validation for beneficiary, cliff, and end parameters in TokenVesting constructor"
    },
    {
        "msg": "add pending tests",
        "diff": "diff --git a/test/TokenVesting.js b/test/TokenVesting.js @@ -48,6 +48,8 @@ contract('TokenVesting', function ([_, owner, beneficiary]) {\nbalance.should.bignumber.equal(amount.mul(releaseTime - this.start).div(this.end - this.start).floor());\n});\n+ it('should linearly release tokens during vesting period');\n+\nit('should have released all after end', async function () {\nawait increaseTimeTo(this.end);\nawait this.vesting.release(this.token.address);\n@@ -55,4 +57,8 @@ contract('TokenVesting', function ([_, owner, beneficiary]) {\nbalance.should.bignumber.equal(amount);\n});\n+ it('should fail to be revoked by owner if revocable not set');\n+\n+ it('should be emptied when revoked by owner');\n+\n});\n",
        "date": "29.08.2017 12:40:47",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add tests for linear token release and revocation by owner in TokenVesting contract"
    },
    {
        "msg": "add overridable getTokenAmount function",
        "diff": "diff --git a/contracts/crowdsale/Crowdsale.sol b/contracts/crowdsale/Crowdsale.sol @@ -59,12 +59,16 @@ contract Crowdsale {\nreturn new MintableToken();\n}\n-\n// fallback function can be used to buy tokens\nfunction () external payable {\nbuyTokens(msg.sender);\n}\n+ // Override this function to create logic for periodization\n+ function getTokenAmount(uint256 weiAmount) internal constant returns(uint256) {\n+ return weiAmount.mul(rate);\n+ }\n+\n// low level token purchase function\nfunction buyTokens(address beneficiary) public payable {\nrequire(beneficiary != address(0));\n",
        "date": "03.01.2018 10:54:30",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add logic for periodization in getTokenAmount function"
    },
    {
        "msg": "add missing semicolon in ECRecovery test",
        "diff": "diff --git a/test/ECRecovery.test.js b/test/ECRecovery.test.js @@ -5,7 +5,7 @@ var hashMessage = require('./helpers/hashMessage.js');\ncontract('ECRecovery', function (accounts) {\nlet ecrecovery;\n- const TEST_MESSAGE = 'OpenZeppelin'\n+ const TEST_MESSAGE = 'OpenZeppelin';\nbefore(async function () {\nconst ecRecoveryLib = await ECRecoveryLib.new();\n",
        "date": "04.01.2018 16:39:41",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Fix syntax error in test/ECRecovery.test.js"
    },
    {
        "msg": "add documentation to safemath functions Fixes",
        "diff": "diff --git a/contracts/math/SafeMath.sol b/contracts/math/SafeMath.sol @@ -6,6 +6,10 @@ pragma solidity ^0.4.18;\n* @dev Math operations with safety checks that throw on error\n*/\nlibrary SafeMath {\n+\n+ /**\n+ * @dev Multiplies two numbers, throws on overflow.\n+ */\nfunction mul(uint256 a, uint256 b) internal pure returns (uint256) {\nif (a == 0) {\nreturn 0;\n@@ -15,6 +19,9 @@ library SafeMath {\nreturn c;\n}\n+ /**\n+ * @dev Integer division of two numbers, truncating the quotient.\n+ */\nfunction div(uint256 a, uint256 b) internal pure returns (uint256) {\n// assert(b > 0); // Solidity automatically throws when dividing by 0\nuint256 c = a / b;\n@@ -22,11 +29,17 @@ library SafeMath {\nreturn c;\n}\n+ /**\n+ * @dev Substracts two numbers, throws if subtrahend is greater than minuend.\n+ */\nfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\nassert(b <= a);\nreturn a - b;\n}\n+ /**\n+ * @dev Adds two numbers, throws on overflow.\n+ */\nfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\nuint256 c = a + b;\nassert(c >= a);\n",
        "date": "11.01.2018 11:11:43",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add safe math functions for multiplication, division, subtraction, and addition."
    },
    {
        "msg": "add test for SimpleSavingsWallet",
        "diff": "diff --git a/test/SimpleSavingsWallet.js b/test/SimpleSavingsWallet.js 'use strict'\n+import assertJump from './helpers/assertJump'\nconst SimpleSavingsWallet = artifacts.require('../contracts/examples/SimpleSavingsWallet.sol')\n@@ -6,11 +7,46 @@ contract('SimpleSavingsWallet', function(accounts) {\nlet savingsWallet\nlet owner\n+ const paymentAmount = 4242\n+\nbeforeEach(async function() {\nsavingsWallet = await SimpleSavingsWallet.new(4141)\n- owner = await inheritable.owner()\n+ owner = await savingsWallet.owner()\n})\nit('should receive funds', async function() {\n- await web3.eth.sendTransaction({from: owner, to: this.contract.address, value: amount})\n+ await web3.eth.sendTransaction({from: owner, to: savingsWallet.address, value: paymentAmount})\n+ assert.isTrue(\n+ (new web3.BigNumber(paymentAmount)).equals(web3.eth.getBalance(savingsWallet.address))\n+ )\n+ })\n+\n+ it('owner can send funds', async function() {\n+ // Receive payment so we have some money to spend.\n+ await web3.eth.sendTransaction({from: accounts[9], to: savingsWallet.address, value: 1000000})\n+ try {\n+ await savingsWallet.sendTo(0, paymentAmount, {from: owner})\n+ assert.fail('should have thrown before')\n+ } catch(error) {\n+ assertJump(error)\n+ }\n+ try {\n+ await savingsWallet.sendTo(savingsWallet.address, paymentAmount, {from: owner})\n+ assert.fail('should have thrown before')\n+ } catch(error) {\n+ assertJump(error)\n+ }\n+ try {\n+ await savingsWallet.sendTo(accounts[1], 0, {from: owner})\n+ assert.fail('should have thrown before')\n+ } catch(error) {\n+ assertJump(error)\n+ }\n+\n+ const balance = web3.eth.getBalance(accounts[1])\n+ await savingsWallet.sendTo(accounts[1], paymentAmount, {from: owner})\n+ assert.isTrue(\n+ balance.plus(paymentAmount).equals(web3.eth.getBalance(accounts[1]))\n+ )\n+ })\n})\n",
        "date": "29.11.2017 23:36:40",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Refactor SimpleSavingsWallet tests and fix owner reference bug"
    },
    {
        "msg": "add note about not following semver",
        "diff": "diff --git a/README.md b/README.md @@ -23,10 +23,12 @@ truffle init\nTo install the OpenZeppelin library, run the following in your Solidity project root directory:\n```sh\n-npm init\n-npm install zeppelin-solidity\n+npm init -y\n+npm install -E zeppelin-solidity\n```\n+**Note that OpenZeppelin does not currently follow semantic versioning.** You may encounter breaking changes upon a minor version bump. We recommend pinning the version of OpenZeppelin you use, as done by the `-E` (`--save-exact`) option.\n+\nAfter that, you'll get all the library's contracts in the `node_modules/zeppelin-solidity/contracts` folder. You can use the contracts in the library like so:\n```js\n",
        "date": "18.01.2018 17:58:41",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Update OpenZeppelin installation instructions in README.md"
    },
    {
        "msg": "add awaits",
        "diff": "diff --git a/test/crowdsale/IndividuallyCappedCrowdsale.test.js b/test/crowdsale/IndividuallyCappedCrowdsale.test.js @@ -23,8 +23,8 @@ contract('IndividuallyCappedCrowdsale', function ([_, wallet, alice, bob, charli\nbeforeEach(async function () {\nthis.token = await SimpleToken.new();\nthis.crowdsale = await CappedCrowdsale.new(rate, wallet, this.token.address);\n- this.crowdsale.setUserCap(alice, capAlice);\n- this.crowdsale.setUserCap(bob, capBob);\n+ await this.crowdsale.setUserCap(alice, capAlice);\n+ await this.crowdsale.setUserCap(bob, capBob);\nawait this.token.transfer(this.crowdsale.address, tokenSupply);\n});\n",
        "date": "26.03.2018 21:55:52",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Fix setUserCap function calls to use await keyword"
    },
    {
        "msg": "add explicit integer sizes to uint variables in StandardToken",
        "diff": "diff --git a/contracts/token/ERC20/StandardToken.sol b/contracts/token/ERC20/StandardToken.sol @@ -86,7 +86,7 @@ contract StandardToken is ERC20, BasicToken {\n*/\nfunction increaseApproval(\naddress _spender,\n- uint _addedValue\n+ uint256 _addedValue\n)\npublic\nreturns (bool)\n@@ -109,12 +109,12 @@ contract StandardToken is ERC20, BasicToken {\n*/\nfunction decreaseApproval(\naddress _spender,\n- uint _subtractedValue\n+ uint256 _subtractedValue\n)\npublic\nreturns (bool)\n{\n- uint oldValue = allowed[msg.sender][_spender];\n+ uint256 oldValue = allowed[msg.sender][_spender];\nif (_subtractedValue > oldValue) {\nallowed[msg.sender][_spender] = 0;\n} else {\n",
        "date": "13.06.2018 14:54:54",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Refactor data types in increaseApproval and decreaseApproval functions to use uint256 instead of uint."
    },
    {
        "msg": "add note about next tag in releasing document",
        "diff": "diff --git a/RELEASING.md b/RELEASING.md @@ -34,10 +34,10 @@ git push upstream vX.Y.Z-rc.R\nDraft the release notes in our [GitHub releases](https://github.com/OpenZeppelin/openzeppelin-solidity/releases). Make sure to mark it as a pre-release! Try to be consistent with our previous release notes in the title and format of the text. Release candidates don't need a detailed changelog, but make sure to include a link to GitHub's compare page.\n-Once the CI run for the new tag is green, publish on npm.\n+Once the CI run for the new tag is green, publish on npm under the `next` tag.\n```\n-npm publish\n+npm publish --tag next\n```\nPublish the release notes on GitHub and ask our community manager to announce the release candidate on at least Slack and Twitter.\n@@ -67,6 +67,12 @@ npm publish\nPublish the release notes on GitHub and ask our community manager to announce the release!\n+Delete the `next` tag in the npm package as there is no longer a release candidate.\n+\n+```\n+npm dist-tag rm --otp $2FA_CODE openzeppelin-solidity next\n+```\n+\n## Merging the release branch\nAfter the final release, the release branch should be merged back into `master`. This merge must not be squashed, because it would lose the tagged release commit, so it should be merged locally and pushed.\n",
        "date": "07.08.2018 16:33:50",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Update npm publish command to include `next` tag and add instructions to delete `next` tag after release candidate is no longer needed."
    },
    {
        "msg": "add Events tests of Pausable contract",
        "diff": "diff --git a/test/lifecycle/Pausable.test.js b/test/lifecycle/Pausable.test.js const { assertRevert } = require('../helpers/assertRevert');\n+const expectEvent = require('../helpers/expectEvent');\nconst PausableMock = artifacts.require('PausableMock');\nconst BigNumber = web3.BigNumber;\n@@ -53,4 +54,12 @@ contract('Pausable', function () {\n(await this.Pausable.drasticMeasureTaken()).should.equal(false);\n});\n+\n+ it('should log Pause and Unpause events appropriately', async function () {\n+ const setPauseLogs = (await this.Pausable.pause()).logs;\n+ expectEvent.inLogs(setPauseLogs, 'Pause');\n+\n+ const setUnPauseLogs = (await this.Pausable.unpause()).logs;\n+ expectEvent.inLogs(setUnPauseLogs, 'Unpause');\n+ });\n});\n",
        "date": "28.08.2018 13:58:44",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add event logging for Pause and Unpause in Pausable contract test"
    },
    {
        "msg": "add note about trying out 2.0",
        "diff": "diff --git a/README.md b/README.md npm install openzeppelin-solidity\n```\n+If you're interested in trying out a preview of OpenZeppelin 2.0, install `openzeppelin-solidity@next`, check out the [release notes](https://github.com/OpenZeppelin/openzeppelin-solidity/releases/tag/v2.0.0-rc.1), and let us know what you think!\n+\n## Usage\nTo write your custom contracts, import ours and extend them through inheritance.\n",
        "date": "07.09.2018 15:22:16",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add instructions for trying out OpenZeppelin 2.0 preview version"
    },
    {
        "msg": "add an address typecast to this per issue",
        "diff": "diff --git a/contracts/drafts/TokenVesting.sol b/contracts/drafts/TokenVesting.sol @@ -161,7 +161,7 @@ contract TokenVesting is Ownable {\n* @param token ERC20 token which is being vested\n*/\nfunction _vestedAmount(IERC20 token) private view returns (uint256) {\n- uint256 currentBalance = token.balanceOf(this);\n+ uint256 currentBalance = token.balanceOf(address(this));\nuint256 totalBalance = currentBalance.add(_released[token]);\nif (block.timestamp < _cliff) {\n",
        "date": "02.11.2018 02:56:50",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Fix token balance reference in _vestedAmount function"
    },
    {
        "msg": "add the step to delete the build dir to the RELEASE notes",
        "diff": "diff --git a/RELEASING.md b/RELEASING.md @@ -36,7 +36,7 @@ Draft the release notes in our [GitHub releases](https://github.com/OpenZeppelin\nBefore publishing on npm you need to generate the build artifacts. This is not done automatically at the moment because of a bug in Truffle. Since some of the contracts should not be included in the package, this is a _hairy_ process that you need to do with care.\n-1. Delete the `contracts/mocks` and `contracts/examples` directories.\n+1. Delete the `contracts/mocks`, `contracts/examples` and `build` directories.\n2. Run `truffle compile`. (Note that the Truffle process may never exit and you will have to interrupt it.)\n3. Recover the directories using `git checkout`. It doesn't matter if you do this now or later.\n@@ -70,7 +70,7 @@ Draft the release notes in GitHub releases. Try to be consistent with our previo\nBefore publishing on npm you need to generate the build artifacts. This is not done automatically at the moment because of a bug in Truffle. Since some of the contracts should not be included in the package, this is a _hairy_ process that you need to do with care.\n-1. Delete the `contracts/mocks` and `contracts/examples` directories.\n+1. Delete the `contracts/mocks`, `contracts/examples` and `build` directories.\n2. Run `truffle compile`. (Note that the Truffle process may never exit and you will have to interrupt it.)\n3. Recover the directories using `git checkout`. It doesn't matter if you do this now or later.\n",
        "date": "02.11.2018 03:59:05",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Update RELEASING.md to include deleting the 'build' directory along with 'contracts/mocks' and 'contracts/examples' directories before generating build artifacts."
    },
    {
        "msg": "add some barebones PublicRole.behavior documentation.",
        "diff": "diff --git a/test/behavior/access/roles/PublicRole.behavior.js b/test/behavior/access/roles/PublicRole.behavior.js @@ -5,6 +5,21 @@ function capitalize (str) {\nreturn str.replace(/\\b\\w/g, l => l.toUpperCase());\n}\n+// Tests that a role complies with the standard role interface, that is:\n+// * an onlyRole modifier\n+// * an isRole function\n+// * an addRole function, accessible to role havers\n+// * a renounceRole function\n+// * roleAdded and roleRemoved events\n+// Both the modifier and an additional internal remove function are tested through a mock contract that exposes them.\n+// This mock contract should be stored in this.contract.\n+//\n+// @param authorized an account that has the role\n+// @param otherAuthorized another account that also has the role\n+// @param anyone an account that doesn't have the role, passed inside an array for ergonomics\n+// @param rolename a string with the name of the role\n+// @param manager undefined for regular roles, or a manager account for managed roles. In these, only the manager\n+// account can create and remove new role bearers.\nfunction shouldBehaveLikePublicRole (authorized, otherAuthorized, [anyone], rolename, manager) {\nrolename = capitalize(rolename);\n",
        "date": "17.01.2019 20:27:51",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add tests for standard role interface in PublicRole.behavior.js"
    },
    {
        "msg": "add changelog entry for PublicRole behavior.",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md ## 2.2.0 (unreleased)\n+## 2.1.2 (2019-17-01)\n+ * Removed most of the test suite from the npm package, except `PublicRole.behavior.js`, which may be useful to users testing their own `Roles`.\n+\n## 2.1.1 (2019-04-01)\n* Version bump to avoid conflict in the npm registry.\n",
        "date": "17.01.2019 20:36:55",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Remove most of the test suite from npm package, leaving only PublicRole.behavior.js"
    },
    {
        "msg": "add a link to the minime token",
        "diff": "diff --git a/contracts/drafts/ERC20Snapshot.sol b/contracts/drafts/ERC20Snapshot.sol @@ -7,7 +7,8 @@ import \"../token/ERC20/ERC20.sol\";\n/**\n* @title ERC20 token with snapshots.\n- * inspired by Jordi Baylina's MiniMeToken to record historical balances\n+ * Inspired by Jordi Baylina's MiniMeToken to record historical balances:\n+ * https://github.com/Giveth/minime/blob/ea04d950eea153a04c51fa510b068b9dded390cb/contracts/MiniMeToken.sol\n* Snapshots store a value at the time a snapshot is taken (and a new snapshot id created), and the corresponding\n* snapshot id. Each account has individual snapshots taken on demand, as does the token's total supply.\n* @author Validity Labs AG <info@validitylabs.org>\n",
        "date": "15.02.2019 16:27:03",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Refactor ERC20Snapshot.sol to include inspiration from MiniMeToken for recording historical balances"
    },
    {
        "msg": "add the tag",
        "diff": "diff --git a/contracts/drafts/ERC20Snapshot.sol b/contracts/drafts/ERC20Snapshot.sol @@ -7,7 +7,7 @@ import \"../token/ERC20/ERC20.sol\";\n/**\n* @title ERC20 token with snapshots.\n- * Inspired by Jordi Baylina's MiniMeToken to record historical balances:\n+ * @dev Inspired by Jordi Baylina's MiniMeToken to record historical balances:\n* https://github.com/Giveth/minime/blob/ea04d950eea153a04c51fa510b068b9dded390cb/contracts/MiniMeToken.sol\n* Snapshots store a value at the time a snapshot is taken (and a new snapshot id created), and the corresponding\n* snapshot id. Each account has individual snapshots taken on demand, as does the token's total supply.\n",
        "date": "15.02.2019 23:21:18",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add @dev tag to ERC20Snapshot contract inspiration reference"
    },
    {
        "msg": "add usage docs to ERC20 Snapshot",
        "diff": "diff --git a/contracts/drafts/ERC20Snapshot.sol b/contracts/drafts/ERC20Snapshot.sol @@ -11,6 +11,11 @@ import \"../token/ERC20/ERC20.sol\";\n* https://github.com/Giveth/minime/blob/ea04d950eea153a04c51fa510b068b9dded390cb/contracts/MiniMeToken.sol\n* When a snapshot is made, the balances and totalSupply at the time of the snapshot are recorded for later\n* access.\n+ *\n+ * To make a snapshot, call the `snapshot` function, which will emit the `Snapshot` event and return a snapshot id.\n+ * To get the total supply from a snapshot, call the function `totalSupplyAt` with the snapshot id.\n+ * To get the balance of an account from a snapshot, call the `balanceOfAt` function with the snapshot id and the\n+ * account address.\n* @author Validity Labs AG <info@validitylabs.org>\n*/\ncontract ERC20Snapshot is ERC20 {\n",
        "date": "25.02.2019 09:36:16",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add snapshot functionality to ERC20 contract"
    },
    {
        "msg": "add PR links for 2.2.0 changelog entries.",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md ## 2.2.0 (unreleased)\n### New features:\n- * `ERC20`: added internal `_approve(address owner, address spender, uint256 value)`, allowing derived contracts to set the allowance of arbitrary accounts.\n- * `ERC20Metadata`: added internal `_setTokenURI(string memory tokenURI)`.\n- * `ERC20Snapshot`: create snapshots on demand of the token balances and total supply, to later retrieve and e.g. calculate dividends at a past time.\n+ * `ERC20`: added internal `_approve(address owner, address spender, uint256 value)`, allowing derived contracts to set the allowance of arbitrary accounts. ([#1609](https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1609))\n+ * `ERC20Metadata`: added internal `_setTokenURI(string memory tokenURI)`. ([#1618](https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1618))\n+ * `ERC20Snapshot`: create snapshots on demand of the token balances and total supply, to later retrieve and e.g. calculate dividends at a past time. ([#1617](https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1617))\n### Improvements:\n- * Upgraded the minimum compiler version to v0.5.2: this removes many Solidity warnings that were false positives.\n- * `Counter`'s API has been improved, and is now used by `ERC721` (though it is still in `drafts`).\n- * `ERC721`'s transfers are now more gas efficient due to removal of unnecessary `SafeMath` calls.\n- * Fixed variable shadowing issues.\n+ * Upgraded the minimum compiler version to v0.5.2: this removes many Solidity warnings that were false positives. ([#1606](https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1606))\n+ * `Counter`'s API has been improved, and is now used by `ERC721` (though it is still in `drafts`). ([#1610](https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1610))\n+ * `ERC721`'s transfers are now more gas efficient due to removal of unnecessary `SafeMath` calls. ([#1610](https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1610))\n+ * Fixed variable shadowing issues. ([#1606](https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1606))\n### Bugfixes:\n### Breaking changes:\n- * `TokenMetadata` (in drafts) has been renamed to `ERC20Metadata`.\n+ * `TokenMetadata` (in drafts) has been renamed to `ERC20Metadata`. ([#1618](https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1618))\n## 2.1.2 (2019-17-01)\n* Removed most of the test suite from the npm package, except `PublicRole.behavior.js`, which may be useful to users testing their own `Roles`.\n",
        "date": "26.02.2019 13:19:51",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add new features, improvements, and bug fixes to ERC20, ERC20Metadata, ERC20Snapshot, Counter, and ERC721. Upgrade minimum compiler version to v0.5.2. Fix variable shadowing issues. Rename TokenMetadata to ERC20Metadata. ([#1606](https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1606), [#1610](https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1610), [#1617](https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1617), [#1618](https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1618))"
    },
    {
        "msg": "add SafeERC20 bugfix changelog entry.",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md * Fixed variable shadowing issues. ([#1606](https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1606))\n### Bugfixes:\n+ * (minor) `SafeERC20`: `safeApprove` wasn't properly checking for a zero allowance when attempting to set a non-zero allowance. ([#1647](https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1647))\n### Breaking changes:\n* `TokenMetadata` (in drafts) has been renamed to `ERC20Metadata`. ([#1618](https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1618))\n",
        "date": "26.02.2019 16:17:29",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Fix variable shadowing issues and address bug in SafeERC20 safeApprove function. Rename TokenMetadata to ERC20Metadata."
    },
    {
        "msg": "add bugfix backport changelog entry.",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md ## 2.2.0 (unreleased)\n+## 2.1.3 (2019-26-02)\n+ * Backported `SafeERC20.safeApprove` bugfix. ([#1647](https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1647))\n+\n## 2.1.2 (2019-17-01)\n* Removed most of the test suite from the npm package, except `PublicRole.behavior.js`, which may be useful to users testing their own `Roles`.\n",
        "date": "26.02.2019 16:28:36",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Backport bugfix for SafeERC20.safeApprove (#1647) and remove unnecessary test suite files."
    },
    {
        "msg": "add v2.2.0 release date.",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md # Changelog\n-## 2.2.0 (unreleased)\n+## 2.2.0 (2019-03-14)\n### New features:\n* `ERC20Snapshot`: create snapshots on demand of the token balances and total supply, to later retrieve and e.g. calculate dividends at a past time. ([#1617](https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1617))\n",
        "date": "14.03.2019 18:43:33",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add ERC20Snapshot feature and update release date in CHANGELOG to 2019-03-14"
    },
    {
        "msg": "add note about Counters rename in changelog",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md * Upgraded the minimum compiler version to v0.5.2: this removes many Solidity warnings that were false positives. ([#1606](https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1606))\n* `ECDSA`: `recover` no longer accepts malleable signatures (those using upper-range values for `s`, or 0/1 for `v`). ([#1622](https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1622))\n* `ERC721`'s transfers are now more gas efficient due to removal of unnecessary `SafeMath` calls. ([#1610](https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1610))\n- * `Counter`'s API has been improved, and is now used by `ERC721` (though it is still in `drafts`). ([#1610](https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1610))\n* Fixed variable shadowing issues. ([#1606](https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1606))\n### Bugfixes:\n* (minor) `SafeERC20`: `safeApprove` wasn't properly checking for a zero allowance when attempting to set a non-zero allowance. ([#1647](https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1647))\n-### Breaking changes:\n- * `TokenMetadata` (in drafts) has been renamed to `ERC20Metadata`. ([#1618](https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1618))\n+### Breaking changes in drafts:\n+ * `TokenMetadata` has been renamed to `ERC20Metadata`. ([#1618](https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1618))\n+ * The library `Counter` has been renamed to `Counters` and its API has been improved. See an example in `ERC721`, lines [17](https://github.com/OpenZeppelin/openzeppelin-solidity/blob/3cb4a00fce1da76196ac0ac3a0ae9702b99642b5/contracts/token/ERC721/ERC721.sol#L17) and [204](https://github.com/OpenZeppelin/openzeppelin-solidity/blob/3cb4a00fce1da76196ac0ac3a0ae9702b99642b5/contracts/token/ERC721/ERC721.sol#L204). ([#1610](https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1610))\n## 2.1.3 (2019-02-26)\n* Backported `SafeERC20.safeApprove` bugfix. ([#1647](https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1647))\n",
        "date": "01.04.2019 13:24:50",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Upgrade compiler version to v0.5.2, improve gas efficiency in ERC721 transfers, fix variable shadowing issues, and rename TokenMetadata to ERC20Metadata."
    },
    {
        "msg": "add npm install step to every circle job",
        "diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -8,6 +8,14 @@ aliases:\ndocker:\n- image: circleci/node:8\n+ - &npm_install_if_necessary\n+ run:\n+ name: Install npm dependencies\n+ command: |\n+ if [ ! -d node_modules ]; then\n+ npm ci\n+ fi\n+\n- &cache_key_node_modules\nkey: v1-node_modules-{{ checksum \"package-lock.json\" }}\n@@ -18,12 +26,7 @@ jobs:\n- checkout\n- restore_cache:\n<<: *cache_key_node_modules\n- - run:\n- name: Install npm dependencies\n- command: |\n- if [ ! -d node_modules ]; then\n- npm ci\n- fi\n+ - *npm_install_if_necessary\n- save_cache:\npaths:\n- node_modules\n@@ -35,6 +38,7 @@ jobs:\n- checkout\n- restore_cache:\n<<: *cache_key_node_modules\n+ - *npm_install_if_necessary\n- run:\nname: Linter\ncommand: npm run lint\n@@ -44,6 +48,7 @@ jobs:\n- checkout\n- restore_cache:\n<<: *cache_key_node_modules\n+ - *npm_install_if_necessary\n- run:\nname: Unit tests\ncommand: npm run test\n@@ -54,6 +59,7 @@ jobs:\n- checkout\n- restore_cache:\n<<: *cache_key_node_modules\n+ - *npm_install_if_necessary\n- run:\nname: Unit tests with coverage report\ncommand: npm run test\n",
        "date": "07.08.2019 19:14:36",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add npm install step if necessary in CircleCI config"
    },
    {
        "msg": "add release push command",
        "diff": "diff --git a/scripts/release/release.sh b/scripts/release/release.sh @@ -81,7 +81,10 @@ environment_check() {\nenvironment_check\n-if [[ \"$*\" == \"start minor\" ]]; then\n+if [[ \"$*\" == \"push\" ]]; then\n+ push_and_publish next\n+\n+elif [[ \"$*\" == \"start minor\" ]]; then\nlog \"Creating new minor pre-release\"\nassert_current_branch master\n",
        "date": "16.08.2019 21:14:13",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add functionality to push and publish next branch in release script"
    },
    {
        "msg": "add detail to deprecation notice",
        "diff": "diff --git a/contracts/token/ERC721/ERC721.sol b/contracts/token/ERC721/ERC721.sol @@ -317,7 +317,7 @@ contract ERC721 is Context, ERC165, IERC721 {\n* @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n* The call is not executed if the target address is not a contract.\n*\n- * This function is deprecated.\n+ * This is an internal detail of the `ERC721` contract and its use is deprecated.\n* @param from address representing the previous owner of the given token ID\n* @param to target address that will receive the tokens\n* @param tokenId uint256 ID of the token to be transferred\n",
        "date": "12.11.2019 17:52:38",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Refactor internal function in ERC721 contract and deprecate its use"
    },
    {
        "msg": "add changelog entries for proxies and ERC20Snapshot",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md # Changelog\n-## 3.1.1 (Unreleased)\n+## 3.2.0 (unreleased)\n+\n+### New features\n+ * Proxies: added the proxy contracts from OpenZeppelin SDK. ([#2335](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2335))\n### Improvements\n* `Address.isContract`: switched from `extcodehash` to `extcodesize` for less gas usage. ([#2311](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2311))\n+### Breaking changes\n+ * `ERC20Snapshot`: switched to using `_beforeTokenTransfer` hook instead of overriding ERC20 operations. ([#2312](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2312))\n+\n+This small change in the way we implemented `ERC20Snapshot` may affect users who are combining this contract with\n+other ERC20 flavors, since it no longer overrides `_transfer`, `_mint`, and `_burn`. This can result in having to remove Solidity `override(...)` specifiers in derived contracts for these functions, and to instead have to add it for `_beforeTokenTransfer`. See [Using Hooks](https://docs.openzeppelin.com/contracts/3.x/extending-contracts#using-hooks) in the documentation.\n+\n## 3.1.0 (2020-06-23)\n### New features\n",
        "date": "03.09.2020 14:13:11",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Bump version to 3.2.0 and add new features and breaking changes for ERC20Snapshot."
    },
    {
        "msg": "add changelog entry for 3.2.1-solc-0.7",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md # Changelog\n+## 3.2.1-solc-0.7 (unreleased)\n+\n+* `ERC777`: Remove a warning about function state visibility in Solidity 0.7. ([#2327](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2327))\n+\n## 3.2.0 (2020-09-10)\n### New features\n",
        "date": "15.09.2020 18:15:15",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Remove warning about function state visibility in ERC777 for Solidity 0.7"
    },
    {
        "msg": "add changelog entry for TimelockController",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md ## 3.3.0 (unreleased)\n* `Address`: added `functionStaticCall` and `functionDelegateCall`, similar to the existing `functionCall`. ([#2333](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2333))\n+ * `TimelockController`: added a contract to augment access control schemes with a delay. ([#2364](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2364))\n## 3.2.0 (2020-09-10)\n",
        "date": "05.10.2020 16:26:41",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add Address functionStaticCall and functionDelegateCall, and TimelockController contract."
    },
    {
        "msg": "add beacon proxy changelog entry",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md # Changelog\n+## Unreleased\n+\n+ * Add beacon proxy. ([#2411](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2411))\n+\n## Unreleased\n* Now supports both Solidity 0.6 and 0.7. Compiling with solc 0.7 will result in warnings. Install the `solc-0.7` tag to compile without warnings.\n",
        "date": "26.11.2020 13:10:38",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add beacon proxy (#2411) and support for Solidity 0.6 and 0.7."
    },
    {
        "msg": "add message to caution that SafeMath.sol is for Solidity 0.8",
        "diff": "diff --git a/contracts/math/SafeMath.sol b/contracts/math/SafeMath.sol pragma solidity ^0.8.0;\n+// CAUTION\n+// This version of SafeMath should only be used with Solidity 0.8 or later,\n+// because it relies on the compiler's built in overflow checks.\n+\n/**\n* @dev Wrappers over Solidity's arithmetic operations.\n*/\n",
        "date": "19.02.2021 18:17:42",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Update SafeMath.sol for Solidity 0.8 compatibility"
    },
    {
        "msg": "add optimization for EnumerableSet",
        "diff": "diff --git a/contracts/utils/structs/EnumerableSet.sol b/contracts/utils/structs/EnumerableSet.sol @@ -89,7 +89,7 @@ library EnumerableSet {\n// Move the last value to the index where the value to delete is\nset._values[toDeleteIndex] = lastvalue;\n// Update the index for the moved value\n- set._indexes[lastvalue] = toDeleteIndex + 1; // All indexes are 1-based\n+ set._indexes[lastvalue] = valueIndex; // Replace lastvalue's index to valueIndex\n// Delete the slot where the moved value was stored\nset._values.pop();\n",
        "date": "13.03.2021 17:19:29",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Refactor index update logic in EnumerableSet.sol"
    },
    {
        "msg": "add link to full list of upgrades resources",
        "diff": "diff --git a/docs/modules/ROOT/pages/upgradeable.adoc b/docs/modules/ROOT/pages/upgradeable.adoc @@ -6,6 +6,8 @@ This variant is available as a separate package called `@openzeppelin/contracts-\nIt follows all of the rules for xref:upgrades-plugins::writing-upgradeable.adoc[Writing Upgradeable Contracts]: constructors are replaced by initializer functions, state variables are initialized in initializer functions, and we additionally check for storage incompatibilities across minor versions.\n+TIP: OpenZeppelin provides a full suite of tools for deploying and securing upgradeable smart contracts. xref:openzeppelin::upgrades.adoc[Check out the full list of resources].\n+\n== Overview\n=== Installation\n",
        "date": "29.04.2021 22:58:59",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add tip about OpenZeppelin tools for deploying and securing upgradeable smart contracts"
    },
    {
        "msg": "add a recover(bytes32,bytes32,bytes32) that follows EIP2098",
        "diff": "diff --git a/contracts/utils/cryptography/ECDSA.sol b/contracts/utils/cryptography/ECDSA.sol @@ -28,15 +28,13 @@ library ECDSA {\n* - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n*/\nfunction recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n- // Divide the signature in r, s and v variables\n- bytes32 r;\n- bytes32 s;\n- uint8 v;\n-\n// Check the signature length\n// - case 65: r,s,v signature (standard)\n// - case 64: r,vs signature (cf https://eips.ethereum.org/EIPS/eip-2098) _Available since v4.1._\nif (signature.length == 65) {\n+ bytes32 r;\n+ bytes32 s;\n+ uint8 v;\n// ecrecover takes the signature parameters, and the only way to get them\n// currently is to use assembly.\nassembly {\n@@ -44,25 +42,45 @@ library ECDSA {\ns := mload(add(signature, 0x40))\nv := byte(0, mload(add(signature, 0x60)))\n}\n+ return recover(hash, v, r, s);\n} else if (signature.length == 64) {\n+ bytes32 r;\n+ bytes32 vs;\n// ecrecover takes the signature parameters, and the only way to get them\n// currently is to use assembly.\nassembly {\n- let vs := mload(add(signature, 0x40))\nr := mload(add(signature, 0x20))\n- s := and(vs, 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n- v := add(shr(255, vs), 27)\n+ vs := mload(add(signature, 0x40))\n}\n+ return recover(hash, r, vs);\n} else {\nrevert(\"ECDSA: invalid signature length\");\n}\n+ }\n+ /**\n+ * @dev Overload of {ECDSA-recover} that receives the `r` and `vs` short-signature fields separately.\n+ *\n+ * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n+ *\n+ * _Available since v4.2._\n+ */\n+ function recover(\n+ bytes32 hash,\n+ bytes32 r,\n+ bytes32 vs\n+ ) internal pure returns (address) {\n+ bytes32 s;\n+ uint8 v;\n+ assembly {\n+ s := and(vs, 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n+ v := add(shr(255, vs), 27)\n+ }\nreturn recover(hash, v, r, s);\n}\n/**\n- * @dev Overload of {ECDSA-recover} that receives the `v`,\n- * `r` and `s` signature fields separately.\n+ * @dev Overload of {ECDSA-recover} that receives the `v`, `r` and `s` signature fields separately.\n*/\nfunction recover(\nbytes32 hash,\n",
        "date": "14.06.2021 20:12:08",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Refactor ECDSA recover function to handle short signatures"
    },
    {
        "msg": "add comment about optimizer in GovernorCompatibilityBravo",
        "diff": "diff --git a/contracts/governance/compatibility/GovernorCompatibilityBravo.sol b/contracts/governance/compatibility/GovernorCompatibilityBravo.sol @@ -15,6 +15,8 @@ import \"./IGovernorCompatibilityBravo.sol\";\n* This compatibility layer includes a voting system and requires a {IGovernorTimelock} compatible module to be added\n* through inheritance. It does not include token bindings, not does it include any variable upgrade patterns.\n*\n+ * NOTE: When using this module, you may need to enable the Solidity optimizer to avoid hitting the contract size limit.\n+ *\n* _Available since v4.3._\n*/\nabstract contract GovernorCompatibilityBravo is\n",
        "date": "20.08.2021 12:38:44",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add note about enabling Solidity optimizer in GovernorCompatibilityBravo"
    },
    {
        "msg": "add changelog entry for 3.4.1",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md @@ -95,6 +95,10 @@ Make sure you're using git or another version control system to be able to recov\nSome further changes have been done between the different beta iterations. Transitions made during this period are configured in the `migrate-imports` script. Consequently, you can upgrade from any previous 4.0-beta.x version using the same script as described in the *How to upgrade from 3.x* section.\n+## 3.4.1 (2021-03-03)\n+\n+ * `ERC721`: made `_approve` an internal function (was private).\n+\n## 3.4.0 (2021-02-02)\n* `BeaconProxy`: added new kind of proxy that allows simultaneous atomic upgrades. ([#2411](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2411))\n",
        "date": "24.08.2021 16:09:25",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Refactor ERC721 `_approve` function to be internal"
    },
    {
        "msg": "add recommendation to initialize all contracts that use Initializable",
        "diff": "diff --git a/contracts/proxy/utils/Initializable.sol b/contracts/proxy/utils/Initializable.sol @@ -13,6 +13,22 @@ pragma solidity ^0.8.0;\n*\n* CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n* that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n+ *\n+ * [CAUTION]\n+ * ====\n+ * Avoid leaving a contract uninitialized.\n+ *\n+ * An uninitialized contract can be used in certain kinds of exploits since it may allow an attacker to take control of\n+ * the contract. This includes the implementation contract behind a proxy. You can either invoke the initializer\n+ * manually, independently of initialization of the proxy, or you can include a constructor to automatically mark it as\n+ * initialized when it is deployed:\n+ *\n+ * [.hljs-theme-light.nopadding]\n+ * ```\n+ * /// @custom:oz-upgrades-unsafe-allow constructor\n+ * constructor() initializer {}\n+ * ```\n+ * ====\n*/\nabstract contract Initializable {\n/**\n",
        "date": "13.09.2021 18:07:29",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add caution message about avoiding leaving a contract uninitialized"
    },
    {
        "msg": "add changelog entries for",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md * `PaymentSplitter`: now supports ERC20 assets in addition to Ether. ([#2858](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/#2858))\n* `ECDSA`: add a variant of `toEthSignedMessageHash` for arbitrary length message hashing. ([#2865](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/#2865))\n* `MerkleProof`: add a `processProof` function that returns the rebuilt root hash given a leaf and a proof. ([#2841](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2841))\n- * `VestingWallet`: new contract that handles the vesting of Ether and ERC20 tokens following a customizable vesting schedule. ([#2748](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/#2748))\n+ * `VestingWallet`: new contract that handles the vesting of Ether and ERC20 tokens following a customizable vesting schedule. ([#2748](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2748))\n+ * `Governor`: enable receiving Ether when a Timelock contract is not used. ([#2748](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2748))\n+ * `GovernorTimelockCompound`: fix ability to use Ether stored in the Timelock contract. ([#2748](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2748))\n## 4.3.2 (2021-09-14)\n",
        "date": "19.10.2021 15:37:11",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add support for ERC20 assets in PaymentSplitter, new functions in ECDSA and MerkleProof, and updates to VestingWallet and Governor contracts."
    },
    {
        "msg": "add mention of Solidity policy in our own security policy",
        "diff": "diff --git a/SECURITY.md b/SECURITY.md @@ -11,6 +11,8 @@ The recommendation is to use the latest version available.\n| 2.5 | :white_check_mark: |\n| < 2.0 | :x: |\n+Note that the Solidity language itself only guarantees security updates for the latest release.\n+\n## Reporting a Vulnerability\nPlease report any security issues you find to security@openzeppelin.org.\n",
        "date": "27.10.2021 11:19:54",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add note about Solidity language security updates in SECURITY.md"
    },
    {
        "msg": "add missing newline in docs",
        "diff": "diff --git a/docs/modules/ROOT/pages/governance.adoc b/docs/modules/ROOT/pages/governance.adoc @@ -134,6 +134,7 @@ For 3) we will use GovernorCountingSimple, a module that offers 3 options to vot\nBesides these modules, Governor itself has some parameters we must set.\nvotingDelay: How long after a proposal is created should voting power be fixed. A large voting delay gives users time to unstake tokens if necessary.\n+\nvotingPeriod: How long does a proposal remain open to votes.\nThese parameters are specified in number of blocks. Assuming block time of around 13.14 seconds, we will set votingDelay = 1 day = 6570 blocks, and votingPeriod = 1 week = 45992 blocks.\n",
        "date": "01.11.2021 17:26:37",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Set votingPeriod parameter in governance module"
    },
    {
        "msg": "add changelog entry for deprecation of presets",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md * `GovernorTimelockControl`: improve the `state()` function to have it reflect cases where a proposal has been canceled directly on the timelock. ([#2977](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2977))\n* `Math`: add a `abs(int256)` method that returns the unsigned absolute value of a signed value. ([#2984](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2984))\n+* Preset contracts are now deprecated in favor of [Contracts Wizard](https://wizard.openzeppelin.com). ([#2986](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2986))\n## Unreleased\n",
        "date": "25.11.2021 14:23:30",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Improve GovernorTimelockControl state function, add Math abs method, deprecate Preset contracts"
    },
    {
        "msg": "add ERC721 import in tutorial",
        "diff": "diff --git a/docs/modules/ROOT/pages/erc721.adoc b/docs/modules/ROOT/pages/erc721.adoc @@ -16,10 +16,11 @@ Here's what a contract for tokenized items might look like:\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n+import \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\n-contract GameItem is ERC721URIStorage {\n+contract GameItem is ERC721, ERC721URIStorage {\nusing Counters for Counters.Counter;\nCounters.Counter private _tokenIds;\n",
        "date": "16.12.2021 18:29:18",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add ERC721 inheritance to GameItem contract"
    },
    {
        "msg": "add missing letter",
        "diff": "diff --git a/contracts/governance/extensions/GovernorTimelockControl.sol b/contracts/governance/extensions/GovernorTimelockControl.sol @@ -10,7 +10,7 @@ import \"../TimelockController.sol\";\n/**\n* @dev Extension of {Governor} that binds the execution process to an instance of {TimelockController}. This adds a\n* delay, enforced by the {TimelockController} to all successful proposal (in addition to the voting duration). The\n- * {Governor} needs the proposer (an ideally the executor) roles for the {Governor} to work properly.\n+ * {Governor} needs the proposer (and ideally the executor) roles for the {Governor} to work properly.\n*\n* Using this model means the proposal will be operated by the {TimelockController} and not by the {Governor}. Thus,\n* the assets and permissions must be attached to the {TimelockController}. Any asset sent to the {Governor} will be\n",
        "date": "17.12.2021 11:46:45",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Fix typo in GovernorTimelockControl.sol"
    },
    {
        "msg": "add Governor Timelock Control Warning",
        "diff": "diff --git a/contracts/governance/extensions/GovernorTimelockControl.sol b/contracts/governance/extensions/GovernorTimelockControl.sol @@ -16,6 +16,10 @@ import \"../TimelockController.sol\";\n* the assets and permissions must be attached to the {TimelockController}. Any asset sent to the {Governor} will be\n* inaccessible.\n*\n+ * WARNING: Setting up the TimelockController to have additional proposers besides the governor introduces the risk that\n+ * approved governance proposals could be blocked by the other proposers, effectively executing a Denial of Service attack,\n+ * and therefore blocking access to governance-controlled assets.\n+ *\n* _Available since v4.3._\n*/\nabstract contract GovernorTimelockControl is IGovernorTimelock, Governor {\n",
        "date": "20.12.2021 16:00:13",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add warning about potential Denial of Service attack in GovernorTimelockControl"
    },
    {
        "msg": "add missing reference to PR in changelog",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md * `Votes`: Added a base contract for vote tracking with delegation. ([#2944](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2944))\n* `ERC721Votes`: Added an extension of ERC721 enabled with vote tracking and delegation. ([#2944](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2944))\n* `ERC2771Context`: use immutable storage to store the forwarder address, no longer an issue since Solidity >=0.8.8 allows reading immutable variables in the constructor. ([#2917](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2917))\n- * `Base64`: add a library to parse bytes into base64 strings using `encode(bytes memory)` function, and provide examples to show how to use to build URL-safe `tokenURIs` ([#2884](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/#2884))\n- * `ERC20`: reduce allowance before triggering transfer.\n+ * `Base64`: add a library to parse bytes into base64 strings using `encode(bytes memory)` function, and provide examples to show how to use to build URL-safe `tokenURIs`. ([#2884](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/#2884))\n+ * `ERC20`: reduce allowance before triggering transfer. ([#3056](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/#3056))\n## 4.4.1 (2021-12-14)\n",
        "date": "09.01.2022 17:50:05",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add ERC20 allowance reduction before transfer trigger and update Base64 library for parsing bytes into base64 strings. (#3056)"
    },
    {
        "msg": "add documentation to TokenTimelock",
        "diff": "diff --git a/contracts/token/ERC20/utils/TokenTimelock.sol b/contracts/token/ERC20/utils/TokenTimelock.sol @@ -24,6 +24,11 @@ contract TokenTimelock {\n// timestamp when token release is enabled\nuint256 private immutable _releaseTime;\n+ /**\n+ * @dev Deploys a timelock instance that is able to hold the token specified, and will only release it to\n+ * `beneficiary_` when {release} is invoked after `releaseTime_`. The release time is specified as a Unix timestamp\n+ * (in seconds).\n+ */\nconstructor(\nIERC20 token_,\naddress beneficiary_,\n@@ -36,28 +41,29 @@ contract TokenTimelock {\n}\n/**\n- * @return the token being held.\n+ * @dev Returns the token being held.\n*/\nfunction token() public view virtual returns (IERC20) {\nreturn _token;\n}\n/**\n- * @return the beneficiary of the tokens.\n+ * @dev Returns the beneficiary that will receive the tokens.\n*/\nfunction beneficiary() public view virtual returns (address) {\nreturn _beneficiary;\n}\n/**\n- * @return the time when the tokens are released.\n+ * @dev Returns the time when the tokens are released in seconds since Unix epoch (i.e. Unix timestamp).\n*/\nfunction releaseTime() public view virtual returns (uint256) {\nreturn _releaseTime;\n}\n/**\n- * @notice Transfers tokens held by timelock to beneficiary.\n+ * @dev Transfers tokens held by the timelock to the beneficiary. Will only succeed if invoked after the release\n+ * time.\n*/\nfunction release() public virtual {\nrequire(block.timestamp >= releaseTime(), \"TokenTimelock: current time is before release time\");\n",
        "date": "12.01.2022 11:51:09",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Refactor TokenTimelock contract with improved comments and documentation"
    },
    {
        "msg": "add function documentation for SignatureChecker.",
        "diff": "diff --git a/contracts/utils/cryptography/SignatureChecker.sol b/contracts/utils/cryptography/SignatureChecker.sol @@ -8,16 +8,20 @@ import \"../Address.sol\";\nimport \"../../interfaces/IERC1271.sol\";\n/**\n- * @dev Signature verification helper: Provide a single mechanism to verify both private-key (EOA) ECDSA signature and\n- * ERC1271 contract signatures. Using this instead of ECDSA.recover in your contract will make them compatible with\n- * smart contract wallets such as Argent and Gnosis.\n- *\n- * Note: unlike ECDSA signatures, contract signature's are revocable, and the outcome of this function can thus change\n- * through time. It could return true at block N and false at block N+1 (or the opposite).\n+ * @dev Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA\n+ * signatures from externally owned accounts (EOAs) as well as ERC1271 signatures from smart contract wallets like\n+ * Argent and Gnosis Safe.\n*\n* _Available since v4.1._\n*/\nlibrary SignatureChecker {\n+ /**\n+ * @dev Checks if a signature is valid for a given signer and data hash. If the signer is a smart contract, the\n+ * signature is validated against that smart contract using ERC1271, otherwise it's validated using `ECDSA.recover`.\n+ *\n+ * NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n+ * change through time. It could return true at block N and false at block N+1 (or the opposite).\n+ */\nfunction isValidSignatureNow(\naddress signer,\nbytes32 hash,\n",
        "date": "28.01.2022 22:44:32",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Refactor SignatureChecker library to support both EOA and ERC1271 signatures"
    },
    {
        "msg": "add proper revert message on overflow of totalSupply during burn",
        "diff": "diff --git a/contracts/token/ERC1155/extensions/ERC1155Supply.sol b/contracts/token/ERC1155/extensions/ERC1155Supply.sol @@ -51,7 +51,13 @@ abstract contract ERC1155Supply is ERC1155 {\nif (to == address(0)) {\nfor (uint256 i = 0; i < ids.length; ++i) {\n- _totalSupply[ids[i]] -= amounts[i];\n+ uint256 id = ids[i];\n+ uint256 amount = amounts[i];\n+ uint256 supply = _totalSupply[id];\n+ require(supply >= amount, \"ERC1155: burn amount exceeds totalSupply\");\n+ unchecked {\n+ _totalSupply[id] = supply - amount;\n+ }\n}\n}\n}\n",
        "date": "01.02.2022 23:10:11",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Fix burn function to check if amount exceeds total supply"
    },
    {
        "msg": "add missing docs about reverts in DoubleEndedQueue",
        "diff": "diff --git a/contracts/utils/structs/DoubleEndedQueue.sol b/contracts/utils/structs/DoubleEndedQueue.sol @@ -102,6 +102,8 @@ library DoubleEndedQueue {\n/**\n* @dev Returns the item at the beginning of the queue.\n+ *\n+ * Reverts with `Empty` if the queue is empty.\n*/\nfunction front(Bytes32Deque storage deque) internal view returns (bytes32 value) {\nif (empty(deque)) revert Empty();\n@@ -111,6 +113,8 @@ library DoubleEndedQueue {\n/**\n* @dev Returns the item at the end of the queue.\n+ *\n+ * Reverts with `Empty` if the queue is empty.\n*/\nfunction back(Bytes32Deque storage deque) internal view returns (bytes32 value) {\nif (empty(deque)) revert Empty();\n",
        "date": "16.02.2022 16:42:33",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add error handling for empty queue in front and back functions"
    },
    {
        "msg": "add git paragraph to installation section",
        "diff": "diff --git a/README.md b/README.md @@ -22,6 +22,8 @@ $ npm install @openzeppelin/contracts\nOpenZeppelin Contracts features a [stable API](https://docs.openzeppelin.com/contracts/releases-stability#api-stability), which means your contracts won't break unexpectedly when upgrading to a newer minor version.\n+An alternative to npm is to use the GitHub repository `openzeppelin/openzeppelin-contracts` to retrieve the contracts. When doing this, make sure to specify the tag for a release such as `v4.5.0`, instead of using the `master` branch.\n+\n### Usage\nOnce installed, you can use the contracts in the library by importing them:\n",
        "date": "18.02.2022 06:09:07",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add alternative method for retrieving OpenZeppelin Contracts from GitHub repository"
    },
    {
        "msg": "add missing PR link in Changelog",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md * `DoubleEndedQueue`: a new data structure that supports efficient push and pop to both front and back, useful for FIFO and LIFO queues. ([#3153](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3153))\n* `Governor`: improved security of `onlyGovernance` modifier when using an external executor contract (e.g. a timelock) that can operate without necessarily going through the governance protocol. ([#3147](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3147))\n* `ERC20FlashMint`: support infinite allowance when paying back a flash loan. ([#3226](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3226))\n- * `Governor`: Add a way to parameterize votes. This can be used to implement voting systems such as fractionalized voting, ERC721 based voting, or any number of other systems. The `params` argument added to `_countVote` method, and included in the newly added `_getVotes` method, can be used by counting and voting modules respectively for such purposes.\n+ * `Governor`: Add a way to parameterize votes. This can be used to implement voting systems such as fractionalized voting, ERC721 based voting, or any number of other systems. The `params` argument added to `_countVote` method, and included in the newly added `_getVotes` method, can be used by counting and voting modules respectively for such purposes. ([#3043](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3043))\n* `TimelockController`: Add a separate canceller role for the ability to cancel. ([#3165](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3165))\n* `draft-ERC20Permit`: replace `immutable` with `constant` for `_PERMIT_TYPEHASH` since the `keccak256` of string literals is treated specially and the hash is evaluated at compile time. ([#3196](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3196))\n* `ERC20Wrapper`: the `decimals()` function now tries to fetch the value from the underlying token instance. If that calls revert, then the default value is used. ([#3259](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3259))\n",
        "date": "25.03.2022 10:36:08",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add improvements and new features to various contracts."
    },
    {
        "msg": "add transpilation guards to the crosschain mocks",
        "diff": "diff --git a/contracts/mocks/crosschain/receivers.sol b/contracts/mocks/crosschain/receivers.sol @@ -19,6 +19,7 @@ abstract contract Receiver is Ownable, CrossChainEnabled {\n* AMB\n*/\ncontract CrossChainEnabledAMBMock is Receiver, CrossChainEnabledAMB {\n+ /// @custom:oz-upgrades-unsafe-allow constructor\nconstructor(address bridge) CrossChainEnabledAMB(bridge) {}\n}\n@@ -26,6 +27,7 @@ contract CrossChainEnabledAMBMock is Receiver, CrossChainEnabledAMB {\n* Arbitrum\n*/\ncontract CrossChainEnabledArbitrumL1Mock is Receiver, CrossChainEnabledArbitrumL1 {\n+ /// @custom:oz-upgrades-unsafe-allow constructor\nconstructor(address bridge) CrossChainEnabledArbitrumL1(bridge) {}\n}\n@@ -35,6 +37,7 @@ contract CrossChainEnabledArbitrumL2Mock is Receiver, CrossChainEnabledArbitrumL\n* Optimism\n*/\ncontract CrossChainEnabledOptimismMock is Receiver, CrossChainEnabledOptimism {\n+ /// @custom:oz-upgrades-unsafe-allow constructor\nconstructor(address bridge) CrossChainEnabledOptimism(bridge) {}\n}\n@@ -42,5 +45,6 @@ contract CrossChainEnabledOptimismMock is Receiver, CrossChainEnabledOptimism {\n* Polygon\n*/\ncontract CrossChainEnabledPolygonChildMock is Receiver, CrossChainEnabledPolygonChild {\n+ /// @custom:oz-upgrades-unsafe-allow constructor\nconstructor(address bridge) CrossChainEnabledPolygonChild(bridge) {}\n}\n",
        "date": "31.03.2022 20:04:04",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add custom oz-upgrades-unsafe-allow constructor to CrossChainEnabled mock contracts."
    },
    {
        "msg": "add 4.6 upgradeability notice",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md * `Initializable`: add an Initialized event that tracks initialized version numbers. ([#3294](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3294))\n* `ERC2981`: make `royaltyInfo` public to allow super call in overrides. ([#3305](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3305))\n+### Upgradeability notice\n+\n+* `TimelockController`: **(Action needed)** The upgrade from <4.6 to >=4.6 introduces a new `CANCELLER_ROLE` that requires set up to be assignable. After the upgrade, only addresses with this role will have the ability to cancel. Proposers will no longer be able to cancel. Assigning cancellers can be done by an admin (including the timelock itself) once the role admin is set up. To do this, we recommend upgrading to the `TimelockControllerWith46MigrationUpgradeable` contract and then calling the `migrateTo46` function.\n+\n### Breaking changes\n* `Governor`: Adds internal virtual `_getVotes` method that must be implemented; this is a breaking change for existing concrete extensions to `Governor`. To fix this on an existing voting module extension, rename `getVotes` to `_getVotes` and add a `bytes memory` argument. ([#3043](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3043))\n",
        "date": "02.05.2022 18:05:40",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add Initialized event to Initializable and make royaltyInfo public in ERC2981. Upgrade notice for TimelockController regarding new CANCELLER_ROLE. Breaking change in Governor contract."
    },
    {
        "msg": "add mention of events possibly emitted",
        "diff": "diff --git a/contracts/access/AccessControl.sol b/contracts/access/AccessControl.sol @@ -138,6 +138,8 @@ abstract contract AccessControl is Context, IAccessControl, ERC165 {\n* Requirements:\n*\n* - the caller must have ``role``'s admin role.\n+ *\n+ * May emit a {RoleGranted} event.\n*/\nfunction grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n_grantRole(role, account);\n@@ -151,6 +153,8 @@ abstract contract AccessControl is Context, IAccessControl, ERC165 {\n* Requirements:\n*\n* - the caller must have ``role``'s admin role.\n+ *\n+ * May emit a {RoleRevoked} event.\n*/\nfunction revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n_revokeRole(role, account);\n@@ -169,6 +173,8 @@ abstract contract AccessControl is Context, IAccessControl, ERC165 {\n* Requirements:\n*\n* - the caller must be `account`.\n+ *\n+ * May emit a {RoleRevoked} event.\n*/\nfunction renounceRole(bytes32 role, address account) public virtual override {\nrequire(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n@@ -183,6 +189,8 @@ abstract contract AccessControl is Context, IAccessControl, ERC165 {\n* event. Note that unlike {grantRole}, this function doesn't perform any\n* checks on the calling account.\n*\n+ * May emit a {RoleGranted} event.\n+ *\n* [WARNING]\n* ====\n* This function should only be called from the constructor when setting\n@@ -213,6 +221,8 @@ abstract contract AccessControl is Context, IAccessControl, ERC165 {\n* @dev Grants `role` to `account`.\n*\n* Internal function without access restriction.\n+ *\n+ * May emit a {RoleGranted} event.\n*/\nfunction _grantRole(bytes32 role, address account) internal virtual {\nif (!hasRole(role, account)) {\n@@ -225,6 +235,8 @@ abstract contract AccessControl is Context, IAccessControl, ERC165 {\n* @dev Revokes `role` from `account`.\n*\n* Internal function without access restriction.\n+ *\n+ * May emit a {RoleRevoked} event.\n*/\nfunction _revokeRole(bytes32 role, address account) internal virtual {\nif (hasRole(role, account)) {\n",
        "date": "19.05.2022 18:35:42",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add event emissions for RoleGranted and RoleRevoked in AccessControl.sol"
    },
    {
        "msg": "add a caution note to ERC4626 about EOA access",
        "diff": "diff --git a/contracts/token/ERC20/extensions/ERC4626.sol b/contracts/token/ERC20/extensions/ERC4626.sol @@ -16,6 +16,10 @@ import \"../../../utils/math/Math.sol\";\n* the ERC20 standard. Any additional extensions included along it would affect the \"shares\" token represented by this\n* contract and not the \"assets\" token which is an independent contract.\n*\n+ * CAUTION: Deposits and withdrawals may incur unexpected slippage. Users should verify that the amount received of\n+ * shares or assets is as expected. EOAs should operate through a wrapper that performs these checks such as\n+ * https://github.com/fei-protocol/ERC4626#erc4626router-and-base[ERC4626Router].\n+ *\n* _Available since v4.7._\n*/\nabstract contract ERC4626 is ERC20, IERC4626 {\n",
        "date": "24.06.2022 05:22:10",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add caution message about slippage in deposits and withdrawals"
    },
    {
        "msg": "add GitPOAP badge to display number of minted GitPOAPs for contributors",
        "diff": "diff --git a/README.md b/README.md [![Docs](https://img.shields.io/badge/docs-%F0%9F%93%84-blue)](https://docs.openzeppelin.com/contracts)\n[![NPM Package](https://img.shields.io/npm/v/@openzeppelin/contracts.svg)](https://www.npmjs.org/package/@openzeppelin/contracts)\n[![Coverage Status](https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts/graph/badge.svg)](https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts)\n+[![gitpoap badge](https://public-api.gitpoap.io/v1/repo/OpenZeppelin/openzeppelin-contracts/badge)](https://www.gitpoap.io/gh/OpenZeppelin/openzeppelin-contracts)\n**A library for secure smart contract development.** Build on a solid foundation of community-vetted code.\n",
        "date": "15.07.2022 07:00:56",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add gitpoap badge to README.md"
    },
    {
        "msg": "add a GH action that checks changelog",
        "diff": "diff --git a/.github/workflows/checks.yml b/.github/workflows/checks.yml @@ -13,6 +13,19 @@ concurrency:\ncancel-in-progress: true\njobs:\n+ changelog:\n+ if: github.event_name == 'pull_request' && github.repository != 'OpenZeppelin/openzeppelin-contracts-upgradeable'\n+ runs-on: ubuntu-latest\n+ steps:\n+ - uses: actions/checkout@v3\n+ - name: Check diff\n+ run: |\n+ git fetch origin ${{ github.base_ref }} --depth=1\n+ if git diff --exit-code origin/${{ github.base_ref }} -- CHANGELOG.md ; then\n+ echo 'Missing changelog entry'\n+ exit 1\n+ fi\n+\nlint:\nif: github.repository != 'OpenZeppelin/openzeppelin-contracts-upgradeable'\nruns-on: ubuntu-latest\n",
        "date": "27.07.2022 23:10:59",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add changelog check for pull requests in workflows"
    },
    {
        "msg": "add documentation about the security of overrides",
        "diff": "diff --git a/docs/modules/ROOT/pages/extending-contracts.adoc b/docs/modules/ROOT/pages/extending-contracts.adoc @@ -129,3 +129,8 @@ contract MyToken is ERC20 {\n```\nThat's it! Enjoy simpler code using hooks!\n+== Security\n+\n+The maintainers of OpenZeppelin Contracts are mainly concerned with the correctness and security of the code as published in the library, and the combinations of base contracts with the official extensions from the library.\n+\n+Custom overrides, and those of hooks in particular, may break some important assumptions and introduce vulnerabilities in otherwise secure code. While we try to ensure the contracts remain secure in the face of a wide range of potential customizations, this is done in a best-effort manner. Similarly, while we try to document all important assumptions, this should not be relied upon. Custom overrides should be carefully reviewed and checked against the source code of the contract they are customizing so as to fully understand their impact and guarantee their security.\n",
        "date": "23.09.2022 19:06:20",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add security considerations for custom overrides and hooks in extending contracts page"
    },
    {
        "msg": "add comments to `unsafeAccess` functions of `Arrays` library",
        "diff": "diff --git a/contracts/utils/Arrays.sol b/contracts/utils/Arrays.sol @@ -56,6 +56,9 @@ library Arrays {\n*/\nfunction unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\nbytes32 slot;\n+ // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n+ // following https://docs.soliditylang.org/en/v0.8.17/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n+\n/// @solidity memory-safe-assembly\nassembly {\nmstore(0, arr.slot)\n@@ -71,6 +74,9 @@ library Arrays {\n*/\nfunction unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\nbytes32 slot;\n+ // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n+ // following https://docs.soliditylang.org/en/v0.8.17/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n+\n/// @solidity memory-safe-assembly\nassembly {\nmstore(0, arr.slot)\n@@ -86,6 +92,9 @@ library Arrays {\n*/\nfunction unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\nbytes32 slot;\n+ // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n+ // following https://docs.soliditylang.org/en/v0.8.17/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n+\n/// @solidity memory-safe-assembly\nassembly {\nmstore(0, arr.slot)\n",
        "date": "24.09.2022 00:23:32",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Refactor unsafeAccess function to use assembly for calculating storage slot."
    },
    {
        "msg": "add forgotten await to ERC1155URIStorage beforeEach block.",
        "diff": "diff --git a/test/token/ERC1155/extensions/ERC1155URIStorage.test.js b/test/token/ERC1155/extensions/ERC1155URIStorage.test.js @@ -17,7 +17,7 @@ contract(['ERC1155URIStorage'], function (accounts) {\ndescribe('with base uri set', function () {\nbeforeEach(async function () {\nthis.token = await ERC1155URIStorageMock.new(erc1155Uri);\n- this.token.setBaseURI(baseUri);\n+ await this.token.setBaseURI(baseUri);\nawait this.token.mint(holder, tokenId, amount, '0x');\n});\n",
        "date": "16.11.2022 17:33:58",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Fix setting base URI in ERC1155URIStorage test"
    },
    {
        "msg": "add additional conditions when testing ERC4626 roundtrip",
        "diff": "diff --git a/test/token/ERC20/extensions/ERC4626.t.sol b/test/token/ERC20/extensions/ERC4626.t.sol @@ -3,6 +3,7 @@ pragma solidity ^0.8.0;\nimport \"erc4626-tests/ERC4626.test.sol\";\n+import {SafeCast} from \"../../../../contracts/utils/math/SafeCast.sol\";\nimport {ERC20Mock} from \"../../../../contracts/mocks/ERC20Mock.sol\";\nimport {ERC4626Mock, IERC20Metadata} from \"../../../../contracts/mocks/ERC4626Mock.sol\";\n@@ -14,4 +15,22 @@ contract ERC4626StdTest is ERC4626Test {\n_vaultMayBeEmpty = false;\n_unlimitedAmount = true;\n}\n+\n+ // solhint-disable-next-line func-name-mixedcase\n+ function test_RT_mint_withdraw(ERC4626Test.Init memory init, uint256 shares) public override {\n+ // There is an edge case where we currently behave different than the property tests,\n+ // when all assets are lost to negative yield.\n+\n+ // Sum all initially deposited assets.\n+ int256 initAssets = 0;\n+ for (uint256 i = 0; i < init.share.length; i++) {\n+ vm.assume(init.share[i] <= uint256(type(int256).max - initAssets));\n+ initAssets += SafeCast.toInt256(init.share[i]);\n+ }\n+\n+ // Reject tests where the yield loses all assets from the vault.\n+ vm.assume(init.yield > -initAssets);\n+\n+ super.test_RT_mint_withdraw(init, shares);\n+ }\n}\n",
        "date": "30.11.2022 15:44:38",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add SafeCast import and update test_RT_mint_withdraw function in ERC4626.t.sol"
    },
    {
        "msg": "add warning on `SELFDESTRUCT` usage with `isContract`",
        "diff": "diff --git a/contracts/utils/Address.sol b/contracts/utils/Address.sol @@ -22,6 +22,10 @@ library Address {\n* - a contract in construction\n* - an address where a contract will be created\n* - an address where a contract lived, but was destroyed\n+ *\n+ * Furthermore, `isContract` will also return true if the target contract within\n+ * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n+ * which only has an effect at the end of a transaction.\n* ====\n*\n* [IMPORTANT]\n",
        "date": "30.12.2022 23:00:53",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Add check for contract destruction in isContract function"
    },
    {
        "msg": "add label to Renovate PRs",
        "diff": "diff --git a/renovate.json b/renovate.json {\n- \"extends\": [\n- \"github>OpenZeppelin/configs\"\n- ],\n- \"packageRules\": [\n- {\n- \"extends\": [\"packages:eslint\"],\n- \"enabled\": false\n- }\n- ]\n+ \"extends\": [\"github>OpenZeppelin/configs\"],\n+ \"labels\": [\"ignore-changelog\"]\n}\n",
        "date": "02.01.2023 18:03:24",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Update renovate.json to add \"ignore-changelog\" label and remove disabled eslint package rule"
    },
    {
        "msg": "add docs on non-stability of internal function use",
        "diff": "diff --git a/docs/modules/ROOT/pages/extending-contracts.adoc b/docs/modules/ROOT/pages/extending-contracts.adoc @@ -126,4 +126,6 @@ That's it! Enjoy simpler code using hooks!\nThe maintainers of OpenZeppelin Contracts are mainly concerned with the correctness and security of the code as published in the library, and the combinations of base contracts with the official extensions from the library.\n-Custom overrides, and those of hooks in particular, may break some important assumptions and introduce vulnerabilities in otherwise secure code. While we try to ensure the contracts remain secure in the face of a wide range of potential customizations, this is done in a best-effort manner. Similarly, while we try to document all important assumptions, this should not be relied upon. Custom overrides should be carefully reviewed and checked against the source code of the contract they are customizing so as to fully understand their impact and guarantee their security.\n+Custom overrides, and those of hooks in particular, may break some important assumptions and introduce vulnerabilities in otherwise secure code. While we try to ensure the contracts remain secure in the face of a wide range of potential customizations, this is done in a best-effort manner. While we try to document all important assumptions, this should not be relied upon. Custom overrides should be carefully reviewed and checked against the source code of the contract they are customizing so as to fully understand their impact and guarantee their security.\n+\n+The way functions interact internally should not be assumed to stay stable across releases of the library. For example, a function that is used in one context in a particular release may not be used in the same context in the next release. Contracts that override functions should revalidate their assumptions when updating the version of OpenZeppelin Contracts they are built on.\n",
        "date": "13.01.2023 07:17:38",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Update warning about custom overrides and function stability in OpenZeppelin Contracts"
    },
    {
        "msg": "add guidelines for pull requests",
        "diff": "diff --git a/GUIDELINES.md b/GUIDELINES.md @@ -62,6 +62,20 @@ Some other examples of automation are:\n- Looking for common security vulnerabilities or errors in our code (eg. reentrancy analysis).\n- Keeping dependencies up to date and monitoring for vulnerable dependencies.\n+## Pull requests\n+\n+Pull requests are squash-merged to keep the `master` branch history clean. The title of the pull request becomes the commit message, so it should be written in a consistent format:\n+\n+1) Begin with a capital letter.\n+2) Do not end with a period.\n+3) Write in the imperative: \"Add feature X\" and not \"Adds feature X\" or \"Added feature X\".\n+\n+This repository does not follow conventional commits, so do not prefix the title with \"fix:\" or \"feat:\".\n+\n+Work in progress pull requests should be submitted as Drafts and should not be prefixed with \"WIP:\".\n+\n+Branch names don't matter, and commit messages within a pull request mostly don't matter either, although they can help the review process.\n+\n# Solidity Conventions\nIn addition to the official Solidity Style Guide we have a number of other conventions that must be followed.\n",
        "date": "26.01.2023 14:17:18",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "add",
        "chatgpt_zeroshot": "Update guidelines for pull requests and commit messages in the repository."
    },
    {
        "msg": "add associate and dissociate producer fetch",
        "diff": "diff --git a/src/fetch/fetch.js b/src/fetch/fetch.js @@ -115,3 +115,18 @@ export function syncCatalog(catalogId) {\nif (!catalogId) return Promise.reject(new Error('catalogId is required'))\nreturn superRequest(`https://inspire.data.gouv.fr/api/geogw/services/${catalogId}/sync`, 'POST')\n}\n+\n+export function dissociateProducer(producerId, organizationId) {\n+ if (!producerId && organizationId) return Promise.reject(new Error('producerId and organizationId is required'))\n+ const url = `https://inspire.data.gouv.fr/dgv/api/organizations/${organizationId}/producers/${producerId}`\n+\n+ return superRequest(url, 'DELETE')\n+}\n+\n+export function associateProducer(producerId, organizationId) {\n+ if (!producerId && organizationId) return Promise.reject(new Error('producerId and organizationId is required'))\n+ const url = `https://inspire.data.gouv.fr/dgv/api/organizations/${organizationId}/producers`\n+ const params = { '_id': producerId, 'associatedTo': organizationId }\n+\n+ return superRequest(url, 'POST', params)\n+}\n",
        "date": "09.01.2017 16:40:00",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Add functions to dissociate and associate producers with organizations"
    },
    {
        "msg": "add css to table",
        "diff": "diff --git a/src/modules/Datasets/components/DatasetTable/DatasetTable.css b/src/modules/Datasets/components/DatasetTable/DatasetTable.css +@import \"../../../../theme/colors\";\n+\n.table table {\nmargin: 10px;\n}\n.table th, .table td {\ntext-align: center;\n- padding: 5px;\n+ padding: 7px;\n}\n/* PAGINATION */\n.table a {\npadding: 10px;\n- background-color: #fff;\n- margin: 8px;\n}\n.table a.reactable-current-page {\n- background-color: #d0ebf5;\n+ color: #fff;\n+ background-color: var(--blue);\n+}\n+\n+.table a:hover {\n+ color: #fff;\n+ background-color: var(--blue);\n}\n",
        "date": "16.01.2017 16:11:06",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Update table padding and pagination styles"
    },
    {
        "msg": "add window.scrollTo",
        "diff": "diff --git a/src/modules/Datasets/components/Datasets/Datasets.js b/src/modules/Datasets/components/Datasets/Datasets.js @@ -77,6 +77,8 @@ class Datasets extends Component {\nconst page = (offset / limit) + 1\nconst changes = { page, offset }\n+ window.scrollTo(0, 0);\n+\nthis.setState(changes, () => {\nthis.search(changes)\n})\n",
        "date": "18.01.2017 11:12:54",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Add window scroll to top when changing page in Datasets component"
    },
    {
        "msg": "add default oragnization logo",
        "diff": "diff --git a/src/modules/Publication/components/Layout/Layout.js b/src/modules/Publication/components/Layout/Layout.js @@ -9,6 +9,7 @@ import styles from './Layout.css'\nfunction Layout({ user, organization, pageTitle, title, children }) {\nif (!user) return null\n+ const organizationLogo = !organization.logo ? organization.logo : 'https://upload.wikimedia.org/wikipedia/commons/thumb/e/e6/Pas_d\\'image_disponible.svg/200px-Pas_d\\'image_disponible.svg.png'\nreturn (\n<DocumentTitle title={pageTitle}>\n@@ -16,7 +17,7 @@ function Layout({ user, organization, pageTitle, title, children }) {\n<User user={user}/>\n{organization ?\n<Link to={`/publication/${organization.id}`}>\n- <img className={styles.organizationLogo} alt=\"organization logo\" src={organization.logo}></img>\n+ <img className={styles.organizationLogo} alt=\"organization logo\" src={organizationLogo}></img>\n</Link> :\nnull\n}\n",
        "date": "22.01.2017 19:35:15",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Update organization logo handling in Layout component"
    },
    {
        "msg": "add dataset purpose",
        "diff": "diff --git a/src/modules/Datasets/components/DatasetSection/__test__/DatasetSection.test.js b/src/modules/Datasets/components/DatasetSection/__test__/DatasetSection.test.js @@ -35,6 +35,10 @@ describe('<DatasetSection />', () => {\nit('should display lineage', () => {\nexpect(wrapper.contains(datasetMock.metadata.lineage)).to.be.true\n})\n+\n+ it('should display purpose', () => {\n+ expect(wrapper.contains(datasetMock.metadata.purpose)).to.be.true\n+ })\n})\ndescribe('When metadata are undefined', () => {\n",
        "date": "24.03.2017 10:38:24",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Add test to display purpose in DatasetSection"
    },
    {
        "msg": "add proceedings of workshop 4",
        "diff": "diff --git a/src/modules/Events/pages/Events/Events.js b/src/modules/Events/pages/Events/Events.js @@ -8,9 +8,9 @@ import PastEvent from '../../../../components/Event/PastEvent'\nimport { events, eventsList, pastEventsList } from './Events.css'\nconst pastEvents = [\n- {name: 'Atelier #1', date: '06/10/2016', link: 'https://github.com/sgmap/inspire/files/838072/1489399578890.pdf'},\n- {name: 'Atelier #3', date: '09/02/2017', link: 'https://github.com/sgmap/inspire/files/838076/Synthese.atelier.3.pdf'},\n- {name: 'Atelier #4', date: '09/03/2017', link: ''},\n+ {name: 'Atelier #1', date: '06/10/2016', link: '/assets/ateliers/synthese_atelier_1.pdf'},\n+ {name: 'Atelier #3', date: '09/02/2017', link: '/assets/ateliers/synthese_atelier_3.pdf'},\n+ {name: 'Atelier #4', date: '09/03/2017', link: '/assets/ateliers/synthese_atelier_4.pdf'},\n]\nconst Events = () => {\n",
        "date": "28.03.2017 11:32:43",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Update pastEvents links to point to local assets"
    },
    {
        "msg": "add proptypes to search page",
        "diff": "diff --git a/src/routes/Search/components/SearchPage/SearchPage.js b/src/routes/Search/components/SearchPage/SearchPage.js import React from 'react'\n+import PropTypes from 'prop-types'\nimport DocumentTitle from 'react-document-title'\nimport { unionWith, isEqual } from 'lodash'\n@@ -11,7 +12,28 @@ import SearchResults from '../SearchResults'\nimport styles from './SearchPage.scss'\n-class SearchPage extends React.Component {\n+class SearchPage extends React.PureComponent {\n+ static propTypes = {\n+ query: PropTypes.shape({\n+ textInput: PropTypes.string,\n+ page: PropTypes.number.isRequired,\n+ filters: PropTypes.array.isRequired\n+ }).isRequired,\n+\n+ search: PropTypes.shape({\n+ pending: PropTypes.bool.isRequired,\n+ error: PropTypes.oneOfType([\n+ PropTypes.object,\n+ PropTypes.bool\n+ ]).isRequired,\n+ query: PropTypes.object.isRequired,\n+ results: PropTypes.array.isRequired,\n+ facets: PropTypes.object.isRequired\n+ }).isRequired,\n+\n+ update: PropTypes.func.isRequired\n+ }\n+\naddFilter = filter => {\nconst { update, query } = this.props\n",
        "date": "21.07.2017 15:47:26",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Refactor SearchPage component to use PureComponent and add PropTypes validation"
    },
    {
        "msg": "add metadata credit to the bottom of the aside",
        "diff": "diff --git a/src/routes/Dataset/components/DatasetView/DatasetView.js b/src/routes/Dataset/components/DatasetView/DatasetView.js @@ -102,6 +102,14 @@ class DatasetView extends React.PureComponent {\n<DatasetBlock title='Contacts'>\n<DatasetContactList contacts={dataset.metadata.contacts} />\n</DatasetBlock>\n+\n+ {dataset.metadata.credit && (\n+ <DatasetBlock title='Contributions'>\n+ <div>\n+ {dataset.metadata.credit}\n+ </div>\n+ </DatasetBlock>\n+ )}\n</div>\n</div>\n</div>\n",
        "date": "27.07.2017 20:33:08",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Add display of dataset credit in DatasetView"
    },
    {
        "msg": "add async common chunk for shared async commons",
        "diff": "diff --git a/build/webpack.config.js b/build/webpack.config.js @@ -224,7 +224,13 @@ if (!__TEST__) {\nbundles.unshift('vendor')\nconfig.entry.vendor = project.vendors\n}\n+\nconfig.plugins.push(new webpack.optimize.CommonsChunkPlugin({ names: bundles }))\n+ config.plugins.push(new webpack.optimize.CommonsChunkPlugin({\n+ name: 'app',\n+ async: 'common',\n+ minChunks: 2\n+ }))\n}\n// Production Optimizations\n",
        "date": "29.07.2017 15:40:45",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Add CommonsChunkPlugin for app and common chunks in webpack config"
    },
    {
        "msg": "add labels to store_artifact tasks",
        "diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -80,6 +80,7 @@ jobs:\npath: reports/tests/\n- store_artifacts:\n+ name: Store coverage artifacts\npath: coverage/\n- run:\n@@ -109,6 +110,7 @@ jobs:\n- reports/\n- store_artifacts:\n+ name: Store build report artifacts\npath: reports/\n- persist_to_workspace:\n",
        "date": "07.08.2017 18:05:39",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Add storing build report artifacts to CircleCI configuration."
    },
    {
        "msg": "add tests reports subdirectory for circleci",
        "diff": "diff --git a/package.json b/package.json \"compile\": \"node build/scripts/compile\",\n\"build\": \"npm run clean && cross-env NODE_ENV=production npm run compile\",\n\"test\": \"cross-env NODE_ENV=test mocha -r build/tests/bootstrap.js -r ignore-styles src/**/*.test.js\",\n- \"test:ci\": \"cross-env NODE_ENV=test MOCHA_FILE=reports/tests/results.xml nyc mocha -r build/tests/bootstrap.js -r ignore-styles --reporter mocha-circleci-reporter src/**/*.test.js\",\n+ \"test:ci\": \"cross-env NODE_ENV=test MOCHA_FILE=reports/tests/geodatagouv/results.xml nyc mocha -r build/tests/bootstrap.js -r ignore-styles --reporter mocha-circleci-reporter src/**/*.test.js\",\n\"codecov\": \"codecov -f coverage/coverage-final.json\",\n\"deploy\": \"gh-pages -d dist\",\n\"lint\": \"npm run lint:scripts && npm run lint:styles\",\n",
        "date": "07.08.2017 18:08:56",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Update test:ci script to output results to a different directory"
    },
    {
        "msg": "add default state for react to work",
        "diff": "diff --git a/src/routes/Dataset/components/DatasetDownloadList/DatasetDownloadList.js b/src/routes/Dataset/components/DatasetDownloadList/DatasetDownloadList.js @@ -19,6 +19,8 @@ class DatasetDownloadList extends React.PureComponent {\nt: PropTypes.func.isRequired\n}\n+ state = {}\n+\nsetPreview = ({ distribution, link }) => {\nconst { fetchGeoJson } = this.props\n",
        "date": "22.08.2017 15:49:36",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Add state initialization in DatasetDownloadList component"
    },
    {
        "msg": "add ssh config for gh deployment",
        "diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -140,6 +140,14 @@ jobs:\nname: Setup SSH to GitHub\ncommand: mkdir ~/.ssh && ssh-keyscan github.com > ~/.ssh/known_hosts\n+ - run:\n+ name: Set SSH user email\n+ command: git config --global user.email \"infra@beta.gouv.fr\"\n+\n+ - run:\n+ name: Set SSH user name\n+ command: git config --global user.name \"Deployment Bot\"\n+\n- deploy:\nname: Deploy to gh-pages branch on GitHub\ncommand: yarn deploy\n",
        "date": "28.08.2017 16:12:51",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Add SSH user email and name configuration for Deployment Bot"
    },
    {
        "msg": "add changelog to gitignore Update readme as well.",
        "diff": "diff --git a/.gitignore b/.gitignore @@ -8,6 +8,7 @@ pids\nlogs\n*.log\nnpm-debug.log*\n+CHANGELOG.md\n# Mac\n*.DS_Store\n",
        "date": "03.11.2017 16:09:59",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Add CHANGELOG.md to .gitignore"
    },
    {
        "msg": "add clouds to error page",
        "diff": "diff --git a/pages/_error.js b/pages/_error.js @@ -30,7 +30,7 @@ class ErrorPage extends React.Component {\n<Page>\n<Meta title={t('errors.title', { code: statusCode })} description={message} />\n- <Content>\n+ <Content clouds>\n<div>\n{statusCode ? <h1>{statusCode}</h1> : null}\n<h2>{message}</h2>\n@@ -43,7 +43,7 @@ class ErrorPage extends React.Component {\nflex: 1;\nalign-items: center;\njustify-content: center;\n- margin: 5em 0 3em;\n+ margin: 7em 0 2em;\n}\nh1 {\n",
        "date": "07.11.2017 13:45:35",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Adjust margin in ErrorPage component"
    },
    {
        "msg": "add obsolete warning to catalog preview",
        "diff": "diff --git a/components/catalog-preview.js b/components/catalog-preview.js import React from 'react'\nimport PropTypes from 'prop-types'\n+import moment from 'moment'\nimport { translate } from 'react-i18next'\nimport { get } from 'lodash'\n@@ -8,7 +9,11 @@ import HarvestStatus from './harvest-status'\nimport Counter from './counter'\nimport Percent from './percent'\n-// import ObsoleteWarning from './ObsoleteWarning'\n+const isObsolete = (catalog) => {\n+ const revisionDate = get(catalog, 'metrics.mostRecentRevisionDate')\n+\n+ return revisionDate && moment().subtract(6, 'months').isAfter(revisionDate)\n+}\nexport const CatalogPreview = ({ catalog, t }) => {\nlet metrics = catalog.metrics\n@@ -18,11 +23,20 @@ export const CatalogPreview = ({ catalog, t }) => {\nreturn (\n<Link href={`/catalog?id=${catalog._id}`} as={`/catalogs/${catalog._id}`}>\n<a>\n- <div className='title' title={catalog.name}>\n+ <div className='title'>\n+ {isObsolete(catalog) && (\n+ <img\n+ src='/static/images/icons/warning.svg'\n+ title={t('components.ObsoleteWarning.obsoleteCatalog')}\n+ alt={t('components.ObsoleteWarning.obsoleteCatalog')}\n+ />\n+ )}\n+\n+ <span title={catalog.name}>\n{catalog.name}\n+ </span>\n</div>\n<HarvestStatus harvest={catalog.service.sync} />\n- {/* <ObsoleteWarning catalog={catalog} /> */}\n<div className='metrics'>\n{!metrics ? <div>{t('components.CatalogPreview.noData')}</div> : (\n@@ -52,7 +66,7 @@ export const CatalogPreview = ({ catalog, t }) => {\na {\ndisplay: block;\n- padding: 1.4em 2em;\n+ padding: 16px 22px;\ntext-align: left;\nposition: relative;\nwidth: 360px;\n@@ -67,6 +81,13 @@ export const CatalogPreview = ({ catalog, t }) => {\n}\n}\n+ img {\n+ height: 23px;\n+ display: inline-block;\n+ vertical-align: bottom;\n+ margin-right: 5px;\n+ }\n+\n.title {\nfont-size: 1.4em;\nline-height: 1.2em;\n",
        "date": "07.11.2017 18:33:38",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Add warning icon for obsolete catalogs in CatalogPreview component"
    },
    {
        "msg": "add error label to error page",
        "diff": "diff --git a/pages/_error.js b/pages/_error.js @@ -9,7 +9,7 @@ import Content from '../components/content'\nclass ErrorPage extends React.Component {\nstatic propTypes = {\n- statusCode: PropTypes.number.isRequired,\n+ code: PropTypes.number,\ni18n: PropTypes.shape({\nexists: PropTypes.func.isRequired\n}).isRequired,\n@@ -17,22 +17,23 @@ class ErrorPage extends React.Component {\n}\nstatic getInitialProps ({ res, err }) {\n- const statusCode = res ? res.statusCode : (err ? err.statusCode : null)\n- return { statusCode }\n+ const code = res ? res.statusCode : (err ? err.statusCode : null)\n+\n+ return { code }\n}\nrender() {\n- const { statusCode, i18n, t } = this.props\n+ const { code, i18n, t } = this.props\n- const message = i18n.exists(`errors.${statusCode}`) ? t(`errors.${statusCode}`) : t('errors.unknown')\n+ const message = i18n.exists(`errors.${code}`) ? t(`errors.${code}`) : t('errors.unknown')\nreturn (\n<Page>\n- <Meta title={t('errors.title', { code: statusCode })} description={message} />\n+ <Meta title={t('errors.title', { code })} description={message} />\n<Content clouds>\n<div>\n- {statusCode ? <h1>{statusCode}</h1> : null}\n+ <h1>{t('errors.title', { code })}</h1>\n<h2>{message}</h2>\n</div>\n</Content>\n",
        "date": "07.11.2017 18:37:44",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Refactor error page component to use 'code' instead of 'statusCode' prop."
    },
    {
        "msg": "add facet max width",
        "diff": "diff --git a/components/facet.js b/components/facet.js @@ -9,10 +9,10 @@ const Facet = ({ facet, count, detailed, remove, onClick, t, i18n }) => {\nreturn (\n<div className='container'>\n<div className={`facet ${remove && 'remove'}`} onClick={onClick && (() => onClick(facet))}>\n- {detailed && <span className='title'>{title}</span>}\n- <span>{value}</span>\n+ {detailed && <div className='title'>{title}</div>}\n+ <div className='value'>{value}</div>\n</div>\n- {count && <span className='number'>&times; {count}</span>}\n+ {count && <div className='number'>&times; {count}</div>}\n<style jsx>{`\n@import 'colors';\n@@ -22,6 +22,7 @@ const Facet = ({ facet, count, detailed, remove, onClick, t, i18n }) => {\n}\n.facet {\n+ display: flex;\nflex: 1;\nbackground: $lightgrey;\nborder-radius: 3px 0 0 3px;\n@@ -75,7 +76,6 @@ const Facet = ({ facet, count, detailed, remove, onClick, t, i18n }) => {\n}\n.title {\n- display: inline-block;\nline-height: 26px;\nheight: 26px;\nmargin-right: 7px;\n@@ -84,11 +84,21 @@ const Facet = ({ facet, count, detailed, remove, onClick, t, i18n }) => {\nfont-variant: small-caps;\n}\n+ .value {\n+ max-width: 240px;\n+ overflow: hidden;\n+ white-space: nowrap;\n+ text-overflow: ellipsis;\n+ }\n+\n+ .title + .value {\n+ max-width: 160px;\n+ }\n+\n.number {\n- display: inline-block;\nline-height: 26px;\nheight: 26px;\n- margin-left: 6px;\n+ margin-left: 5px;\n}\n`}</style>\n</div>\n",
        "date": "09.11.2017 01:35:41",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Refactor facet component to use div elements for title and value, and update styling for better layout and readability."
    },
    {
        "msg": "add missing flex: 1",
        "diff": "diff --git a/pages/search.js b/pages/search.js @@ -65,7 +65,7 @@ class SearchPage extends React.Component {\n<Content>\n<Container fluid>\n<div className='main'>\n- <div>\n+ <div className='search'>\n<SearchInput hasButton />\n<ActiveFacets facets={query.facets} />\n<Count count={count} />\n@@ -84,6 +84,10 @@ class SearchPage extends React.Component {\ndisplay: flex;\n}\n+ .search {\n+ flex: 1;\n+ }\n+\n.facets {\nmargin-left: 2em;\nflex-basis: 300px;\n",
        "date": "09.11.2017 02:42:16",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Add search class to main div in search page"
    },
    {
        "msg": "add extra padding to top and bottom mobile facets",
        "diff": "diff --git a/components/search/facets.js b/components/search/facets.js @@ -84,7 +84,7 @@ class Facets extends React.Component {\nright: 0;\nbackground: #fff;\nbox-shadow: -2px 0 2px rgba(0, 0, 0, 0.2);\n- padding: 1em 1em 1em 1.5em;\n+ padding: 2em 1em 2em 1.5em;\n}\n}\n",
        "date": "10.11.2017 11:10:57",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Increase padding in facets component for better spacing"
    },
    {
        "msg": "add catalog media queries",
        "diff": "diff --git a/components/catalog/statistics.js b/components/catalog/statistics.js @@ -26,24 +26,6 @@ const Statistics = ({ metrics, t }) => {\n/>\n</div>\n- <div className='block'>\n- <h3>\n- {t('details.statistics.recordTypeChart')}\n- </h3>\n- <div>\n- <Chart data={metrics.records.partitions.recordType} />\n- </div>\n- </div>\n-\n- <div className='block'>\n- <h3>\n- {t('details.statistics.metadataTypeChart')}\n- </h3>\n- <div>\n- <Chart data={metrics.records.partitions.metadataType} />\n- </div>\n- </div>\n-\n<div className='block'>\n<h3>\n{t('details.statistics.openDataPercent')}\n@@ -66,6 +48,24 @@ const Statistics = ({ metrics, t }) => {\n/>\n</div>\n+ <div className='block'>\n+ <h3>\n+ {t('details.statistics.recordTypeChart')}\n+ </h3>\n+ <div>\n+ <Chart data={metrics.records.partitions.recordType} />\n+ </div>\n+ </div>\n+\n+ <div className='block'>\n+ <h3>\n+ {t('details.statistics.metadataTypeChart')}\n+ </h3>\n+ <div>\n+ <Chart data={metrics.records.partitions.metadataType} />\n+ </div>\n+ </div>\n+\n<div className='block'>\n<h3>\n{t('details.statistics.dataTypeChart')}\n@@ -82,10 +82,6 @@ const Statistics = ({ metrics, t }) => {\ndisplay: flex;\nflex-wrap: wrap;\nmargin: 1em -0.6em 0 -0.6em;\n-\n- @media (max-width: 551px) {\n- flex-direction: column;\n- }\n}\n.block {\n@@ -94,13 +90,21 @@ const Statistics = ({ metrics, t }) => {\njustify-content: center;\nflex-direction: column;\nheight: 200px;\n- border: 1px solid $lightgrey;\npadding: 2em;\n+ border: 1px solid $lightgrey;\nborder-radius: 2px;\nmargin: 0 0.6em 1em 0.6em;\n- flex: 1 1 31%;\ntext-align: center;\nmax-width: calc(100% - 1.2em);\n+ width: calc(33.33% - 1.2em);\n+\n+ @media (max-width: 960px) {\n+ width: calc(50% - 1.2em);\n+ }\n+\n+ @media (max-width: 768px) {\n+ width: calc(100% - 1.2em);\n+ }\ndiv {\ndisplay: flex;\n",
        "date": "13.11.2017 13:19:12",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Refactor statistics component to include recordTypeChart and metadataTypeChart. Add dataTypeChart and update styling for responsiveness."
    },
    {
        "msg": "add missing catalog.service.sync.pending proptype",
        "diff": "diff --git a/components/catalog/harvests/table.js b/components/catalog/harvests/table.js @@ -75,7 +75,12 @@ Table.propTypes = {\n})).isRequired,\ncatalog: PropTypes.shape({\n- _id: PropTypes.string.isRequired\n+ _id: PropTypes.string.isRequired,\n+ service: PropTypes.shape({\n+ sync: PropTypes.shape({\n+ pending: PropTypes.bool.isRequired\n+ }).isRequired\n+ }).isRequired\n}).isRequired,\nt: PropTypes.func.isRequired\n",
        "date": "15.11.2017 11:45:18",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Add sync pending status to catalog in Table componentPropTypes"
    },
    {
        "msg": "add box to error page",
        "diff": "diff --git a/pages/_error.js b/pages/_error.js @@ -6,6 +6,7 @@ import withI18n from '../components/hoc/with-i18n'\nimport Page from '../components/page'\nimport Meta from '../components/meta'\nimport Content from '../components/content'\n+import Box from '../components/box'\nclass ErrorPage extends React.Component {\nstatic propTypes = {\n@@ -33,8 +34,12 @@ class ErrorPage extends React.Component {\n<Content clouds>\n<div>\n+ <Box>\n+ <section>\n<h1>{t('errors.title', { code })}</h1>\n<h2>{message}</h2>\n+ </section>\n+ </Box>\n</div>\n</Content>\n@@ -51,6 +56,15 @@ class ErrorPage extends React.Component {\n}\n}\n+ section {\n+ padding: 10px;\n+\n+ @media (min-width: 552px) {\n+ display: flex;\n+ align-items: center;\n+ }\n+ }\n+\nh1 {\nfont-size: 24px;\nfontWeight: 500;\n",
        "date": "15.11.2017 13:45:15",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Add Box component to ErrorPage for better styling and organization"
    },
    {
        "msg": "add alt attribute to etalab logo",
        "diff": "diff --git a/components/page/footer/index.js b/components/page/footer/index.js @@ -11,7 +11,7 @@ const Footer = ({ t }) => (\n<Container>\n<div className='content'>\n<div>\n- <img src='/static/images/etalab.png' />\n+ <img src='/static/images/etalab.png' alt='Etalab' />\n<Social />\n</div>\n<Sitemap />\n",
        "date": "15.11.2017 13:48:05",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Add alt text to Etalab logo in footer component"
    },
    {
        "msg": "add pretty icons to download block",
        "diff": "diff --git a/components/dataset/downloads/dataset-download.js b/components/dataset/downloads/dataset-download.js @@ -5,6 +5,7 @@ import strRightBack from 'underscore.string/strRightBack'\nimport DownloadIcon from 'react-icons/lib/fa/download'\nimport PreviewIcon from 'react-icons/lib/fa/eye'\n+import FailIcon from 'react-icons/lib/fa/close'\nimport formats from '../../../lib/formats'\n@@ -27,54 +28,89 @@ export const DatasetDownload = ({ distribution, t }) => {\nconst name = layerName || distribution.typeName\nreturn (\n- <div className='container'>\n- <h5>{name}</h5>\n+ <div>\n{distribution.available ? (\n- <div className='distributions'>\n+ <div className='container'>\n+ <div className='main'>\n+ <div className='download-icon'>\n+ <DownloadIcon />\n+ </div>\n+ <div>\n+ <b>{name}</b>\n{formats.map(format => (\n- <div key={format.label}>\n+ <div key={format.label} className='download'>\n<Button href={`${link}?format=${format.format}&projection=${format.projection}`} download>\n- <DownloadIcon /> {format.label}\n+ {format.label}\n</Button>\n</div>\n))}\n-\n+ </div>\n+ </div>\n<div className='preview'>\n<Button>\n<PreviewIcon style={{ verticalAlign: -2 }} /> {t('downloads.openPreview')}\n</Button>\n</div>\n</div>\n- ) : t('downloads.unavailable')}\n+ ) : (\n+ <div className='container'>\n+ <div className='fail-icon'>\n+ <FailIcon />\n+ </div>\n+ <div>\n+ <b>{name}</b>\n+ {t('downloads.unavailable')}\n+ </div>\n+ </div>\n+ )}\n<style jsx>{`\n@import 'colors';\n.container {\n- border-left: 2px solid $blue;\n- padding-left: 0.5em;\n+ display: flex;\n+ flex-wrap: wrap;\n}\n- h5 {\n- margin: 0;\n+ .main {\n+ display: flex;\n}\n- .distributions {\n- display: flex;\n- flex-wrap: wrap;\n+ .download-icon {\n+ font-size: 4.51em;\n+ color: $blue;\n+ opacity: 0.2;\n+ margin-right: 10px;\n+ }\n- div {\n+ .fail-icon {\n+ font-size: 4.51em;\n+ color: $red;\n+ opacity: 0.2;\n+ margin-right: 10px;\n+ margin-top: -12px;\n+ }\n+\n+ b {\n+ display: block;\n+ margin-bottom: 2px;\n+ overflow-wrap: break-word;\n+ word-wrap: break-word;\n+ word-break: break-word;\n+ }\n+\n+ .download {\n+ display: inline-block;\nmargin: 5px 5px 0 0;\n}\n.preview {\nmargin: 5px 0 0 auto;\n- @media (max-width: 768px) {\n+ @media (max-width: 1180px) {\nflex: 1 1 100%;\n}\n}\n- }\n`}</style>\n</div>\n)\n",
        "date": "22.11.2017 19:36:49",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Add FailIcon for unavailable downloads in DatasetDownload component"
    },
    {
        "msg": "add missing nonGeographicDataset from type enum",
        "diff": "diff --git a/locales/en/common.json b/locales/en/common.json \"enums\": {\n\"dataTypes\": {\n- \"dataset\": \"dataset\"\n+ \"dataset\": \"dataset\",\n+ \"nonGeographicDataset\": \"non-geographic dataset\"\n},\n\"frequencies\": {\n",
        "date": "23.11.2017 19:19:37",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Add non-geographic dataset to dataTypes in common.json"
    },
    {
        "msg": "add content cloud class",
        "diff": "diff --git a/components/content.js b/components/content.js @@ -2,7 +2,7 @@ import React from 'react'\nimport PropTypes from 'prop-types'\nconst Content = ({ children, clouds }) => (\n- <main>\n+ <main className={clouds ? 'clouds' : ''}>\n{children}\n<style jsx>{`\n@@ -14,12 +14,12 @@ const Content = ({ children, clouds }) => (\ndisplay: flex;\nflex-direction: column;\nflex: 1;\n+ }\n- ${clouds && (`\n+ .clouds {\nbackground: url('/static/images/clouds.svg') bottom -69px left 0, linear-gradient(to top, #41dcd7, #3083b2);\nbackground-repeat: no-repeat;\nbackground-size: 1920px;\n- `)}\n}\n`}</style>\n</main>\n",
        "date": "28.11.2017 16:15:59",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Add conditional class 'clouds' to main element based on prop value"
    },
    {
        "msg": "add switcher for table preview",
        "diff": "diff --git a/components/dataset/downloads/preview.js b/components/dataset/downloads/preview.js @@ -3,9 +3,13 @@ import PropTypes from 'prop-types'\nimport dynamic from 'next/dynamic'\nimport { translate } from 'react-i18next'\n+import MapIcon from 'react-icons/lib/fa/map'\n+import TableIcon from 'react-icons/lib/fa/table'\n+\nimport { _get } from '../../../lib/fetch'\nimport Modal from '../../modal'\n+import Button from '../../button'\nconst CenteredMap = dynamic(import('../../centered-map'), {\nssr: false,\n@@ -22,7 +26,8 @@ class Preview extends React.Component {\nstate = {\nloading: true,\n- data: null\n+ data: null,\n+ view: 'map'\n}\nasync componentDidMount() {\n@@ -36,15 +41,38 @@ class Preview extends React.Component {\n}))\n}\n+ changeView = view => () => {\n+ this.setState(() => ({\n+ view\n+ }))\n+ }\n+\nrender() {\nconst { onClose, t } = this.props\n- const { loading, data } = this.state\n+ const { loading, data, view } = this.state\nreturn (\n<Modal fluid onClose={onClose}>\n{loading ? t('common:loading') : (\n<div className='preview'>\n+ <div className='actions'>\n+ <Button\n+ size='large'\n+ color={view === 'map' ? 'blue' : 'white'}\n+ onClick={this.changeView('map')}\n+ >\n+ <MapIcon />\n+ </Button>\n+ <Button\n+ size='large'\n+ color={view === 'table' ? 'blue' : 'white'}\n+ onClick={this.changeView('table')}\n+ >\n+ <TableIcon />\n+ </Button>\n+ </div>\n<div className='map-wrapper'>\n+ {view === 'map' ? (\n<div className='map'>\n<CenteredMap\nvectors={data}\n@@ -53,6 +81,9 @@ class Preview extends React.Component {\nzoom={5.5}\n/>\n</div>\n+ ) : (\n+ 'table'\n+ )}\n</div>\n</div>\n)}\n@@ -74,6 +105,13 @@ class Preview extends React.Component {\nheight: 100%;\nwidth: 100%;\n}\n+\n+ .actions {\n+ :global(button) {\n+ margin-right: 7px;\n+ margin-bottom: 10px;\n+ }\n+ }\n`}</style>\n</Modal>\n)\n",
        "date": "03.12.2017 01:55:02",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Add view switch functionality to dataset preview component"
    },
    {
        "msg": "add dataset images and description",
        "diff": "diff --git a/pages/dataset.js b/pages/dataset.js @@ -35,7 +35,9 @@ class DatasetPage extends React.Component {\nmetadata: PropTypes.shape({\nid: PropTypes.string.isRequired,\ntitle: PropTypes.string.isRequired,\n- thumbnails: PropTypes.array,\n+ thumbnails: PropTypes.arrayOf(PropTypes.shape({\n+ originalUrlHash: PropTypes.string.isRequired\n+ })),\nspatialExtent: PropTypes.object,\nequivalentScaleDenominator: PropTypes.number,\nspatialResolution: PropTypes.object,\n@@ -109,7 +111,13 @@ class DatasetPage extends React.Component {\nreturn (\n<Page>\n- <Meta title={metadata.title} />\n+ <Meta\n+ title={metadata.title}\n+ description={metadata.description}\n+ images={hasThumbnails && metadata.thumbnails.map(\n+ thumbnail => `${GEODATA_API_URL}/records/${recordId}/thumbnails/${thumbnail.originalUrlHash}`\n+ )}\n+ />\n<Content clouds>\n<Container fluid>\n",
        "date": "03.12.2017 16:53:44",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Add originalUrlHash to thumbnails and update Meta component in DatasetPage"
    },
    {
        "msg": "add error when preview data cannot be downloaded",
        "diff": "diff --git a/components/dataset/downloads/preview.js b/components/dataset/downloads/preview.js @@ -38,12 +38,19 @@ class Preview extends React.Component {\nasync componentDidMount() {\nconst { link } = this.props\n+ try {\nconst data = await _get(`${link}?format=GeoJSON&projection=WGS84`)\n- this.setState(() => ({\n+ this.setState({\nloading: false,\ndata\n- }))\n+ })\n+ } catch (error) {\n+ this.setState({\n+ loading: false,\n+ error\n+ })\n+ }\n}\nchangeView = view => () => {\n@@ -54,7 +61,7 @@ class Preview extends React.Component {\nrender() {\nconst { onClose, t } = this.props\n- const { loading, data, view } = this.state\n+ const { loading, data, view, error } = this.state\nreturn (\n<Modal fluid onClose={onClose}>\n@@ -76,6 +83,8 @@ class Preview extends React.Component {\n<TableIcon />\n</Button>\n</div>\n+\n+ {error ? <span className='error'>{t('preview.errors.download')}</span> : (\n<div className='map-wrapper'>\n{view === 'map' ? (\n<div className='map'>\n@@ -90,16 +99,23 @@ class Preview extends React.Component {\n<PreviewTable data={data} />\n)}\n</div>\n+ )}\n</div>\n)}\n<style jsx>{`\n+ @import 'colors';\n+\n.preview {\nflex: 1;\ndisplay: flex;\nflex-direction: column;\n}\n+ .error {\n+ color: $red;\n+ }\n+\n.map-wrapper {\nflex: 1;\nposition: relative;\n",
        "date": "04.12.2017 23:54:33",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Add error handling for failed API request in Preview component"
    },
    {
        "msg": "add publication routes",
        "diff": "diff --git a/server/routes.js b/server/routes.js @@ -25,12 +25,33 @@ module.exports = app => {\n})\n})\n- router.get('/publication/*', (req, res) => {\n+ router.get('/publication', (req, res) => {\napp.render(req, res, '/publication', {\n...req.query\n})\n})\n+ router.get('/publication/:oid/datasets', (req, res) => {\n+ app.render(req, res, '/publication/datasets', {\n+ ...req.query,\n+ oid: req.params.oid\n+ })\n+ })\n+\n+ router.get('/publication/:oid/producers', (req, res) => {\n+ app.render(req, res, '/publication/producers', {\n+ ...req.query,\n+ oid: req.params.oid\n+ })\n+ })\n+\n+ router.get('/publication/:oid', (req, res) => {\n+ app.render(req, res, '/publication/organization', {\n+ ...req.query,\n+ oid: req.params.oid\n+ })\n+ })\n+\nrouter.get('*', (req, res) => {\napp.render(req, res, req.params[0], req.query)\n})\n",
        "date": "06.12.2017 03:03:49",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Add routes for publication datasets, producers, and organization pages"
    },
    {
        "msg": "add organization to publication header",
        "diff": "diff --git a/components/publication/header.js b/components/publication/header.js @@ -3,7 +3,7 @@ import PropTypes from 'prop-types'\nimport Link from '../link'\n-const Header = ({ user }) => (\n+const Header = ({ user, organization }) => (\n<div className='container'>\n<Link href='/publication'>\n<a className='avatar'>\n@@ -11,20 +11,36 @@ const Header = ({ user }) => (\n</a>\n</Link>\n+ {organization && (\n+ <Link href={`/publication/organization?oid=${organization.id}`} as={`/publication/${organization.id}`}>\n+ <a className='organization'>\n+ <img\n+ src={organization.logo_thumbnail || '/static/images/no-img.png'}\n+ alt={organization.name}\n+ title={organization.name}\n+ />\n+ </a>\n+ </Link>\n+ )}\n+\n<div className='infos'>\n+ <div>\n<b>{user.first_name} {user.last_name}</b>\n- <br />\n+ </div>\n+ <div>\n{user.email}\n</div>\n+ </div>\n<style jsx>{`\n@import 'colors';\n.container {\n- padding: 1em;\n+ padding: 1em 1.2em;\nbackground-color: $lightgrey;\ndisplay: flex;\nalign-items: center;\nborder-radius: 2px;\n+ position: relative;\n}\na {\n@@ -38,7 +54,27 @@ const Header = ({ user }) => (\njustify-content: center;\noverflow: hidden;\nborder-radius: 50%;\n- border: 2px solid $white;\n+ background-color: $white;\n+ border: 2px solid transparent;\n+\n+ img {\n+ height: 100%;\n+ }\n+ }\n+\n+ .organization {\n+ position: absolute;\n+ left: calc(1.2em + 70px);\n+ bottom: 1em;\n+ width: 50px;\n+ height: 50px;\n+ display: flex;\n+ justify-content: center;\n+ overflow: hidden;\n+ border-radius: 50%;\n+ background-color: $white;\n+ border: 1px solid $darkblue;\n+ box-shadow: 2px 2px 3px rgba(0, 0, 0, 0.25);\nimg {\nheight: 100%;\n@@ -46,7 +82,7 @@ const Header = ({ user }) => (\n}\n.infos {\n- margin-left: 1em;\n+ margin-left: 1.2em;\n}\n`}</style>\n</div>\n@@ -58,7 +94,13 @@ Header.propTypes = {\nfirst_name: PropTypes.string.isRequired,\nlast_name: PropTypes.string.isRequired,\nemail: PropTypes.string.isRequired\n- }).isRequired\n+ }).isRequired,\n+\n+ organization:PropTypes.shape({\n+ id: PropTypes.string.isRequired,\n+ name: PropTypes.string.isRequired,\n+ logo_thumbnail: PropTypes.string\n+ })\n}\nexport default Header\n",
        "date": "06.12.2017 11:25:35",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Add organization information to publication header component"
    },
    {
        "msg": "add min column size for organizations",
        "diff": "diff --git a/pages/publication/organization.js b/pages/publication/organization.js @@ -71,11 +71,11 @@ class PublicationPage extends React.Component {\n<style jsx>{`\n.dashboard {\ndisplay: grid;\n- grid-template-columns: repeat(3, 1fr);\n- grid-gap: 4em;\n+ grid-template-columns: repeat(auto-fill, minmax(360px, 1fr));\n+ grid-gap: 4em 5em;\n@media (max-width: 1280px) {\n- grid-gap: 2em;\n+ grid-gap: 1em 2em;\n}\n@media (max-width: 768px) {\n",
        "date": "06.12.2017 12:46:48",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Refactor grid layout in PublicationPage component"
    },
    {
        "msg": "add red buttons",
        "diff": "diff --git a/components/button.js b/components/button.js @@ -74,6 +74,17 @@ const Button = ({ children, type, size, color, href, disabled, block, ...props }\n}\n}\n+ .red {\n+ background-color: $red;\n+ border-color: $red;\n+ color: $white;\n+\n+ &:hover {\n+ background-color: darken($red, 10%);\n+ border-color: darken($red, 10%);\n+ }\n+ }\n+\n.white {\nbackground-color: $white;\nborder-color: $blue;\n@@ -99,6 +110,7 @@ Button.propTypes = {\n]),\ncolor: PropTypes.oneOf([\n'blue',\n+ 'red',\n'white'\n])\n}\n",
        "date": "06.12.2017 17:33:46",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Add red button style and update PropTypes for color in Button component"
    },
    {
        "msg": "add back link",
        "diff": "diff --git a/components/button.js b/components/button.js @@ -56,9 +56,8 @@ const Button = ({ children, type, size, color, href, disabled, block, ...props }\npadding: 12px 16px;\na {\n- display: block;\n- margin: -12px -16px;\n- padding: 12px 16px;\n+ margin: -13px -17px;\n+ padding: 13px 17px;\n}\n}\n",
        "date": "06.12.2017 19:50:12",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Adjust button link styling for better alignment"
    },
    {
        "msg": "add default unauth meta for org publication",
        "diff": "diff --git a/pages/publication/organization.js b/pages/publication/organization.js @@ -136,6 +136,8 @@ class PublicationPage extends React.Component {\nrender() {\nreturn (\n<Page>\n+ <Meta title='Publication' />\n+\n<Content>\n<Container fluid>\n<RequireAuth\n",
        "date": "06.12.2017 19:59:49",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Add meta title to Publication page"
    },
    {
        "msg": "add dataset metrics",
        "diff": "diff --git a/components/publication/organization/source-producers.js b/components/publication/organization/source-producers.js @@ -16,7 +16,7 @@ const SourceProducers = ({ organization }) => (\n</ul>\n</div>\n- <Link href={`/publication/producers?oid=${organization._id}`} as={`/publication/producers?oid=${organization._id}`}>\n+ <Link href={`/publication/producers?oid=${organization._id}`} as={`/publication/${organization._id}/producers`}>\n<a>\nAssocier des producteurs\n</a>\n",
        "date": "06.12.2017 20:41:12",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Refactor link to producers page for organization ID in source-producers.js"
    },
    {
        "msg": "add breadcrumbs instead of 'back' links",
        "diff": "diff --git a/pages/publication/organization.js b/pages/publication/organization.js @@ -19,6 +19,7 @@ import Box from '../../components/box'\nimport Link from '../../components/link'\nimport Header from '../../components/publication/header'\n+import Breadcrumbs from '../../components/publication/breadcrumbs'\nimport SourceCatalogs from '../../components/publication/organization/source-catalogs'\nimport SourceProducers from '../../components/publication/organization//source-producers'\nimport DatasetMetrics from '../../components/publication/organization//dataset-metrics'\n@@ -87,7 +88,7 @@ class PublicationPage extends React.Component {\n<Meta title={`${organization.name} | Publication`} />\n<Header user={user} organization={organization} />\n- <h3>{organization.name}</h3>\n+ <Breadcrumbs organization={organization} />\n<div className='dashboard'>\n<Box title='Catalogues source' color='blue'>\n<SourceCatalogs\n@@ -108,15 +109,13 @@ class PublicationPage extends React.Component {\n</Box>\n</div>\n- <div className='back'>\n- <Link href='/publication'>\n- <a>\n- <IconBack style={{ marginRight: 5 }} /> Retour aux organisations\n- </a>\n- </Link>\n- </div>\n-\n<style jsx>{`\n+ h2 {\n+ font-size: 1.5em;\n+ font-weight: normal;\n+ margin-bottom: 1.6em;\n+ }\n+\n.dashboard {\ndisplay: grid;\ngrid-template-columns: repeat(auto-fill, 430px);\n@@ -134,10 +133,6 @@ class PublicationPage extends React.Component {\ndisplay: block;\n}\n}\n-\n- .back {\n- margin-top: 2.5em;\n- }\n`}</style>\n</div>\n)\n",
        "date": "06.12.2017 22:53:22",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Add breadcrumbs component and update styling in organization page"
    },
    {
        "msg": "add dataset publication page",
        "diff": "diff --git a/pages/publication/producers.js b/pages/publication/producers.js @@ -16,7 +16,6 @@ import RequireAuth from '../../components/require-auth'\nimport Header from '../../components/publication/header'\nimport Breadcrumbs from '../../components/publication/breadcrumbs'\n-\nimport Producers from '../../components/publication/producers'\nimport { PUBLICATION_BASE_URL } from '@env'\n",
        "date": "08.12.2017 11:48:57",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Remove unnecessary import in producers.js"
    },
    {
        "msg": "add es6 polyfills for IE11",
        "diff": "diff --git a/pages/_document.js b/pages/_document.js @@ -15,7 +15,7 @@ export default class MyDocument extends Document {\n<Head />\n<body>\n<Main />\n- <script src='https://cdn.polyfill.io/v2/polyfill.min.js?features=default,es7' />\n+ <script src='https://cdn.polyfill.io/v2/polyfill.min.js?features=default,es6,es7' />\n<NextScript />\n</body>\n</html>\n",
        "date": "09.12.2017 13:29:49",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Update polyfill script to include ES6 support"
    },
    {
        "msg": "add 15d static assets cache",
        "diff": "diff --git a/server/index.js b/server/index.js @@ -74,6 +74,10 @@ i18n\nconst lngs = languages.join('|')\nserver.use(`/:lng(${lngs})`, createRoutes(app))\n+ server.use('/static', express.static(path.join(__dirname, '../static'), {\n+ maxAge: '15d'\n+ }))\n+\nserver.get('*', (req, res) => {\nif (!app.isInternalUrl(req)) {\nreturn res.redirect(`/${req.i18n.languages[0]}${req.url}`)\n",
        "date": "11.12.2017 12:50:45",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Add static file serving with 15 days caching period"
    },
    {
        "msg": "add page CSS defaults",
        "diff": "diff --git a/components/page/index.js b/components/page/index.js @@ -32,8 +32,16 @@ export const Page = ({ children }) => (\n<style jsx global>{`\n@import 'colors';\n+ body {\n+ font-size: 14px;\n+ line-height: 1.5;\n+ min-width: 320px;\n+ background-color: $white;\n+ }\n+\na {\ncolor: $blue;\n+ text-decoration: none;\n&:hover {\ncolor: darken($blue, 10%);\n",
        "date": "09.12.2017 15:17:43",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Add global styles for body and anchor tags"
    },
    {
        "msg": "add tests for catalogs.findCandidates",
        "diff": "diff --git a/tests/lib/catalog.test.js b/tests/lib/catalog.test.js -import { isObsolete } from '../../lib/catalog'\n+import { isObsolete, findCandidates } from '../../lib/catalog'\n-test('isObsolete should return false if catalog is not defined', () => {\n+describe('isObsolete', () => {\n+ test('return false if catalog is not defined', () => {\nexpect(isObsolete()).toBe(false)\n})\n-test('isObsolete should return false if mostRecentRevisionDate is not defined', () => {\n+ test('return false if mostRecentRevisionDate is not defined', () => {\nexpect(isObsolete({\nmetrics: {}\n})).toBe(false)\n})\n-test('isObsolete should return false if mostRecentRevisionDate is invalid', () => {\n+ test('return false if mostRecentRevisionDate is invalid', () => {\nexpect(isObsolete({\nmetrics: {\nmostRecentRevisionDate: 'not a valid date'\n@@ -18,7 +19,7 @@ test('isObsolete should return false if mostRecentRevisionDate is invalid', () =\n})).toBe(false)\n})\n-test('isObsolete should return true if mostRecentRevisionDate is too old', () => {\n+ test('return true if mostRecentRevisionDate is too old', () => {\nexpect(isObsolete({\nmetrics: {\nmostRecentRevisionDate: new Date(2000, 0, 1)\n@@ -26,7 +27,7 @@ test('isObsolete should return true if mostRecentRevisionDate is too old', () =>\n})).toBe(true)\n})\n-test('isObsolete should return false if mostRecentRevisionDate is recent', () => {\n+ test('return false if mostRecentRevisionDate is recent', () => {\nexpect(isObsolete({\nmetrics: {\nmostRecentRevisionDate: new Date()\n@@ -34,10 +35,86 @@ test('isObsolete should return false if mostRecentRevisionDate is recent', () =>\n})).toBe(false)\n})\n-test('isObsolete should also work with strings', () => {\n+ test('work with strings', () => {\nexpect(isObsolete({\nmetrics: {\nmostRecentRevisionDate: new Date().toISOString()\n}\n})).toBe(false)\n})\n+})\n+\n+describe('findCandidates', () => {\n+ test('ignore catalogs without open or download data', () => {\n+ const catalogs = [{}, {}, {}]\n+\n+ expect(findCandidates(catalogs).length).toBe(0)\n+ })\n+\n+ test('excludes catalogs with just open data', () => {\n+ const catalogs = [{}, {\n+ metrics: {\n+ datasets: {\n+ partitions: { openness: { yes: 1 } }\n+ }\n+ }\n+ }, {}]\n+\n+ expect(findCandidates(catalogs).length).toBe(0)\n+ })\n+\n+ test('excludes catalogs with just download data', () => {\n+ const catalogs = [{}, {\n+ metrics: {\n+ datasets: {\n+ partitions: { download: { yes: 1 } }\n+ }\n+ }\n+ }, {}]\n+\n+ expect(findCandidates(catalogs).length).toBe(0)\n+ })\n+\n+ test('include catalogs with download and open data', () => {\n+ const catalogs = [{}, {\n+ metrics: {\n+ datasets: {\n+ partitions: {\n+ openness: { yes: 1 },\n+ download: { yes: 1 }\n+ }\n+ }\n+ }\n+ }, {}]\n+\n+ expect(findCandidates(catalogs).length).toBe(1)\n+ })\n+\n+ test('exclude blacklisted catalogs', () => {\n+ const catalogs = [{\n+ id: 1,\n+ metrics: {\n+ datasets: {\n+ partitions: {\n+ openness: { yes: 1 },\n+ download: { yes: 1 }\n+ }\n+ }\n+ }\n+ }, {\n+ id: 2,\n+ metrics: {\n+ datasets: {\n+ partitions: {\n+ openness: { yes: 1 },\n+ download: { yes: 1 }\n+ }\n+ }\n+ }\n+ }, {}]\n+\n+ const candidates = findCandidates(catalogs, [1])\n+ expect(candidates.length).toBe(1)\n+ expect(candidates[0].id).toBe(2)\n+ })\n+})\n",
        "date": "13.12.2017 14:41:54",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Add findCandidates function and update tests for isObsolete in catalog.test.js"
    },
    {
        "msg": "add tests for catalog.computeScore",
        "diff": "diff --git a/tests/lib/catalog.test.js b/tests/lib/catalog.test.js -import { isObsolete, findCandidates } from '../../lib/catalog'\n+import moment from 'moment'\n+\n+import { isObsolete, findCandidates, computeScore } from '../../lib/catalog'\ndescribe('isObsolete', () => {\ntest('return false if catalog is not defined', () => {\n@@ -118,3 +120,108 @@ describe('findCandidates', () => {\nexpect(candidates[0].id).toBe(2)\n})\n})\n+\n+describe('computeScore', () => {\n+ test('return 0 for a catalog with no metrics', () => {\n+ expect(computeScore({})).toBe(0)\n+ })\n+\n+ test('return 0 for a catalog with no data', () => {\n+ const catalog = {\n+ metrics: {\n+ datasets: {\n+ partitions: {\n+ openness: { yes: 1 },\n+ download: { yes: 1 }\n+ }\n+ }\n+ }\n+ }\n+\n+ expect(computeScore(catalog)).toBe(0)\n+ })\n+\n+ test('return score for a perfect but old catalog', () => {\n+ const catalog = {\n+ metrics: {\n+ datasets: {\n+ totalCount: 42,\n+ partitions: {\n+ openness: { yes: 42 },\n+ download: { yes: 42 }\n+ }\n+ }\n+ }\n+ }\n+\n+ expect(computeScore(catalog)).toBe(100 * 100 * 100)\n+ })\n+\n+ test('return score for a perfect catalog that was updated in the last 6 months', () => {\n+ const catalog = {\n+ metrics: {\n+ mostRecentRevisionDate: moment().subtract(2, 'months').toDate(),\n+ datasets: {\n+ totalCount: 42,\n+ partitions: {\n+ openness: { yes: 42 },\n+ download: { yes: 42 }\n+ }\n+ }\n+ }\n+ }\n+\n+ expect(computeScore(catalog)).toBe(100 * 100 * 100 * 10)\n+ })\n+\n+ test('return score for a perfect catalog that was updated in the last month', () => {\n+ const catalog = {\n+ metrics: {\n+ mostRecentRevisionDate: moment().subtract(10, 'days').toDate(),\n+ datasets: {\n+ totalCount: 42,\n+ partitions: {\n+ openness: { yes: 42 },\n+ download: { yes: 42 }\n+ }\n+ }\n+ }\n+ }\n+\n+ expect(computeScore(catalog)).toBe(100 * 100 * 100 * 100)\n+ })\n+\n+ test('return score for a catalog that is not completely open', () => {\n+ const catalog = {\n+ metrics: {\n+ mostRecentRevisionDate: moment().subtract(10, 'days').toDate(),\n+ datasets: {\n+ totalCount: 10,\n+ partitions: {\n+ openness: { yes: 5 },\n+ download: { yes: 10 }\n+ }\n+ }\n+ }\n+ }\n+\n+ expect(computeScore(catalog)).toBe(50 * 100 * 100 * 100)\n+ })\n+\n+ test('return score for a catalog that is not completely downloadable', () => {\n+ const catalog = {\n+ metrics: {\n+ mostRecentRevisionDate: moment().subtract(10, 'days').toDate(),\n+ datasets: {\n+ totalCount: 10,\n+ partitions: {\n+ openness: { yes: 10 },\n+ download: { yes: 5 }\n+ }\n+ }\n+ }\n+ }\n+\n+ expect(computeScore(catalog)).toBe(100 * 50 * 50 * 100)\n+ })\n+})\n",
        "date": "13.12.2017 20:00:13",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Add computeScore function to calculate catalog score based on metrics and last update date"
    },
    {
        "msg": "add security tag to lerna changelog config",
        "diff": "diff --git a/lerna.json b/lerna.json \"repo\": \"etalab/geo.data.gouv.fr\",\n\"labels\": {\n\"bug\": \":bug: Bug Fix\",\n+ \"security\": \":policeman: Security\",\n\"enhancement\": \":rocket: Enhancement\",\n\"build-process\": \":building_construction: Build Process\",\n\"i18n\": \":earth_africa: Internationalization\",\n",
        "date": "25.01.2018 14:47:28",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Add security label to lerna.json"
    },
    {
        "msg": "add doc tag to lerna changelog config",
        "diff": "diff --git a/lerna.json b/lerna.json \"i18n\": \":earth_africa: Internationalization\",\n\"performance\": \":racehorse: Performance\",\n\"design\": \":rainbow: Design\",\n- \"cleanup\": \":shower: Cleanup\"\n+ \"cleanup\": \":shower: Cleanup\",\n+ \"documentation\": \":memo: Documentation\"\n},\n\"cacheDir\": \".changelog\"\n}\n",
        "date": "01.02.2018 13:14:49",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Add documentation section to lerna.json"
    },
    {
        "msg": "add analytics changelog tag Also sort lerna.json.",
        "diff": "diff --git a/lerna.json b/lerna.json {\n\"changelog\": {\n- \"repo\": \"etalab/geo.data.gouv.fr\",\n+ \"cacheDir\": \".changelog\",\n\"labels\": {\n+ \"analytics\": \":bar_chart: Analytics\",\n\"bug\": \":bug: Bug Fix\",\n- \"security\": \":policeman: Security\",\n- \"enhancement\": \":rocket: Enhancement\",\n\"build-process\": \":building_construction: Build Process\",\n+ \"cleanup\": \":shower: Cleanup\",\n+ \"design\": \":rainbow: Design\",\n+ \"documentation\": \":memo: Documentation\",\n+ \"enhancement\": \":rocket: Enhancement\",\n\"i18n\": \":earth_africa: Internationalization\",\n\"performance\": \":racehorse: Performance\",\n- \"design\": \":rainbow: Design\",\n- \"cleanup\": \":shower: Cleanup\",\n- \"documentation\": \":memo: Documentation\"\n+ \"security\": \":policeman: Security\"\n},\n- \"cacheDir\": \".changelog\"\n+ \"repo\": \"etalab/geo.data.gouv.fr\"\n}\n}\n",
        "date": "17.04.2018 13:13:19",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Update changelog labels and cache directory in lerna.json"
    },
    {
        "msg": "add subscribe to next event",
        "diff": "diff --git a/components/event.js b/components/event.js @@ -5,6 +5,8 @@ import {translate} from 'react-i18next'\nimport CalendarIcon from 'react-icons/lib/fa/calendar-check-o'\n+import Button from './button'\n+\nconst Event = ({event, t}) => (\n<div className='event'>\n<div className='icon'>\n@@ -13,7 +15,11 @@ const Event = ({event, t}) => (\n<div>\n<h3>{event.name}</h3>\n<div>{moment(event.date).format('LL')}</div>\n- {event.link ? (\n+ {event.subscribe ?\n+ <Button href={event.subscribe}>\n+ Inscription\n+ </Button> :\n+ event.link ? (\n<div>\n<a href={event.link} download>{t('event.download')}</a>\n</div>\n@@ -24,7 +30,8 @@ const Event = ({event, t}) => (\nt('event.noReport')\n}\n</div>\n- )}\n+ )\n+ }\n</div>\n<style jsx>{`\n@@ -64,6 +71,7 @@ Event.propTypes = {\nname: PropTypes.string.isRequired,\ndate: PropTypes.instanceOf(Date),\nlink: PropTypes.string,\n+ subscribe: PropTypes.string,\nlinkComingSoon: PropTypes.bool\n}).isRequired,\n",
        "date": "08.06.2018 16:50:46",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Add subscription button to Event component"
    },
    {
        "msg": "add workshop 9 to past events",
        "diff": "diff --git a/pages/events.js b/pages/events.js @@ -12,13 +12,10 @@ import Container from '../components/container'\nimport Box from '../components/box'\nimport Event from '../components/event'\n-const nextEvent = {\n- name: 'Atelier #9',\n- date: new Date(2018, 6, 12),\n- register: 'https://www.eventbrite.fr/e/billets-atelier-geo-8-46883052472'\n-}\n+const nextEvent = null\nconst pastEvents = [\n+ {name: 'Atelier #9', date: new Date(2018, 6, 12)},\n{name: 'Atelier #8', date: new Date(2018, 4, 22)},\n{name: 'Atelier #7', date: new Date(2017, 11, 12)},\n{name: 'Atelier #6', date: new Date(2017, 4, 18)},\n",
        "date": "12.07.2018 14:40:05",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Remove nextEvent registration details and set nextEvent to null"
    },
    {
        "msg": "add overflow to catalogs harvest graph",
        "diff": "diff --git a/components/catalog/harvests/index.js b/components/catalog/harvests/index.js @@ -110,6 +110,7 @@ class Harvests extends React.Component {\n.graph {\ndisplay: flex;\nflex-direction: column;\n+ overflow: hidden;\nflex: 1 1;\ndiv {\n",
        "date": "27.08.2018 11:43:14",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Add overflow hidden to graph in Harvests component"
    },
    {
        "msg": "add dependencies to changelogs",
        "diff": "diff --git a/package.json b/package.json \"enhancement\": \":rocket: Enhancement\",\n\"i18n\": \":earth_africa: Internationalization\",\n\"performance\": \":racehorse: Performance\",\n- \"security\": \":policeman: Security\"\n+ \"security\": \":policeman: Security\",\n+ \"dependencies\": \":arrow_up: Dependencies\"\n},\n\"repo\": \"etalab/geo.data.gouv.fr\"\n}\n",
        "date": "14.01.2019 15:16:32",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "add",
        "chatgpt_zeroshot": "Add dependencies to package.json for improved functionality."
    },
    {
        "msg": "add padding to settings dialogs",
        "diff": "diff --git a/MaterialSkin/HTML/material/css/style.css b/MaterialSkin/HTML/material/css/style.css @@ -279,6 +279,11 @@ a {\nopacity:0.75;\n}\n+.dialog--fullscreen > .card {\n+ padding-left:8px !important;\n+ padding-right:8px !important;\n+}\n+\n.settings-list {\nmax-width:600px;\nmargin: auto;\n",
        "date": "16.10.2018 17:07:51",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Add padding to fullscreen dialog cards and adjust settings list width."
    },
    {
        "msg": "add JSON files in main and lang folders",
        "diff": "diff --git a/MaterialSkin/Plugin.pm b/MaterialSkin/Plugin.pm @@ -3,30 +3,27 @@ package Plugins::MaterialSkin::Plugin;\nuse File::Basename;\nuse File::Spec::Functions qw(catfile catdir);\n-use constant FONT_DIR => 'HTML/material/font';\n-\n# this plugin registers the helper files (fonts, manifest) as raw downloads\n# this will allow Logitech Media Server to serve those files without a patch\nsub initPlugin {\nmy $baseDir = dirname($INC{'Plugins/MaterialSkin/Plugin.pm'});\n- my $fontDir = catdir($baseDir, FONT_DIR);\n-\n- opendir(DIR, $fontDir) || do {\n- Slim::Utils::Log::logError('MaterialSkin: failed to read base folder with fonts');\n- return;\n- };\n-\n- my @entries = readdir(DIR);\n+ my @dirs = ('HTML/material/', 'HTML/material/font', 'HTML/material/lang');\n- close(DIR);\n+ foreach $d (@dirs) {\n+ my $path = catdir($baseDir, $d);\n+ if opendir(dir, $path) {\n+ my @entries = readdir(dir);\n+ close(dir);\nfor my $file (@entries) {\n# extend the list of file extensions if needed\nif ($file =~ /\\.(?:eot|svg|woff2?|ttf|json)$/) {\n- $file = catfile($fontDir, $file);\n+ $file = catfile($path, $file);\nSlim::Web::Pages->addRawDownload(basename($file), $file, Slim::Music::Info::typeFromSuffix($file));\n}\n}\n}\n+ }\n+}\n1;\n",
        "date": "18.10.2018 17:08:59",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Refactor file path handling in MaterialSkin plugin initPlugin method"
    },
    {
        "msg": "add more TODO, notes, etc.",
        "diff": "diff --git a/TODO b/TODO - Scrolling browse and queue lists actually scrolls the whole page. This causes scrolling in\none to affect the other. A (slightly) hacky-ish work-around is in place, where the page\nposition is saved/restored on route change. Would be better to scroll just the list.\n+ Can probably use --vh setting (as per no playing details) to set list size/pos\n- Drag'n'drop\n- Not working on Android Firefox\n- - Not working on iOS\n+ - Not working on iOS - github.com/Bernardo-Castilho/gragdroptouch\n- Desktop firefox has drag thumbnail much higher than item being dragged.\n- Queue not always drawn completely with iOS, dragging up/down causes items to be shown.\n+ - Does not work if set as default, can't find files\n+ - YouTube cover did not show on now-playing, until refresh?\n- Browse\n- Random Mix\n- Favorites images\n- Replace ... menu with a play button/long press menu?\n+ - Apps:\n+ Band's Campout\n+ - Covers?\n+ - Navigation is a bit odd\n- Now Playing\n- Drag time slider?\n- Set butons to disabled when appropriate\n+ - If durayion is 0, don't show progress\n- PlayQueue\n- Only update whilst visible?\n- Misc\n+ - Minify JS into 1 minified file, and minify css\n+ devlopers.google.com/closure/compiler - for JS. Need to pass JS files in order that they\n+ appear in index.html\n+ yuicompressor.jar for css\n- Complete WebApp support\n- Handle back button (navigate back in browse)\n+ - Virtual libraries\n+ - Get list via: [\"\",[\"libraries\", 0, 100]]\n+ - Add selection (if any present) to settings dialog, and set vuex/cookie with id\n+ - Replace \"My Music\" with library name\n- Group management\n- Add create/delete/edit/list to JSON API in Groups plugin itself.\n[\"groupmac\", [\"playergroup\", 0, 100]] lists group details\n[\"groupmac\", [\"playerpref\", \"playername\", \"X\"]] sets group name\n[\"groupmac\", [\"playerpref\", \"plugin.groups:members\", [\"maca\", \"macb\"]]] sets group members\n+ - Add 'About dialog'\n+ - Server version\n+ - Skin Version\n+ - Artist, Album, Track count (in virtual library?)\n- Add 'Manage all' to players/settings menu\n- Manage all volumes\n- Power on/off\n",
        "date": "22.10.2018 22:47:16",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Fix scrolling issue in browse and queue lists, implement --vh setting for list size/position, address drag'n'drop and display issues on various platforms, optimize JS and CSS minification, add Band's Campout app support, improve navigation and UI elements, enhance virtual libraries and group management features."
    },
    {
        "msg": "add next/prev to manage dialog",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/manage-players.js b/MaterialSkin/HTML/material/html/js/manage-players.js @@ -28,11 +28,21 @@ Vue.component('lms-manage-players', {\n<v-list-tile-title>{{player.name}}</v-list-tile-title>\n<v-list-tile-sub-title>{{player.track}}</v-list-tile-sub-title>\n</v-list-tile-content>\n- <v-list-tile-action v-if=\"player.playIcon\" @click.stop=\"playPause(index)\">\n+ <v-list-tile-action v-if=\"player.playIcon\" @click=\"prevTrack(index)\">\n+ <v-btn icon>\n+ <v-icon>skip_previous</v-icon>\n+ </v-btn>\n+ </v-list-tile-action>\n+ <v-list-tile-action v-if=\"player.playIcon\" @click=\"playPause(index)\">\n<v-btn icon>\n<v-icon>{{player.playIcon}}</v-icon>\n</v-btn>\n</v-list-tile-action>\n+ <v-list-tile-action v-if=\"player.playIcon\" @click=\"nextTrack(index)\">\n+ <v-btn icon>\n+ <v-icon>skip_next</v-icon>\n+ </v-btn>\n+ </v-list-tile-action>\n</v-list-tile>\n</v-list>\n</v-flex xs12>\n@@ -155,6 +165,22 @@ Vue.component('lms-manage-players', {\nupdatePlayer(index);\n});\n},\n+ prevTrack(index) {\n+ if (!this.show) {\n+ return;\n+ }\n+ lmsCommand(this.players[index].id, ['button', 'jump_rew']).then(({data}) => {\n+ updatePlayer(index);\n+ });\n+ },\n+ nextTrack(index) {\n+ if (!this.show) {\n+ return;\n+ }\n+ lmsCommand(this.players[index].id, ['playlist', 'index', '+1']).then(({data}) => {\n+ updatePlayer(index);\n+ });\n+ },\nupdateAll() {\nfor (var i=0; i<this.players.length; ++i) {\nif (!this.players[i].updating && (undefined==this.players[i].lastUpdate || ((new Date())-this.players[i].lastUpdate)>500)) {\n",
        "date": "03.11.2018 21:30:37",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Add previous and next track functionality in manage-players.js"
    },
    {
        "msg": "add more details to desktop UI plans",
        "diff": "diff --git a/TODO b/TODO - at start of song, and near end poll every (e.g.) 0.5 seconds\n- Create timer to advance song progress - re-adjust on each poll\n- or use [\"time\", \"?\"] to just obtain time position every second?\n- - Desktop UI - expand the 3 pages into 1.\n+ - Desktop UI\n+ - Slim top toolbar (as no need for current playing)\n+ - Browse / splitter/ Queue\n+ - Bottom toolbar with cover, controls, and current playing track\n+ - Create separate desktop.html / desktop/index.html\n+ - Modify browse/queue JS files - so as not to change path\n+ - New CSS - different heights for browse/queue\n",
        "date": "11.11.2018 14:14:20",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Restructure desktop UI and implement separate HTML files for better organization"
    },
    {
        "msg": "add some debug to playerMenu - needs to be removed before release",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-page.js b/MaterialSkin/HTML/material/html/js/browse-page.js @@ -1073,27 +1073,35 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\nid: TOP_APPS_ID });\n},\nplayerMenu() {\n+ console.log(\"Update playr menu\");\nif (this.serverTop.length>0 && this.serverTop[0].player==this.playerId()) {\n+ console.log(\"Player has not changed\");\nreturn;\n}\nif (this.fetchingItems) {\n+ console.log(\"Currently fetching items, so tray again in 250ms\");\nif (this.playerMenuTimeout) {\nclearTimeout(this.playerMenuTimeout);\n}\nthis.playerMenuTimeout = setTimeout(function () {\n+ console.log(\"Timeout, call playerMenu\");\nthis.playerMenu();\n}.bind(this), 250);\nreturn;\n}\nthis.fetchingItems=true;\n+ console.log(\"Fetch player menu items\");\nlmsList(this.playerId(), [\"menu\", \"items\"], [\"direct:1\"]).then(({data}) => {\n+ console.log(\"Got response\");\nif (data && data.result && data.result.item_loop) {\n+ console.log(\"Clear current menu, and iterate response\");\nthis.serverTop = [];\nthis.serverTop.push({ header: i18n(\"My Music\"), id: TOP_ID_PREFIX+\"mmh\" });\ndata.result.item_loop.forEach(c => {\nif (c.node==\"myMusic\" && c.id) {\n+ console.log(\"Got music item \" + c.id);\nif (c.id.startsWith(\"myMusic\") && !c.id.startsWith(\"myMusicSearch\")) {\nvar command = this.buildCommand(c, \"go\", false, true);\nvar item = { title: c.text,\n@@ -1130,8 +1138,10 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\n} else if (c.id.startsWith(\"myMusicFlopTracks\")) {\nitem.icon = \"arrow_downward\";\n}\n+ console.log(\"add item\");\nthis.serverTop.push(item);\n} else if (c.id==\"randomplay\") {\n+ console.log(\"add random\");\nthis.serverTop.push({ title: i18n(\"Random Mix\"),\nicon: \"shuffle\",\nid: TOP_RANDOM_MIX_ID,\n@@ -1139,16 +1149,22 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\n}\n}\n});\n+ console.log(\"parsed items\");\nthis.serverTop.sort(function(a, b) { return a.weight!=b.weight ? a.weight>b.weight : titleSort(a, b); });\nthis.addExtraItems(this.serverTop, false);\n+ console.log(\"Store player id\");\nthis.serverTop[0].player=this.playerId();\n+ console.log(\"sm:\"+this.$store.state.serverMenus+\" hl:\"+this.history.length);\nif (this.$store.state.serverMenus && 0==this.history.length) {\n+ console.log(\"set items to these\");\nthis.items = this.serverTop;\n}\n}\nthis.fetchingItems=false;\n+ console.log(\"player menu updated\");\n}).catch(err => {\nthis.fetchingItems = false;\n+ console.log(\"Error loading player menu \" +err);\nthis.showError(err);\n});\n},\n",
        "date": "14.11.2018 16:39:50",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Update player menu items and handle fetching logic"
    },
    {
        "msg": "add repeat/shuffle tooltips",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/nowplaying-page.js b/MaterialSkin/HTML/material/html/js/nowplaying-page.js @@ -96,9 +96,9 @@ var lmsNowPlaying = Vue.component(\"lms-now-playing\", {\n<v-flex xs4>\n<v-layout text-xs-center>\n<v-flex xs6>\n- <v-btn flat icon v-if=\"playerStatus.playlist.repeat===1\" @click=\"doAction(['playlist', 'repeat', 0])\"><v-icon>repeat_one</v-icon></v-btn>\n- <v-btn flat icon v-else-if=\"playerStatus.playlist.repeat===2\" @click=\"doAction(['playlist', 'repeat', 1])\"><v-icon>repeat</v-icon></v-btn>\n- <v-btn flat icon v-else @click=\"doAction(['playlist', 'repeat', 2])\" class=\"dimmed\"><v-icon>repeat</v-icon></v-btn>\n+ <v-btn :title=\"trans.repeatOne\" flat icon v-if=\"playerStatus.playlist.repeat===1\" @click=\"doAction(['playlist', 'repeat', 0])\"><v-icon>repeat_one</v-icon></v-btn>\n+ <v-btn :title=\"trans.repeatAll\" flat icon v-else-if=\"playerStatus.playlist.repeat===2\" @click=\"doAction(['playlist', 'repeat', 1])\"><v-icon>repeat</v-icon></v-btn>\n+ <v-btn :title=\"trans.repeatOff\" flat icon v-else @click=\"doAction(['playlist', 'repeat', 2])\" class=\"dimmed\"><v-icon>repeat</v-icon></v-btn>\n</v-flex>\n<v-flex xs6><v-btn flat icon @click=\"doAction(['button', 'jump_rew'])\"><v-icon large>skip_previous</v-icon></v-btn></v-flex>\n</v-layout>\n@@ -111,9 +111,9 @@ var lmsNowPlaying = Vue.component(\"lms-now-playing\", {\n<v-layout text-xs-center>\n<v-flex xs6><v-btn flat icon @click=\"doAction(['playlist', 'index', '+1'])\"><v-icon large>skip_next</v-icon></v-btn></v-flex>\n<v-flex xs6>\n- <v-btn flat icon v-if=\"playerStatus.playlist.shuffle===2\" @click=\"doAction(['playlist', 'shuffle', 0])\"><v-icon class=\"shuffle-albums\">shuffle</v-icon></v-btn>\n- <v-btn flat icon v-else-if=\"playerStatus.playlist.shuffle===1\" @click=\"doAction(['playlist', 'shuffle', 2])\"><v-icon>shuffle</v-icon></v-btn>\n- <v-btn flat icon v-else @click=\"doAction(['playlist', 'shuffle', 1])\" class=\"dimmed\"><v-icon>shuffle</v-icon></v-btn>\n+ <v-btn :title=\"trans.shuffleAlbums\" flat icon v-if=\"playerStatus.playlist.shuffle===2\" @click=\"doAction(['playlist', 'shuffle', 0])\"><v-icon class=\"shuffle-albums\">shuffle</v-icon></v-btn>\n+ <v-btn :title=\"trans.shuffleAll\" flat icon v-else-if=\"playerStatus.playlist.shuffle===1\" @click=\"doAction(['playlist', 'shuffle', 2])\"><v-icon>shuffle</v-icon></v-btn>\n+ <v-btn :title=\"trans.shuffleOff\" flat icon v-else @click=\"doAction(['playlist', 'shuffle', 1])\" class=\"dimmed\"><v-icon>shuffle</v-icon></v-btn>\n</v-flex>\n</v-layout>\n</v-flex>\n@@ -135,7 +135,9 @@ var lmsNowPlaying = Vue.component(\"lms-now-playing\", {\ninfo: { show: false, tab:0,\ntabs: [ { title:undefined, text:undefined }, { title:undefined, text:undefined }, { title:undefined, text:undefined } ] },\nmenu: { show: false, x:0, y:0, text: undefined },\n- trans: { close: undefined }\n+ trans: { close: undefined,\n+ repeatAll:undefined, repeatOne:undefined, repeatOff:undefined,\n+ shuffleAll:undefined, shuffleAlbums:undefined, shuffleOff:undefined }\n};\n},\nmounted() {\n@@ -224,7 +226,9 @@ var lmsNowPlaying = Vue.component(\"lms-now-playing\", {\n},\nmethods: {\ninitItems() {\n- this.trans.close=i18n(\"Close\");\n+ this.trans = { close:i18n(\"Close\"),\n+ repeatAll:i18n(\"Repeat queue\"), repeatOne:i18n(\"Repeat single track\"), repeatOff:i18n(\"No repeat\"),\n+ shuffleAll:i18n(\"Shuffle tracks\"), shuffleAlbums:i18n(\"Shuffle albums\"), shuffleOff:i18n(\"No shuffle\")};\nthis.menu.text=i18n(\"Show information\");\nthis.info.tabs[0].title=i18n(\"Lyrics\");\nthis.info.tabs[1].title=i18n(\"Artist Biography\");\n",
        "date": "15.11.2018 17:20:08",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Refactor button titles and add translations for repeat and shuffle options"
    },
    {
        "msg": "add margin after images",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/css/style.css b/MaterialSkin/HTML/material/html/css/style.css @@ -295,11 +295,12 @@ a {\npadding:16px 16px 0px 16px;\n}\n-.browse-text img {\n+.browse-text img, .np-info-text img, .np-info-text-full img {\nmax-width: 300px !important;\nmax-height: 300px !important;\nmargin-left: auto;\nmargin-right: auto;\n+ margin-bottom: 16px;\ndisplay: block;\n}\n@@ -319,23 +320,6 @@ a {\ntext-align: center;\n}\n-.np-info-text img {\n- max-width: 300px !important;\n- max-height: 300px !important;\n- margin-left: auto;\n- margin-right: auto;\n- display: block;\n-}\n-\n-\n-.np-info-text-full img {\n- max-width: 300px !important;\n- max-height: 300px !important;\n- margin-left: auto;\n- margin-right: auto;\n- display: block;\n-}\n-\n.np-info-tab-cover {\nbackground:transparent;\n}\n",
        "date": "23.11.2018 16:23:32",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "\"Update image styling in CSS file\""
    },
    {
        "msg": "add optional stop button to manage players dialog",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/manage-players.js b/MaterialSkin/HTML/material/html/js/manage-players.js @@ -46,6 +46,9 @@ Vue.component('lms-manage-players', {\n<v-list-tile-action v-if=\"player.playIcon\" class=\"pmgr-btn\" @click=\"playPause(player)\">\n<v-btn icon><v-icon>{{player.playIcon}}</v-icon></v-btn>\n</v-list-tile-action>\n+ <v-list-tile-action v-if=\"player.playIcon && showAllButtons && stopButton\" class=\"pmgr-btn\" @click=\"stop(player)\">\n+ <v-btn icon><v-icon>stop</v-icon></v-btn>\n+ </v-list-tile-action>\n<v-list-tile-action v-if=\"player.playIcon && showAllButtons\" class=\"pmgr-btn\" @click=\"nextTrack(player)\">\n<v-btn icon><v-icon>skip_next</v-icon></v-btn>\n</v-list-tile-action>\n@@ -256,6 +259,14 @@ Vue.component('lms-manage-players', {\nupdatePlayer(player);\n});\n},\n+ stop(player) {\n+ if (!this.show) {\n+ return;\n+ }\n+ lmsCommand(player.id, ['stop']).then(({data}) => {\n+ updatePlayer(player);\n+ });\n+ },\nprevTrack(player) {\nif (!this.show) {\nreturn;\n@@ -356,6 +367,9 @@ Vue.component('lms-manage-players', {\ncomputed: {\ncurrentPlayer() {\nreturn this.$store.state.player\n+ },\n+ stopButton() {\n+ return this.$store.state.stopButton\n}\n},\nwatch: {\n",
        "date": "22.12.2018 11:19:25",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Add stop button functionality to manage-players component"
    },
    {
        "msg": "add padding for 'safe-area-inset-bottom'",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/css/mobile.css b/MaterialSkin/HTML/material/html/css/mobile.css position:relative !important;\nheight:var(--bottom-nav-height) !important;\ntop:calc(-1 * (var(--bottom-nav-height) + 2px)) !important;\n+\n+ @supports (padding-bottom: env(safe-area-inset-bottom)) {\n+ padding-bottom: env(safe-area-inset-bottom) !important;\n+ }\n}\n.lms-bottom-nav-button {\n",
        "date": "26.12.2018 13:52:24",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Add support for safe area insets in mobile.css"
    },
    {
        "msg": "add smaller font size",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/css/mobile.css b/MaterialSkin/HTML/material/html/css/mobile.css }\n}\n+@media only screen and (max-height: 300px) {\n+ .np-text-landscape {\n+ margin:0px 2px 0px 2px !important;\n+ font-size: 50% !important;\n+ text-align: center;\n+ }\n+}\n+\n.np-image {\ndisplay: block;\nobject-fit: contain;\n",
        "date": "27.12.2018 21:39:11",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Add responsive styling for landscape mode on mobile devices"
    },
    {
        "msg": "add missing text...",
        "diff": "diff --git a/ChangeLog b/ChangeLog 7. Fix double-presses occuring on volume buttons with touch devices.\n8. Fix restoring command when go back.\n9. Only check for wide layout if landscape - otherwise controls are sometimes\n+ missing.\n10. Respect 'nextWindow' when clicking on a 'text' action.\n11. Darker botton navbar for dark mobile layout.\n12. Transparent time progress background.\n",
        "date": "12.01.2019 09:02:29",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Fix various UI issues and improve user experience."
    },
    {
        "msg": "add 'showRatingButton' to 'data'",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-page.js b/MaterialSkin/HTML/material/html/js/browse-page.js @@ -298,7 +298,8 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\npinned: [],\nlibraryName: undefined,\nselection: [],\n- collapsed: [false, false, false]\n+ collapsed: [false, false, false],\n+ showRatingButton: false\n}\n},\ncomputed: {\n",
        "date": "09.02.2019 18:57:14",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Add showRatingButton property to lmsBrowse component"
    },
    {
        "msg": "add more states where polling will occur.",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/server.js b/MaterialSkin/HTML/material/html/js/server.js @@ -319,15 +319,17 @@ var lmsServer = Vue.component('lms-server', {\nbus.$emit(isCurrent ? 'playerStatus' : 'otherPlayerStatus', player);\nif (isCurrent) {\n- this.scheduleNextPlayerStatusUpdate(player.isplaying && player.current\n- ? undefined!=player.current.duration\n+ this.scheduleNextPlayerStatusUpdate(player.isplaying\n+ ? undefined==player.current || data.waitingToPlay\n+ ? 1000 // Just starting to play? Poll in 1 second\n+ : undefined!=player.current.duration\n? undefined!=player.current.time && (player.current.duration-player.current.time)<2.5\n- ? 500\n- : (player.current.duration-(player.current.time+2))*1000\n+ ? 500 // Near end, every 5 seconds\n+ : (player.current.duration-(player.current.time+2))*1000 // 2 seconds before end\n: undefined!=player.current.time && player.current.time<5 // For streams, poll for the first 5 seconds\n? 1000\n: undefined\n- : undefined);\n+ : undefined); // Not playing?\n}\n},\nhandleFavoritesUpdate() {\n",
        "date": "24.04.2019 17:00:46",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Refactor player status update logic in server.js"
    },
    {
        "msg": "add a single \"Empty\" entry to empty lists.",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-resp.js b/MaterialSkin/HTML/material/html/js/browse-resp.js @@ -940,6 +940,10 @@ function parseBrowseResp(data, parent, options, idStart, cacheKey) {\nresp = data;\n}\n+ if (0==resp.items.length) {\n+ resp.items.push({title:i18n(\"Empty\"), type: 'text', id:'empty'});\n+ }\n+\n} catch(e) {\nresp.items.push({title:i18n(\"ERROR: List processing failed\")+\"\\n\"+e, type: 'text', id:'error'});\nlogError(e);\n",
        "date": "26.04.2019 16:33:09",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Add check for empty response items and push default item if response is empty"
    },
    {
        "msg": "add missing style",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/css/style.css b/MaterialSkin/HTML/material/html/css/style.css @@ -759,6 +759,14 @@ progress {\nmax-width:200px !important;\n}\n+.sleep-item {\n+ white-space: normal !important;\n+ overflow: auto !important;\n+ text-overflow: initial !important;\n+ height: auto;\n+ max-height: 48px;\n+}\n+\n.ios-vcard-text-workaround {\nposition:fixed;\noverflow-y:auto;\n",
        "date": "23.05.2019 17:28:58",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Add styling for sleep item and adjust vcard text workaround position"
    },
    {
        "msg": "add paypal donation link",
        "diff": "diff --git a/README.md b/README.md @@ -58,3 +58,9 @@ force one or the other.\n1. `http://<yourserver>:9000/material/mobile` will force mobile layout\n2. `http://<yourserver>:9000/material/desktop` will force desktop layout\n+\n+## Donations\n+\n+I develop this skin purely for fun, so no donations are required. However, seeing as I have been asked about this a few times, here is a link...\n+\n+[![paypal](https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=2X2CTDUH27V9L&source=url)\n",
        "date": "23.05.2019 20:55:01",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Add donation link to README.md"
    },
    {
        "msg": "add jumplist for music folder",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-resp.js b/MaterialSkin/HTML/material/html/js/browse-resp.js @@ -664,6 +664,10 @@ function parseBrowseResp(data, parent, options, idStart, cacheKey) {\n}\n}\nvar fixedPath = i.path.replace(\"\\\\\", \"\\\\\\\\\");\n+ var key = name.charAt(0);\n+ if (undefined!=key && (resp.jumplist.length==0 || resp.jumplist[resp.jumplist.length-1].key!=key)) {\n+ resp.jumplist.push({key: key, index: resp.items.length+idStart});\n+ }\nresp.items.push({\nid: fixedPath,\ntitle: name,\n",
        "date": "26.05.2019 08:25:20",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Add jumplist functionality to browse-resp.js"
    },
    {
        "msg": "add radio icons to library menu",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-page.js b/MaterialSkin/HTML/material/html/js/browse-page.js @@ -372,7 +372,10 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\n<v-list v-else-if=\"menu.libraries\">\n<template v-for=\"(item, index) in menu.libraries\">\n<v-list-tile @click=\"selectLibrary(item.id)\">\n- <v-list-tile-title>{{item.name}}</v-list-tile-title>\n+ <v-list-tile-avatar>\n+ <v-icon small>{{item.name==libraryName ? 'radio_button_checked' :'radio_button_unchecked'}}</v-icon>\n+ </v-list-tile-avatar>\n+ <v-list-tile-content><v-list-tile-title>{{item.name}}</v-list-tile-title></v-list-tile-content>\n</v-list-tile>\n</template>\n</v-list>\n",
        "date": "05.06.2019 16:42:51",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Refactor library selection UI in browse page"
    },
    {
        "msg": "add a divider",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-page.js b/MaterialSkin/HTML/material/html/js/browse-page.js @@ -161,6 +161,7 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\n<v-icon v-else>{{B_ACTIONS[action].icon}}</v-icon>\n</v-btn>\n</template>\n+ <v-divider vertical v-if=\"(showRatingButton && items.length>1) || (desktop && settingsMenuActions && settingsMenuActions.length>0)\"></v-divider>\n<template v-for=\"(action, index) in tbarActions\">\n<v-btn flat icon @click.stop=\"headerAction(action, $event)\" class=\"toolbar-button\" :title=\"B_ACTIONS[action].title\" :id=\"'tbar'+index\">\n<img v-if=\"B_ACTIONS[action].svg\" class=\"svg-img\" :src=\"B_ACTIONS[action].svg | svgIcon(darkUi)\"></img>\n",
        "date": "11.06.2019 16:41:53",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Add vertical divider in browse page toolbar."
    },
    {
        "msg": "add info on how to clear cache",
        "diff": "diff --git a/README.md b/README.md @@ -74,6 +74,13 @@ received, start Material as follows:\n* `http://<yourserver>:9000/material/?debug=cometd` for Cometd\n* `http://<yourserver>:9000/material/?debug=json,cometd` for both\n+### Cache\n+\n+Material cache's artist and album lists, to speed up subsequent listings. To\n+clear this cache, start Material as follows:\n+\n+* `http://<yourserver>:9000/material/?clearcache=true`\n+\n## Donations\nI develop this skin purely for fun, so no donations are required. However, seeing as I have been asked about this a few times, here is a link...\n",
        "date": "26.06.2019 19:32:14",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Add caching feature to speed up artist and album listings"
    },
    {
        "msg": "add icon, to differentiate groups from single players",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/movequeue-dialog.js b/MaterialSkin/HTML/material/html/js/movequeue-dialog.js @@ -17,6 +17,7 @@ Vue.component('lms-movequeue-dialog', {\n<v-list class=\"sleep-list\">\n<template v-for=\"(p, index) in players\" v-if=\"p.id!=src\">\n<v-list-tile @click=\"moveTo(p)\">\n+ <v-list-tile-avatar :tile=\"true\" class=\"lms-avatar\"><v-icon>{{p.isgroup ? 'speaker_group' : 'speaker'}}</v-icon></v-list-tile-avatar>\n<v-list-tile-title class=\"sleep-item\">{{p.name}}</v-list-tile-title>\n</v-list-tile>\n<v-divider></v-divider>\n",
        "date": "08.07.2019 17:17:48",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Add avatar icons to player list in movequeue dialog"
    },
    {
        "msg": "add SVG support to recycler list",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-page.js b/MaterialSkin/HTML/material/html/js/browse-page.js @@ -192,6 +192,9 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\n<v-list-tile-avatar v-else-if=\"item.icon\" :tile=\"true\" class=\"lms-avatar\">\n<v-icon>{{item.icon}}</v-icon>\n</v-list-tile-avatar>\n+ <v-list-tile-avatar v-else-if=\"item.svg\" :tile=\"true\" class=\"lms-avatar\">\n+ <img class=\"svg-list-img\" :src=\"item.svg | svgIcon(darkUi)\"></img>\n+ </v-list-tile-avatar>\n<!-- TODO: Do we have search fields with large lists?? -->\n<v-subheader v-if=\"item.header\">{{item.header}}</v-subheader>\n",
        "date": "30.07.2019 06:11:47",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Add support for displaying SVG icons in browse page."
    },
    {
        "msg": "add tite to \"create folder\" prompt",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-page.js b/MaterialSkin/HTML/material/html/js/browse-page.js @@ -1012,7 +1012,7 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\n} else if (act==EDIT_FAV_ACTION) {\nbus.$emit('dlg.open', 'favorite', 'edit', item);\n} else if (act==ADD_FAV_FOLDER_ACTION) {\n- this.dialog = { show:true, title:ADD_FAV_FOLDER_ACTION.title, ok: i18n(\"Create\"), cancel:undefined,\n+ this.dialog = { show:true, title:ACTIONS[ADD_FAV_FOLDER_ACTION].title, ok: i18n(\"Create\"), cancel:undefined,\ncommand:[\"favorites\", \"addlevel\", \"title:\"+TERM_PLACEHOLDER]};\n} else if (act===DELETE_ACTION) {\nthis.$confirm(i18n(\"Delete '%1'?\", item.title), {buttonTrueText: i18n('Delete'), buttonFalseText: i18n('Cancel')}).then(res => {\n",
        "date": "04.08.2019 10:56:51",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Refactor browse-page.js to use constant for title in ADD_FAV_FOLDER_ACTION."
    },
    {
        "msg": "add some padding if posiiton slider/times not shown",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/nowplaying-page.js b/MaterialSkin/HTML/material/html/js/nowplaying-page.js @@ -168,6 +168,7 @@ var lmsNowPlaying = Vue.component(\"lms-now-playing\", {\n<p class=\"np-duration cursor\" v-else-if=\"playerStatus.current.duration>0\" @click=\"toggleTime()\">-{{playerStatus.current.duration-playerStatus.current.time | displayTime}}</p>\n</v-layout>\n</v-flex>\n+ <v-flex xs12 v-else-if=\"!info.show\"><div style=\"height:31px\"></div></v-flex>\n<v-flex xs4>\n<v-layout text-xs-center>\n<v-flex xs6>\n@@ -230,6 +231,7 @@ var lmsNowPlaying = Vue.component(\"lms-now-playing\", {\n<p class=\"np-duration cursor\" v-else-if=\"playerStatus.current.duration>0\" @click=\"toggleTime()\">-{{playerStatus.current.duration-playerStatus.current.time | displayTime}}</p>\n</v-layout>\n</v-flex>\n+ <v-flex xs12 v-else-if=\"!info.show\"><div style=\"height:31px\"></div></v-flex>\n<v-flex xs4 class=\"no-control-adjust\">\n<v-layout text-xs-center>\n",
        "date": "07.08.2019 18:32:09",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Add conditional rendering for empty space when info is not shown."
    },
    {
        "msg": "add 'digital_volume_control' to object parameters, so vue notices changes.",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/toolbar.js b/MaterialSkin/HTML/material/html/js/toolbar.js @@ -183,7 +183,8 @@ Vue.component('lms-toolbar', {\ndata() {\nreturn { songInfo:undefined,\nplaylist: { count: \"\", duration: \"\" },\n- playerStatus: { ison: 1, isplaying: false, volume: 0, current: { title:undefined, artist:undefined, album:undefined }, sleepTime: undefined },\n+ playerStatus: { ison: 1, isplaying: false, volume: 0, digital_volume_control: true,\n+ current: { title:undefined, artist:undefined, album:undefined }, sleepTime: undefined },\nmenuItems: [],\nshowPlayerMenu: false,\notherMenuItems:{},\n",
        "date": "17.08.2019 21:24:39",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Add digital volume control to playerStatus in toolbar.js"
    },
    {
        "msg": "add items to pinned set, for menu checking",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-page.js b/MaterialSkin/HTML/material/html/js/browse-page.js @@ -1773,6 +1773,11 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\nupdateTopList(items) {\nthis.top=items;\nthis.initItems();\n+ for (var i=0, len=this.top.length; i<len; ++i) {\n+ if (!this.top[i].id.startsWith(TOP_ID_PREFIX)) {\n+ this.options.pinned.add(this.top[i].id);\n+ }\n+ }\n},\nsaveTopList() {\nsetLocalStorageVal('topitems', JSON.stringify(this.top));\n",
        "date": "22.08.2019 17:43:50",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Add functionality to pin top items in browse page."
    },
    {
        "msg": "add Russian translation - thanks to sky418. Closes",
        "diff": "diff --git a/ChangeLog b/ChangeLog 6. Fix 'clickability' of home screen item checkbox list.\n7. When using 'More'menu item or track information, only clear browse history\nstack if it has 50 or more steps.\n+8. Add Russian translation - thanks to sky418.\n1.0.0\n-----\n",
        "date": "17.09.2019 16:26:26",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Add Russian translation and fix browse history stack clearing condition."
    },
    {
        "msg": "add material version, so cache is refreshed on change",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/init.js b/MaterialSkin/HTML/material/html/js/init.js @@ -12,7 +12,7 @@ function hideclassicSkinElems() {\n}\nif (iframe) {\nvar cssLink = iframe.contentDocument.createElement(\"link\");\n- cssLink.href = \"../../../material/html/css/classic-skin-mods.css\";\n+ cssLink.href = \"../../../material/html/css/classic-skin-mods.css?r=\" + LMS_MATERIAL_REVISION;\ncssLink.rel = \"stylesheet\";\ncssLink.type = \"text/css\";\niframe.contentDocument.head.appendChild(cssLink);\n",
        "date": "25.09.2019 16:29:29",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Update CSS link in init.js to include revision number"
    },
    {
        "msg": "add button in titlebar to launch user guide",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/information.js b/MaterialSkin/HTML/material/html/js/information.js @@ -15,6 +15,8 @@ Vue.component('lms-information-dialog', {\n<v-toolbar-title>\n<div>{{i18n('Information')}}</div>\n</v-toolbar-title>\n+ <v-spacer></v-spacer>\n+ <v-btn flat icon @click.native=\"openWindow('https://cdn.statically.io/gh/d6jg/material-documentation/master/html/Material%20Skin.html')\" :title=\"i18n('User guide')\"><v-icon>help_outline</b-icon></v-btn>\n</v-toolbar>\n</v-card-title>\n<div class=\"ios-vcard-text-workaround\"><div class=\"infodetails\" id=\"info-page\">\n",
        "date": "02.11.2019 12:07:41",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Add user guide button to information dialog in HTML page"
    },
    {
        "msg": "add Italian translation, thanks to franz159 Closes",
        "diff": "diff --git a/ChangeLog b/ChangeLog +1.1.4\n+-----\n+1. Add Italian translation, thanks to franz159\n+\n1.1.3\n-----\n1. Fix 100% CPU bug when navigating back from 'More' results. Issue #184\n",
        "date": "09.11.2019 14:19:11",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Add Italian translation, thanks to franz159"
    },
    {
        "msg": "add brackets",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-resp.js b/MaterialSkin/HTML/material/html/js/browse-resp.js @@ -98,7 +98,7 @@ function parseBrowseResp(data, parent, options, cacheKey) {\ntitle: i.album,\nimage: i.artwork_url\n? resolveImageUrl(i.artwork_url, LMS_IMAGE_SIZE)\n- : \"/music/\" + (\"\"==i.artwork || undefined==i.artwork ? \"0\" : i.artwork) + \"/cover\" + LMS_IMAGE_SIZE,\n+ : (\"/music/\" + (\"\"==i.artwork || undefined==i.artwork ? \"0\" : i.artwork) + \"/cover\" + LMS_IMAGE_SIZE),\nstdItem: STD_ITEM_ALBUM,\ntype: \"group\"\n};\n@@ -130,7 +130,7 @@ function parseBrowseResp(data, parent, options, cacheKey) {\ntitle: i.track,\nimage: i.artwork_url\n? resolveImageUrl(i.artwork_url, LMS_IMAGE_SIZE)\n- : \"/music/\" + (\"\"==i.coverid || undefined==i.coverid ? \"0\" : i.coverid) + \"/cover\" +LMS_IMAGE_SIZE,\n+ : (\"/music/\" + (\"\"==i.coverid || undefined==i.coverid ? \"0\" : i.coverid) + \"/cover\" +LMS_IMAGE_SIZE),\nstdItem: STD_ITEM_TRACK,\ntype: \"track\"\n};\n@@ -662,7 +662,7 @@ function parseBrowseResp(data, parent, options, cacheKey) {\nsubtitle: i.artist ? i.artist : undefined,\nimage: i.artwork_url\n? resolveImageUrl(i.artwork_url, LMS_IMAGE_SIZE)\n- : \"/music/\" + i.artwork_track_id + \"/cover\" + LMS_IMAGE_SIZE,\n+ : (\"/music/\" + i.artwork_track_id + \"/cover\" + LMS_IMAGE_SIZE),\nstdItem: STD_ITEM_ALBUM,\ntype: \"group\",\norigTitle: i.album,\n@@ -800,7 +800,7 @@ function parseBrowseResp(data, parent, options, cacheKey) {\nsubtitle: subtitle,\nimage: i.artwork_url\n? resolveImageUrl(i.artwork_url, LMS_IMAGE_SIZE)\n- : \"/music/\" + (\"\"==i.coverid || undefined==i.coverid ? \"0\" : i.coverid) + \"/cover\" +LMS_IMAGE_SIZE,\n+ : (\"/music/\" + (\"\"==i.coverid || undefined==i.coverid ? \"0\" : i.coverid) + \"/cover\" +LMS_IMAGE_SIZE),\n//icon: \"music_note\",\nstdItem: isRemote ? STD_ITEM_REMOTE_PLAYLIST_TRACK : STD_ITEM_PLAYLIST_TRACK,\ntype: \"track\",\n",
        "date": "30.01.2020 12:18:30",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Refactor image URL generation in browse-resp.js"
    },
    {
        "msg": "add border to dialogs",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/css/black.css b/MaterialSkin/HTML/material/html/css/black.css --scrollbar-corner-color:#333;\n--background-color:black;\n--background-shadow-color:rgba(16, 16, 16, 0.8);\n- --dialog-toolbar-color:#333;\n+ --dialog-toolbar-color:black;\n--bottom-toolbar-color:black;\n--top-toolbar-color:black;\n--sub-toolbar-color:black;\nbackground-color:black;\n}\n-.v-menu__content {\n- border:1px solid var(--dialog-toolbar-border-color);\n+.v-menu__content, .v-dialog, .v-toast {\n+ border:1px solid var(--dialog-toolbar-border-color) !important;\n+}\n+\n+.v-dialog--fullscreen {\n+ border:none !important;\n}\n.v-menu__content, .vol-sheet {\n",
        "date": "07.02.2020 21:07:13",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Update dialog toolbar color and border styles in black theme"
    },
    {
        "msg": "add color to ClassicSkin",
        "diff": "diff --git a/MaterialSkin/HTML/material/standardheader.html b/MaterialSkin/HTML/material/standardheader.html <link rel=\"stylesheet\" type=\"text/css\" href=\"[% webroot %]slimserver.css?r=[% revision %]\"/>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"[% webroot %]skin.css?r=[% revision %]\" />\n<link rel=\"stylesheet\" type=\"text/css\" href=\"[% webroot %]html/css/light.css?r=[% revision %]\"/>\n+<link rel=\"stylesheet\" type=\"text/css\" href=\"[% webroot %]html/css/blue.css?r=[% revision %]\"/>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"[% webroot %]html/css/classic-skin-mods-light.css?r=[% revision %]\"/>\n<link rel=\"apple-touch-icon\" href=\"[% webroot %]html/images/apple-touch-icon.png\"/>\n[% IF mobileBrowser %]\n",
        "date": "08.02.2020 13:00:25",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Add blue.css stylesheet to standardheader.html"
    },
    {
        "msg": "add brackets around logic",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/toolbar.js b/MaterialSkin/HTML/material/html/js/toolbar.js @@ -30,7 +30,7 @@ Vue.component('lms-toolbar', {\n<v-subheader v-if=\"index==0 && !item.isgroup && (players[players.length-1].isgroup || otherPlayers.length>0)\">{{trans.standardPlayers}}</v-subheader>\n<v-subheader v-else-if=\"index>0 && item.isgroup && !players[index-1].isgroup\">{{trans.groupPlayers}}</v-subheader>\n<v-list-tile @click=\"setPlayer(item.id)\">\n- <v-list-tile-avatar v-if=\"players && players.length>1 || otherPlayers.length>0\">\n+ <v-list-tile-avatar v-if=\"(players && players.length>1) || otherPlayers.length>0\">\n<v-icon small v-if=\"players && players.length>1\">{{player && item.id === player.id ? 'radio_button_checked' :'radio_button_unchecked'}}</v-icon>\n<v-icon small v-else></v-icon>\n</v-list-tile-avatar>\n",
        "date": "15.02.2020 12:34:21",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Refactor conditional statement in toolbar.js to improve readability"
    },
    {
        "msg": "add ChangeLog entry for mutli-CD",
        "diff": "diff --git a/ChangeLog b/ChangeLog +1.5.0\n+-----\n+1. When LSM is set to list a multi-CD album as 1 album, then visually split up\n+ the CDs' track listings, and allow to play individual CDs.\n+\n1.4.4\n-----\n1. Fix colour of active repeat/shuffle/dstm buttons in now-playing.\n",
        "date": "23.02.2020 19:21:48",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Add functionality to visually split up track listings for multi-CD albums and allow to play individual CDs."
    },
    {
        "msg": "add hover-buttons to headers",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-page.js b/MaterialSkin/HTML/material/html/js/browse-page.js @@ -86,7 +86,7 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\n<div v-if=\"idx>=items.length\" class=\"image-grid-item defcursor\"></div>\n<div v-else class=\"image-grid-item\" v-bind:class=\"{'image-grid-item-few': grid.few}\" @click=\"click(items[idx], idx, $event)\" :title=\"items[idx] | itemTooltip\">\n<div v-if=\"selection.size>0\" class=\"check-btn grid-btn image-grid-select-btn\" @click.stop=\"select(items[idx], idx, $event)\" :title=\"ACTIONS[items[idx].selected ? UNSELECT_ACTION : SELECT_ACTION].title\" v-bind:class=\"{'check-btn-checked':items[idx].selected}\"></div>\n- <div v-else-if=\"hoverBtns && (undefined!=items[idx].stdItem || (items[idx].menu && items[idx].menu.length>0 && items[idx].menu[0]==PLAY_ACTION))\" class=\"grid-btns\">\n+ <div v-else-if=\"hoverBtns && (undefined!=items[idx].stdItem || (items[idx].menu && items[idx].menu.length>0 && (items[idx].menu[0]==PLAY_ACTION || items[idx].menu[0]==PLAY_ALL_ACTION)))\" class=\"grid-btns\">\n<div class=\"add-btn grid-btn\" @click.stop=\"itemAction(ADD_ACTION, items[idx], idx, $event)\" :title=\"ACTIONS[ADD_ACTION].title\"></div>\n<div class=\"play-btn grid-btn\" @click.stop=\"itemAction(PLAY_ACTION, items[idx], idx, $event)\" :title=\"ACTIONS[PLAY_ACTION].title\"></div>\n</div>\n@@ -136,9 +136,9 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\n</v-list-tile-content>\n<v-list-tile-action class=\"browse-action\" v-if=\"undefined!=item.stdItem || (item.menu && item.menu.length>0)\">\n- <div v-if=\"hoverBtns && 0==selection.size && (undefined!=item.stdItem || (item.menu[0]==PLAY_ACTION))\" class=\"list-btns\">\n- <div class=\"add-btn grid-btn\" @click.stop=\"itemAction(ADD_ACTION, item, index, $event)\" :title=\"ACTIONS[ADD_ACTION].title\"></div>\n- <div class=\"play-btn grid-btn\" @click.stop=\"itemAction(PLAY_ACTION, item, index, $event)\" :title=\"ACTIONS[PLAY_ACTION].title\"></div>\n+ <div v-if=\"hoverBtns && 0==selection.size && (undefined!=item.stdItem || item.menu[0]==PLAY_ACTION || item.menu[0]==PLAY_ALL_ACTION)\" class=\"list-btns\">\n+ <div class=\"add-btn grid-btn\" @click.stop=\"itemAction(item.header ? ADD_ALL_ACTION : ADD_ACTION, item, index, $event)\" :title=\"ACTIONS[ADD_ACTION].title\"></div>\n+ <div class=\"play-btn grid-btn\" @click.stop=\"itemAction(item.header ? PLAY_ALL_ACTION : PLAY_ACTION, item, index, $event)\" :title=\"ACTIONS[PLAY_ACTION].title\"></div>\n</div>\n<v-btn icon @click.stop=\"itemMenu(item, index, $event)\" :title=\"i18n('%1 Menu', item.title)\">\n<v-icon>more_vert</v-icon>\n@@ -161,6 +161,10 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\n<v-list-tile v-else-if=\"item.type=='text'\" class=\"lms-list-item browse-text\">{{item.title}}</v-list-tile>\n<v-list-tile v-else-if=\"item.header\" class=\"lms-list-item browse-header\" @click=\"click(item, index, $event)\"><v-list-tile-content><v-list-tile-title>{{item.title}}</v-list-tile-title></v-list-tile-content>\n<v-list-tile-action class=\"browse-action\" v-if=\"undefined!=item.stdItem || (item.menu && item.menu.length>0)\" :title=\"i18n('%1 Menu', item.title)\">\n+ <div v-if=\"hoverBtns && 0==selection.size && (undefined!=item.stdItem || item.menu[0]==PLAY_ACTION || item.menu[0]==PLAY_ALL_ACTION)\" class=\"list-btns\">\n+ <div class=\"add-btn grid-btn\" @click.stop=\"itemAction(ADD_ALL_ACTION, item, index, $event)\" :title=\"ACTIONS[ADD_ACTION].title\"></div>\n+ <div class=\"play-btn grid-btn\" @click.stop=\"itemAction(PLAY_ALL_ACTION, item, index, $event)\" :title=\"ACTIONS[PLAY_ACTION].title\"></div>\n+ </div>\n<v-btn icon @click.stop=\"itemMenu(item, index, $event)\">\n<v-icon>more_vert</v-icon>\n</v-btn>\n@@ -197,7 +201,7 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\n</v-list-tile-content>\n<v-list-tile-action class=\"browse-action\" v-if=\"undefined!=item.stdItem || (item.menu && item.menu.length>0)\">\n- <div v-if=\"hoverBtns && 0==selection.size && (undefined!=item.stdItem || (item.menu[0]==PLAY_ACTION))\" class=\"list-btns\">\n+ <div v-if=\"hoverBtns && 0==selection.size && (undefined!=item.stdItem || item.menu[0]==PLAY_ACTION || item.menu[0]==PLAY_ALL_ACTION)\" class=\"list-btns\">\n<div class=\"add-btn grid-btn\" @click.stop=\"itemAction(ADD_ACTION, item, index, $event)\" :title=\"ACTIONS[ADD_ACTION].title\"></div>\n<div class=\"play-btn grid-btn\" @click.stop=\"itemAction(PLAY_ACTION, item, index, $event)\" :title=\"ACTIONS[PLAY_ACTION].title\"></div>\n</div>\n@@ -678,7 +682,7 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\nthis.jumplistActive=0;\nthis.hoverBtns = !IS_MOBILE && this.items.length>0 &&\n(this.items[0].stdItem==STD_ITEM_ARTIST || this.items[0].stdItem==STD_ITEM_ALBUM || this.items[0].stdItem==STD_ITEM_TRACK ||\n- (this.items[0].menu && this.items[0].menu[0]==PLAY_ACTION));\n+ (this.items[0].menu && (this.items[0].menu[0]==PLAY_ACTION || this.items[0].menu[0]==PLAY_ALL_ACTION)));\nif (item.id.startsWith(SEARCH_ID)) {\nthis.tbarActions=[SEARCH_LIB_ACTION];\n",
        "date": "04.03.2020 16:03:59",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Refactor browse-page.js to include support for PLAY_ALL_ACTION in item menus"
    },
    {
        "msg": "add native callback Issue",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/server.js b/MaterialSkin/HTML/material/html/js/server.js const PLAYER_STATUS_TAGS = \"tags:cdegloyrstABKNST\";\n+window.nativeObj = function NativeClass(){};\n+function updateNative(status) {\n+ if (undefined==window.nativeObj || undefined!=window.nativeObj.updateStatus) {\n+ return;\n+ }\n+\n+ try {\n+ window.nativeObj.updateStatus(status);\n+ } catch (e) {\n+ }\n+}\n+\nfunction getHiddenProp(){\nvar prefixes = ['webkit','moz','ms','o'];\n@@ -443,6 +455,7 @@ var lmsServer = Vue.component('lms-server', {\nbus.$emit(isCurrent ? 'playerStatus' : 'otherPlayerStatus', player);\nif (isCurrent) {\n+ updateNative(player);\nthis.scheduleNextPlayerStatusUpdate(data.mode === \"play\"\n? data.waitingToPlay\n? 1000 // Just starting to play? Poll in 1 second\n",
        "date": "22.03.2020 15:05:18",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Add updateNative function to server.js"
    },
    {
        "msg": "add a set of commands to which add/play all are not used",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-page.js b/MaterialSkin/HTML/material/html/js/browse-page.js 'use strict';\nvar B_ALBUM_SORTS=[ ];\n+var NO_ADD_ALL = new Set(['radioparadise', 'artistinfo', 'albuminfo', 'genreinfo']); // Allow add-all/play-all from 'trackinfo', as Spotty's 'Top Titles' access via 'More' needs this\nvar lmsBrowse = Vue.component(\"lms-browse\", {\ntemplate: `\n@@ -751,11 +752,9 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\n}\n// No menu actions? If first item is an audio trsck, add a PlayAll/AddAll to toolbar. This will add each item individually\n- if (this.tbarActions.length==0 && this.items.length>1 && this.items.length<=200 && isAudioTrack(this.items[0]) && this.items[0].menu && this.items[0].menu.length>0 &&\n- (this.items[0].menu[0]==ADD_ACTION || this.items[0].menu[0]==PLAY_ACTION) && (!item.id || !item.id.startsWith(TOP_ID_PREFIX)) &&\n- // Allow add-all/play-all from 'trackinfo', as Spotty's 'Top Titles' access via 'More' needs this\n- !(this.command.command.length>0 && (/*this.command.command[0]==\"trackinfo\" || */this.command.command[0]==\"artistinfo\" ||\n- this.command.command[0]==\"albuminfo\") || this.command.command[0]==\"genreinfo\")) {\n+ if (this.tbarActions.length==0 && this.items.length>1 && this.items.length<=200 && isAudioTrack(this.items[0]) && this.items[0].menu &&\n+ this.items[0].menu.length>0 && this.command.command.length>0 && !NO_ADD_ALL.has(this.command.command[0]) &&\n+ (this.items[0].menu[0]==ADD_ACTION || this.items[0].menu[0]==PLAY_ACTION) && (!item.id || !item.id.startsWith(TOP_ID_PREFIX))) {\nthis.tbarActions=[ADD_ALL_ACTION, PLAY_ALL_ACTION];\n// add-all/play-all is SLOW, but youtube allows add/play on modified version of parentID - where we make this\n",
        "date": "08.04.2020 12:34:19",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Refactor browse-page.js to allow add-all/play-all from 'trackinfo' for Spotty's 'Top Titles' access via 'More'"
    },
    {
        "msg": "add more items to exclude list",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-page.js b/MaterialSkin/HTML/material/html/js/browse-page.js 'use strict';\nvar B_ALBUM_SORTS=[ ];\n-var NO_ADD_ALL = new Set(['radioparadise', 'artistinfo', 'albuminfo', 'genreinfo']); // Allow add-all/play-all from 'trackinfo', as Spotty's 'Top Titles' access via 'More' needs this\n+var NO_ADD_ALL = new Set(['radioparadise', 'lastmix', 'playhistory', 'wefunk', 'artistinfo', 'albuminfo', 'genreinfo']); // Allow add-all/play-all from 'trackinfo', as Spotty's 'Top Titles' access via 'More' needs this\nvar lmsBrowse = Vue.component(\"lms-browse\", {\ntemplate: `\n",
        "date": "08.04.2020 12:39:26",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Update NO_ADD_ALL set to allow add-all/play-all from additional pages."
    },
    {
        "msg": "add SqueezePlayer icon map",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/server.js b/MaterialSkin/HTML/material/html/js/server.js @@ -138,6 +138,12 @@ function playerIcon(player) {\nreturn {icon:\"android\"};\n}\n}\n+ if (player.model==\"squeezeplayer\") {\n+ if (player.modelname==\"SqueezePlayer\") {\n+ return {icon:\"android\"};\n+ }\n+ }\n+\nreturn {icon:\"speaker\"};\n}\n",
        "date": "21.05.2020 07:52:49",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Add support for SqueezePlayer icon in playerIcon function"
    },
    {
        "msg": "add logging of browsemode responses",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-page.js b/MaterialSkin/HTML/material/html/js/browse-page.js @@ -2080,6 +2080,7 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\nthis.fetchingItems=true;\nlmsCommand(\"\", [\"material-skin\", \"browsemodes\"]).then(({data}) => {\nif (data && data.result) {\n+ logJsonMessage(\"RESP\", data);\nthis.myMusic = [];\nvar stdItems = new Set();\n// Get basic, configurable, browse modes...\n@@ -2163,6 +2164,7 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\n} else {\nlmsList(this.playerId(), [\"menu\", \"items\"], [\"direct:1\"]).then(({data}) => {\nif (data && data.result && data.result.item_loop) {\n+ logJsonMessage(\"RESP\", data);\nfor (var idx=0, loop=data.result.item_loop, loopLen=loop.length; idx<loopLen; ++idx) {\nvar c = loop[idx];\nif (c.node==\"myMusic\" && c.id) {\n",
        "date": "20.06.2020 17:00:06",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Add logging of JSON response data in browse-page.js"
    },
    {
        "msg": "add bottom border to list items",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/css/style.css b/MaterialSkin/HTML/material/html/css/style.css @@ -266,6 +266,10 @@ div.v-subheader {\nheight:calc(var(--list-elem-3line-height) - 1px) !important;\n}\n+.lms-list-item {\n+ border-bottom: 1px solid var(--list-item-border-color);\n+}\n+\n/* Make action buttons in lists closer together */\n.list__tile__action {\nmin-width:48px !important;\n",
        "date": "14.09.2020 21:09:24",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Add border to list items and adjust action button width in lists"
    },
    {
        "msg": "add _type param",
        "diff": "diff --git a/MaterialSkin/Plugin.pm b/MaterialSkin/Plugin.pm @@ -194,7 +194,7 @@ sub initCLI {\nSlim::Control::Request::addDispatch(['material-skin-group', '_cmd'], [1, 0, 1, \\&_cliGroupCommand]);\n# Notification\n- Slim::Control::Request::addDispatch(['material-skin', 'notification', '_msg'], [0, 0, 0, undef]);\n+ Slim::Control::Request::addDispatch(['material-skin', 'notification', '_type', '_msg'], [0, 0, 0, undef]);\n}\nsub _startsWith {\n",
        "date": "17.08.2021 16:06:43",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Update notification dispatch to include type parameter"
    },
    {
        "msg": "add support for sending notifications from perl to webapp Closes",
        "diff": "diff --git a/ChangeLog b/ChangeLog value from the current browe history. If this still fails and the track is\nmarked as comming from a compilation then use LMS's 'Various Artists' string.\n6. Call icon mapping for favourites.\n+7. Add support for sending notifications from perl to webapp.\n2.6.1\n-----\n",
        "date": "25.08.2021 16:03:58",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Add support for sending notifications from perl to webapp"
    },
    {
        "msg": "add two cover sizes",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/mediasession.js b/MaterialSkin/HTML/material/html/js/mediasession.js @@ -157,8 +157,16 @@ Vue.component('lms-mediasession', {\n} else {\nthis.pauseSilence();\n}\n+ console.log(this.media.cover);\nnavigator.mediaSession.playbackState = this.playerStatus && this.playerStatus.isplaying ? \"playing\" : \"paused\";\nif (force || this.playerStatus.current.title!=this.media.title || artist!=this.media.artist || this.playerStatus.current.album!=this.media.album) {\n+ let artwork = undefined;\n+ if (undefined!=this.media.cover && this.media.cover.endsWith('_1024x1024_f')) {\n+ artwork = [ {src: this.media.cover.replace('_1024x1024_f', '_300x300_f') , sizes: '300x300', type: 'image/jpeg'},\n+ {src: \"\"+this.media.cover, sizes: '1024x1024', type: 'image/jpeg'} ];\n+ } else {\n+ artwork = [ {src: \"\"+this.media.cover, type: 'image/jpeg'} ];\n+ }\nthis.media.title = this.playerStatus.current.title;\nthis.media.artist = artist;\nthis.media.album = this.playerStatus.current.album;\n@@ -166,7 +174,7 @@ Vue.component('lms-mediasession', {\ntitle: this.media.title,\nartist: this.media.artist,\nalbum: this.media.album,\n- artwork: [ {src: \"\"+this.media.cover, type: 'image/jpeg'}]\n+ artwork: artwork\n});\n}\n}\n",
        "date": "08.09.2021 21:37:59",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Add support for displaying different sizes of artwork in media session metadata"
    },
    {
        "msg": "add $LANG to replacements",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/customactions.js b/MaterialSkin/HTML/material/html/js/customactions.js @@ -75,7 +75,7 @@ function performCustomAction(obj, action, player, item) {\n}\n}\n-const ACTION_KEYS = ['ID', 'NAME', 'ARTISTID', 'ARTISTNAME', 'ALBUMID', 'ALBUMNAME', 'TRACKID', 'TRACKNAME', 'TRACKNUM', 'DISC', 'GENREID', 'GENRENAME', 'YEAR', 'COMPOSER'];\n+const ACTION_KEYS = ['ID', 'NAME', 'ARTISTID', 'ARTISTNAME', 'ALBUMID', 'ALBUMNAME', 'TRACKID', 'TRACKNAME', 'TRACKNUM', 'DISC', 'GENREID', 'GENRENAME', 'YEAR', 'COMPOSER', 'LANG'];\nfunction doReplacements(string, player, item) {\nlet val = ''+string;\n@@ -142,6 +142,7 @@ function doReplacements(string, player, item) {\n}\n}\nval=val.replace(\"$HOST\", window.location.hostname);\n+ val=val.replace(\"$LANG\", undefined==lmsOptions.lang ? 'en' : lmsOptions.lang);\nfor (var i=0, len=ACTION_KEYS.length; i<len; ++i) {\nval = val.replace(\"+$\"+ACTION_KEYS[i], \"\").replace(\"$\"+ACTION_KEYS[i]+\"+\", \"\").replace(\"$\"+ACTION_KEYS[i], \"\");\n}\n",
        "date": "12.09.2021 10:33:29",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Add 'LANG' to ACTION_KEYS and replace $LANG with default value if undefined"
    },
    {
        "msg": "add Pandora to track techinfo",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/misc/track-sources.json b/MaterialSkin/HTML/material/html/misc/track-sources.json \"bandcamp:\":\"Bandcamp\",\n\"https://media-ssl.musicradio.com/\":\"Global Player (UK)\",\n\"https://stream.radiofrance.fr/\":\"Radio France\",\n- \"youtube:\":\"YouTube\"\n+ \"youtube:\":\"YouTube\",\n+ \"pandora:\":\"Pandora\"\n},\n\"includes\":{\n\".radioparadise.com/\":\"Radio Paradise\",\n",
        "date": "05.01.2022 19:44:09",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Add Pandora as a source in track-sources.json"
    },
    {
        "msg": "add Deezer and Tidal URL conversion",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/misc/track-sources.json b/MaterialSkin/HTML/material/html/misc/track-sources.json {\n\"prefix\":{\n\"deezer:\":{\n- \"name\":\"Deezer\"\n+ \"name\":\"Deezer\",\n+ \"url\":{\n+ \"from\":\"deezer://\",\n+ \"to\":\"https://www.deezer.com/track/\",\n+ \"removeext\":true\n+ }\n},\n\"spotify:\":{\n\"name\":\"Spotify\",\n}\n},\n\"wimp:\":{\n- \"name\":\"Tidal\"\n+ \"name\":\"Tidal\",\n+ \"url\":{\n+ \"from\":\"wimp://\",\n+ \"to\":\"https://tidal.com/browse/track/\",\n+ \"removeext\":true\n+ }\n},\n\"qobuz:\":{\n\"name\":\"Qobuz\",\n",
        "date": "15.01.2022 08:58:06",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Add URL mappings for Deezer and Tidal in track-sources.json"
    },
    {
        "msg": "add icon to restart action",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/information.js b/MaterialSkin/HTML/material/html/js/information.js @@ -66,7 +66,7 @@ Vue.component('lms-information-dialog', {\n</ul>\n<v-btn v-if=\"updates.details.length>0 && 'idle'==pluginStatus && unlockAll\" @click=\"updatePlugins\" flat><img class=\"svg-img btn-icon\" :src=\"'update' | svgIcon(darkUi)\">{{i18n('Update plugins')}}</v-btn>\n<p v-if=\"'downloading'==pluginStatus\"><v-icon class=\"pulse\">cloud_download</v-icon> {{i18n('Downloading plugin updates')}}</p>\n- <v-btn v-if=\"'needs_restart'==pluginStatus && unlockAll\" @click=\"restartServer\" flat>{{i18n('Restart server')}}</v-btn>\n+ <v-btn v-if=\"'needs_restart'==pluginStatus && unlockAll\" @click=\"restartServer\" flat><img class=\"svg-img btn-icon\" :src=\"'restart' | svgIcon(darkUi)\">{{i18n('Restart server')}}</v-btn>\n<p v-if=\"'downloading'!=pluginStatus && updates.details.length>0\" style=\"padding-top:16px\">{{i18n('The following plugins are up to date:')}}</p>\n<ul>\n<template v-for=\"(plug, index) in plugins.details\"><li v-if=\"'downloading'==pluginStatus || !updates.names.has(plug.name)\"><object class=\"link-item\" @click=\"pluginInfo(plug)\">{{plug.title}} {{plug.version}}</object></li></template>\n",
        "date": "11.02.2022 20:43:58",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Add restart server icon to restart button in information dialog"
    },
    {
        "msg": "add dragIndex not which",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/queue-page.js b/MaterialSkin/HTML/material/html/js/queue-page.js @@ -1040,12 +1040,14 @@ var lmsQueue = Vue.component(\"lms-queue\", {\nselection = Array.from(this.selection);\nselection.sort(function(a, b) { return a<b ? -1 : 1; });\n} else {\n- selection.push(which);\n+ selection.push(this.dragIndex);\n}\nvar urls = [];\nfor (var i=0, len=selection.length; i<len; ++i) {\n+ if (i>=0 && i<this.items.length) {\nurls.push(this.items[selection[i]].url);\n}\n+ }\nreturn urls;\n},\ndragEnd() {\n",
        "date": "08.04.2022 22:21:06",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Fix selection bug in queue-page.js"
    },
    {
        "msg": "add padding so that sliders are centered",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/player-settings-plugin.js b/MaterialSkin/HTML/material/html/js/player-settings-plugin.js @@ -26,7 +26,7 @@ Vue.component('lms-player-settings-plugin', {\n<template v-for=\"(item, index) in items\">\n<v-list-tile v-if=\"item.slider\" class=\"lms-list-item\">\n<v-flex xs12>\n- <v-layout>\n+ <v-layout style=\"padding-top:4px\">\n<v-btn flat icon @click=\"decrementSlider(item)\" style=\"margin-top: 14px;\"><v-icon>remove_circle_outline</v-icon></v-btn>\n<v-slider :step=\"item.adjust\" :min=\"item.min\" :max=\"item.max\" v-model=\"item.initial\" @change=\"sliderChanged(item)\"></v-slider>\n<v-btn flat icon @click=\"incrementSlider(item)\" style=\"margin-top: 14px;\"><v-icon>add_circle_outline</v-icon></v-btn>\n",
        "date": "03.07.2022 18:56:40",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Add padding to v-layout in player-settings-plugin"
    },
    {
        "msg": "add help on browse modes and virtual libraries.",
        "diff": "diff --git a/MaterialSkin/HTML/EN/html/material-skin/index.html b/MaterialSkin/HTML/EN/html/material-skin/index.html <li>Desktop</li>\n</ul>\nBy default the app will attempt to use the correct layout depending on the width of your current screen. However, you may use\n- \"Settings -> Interface\" to override this and force the usage of one or the other.\n+ 'Settings -> Interface' to override this and force the usage of one or the other.\n</p>\n<p>This help page will provide some basic information that will hopefully provide some useful detail on how to use app.\n</p>\n</p>\n<br/>\n+ <h1>Browse modes</h1>\n+ <p>Usually with LMS the list of browse modes (e.g. Artists, Albums, Genres) is configured per-player. This is why in\n+ the 'Extra settings' section of 'Player settings' there is a section named 'Additional Browse Modes.' However, as\n+ this app is designed to control multiple players, the list of browse modes available for this app is not configured\n+ there but in 'Settings -> Interface'. In that dialog you will see a set of checkboxes to configure which categories\n+ are shown on the 'Home' screen. The 'My Music' entry has a cog icon next to it. Pressing on this icon will produce\n+ a dialog allowing you to configure which browse modes will be shown with this app.\n+ </p>\n+ <br/>\n+\n+ <h1>Virtual libraries</h1>\n+ <p>Virtual libraries in LMS are a way of creating sub-libraries of your music collection. e.g. you could have a\n+ library for each member of your family, so they only see the artists, etc., that they care about.\n+ </p>\n+ <p>As per 'Browse modes' LMS usually sets the active library per-player. And with this app you can set a library\n+ for a player in the 'Player settings' dialog. If so, then that library would restrict the tracks that some\n+ LMS features (such as 'Random mix') would use. However, this app differs again from standard LMS by allowing\n+ the library selection to be set for this instance of the app, and would be the same no matter which player\n+ you chose. So, for example, a family member would see their desired library no matter which player they were\n+ currently trying to control.\n+ </p>\n+ <p>Please note, however, that these libraries, and the selection thereof, will not be visible until you actually\n+ create such a library. There are various ways to do this; via saving an 'Advanced search' (click on the search\n+ icon on this app's home screen, and then click on the 'Advanced search' icon that appears subsequently), or use\n+ plugins such as 'Simple library views.'\n+ </p>\n+\n</div>\n</body>\n</html>\n\\ No newline at end of file\n",
        "date": "05.07.2022 21:04:32",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Add browse modes and virtual libraries information to index.html"
    },
    {
        "msg": "add hooks to allow iframe's to invoke browsing",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/iframe-dialog.js b/MaterialSkin/HTML/material/html/js/iframe-dialog.js @@ -49,6 +49,41 @@ function fixClassicSkinRefs(doc) {\n}\n}\n+function iframeBrowseArtist(id, name, role) {\n+ bus.$emit(\"browse\", [\"albums\"], [\"artist_id:\"+id, ARTIST_ALBUM_TAGS, SORT_KEY+ARTIST_ALBUM_SORT_PLACEHOLDER, \"role_id:\"+(undefined==role ? \"ALBUMARTIST\" : role)], name, undefined);\n+ bus.$emit('iframe-close');\n+}\n+\n+function iframeBrowseAlbum(id, name) {\n+ bus.$emit(\"browse\", [\"tracks\"], [\"album_id:\"+id, TRACK_TAGS, SORT_KEY+\"tracknum\"], name, undefined);\n+ bus.$emit('iframe-close');\n+}\n+\n+function iframeBrowseGenre(name) {\n+ bus.$emit(\"browse\", \"genre\", name, name);\n+ bus.$emit('iframe-close');\n+}\n+\n+function iframeBrowseYear(name) {\n+ bus.$emit(\"browse\", \"year\", name, name);\n+ bus.$emit('iframe-close');\n+}\n+\n+function iframeTrackInfo(id, name) {\n+ bus.$emit('trackInfo', {id:\"track_id:\"+id, title:name});\n+ bus.$emit('iframe-close');\n+}\n+\n+function addHooks(doc) {\n+ doc.lmsMaterialSkin = {\n+ browseArtist:iframeBrowseArtist,\n+ browseAlbum:iframeBrowseAlbum,\n+ browseGenre:iframeBrowseGenre,\n+ browseYear:iframeBrowseYear,\n+ trackInfo:iframeTrackInfo\n+ }\n+}\n+\nvar iframeMenuOpen = false;\nfunction iframeClickHandler(e) {\nif (iframeMenuOpen) {\n@@ -274,6 +309,7 @@ function hideClassicSkinElems(page, textCol) {\nfixClassicSkinRefs(content);\nremapClassicSkinIcons(content, textCol);\n+ addHooks(content);\nlet toHide = undefined;\nif ('player'==page) {\n@@ -473,6 +509,9 @@ Vue.component('lms-iframe-dialog', {\n}\nthis.src = ref;\n}.bind(this));\n+ bus.$on('iframe-close', function() {\n+ this.close();\n+ }.bind(this));\nbus.$on('noPlayers', function() {\nthis.close();\n}.bind(this));\n",
        "date": "06.07.2022 14:28:17",
        "repo": "cdrummond/lms-material",
        "type": "add",
        "chatgpt_zeroshot": "Add functions for browsing artists, albums, genres, years, and track information in iframe-dialog.js"
    },
    {
        "msg": "add phantomjs-prebuilt",
        "diff": "diff --git a/circle.yml b/circle.yml @@ -18,6 +18,7 @@ dependencies:\n- /home/ubuntu/nvm/versions/node/v6.9.4/lib/node_modules\noverride:\n- yarn global add bower\n+ - yarn global add phantomjs-prebuilt\n- yarn add node-sass\n- yarn install\n- bower install\n",
        "date": "24.01.2017 21:54:24",
        "repo": "code-corps/code-corps-ember",
        "type": "add",
        "chatgpt_zeroshot": "Add phantomjs-prebuilt to global dependencies in circle.yml"
    },
    {
        "msg": "add attributes \"min\" and \"step\" to the donation value input field",
        "diff": "diff --git a/app/templates/components/donation-goal-edit.hbs b/app/templates/components/donation-goal-edit.hbs <div class=\"amount-group\">\n<span class=\"currency\">$</span>\n- {{input class=\"amount\" name=\"amount\" type=\"number\" placeholder=\"Custom amount\" value=amount}}\n+ {{input class=\"amount\" name=\"amount\" type=\"number\" min=\"0\" step=\"1\" placeholder=\"Custom amount\" value=amount}}\n<span class=\"period\">per month</span>\n</div>\n{{#each donationGoal.errors.amount as |error|}}\n",
        "date": "09.02.2017 22:00:54",
        "repo": "code-corps/code-corps-ember",
        "type": "add",
        "chatgpt_zeroshot": "Add min and step attributes to custom amount input in donation goal edit component"
    },
    {
        "msg": "add meta to head in html",
        "diff": "diff --git a/app/index.html b/app/index.html <link rel=\"icon\" href=\"https://d3pgew4wbk2vb1.cloudfront.net/icons/favicon.png\">\n<link rel=\"icon\" href=\"https://d3pgew4wbk2vb1.cloudfront.net/icons/favicon-32.png\" sizes=\"32x32\">\n+ <title>Code Corps | Build a better future.</title>\n+ <meta property=\"description\" content=\"Contribute to software projects for social good. Give your time or money to help build software to better the arts, education, government, science, and more.\"></meta>\n+ <meta property=\"og:description\" content=\"Contribute to software projects for social good. Give your time or money to help build software to better the arts, education, government, science, and more.\"></meta>\n+ <meta property=\"og:image\" content=\"https://d3pgew4wbk2vb1.cloudfront.net/images/universal-card.png\"></meta>\n+ <meta property=\"og:site_name\" content=\"Code Corps\"></meta>\n+ <meta property=\"og:title\" content=\"Code Corps | Build a better future.\"></meta>\n+ <meta property=\"og:type\" content=\"website\"></meta>\n+ <meta property=\"og:url\" content=\"http://www.codecorps.org\"></meta>\n+ <meta name=\"twitter:card\" content=\"summary_large_image\"></meta>\n+ <meta name=\"twitter:creator\" content=\"@thecodecorps\"></meta>\n+ <meta name=\"twitter:creator:id\" content=\"4608917052\"></meta>\n+ <meta name=\"twitter:description\" content=\"Contribute to software projects for social good. Give your time or money to help build software to better the arts, education, government, science, and more.\"></meta>\n+ <meta name=\"twitter:image\" content=\"https://d3pgew4wbk2vb1.cloudfront.net/images/universal-card.png\"></meta>\n+ <meta name=\"twitter:site\" content=\"@thecodecorps\"></meta>\n+ <meta name=\"twitter:site:id\" content=\"4608917052\"></meta>\n+ <meta name=\"twitter:title\" content=\"Code Corps | Build a better future.\"></meta>\n+\n{{content-for \"head\"}}\n<link rel=\"stylesheet\" href=\"{{rootURL}}assets/vendor.css\">\n",
        "date": "24.02.2017 13:11:20",
        "repo": "code-corps/code-corps-ember",
        "type": "add",
        "chatgpt_zeroshot": "Add meta tags for social media sharing and update page title in index.html"
    },
    {
        "msg": "add link on the header which links to typeform",
        "diff": "diff --git a/app/templates/components/navigation-menu.hbs b/app/templates/components/navigation-menu.hbs <nav class=\"header-navigation--left\">\n<ul class=\"header-navigation__options\">\n<li>{{#link-to 'projects-list'}}Projects{{/link-to}}</li>\n+ <li><a href=\"https://codecorps.typeform.com/to/rMxOCA\">Submit a project</a></li>\n<li><a href=\"https://blog.codecorps.org\">Blog</a></li>\n</ul>\n</nav>\n",
        "date": "18.04.2017 01:01:42",
        "repo": "code-corps/code-corps-ember",
        "type": "add",
        "chatgpt_zeroshot": "Add \"Submit a project\" link to navigation menu"
    },
    {
        "msg": "add loadEmberExam to test-helper",
        "diff": "diff --git a/tests/test-helper.js b/tests/test-helper.js @@ -4,6 +4,8 @@ import {\n} from 'ember-qunit';\nimport { start } from 'ember-cli-qunit';\nimport './helpers/flash-message';\n+import loadEmberExam from 'ember-exam/test-support/load';\n+loadEmberExam();\nsetResolver(resolver);\nstart();\n",
        "date": "23.10.2017 18:57:24",
        "repo": "code-corps/code-corps-ember",
        "type": "add",
        "chatgpt_zeroshot": "Add Ember Exam test support to test-helper.js"
    },
    {
        "msg": "add router inline docs",
        "diff": "diff --git a/app/router.js b/app/router.js @@ -15,6 +15,7 @@ const Router = EmberRouter.extend(RouterScroll, {\nthis._trackPage();\n},\n+ // Track the page view in Segment when it renders\n_trackPage() {\nrun.scheduleOnce('afterRender', this, () => {\nlet page = document.location.pathname;\n@@ -34,6 +35,7 @@ Router.map(function() {\n});\n});\n+ // GitHub OAuth redirection route\nthis.route('github', {\npath: '/oauth/github'\n});\n@@ -58,8 +60,8 @@ Router.map(function() {\nthis.route('privacy');\nthis.route('project', { path: '/:slugged_route_slug/:project_slug' }, function() {\n- this.route('checkout');\n- this.route('donate');\n+ this.route('checkout'); // Where you enter your credit card details\n+ this.route('donate'); // Where you choose your donation amount\nthis.route('settings', function() {\nthis.route('contributors');\nthis.route('donations', function() {\n@@ -73,9 +75,10 @@ Router.map(function() {\nthis.route('new');\nthis.route('task', { path: '/:number' });\n});\n- this.route('thank-you');\n+ this.route('thank-you'); // When your donation successfully processed\n});\n+ // Organization's projects\nthis.route('projects', {\npath: '/:slugged_route_slug/projects'\n});\n@@ -89,6 +92,7 @@ Router.map(function() {\nthis.route('forgot');\n});\n+ // User settings\nthis.route('settings', function() {\nthis.route('profile');\nthis.route('integrations');\n@@ -96,10 +100,13 @@ Router.map(function() {\nthis.route('signup');\n+ // User *or* organization routes\n+ // e.g. /code-corps or /joshsmith\nthis.route('slugged-route', {\npath: '/:slugged_route_slug'\n});\n+ // Onboarding routes\nthis.route('start', function() {\nthis.route('hello');\nthis.route('interests');\n",
        "date": "28.11.2017 11:58:17",
        "repo": "code-corps/code-corps-ember",
        "type": "add",
        "chatgpt_zeroshot": "Add comments to router.js routes for better clarity and documentation"
    },
    {
        "msg": "add top level folder to json api hostname",
        "diff": "diff --git a/config/environment.js b/config/environment.js @@ -7,7 +7,7 @@ module.exports = function(environment) {\nrootURL: '/',\nrouterRootURL: '/',\nlocationType: 'auto',\n- API_HOST: 'https://s3.amazonaws.com/api-docs.emberjs.com',\n+ API_HOST: 'https://s3.amazonaws.com/api-docs.emberjs.com/json-docs',\nIS_FASTBOOT: !!process.env.EMBER_CLI_FASTBOOT,\nEmberENV: {\nEXTEND_PROTOTYPES: false,\n",
        "date": "21.03.2017 12:22:07",
        "repo": "ember-learn/ember-api-docs",
        "type": "add",
        "chatgpt_zeroshot": "Update API_HOST in environment.js to include json-docs in the URL."
    },
    {
        "msg": "add a travis badge",
        "diff": "diff --git a/README.md b/README.md -# Ember-api-docs\n+# Ember-api-docs [![Build Status](https://travis-ci.org/ember-learn/ember-api-docs.svg?branch=master)](https://travis-ci.org/ember-learn/ember-api-docs)\nThis app is used to produce versioned Ember api docs. To view the data generator producing its data, please visit https://github.com/ember-learn/ember-jsonapi-docs\n",
        "date": "22.03.2017 15:30:39",
        "repo": "ember-learn/ember-api-docs",
        "type": "add",
        "chatgpt_zeroshot": "Add build status badge to README.md"
    },
    {
        "msg": "add case for switching version on module and namespace route",
        "diff": "diff --git a/app/routes/project-version.js b/app/routes/project-version.js @@ -46,6 +46,12 @@ export default Ember.Route.extend({\ncase 'project-version.class.index':\nendingRoute = `classes/${this.modelFor('project-version.class').get('name')}`;\nbreak;\n+ case 'project-version.module.index':\n+ const moduleName = this.paramsFor('project-version.module').module;\n+ endingRoute = `modules/${moduleName}`;\n+ case 'project-version.namespace.index':\n+ const namespaceName = this.paramsFor('project-version.namespace').namespace;\n+ endingRoute = `namespaces/${namespaceName}`;\ndefault:\nbreak;\n}\n",
        "date": "24.03.2017 23:40:52",
        "repo": "ember-learn/ember-api-docs",
        "type": "add",
        "chatgpt_zeroshot": "Add route handling for module and namespace index pages in project-version route."
    },
    {
        "msg": "add a link to the v0.5 project",
        "diff": "diff --git a/README.md b/README.md This app is used to produce versioned Ember api docs. To view the data generator producing its data, please visit https://github.com/ember-learn/ember-jsonapi-docs\n+## Want to help out?\n+We'd love to get help working on the [next set of issues we're seeing](https://github.com/ember-learn/ember-api-docs/projects/2)\n## a11y testing\n",
        "date": "27.03.2017 14:59:28",
        "repo": "ember-learn/ember-api-docs",
        "type": "add",
        "chatgpt_zeroshot": "Add call to action for contributors and link to next set of issues."
    },
    {
        "msg": "add a link to contributing.md",
        "diff": "diff --git a/README.md b/README.md This app is used to produce versioned Ember api docs. To view the data generator producing its data, please visit https://github.com/ember-learn/ember-jsonapi-docs\n## Want to help out?\n-We'd love to get help working on the [next set of issues we're seeing](https://github.com/ember-learn/ember-api-docs/projects/2)\n+We'd love to get help working on the [next set of issues we're seeing](https://github.com/ember-learn/ember-api-docs/projects/2) & to see how to get started on this project, checkout [CONTRIBUTING.md](https://github.com/ember-learn/ember-api-docs/blob/master/CONTRIBUTING.md)\n## a11y testing\n",
        "date": "22.07.2017 11:51:51",
        "repo": "ember-learn/ember-api-docs",
        "type": "add",
        "chatgpt_zeroshot": "Update README with information on how to contribute and a11y testing."
    },
    {
        "msg": "add test selector for file path",
        "diff": "diff --git a/app/templates/components/class-field-description.hbs b/app/templates/components/class-field-description.hbs <span class=\"access\">deprecated</span>\n{{/if}}\n</h3>\n- <p class=\"github-link\">\n+ <p class=\"github-link\" data-test-file={{field.file}}>\n{{#if field.inherited}}\nInherited from\n<a href=\"{{github-link model.project.id model.projectVersion.version field.file field.line}}\" target=\"_blank\" rel=\"noopener\">\n",
        "date": "31.07.2017 01:51:22",
        "repo": "ember-learn/ember-api-docs",
        "type": "add",
        "chatgpt_zeroshot": "Add data-test-file attribute to github-link in class-field-description component"
    },
    {
        "msg": "add test case for duplicate methods",
        "diff": "diff --git a/tests/integration/components/api-index-filter-test.js b/tests/integration/components/api-index-filter-test.js @@ -15,10 +15,20 @@ const model = EmberObject.create({\nversion: '2.9'\n},\nname: 'hai',\n+ file: 'my-class',\n+ parentClass: {\n+ file: 'my-class'\n+ },\nmethods: [\n{\nname: 'doSomething',\n- route: 'do-something'\n+ route: 'do-something',\n+ file: 'my-class'\n+ },\n+ {\n+ name: 'doSomething',\n+ route: 'do-something',\n+ file: 'my-parent-class'\n},\n{\nname: 'parentDoSomething',\n@@ -371,3 +381,29 @@ test('clicking all toggles off should only show public', async function(assert)\nassert.dom(findAll('.method-name')[0]).hasText('doSomething', 'should display 1 public method');\n});\n+\n+\n+test('should show only local method implementation when duplicates', async function (assert) {\n+ let filterData = EmberObject.create({\n+ showInherited: true,\n+ showProtected: false,\n+ showPrivate: false,\n+ showDeprecated: false\n+ });\n+\n+ this.set('model', model);\n+ this.set('filterData', filterData);\n+\n+ this.render(hbs`\n+ {{#api-index-filter model=model filterData=filterData as |myModel|}}\n+ <h2>Methods</h2>\n+ {{#each myModel.methods as |method|}}\n+ <p class=\\\"method-name\\\">{{method.name}}</p>\n+ {{/each}}\n+ {{/api-index-filter}}\n+ `);\n+ assert.equal(findAll('.method-name').length, 2, 'should display only the local method and the parent method with a different name');\n+ assert.dom(findAll('.method-name')[0]).hasText('doSomething', 'should display 1 public method');\n+ assert.dom(findAll('.method-name')[1]).hasText('parentDoSomething', 'should display 1 inherited method');\n+\n+});\n",
        "date": "19.12.2017 02:21:14",
        "repo": "ember-learn/ember-api-docs",
        "type": "add",
        "chatgpt_zeroshot": "Add file and parentClass properties to model, update methods array with file property, and add test for showing only local method implementation when duplicates."
    },
    {
        "msg": "add protocol prefix",
        "diff": "diff --git a/config/environment.js b/config/environment.js @@ -24,7 +24,7 @@ module.exports = function(environment) {\n// Here you can pass flags/options to your application instance\n// when it is created\nscrollContainerSelector: 'body, html',\n- cdnUrl: process.env.FASTLY_CDN_URL ? process.env.FASTLY_CDN_URL : ''\n+ cdnUrl: process.env.FASTLY_CDN_URL ? `https://process.env.FASTLY_CDN_URL` : ''\n},\nfastboot: {\n",
        "date": "05.01.2018 12:55:09",
        "repo": "ember-learn/ember-api-docs",
        "type": "add",
        "chatgpt_zeroshot": "Update cdnUrl to use template literals in environment.js"
    },
    {
        "msg": "add test for version switching above 2.16",
        "diff": "diff --git a/tests/acceptance/switch-versions-test.js b/tests/acceptance/switch-versions-test.js @@ -32,6 +32,16 @@ test('switching module versions less than 2.16 should retain module page', async\nassert.equal(currentURL(), '/ember/1.4/modules/ember-metal', 'navigated to v2.7 module');\n});\n+\n+test('switching module versions greater than 2.16 should retain module page', async function(assert) {\n+ await visit('/ember/2.18/modules/@ember%2Fapplication');\n+ assert.equal(currentURL(), '/ember/2.18/modules/@ember%2Fapplication', 'navigated to v2.18 module');\n+ await selectChoose('.select-container', '2.17');\n+ assert.equal(currentURL(), '/ember/2.17/modules/@ember%2Fapplication', 'navigated to v2.17 module');\n+ await selectChoose('.select-container', '2.16');\n+ assert.equal(currentURL(), '/ember/2.16/modules/@ember%2Fapplication', 'navigated to v2.16 module');\n+});\n+\ntest('switching specific method less than 2.16 should retain method', async function (assert) {\nawait visit('/ember/2.8/classes/Ember.Component/methods/didReceiveAttrs?anchor=didReceiveAttrs')\nassert.equal(currentURL(), '/ember/2.8/classes/Ember.Component/methods/didReceiveAttrs?anchor=didReceiveAttrs', 'navigated to v2.8 method');\n@@ -87,6 +97,3 @@ test('switching from class version 2.16 to class version less then 2.16 should r\nawait selectChoose('.select-container', '2.11');\nassert.equal(currentURL(), '/ember/2.11/modules/ember', 'navigated to v2.11 ember module');\n});\n-\n-\n-\n",
        "date": "09.01.2018 19:54:41",
        "repo": "ember-learn/ember-api-docs",
        "type": "add",
        "chatgpt_zeroshot": "Add tests for switching module versions greater than 2.16 while retaining module page."
    },
    {
        "msg": "add meta description to functions",
        "diff": "diff --git a/app/routes/project-version/functions/function.js b/app/routes/project-version/functions/function.js import Route from '@ember/routing/route';\nimport getFullVersion from 'ember-api-docs/utils/get-full-version';\nimport { inject as service } from '@ember/service';\n-import { get } from '@ember/object';\n+import { get, set } from '@ember/object';\n+import createExcerpt from 'ember-api-docs/utils/create-excerpt';\nexport default Route.extend({\n@@ -32,6 +33,13 @@ export default Route.extend({\n};\n},\n+ afterModel(model) {\n+ let description = model.fn.description\n+ if (description) {\n+ set(this, 'headData.description', createExcerpt(description));\n+ }\n+ },\n+\ngetFunctionObjFromList(classObj, functionName) {\nreturn classObj.get('methods').find(fn => {\nreturn fn.name === functionName;\n",
        "date": "27.06.2018 13:01:26",
        "repo": "ember-learn/ember-api-docs",
        "type": "add",
        "chatgpt_zeroshot": "Add createExcerpt function to generate description excerpt in function route."
    },
    {
        "msg": "add link to search resources",
        "diff": "diff --git a/README.md b/README.md @@ -4,7 +4,7 @@ This project contains only the [API docs](https://emberjs.com/api) portion of [E\nsee the [website](https://github.com/emberjs/website)\nand [guides](https://github.com/emberjs/guides) repositories.\n-There are four pieces that together create the Ember API docs:\n+There are five pieces that together create the Ember API docs site:\n- The app in this repository, which fetches and displays the API docs data. It is what you see at\n[https://emberjs.com/api](https://emberjs.com/api)\n- The YUIdoc code comments found in the\n@@ -14,6 +14,7 @@ deploys the result,\n[ember-jsonapi-docs](https://github.com/ember-learn/ember-jsonapi-docs)\n- [ember-styleguide](https://github.com/ember-learn/ember-styleguide),\na component and styling library shared across apps.\n+- [algolia-index-update-scripts](https://github.com/ember-learn/algolia-index-update-scripts) for managing the search feature of the api docs site\n## Contributing\n",
        "date": "11.08.2018 13:07:48",
        "repo": "ember-learn/ember-api-docs",
        "type": "add",
        "chatgpt_zeroshot": "Update README.md to reflect the addition of algolia-index-update-scripts for managing search feature in API docs site"
    },
    {
        "msg": "add test for scroll position transition between >=2.16 and <=2.15",
        "diff": "diff --git a/tests/acceptance/scroll-reset-on-transition-test.js b/tests/acceptance/scroll-reset-on-transition-test.js @@ -64,3 +64,14 @@ test('reset scroll on transitions', async function(assert) {\nassert.equal($(scrollContainerSelector).scrollTop(), 0, 'scroll position is resetted after visiting route with same tab but different model');\n});\n+\n+test('reset scroll on transitions when transition between >=2.16 and <=2.15', async function(assert) {\n+ await visit('/ember/2.16');\n+\n+ $(scrollContainerSelector).scrollTop(1000);\n+ assert.notEqual($(scrollContainerSelector).scrollTop(), 0, 'scroll position is NOT zero after scroll on fresh visit');\n+\n+ await visit('/ember/2.15/classes/Ember.View');\n+\n+ assert.equal($(scrollContainerSelector).scrollTop(), 0, 'scroll position is zero after transition to different route');\n+});\n",
        "date": "09.08.2018 11:33:25",
        "repo": "ember-learn/ember-api-docs",
        "type": "add",
        "chatgpt_zeroshot": "Reset scroll position on transitions between Ember versions 2.16 and 2.15"
    },
    {
        "msg": "add module field link to functions",
        "diff": "diff --git a/app/templates/components/class-field-description.hbs b/app/templates/components/class-field-description.hbs <span class=\"access\">deprecated</span>\n{{/if}}\n</h3>\n+ {{#if model.module}}\n+ <div class=\"attributes\">\n+ <div class=\"attribute\">\n+ <span class=\"attribute-label\">Module:</span>\n+ <span class=\"attribute-value\">{{#link-to 'project-version.modules.module' model.projectVersion.compactVersion model.module}}{{model.module}}{{/link-to}}</span>\n+ </div>\n+ </div>\n+ {{/if}}\n<p class=\"github-link\" data-test-file={{field.file}}>\n{{#if field.inherited}}\nInherited from\n",
        "date": "27.10.2018 15:57:50",
        "repo": "ember-learn/ember-api-docs",
        "type": "add",
        "chatgpt_zeroshot": "Add module attribute to class field description component"
    },
    {
        "msg": "add link to glimmer components",
        "diff": "diff --git a/app/templates/project-version/index.hbs b/app/templates/project-version/index.hbs </p>\n<h2>Commonly searched-for documentation</h2>\n<ul class=\"spec-method-list\">\n- <li>{{#link-to 'project-version.classes.class' 'Component'}}Component{{/link-to}} - a view that is completely isolated</li>\n+ <li>Components - {{#link-to 'project-version.classes.class' 'Component'}}Classic{{/link-to}} or {{#link-to 'project-version.modules.module' '@glimmer/component'}}Glimmer{{/link-to}}; a view that is completely isolated</li>\n<li>{{#link-to 'project-version.classes.class' 'ComputedProperty'}}Computed Properties{{/link-to}} - declare functions as properties</li>\n<li>{{#link-to 'project-version.classes.class' '@ember/object/computed'}}Computed Macros{{/link-to}} - shorter ways of expressing certain types of computed properties</li>\n<li>{{#link-to 'project-version.classes.class' 'EmberArray'}}EmberArray{{/link-to}} - contains methods like {{#link-to 'project-version.classes.class.methods.method' 'EmberArray' 'forEach' (query-params anchor='forEach')}}forEach{{/link-to}} and {{#link-to 'project-version.classes.class.methods.method' 'EmberArray' 'mapBy' (query-params anchor='mapBy')}}mapBy{{/link-to}} that help you iterate over Ember Objects</li>\n",
        "date": "16.10.2020 15:07:46",
        "repo": "ember-learn/ember-api-docs",
        "type": "add",
        "chatgpt_zeroshot": "Refactor documentation for Components in project-version/index.hbs"
    },
    {
        "msg": "add link to Tracked",
        "diff": "diff --git a/app/templates/project-version/index.hbs b/app/templates/project-version/index.hbs <h2>Commonly searched-for documentation</h2>\n<ul class=\"spec-method-list\">\n<li>Components - {{#link-to 'project-version.classes.class' 'Component'}}Classic{{/link-to}} or {{#link-to 'project-version.modules.module' '@glimmer/component'}}Glimmer{{/link-to}}; a view that is completely isolated</li>\n+ <li>{{#link-to 'project-version.functions.function' '@glimmer/tracking' 'tracked'}}Tracked{{/link-to}} - make your templates responsive to property updates</li>\n<li>{{#link-to 'project-version.classes.class' 'ComputedProperty'}}Computed Properties{{/link-to}} - declare functions as properties</li>\n<li>{{#link-to 'project-version.classes.class' '@ember/object/computed'}}Computed Macros{{/link-to}} - shorter ways of expressing certain types of computed properties</li>\n<li>{{#link-to 'project-version.classes.class' 'EmberArray'}}EmberArray{{/link-to}} - contains methods like {{#link-to 'project-version.classes.class.methods.method' 'EmberArray' 'forEach' (query-params anchor='forEach')}}forEach{{/link-to}} and {{#link-to 'project-version.classes.class.methods.method' 'EmberArray' 'mapBy' (query-params anchor='mapBy')}}mapBy{{/link-to}} that help you iterate over Ember Objects</li>\n",
        "date": "16.10.2020 15:16:23",
        "repo": "ember-learn/ember-api-docs",
        "type": "add",
        "chatgpt_zeroshot": "Add tracked function to commonly searched-for documentation"
    },
    {
        "msg": "add more deprecations to workflow",
        "diff": "diff --git a/config/deprecation-workflow.js b/config/deprecation-workflow.js @@ -3,5 +3,7 @@ self.deprecationWorkflow.config = {\nworkflow: [\n{ handler: 'silence', matchId: 'ember.globals-resolver' },\n{ handler: 'silence', matchId: 'ember-component.is-visible' },\n+ { handler: 'silence', matchId: 'manager-capabilities.modifiers-3-13' },\n+ { handler: 'silence', matchId: 'this-property-fallback' },\n],\n};\n",
        "date": "22.11.2022 15:51:51",
        "repo": "ember-learn/ember-api-docs",
        "type": "add",
        "chatgpt_zeroshot": "Silence deprecation warnings for manager capabilities and this property fallback."
    },
    {
        "msg": "add v1.4 docs",
        "diff": "diff --git a/docs.yaml b/docs.yaml @@ -30,5 +30,7 @@ links:\n- title: Npm\nhref: https://www.npmjs.org/package/dse-driver\nversions:\n+ - name: '1.4'\n+ ref: 'master'\n- name: '1.3'\n- ref: 'dse'\n\\ No newline at end of file\n+ ref: '1.3'\n\\ No newline at end of file\n",
        "date": "19.09.2017 11:09:45",
        "repo": "datastax/nodejs-driver",
        "type": "add",
        "chatgpt_zeroshot": "Update versions in docs.yaml to include version 1.4 with reference to master. Fix reference for version 1.3."
    },
    {
        "msg": "add jsdoc for each response error code",
        "diff": "diff --git a/lib/types/index.js b/lib/types/index.js @@ -234,6 +234,25 @@ const protocolEvents = {\n/**\n* Server error codes returned by Cassandra\n+ * @type {Object}\n+ * @property {Number} serverError Something unexpected happened.\n+ * @property {Number} protocolError Some client message triggered a protocol violation.\n+ * @property {Number} badCredentials Authentication was required and failed.\n+ * @property {Number} unavailableException Raised when coordinator knows there is not enough replicas alive to perform a query with the requested consistency level.\n+ * @property {Number} overloaded The request cannot be processed because the coordinator is overloaded.\n+ * @property {Number} isBootstrapping The request was a read request but the coordinator node is bootstrapping.\n+ * @property {Number} truncateError Error encountered during a truncate request.\n+ * @property {Number} writeTimeout Timeout encountered on write query on coordinator waiting for response(s) from replicas.\n+ * @property {Number} readTimeout Timeout encountered on read query on coordinator waitign for response(s) from replicas.\n+ * @property {Number} readFailure A non-timeout error encountered during a read request.\n+ * @property {Number} functionFailure A (user defined) function encountered during execution.\n+ * @property {Number} writeFailure A non-timeout error encountered during a write request.\n+ * @property {Number} syntaxError The submitted query has a syntax error.\n+ * @property {Number} unauthorized The logged user doesn't have the right to perform the query.\n+ * @property {Number} invalid The query is syntactically correct but invalid.\n+ * @property {Number} configError The query is invalid because of some configuration issue.\n+ * @property {Number} alreadyExists The query attempted to create a schema element (i.e. keyspace, table) that already exists.\n+ * @property {Number} unprepared Can be thrown while a prepared statement tries to be executed if the provided statement is not known by the coordinator.\n*/\nconst responseErrorCodes = {\nserverError: 0x0000,\n",
        "date": "09.03.2018 08:58:13",
        "repo": "datastax/nodejs-driver",
        "type": "add",
        "chatgpt_zeroshot": "Add server error codes returned by Cassandra to responseErrorCodes."
    },
    {
        "msg": "add nodejs 10 runtime and use new label",
        "diff": "diff --git a/build.yaml b/build.yaml @@ -6,8 +6,8 @@ schedules:\nexclude:\n# Exclude all builds for 6.x.\n- nodejs: ['6']\n- # Only build with latest for 4.x\n- - nodejs: '4'\n+ # Only build with latest for 4.x and 10.x\n+ - nodejs: ['4','10']\ncassandra: ['2.1', '2.2', '3.0']\n# Only build with 2.1 and latest for 8.x\n- nodejs: '8'\n@@ -27,8 +27,9 @@ nodejs:\n- '4'\n- '6'\n- '8'\n+ - '10'\nos:\n- - ubuntu/trusty64\n+ - ubuntu/bionic64/nodejs-driver\ncassandra:\n- '2.1'\n- '2.2'\n",
        "date": "15.05.2018 14:07:56",
        "repo": "datastax/nodejs-driver",
        "type": "add",
        "chatgpt_zeroshot": "Update build.yaml to include Node.js 10.x and change OS to ubuntu/bionic64/nodejs-driver."
    },
    {
        "msg": "add DSE 6.8 to build",
        "diff": "diff --git a/build.yaml b/build.yaml @@ -11,7 +11,7 @@ schedules:\ncassandra: ['2.1', 'dse-5.1', 'dse-6.7', 'dse-6.8']\n- nodejs: ['10']\n# Examples are run on Node.js 10 and against DSE 6.7\n- cassandra: ['2.1', '3.11', 'dse-6.0', 'dse-6.8']\n+ cassandra: ['2.1', '3.11', 'dse-6.0']\nnightly:\n# nightly job for primary branches to run all configs.\nschedule: nightly\n",
        "date": "31.10.2019 12:12:21",
        "repo": "datastax/nodejs-driver",
        "type": "add",
        "chatgpt_zeroshot": "Update Cassandra versions in build.yaml"
    },
    {
        "msg": "add Node.js 12 to build and remove old runtimes",
        "diff": "diff --git a/build.yaml b/build.yaml @@ -4,14 +4,16 @@ schedules:\nschedule: per_commit\nmatrix:\nexclude:\n- - nodejs: ['6']\n- - nodejs: ['4']\n- cassandra: ['3.11', 'dse-5.1', 'dse-6.0', 'dse-6.7', 'dse-6.8']\n- nodejs: ['8']\n- cassandra: ['2.1', 'dse-5.1', 'dse-6.7', 'dse-6.8']\n+ # Include 2.1, dse-6.0\n+ cassandra: ['3.11', 'dse-5.1', 'dse-6.7', 'dse-6.8']\n- nodejs: ['10']\n- # Examples are run on Node.js 10 and against DSE 6.7\n- cassandra: ['2.1', '3.11', 'dse-6.0']\n+ # Include 3.11, dse-6.8\n+ cassandra: ['2.1', 'dse-5.1', 'dse-6.0', 'dse-6.7']\n+ - nodejs: ['12']\n+ # Include dse-5.1, dse-6.7\n+ # Examples are run against DSE 6.7\n+ cassandra: ['2.1', '3.11', 'dse-6.0', 'dse-6.8']\nnightly:\n# nightly job for primary branches to run all configs.\nschedule: nightly\n@@ -25,10 +27,9 @@ schedules:\nbranches:\nexclude: [\"/((\\\\d+(\\\\.[\\\\dx]+)+)|dse|master)/\"]\nnodejs:\n- - '4'\n- - '6'\n- '8'\n- '10'\n+ - '12'\nos:\n- ubuntu/bionic64/nodejs-driver\ncassandra:\n",
        "date": "04.11.2019 17:39:14",
        "repo": "datastax/nodejs-driver",
        "type": "add",
        "chatgpt_zeroshot": "Update build.yaml to include new versions of Cassandra and Node.js for testing."
    },
    {
        "msg": "add fix as submitted on",
        "diff": "diff --git a/js/pager.js b/js/pager.js if (!isVisible.length) {\n$('li:visible:first, td:visible:first', self.element).attr('tabindex', '0');\n}\n- // Fix: Firefox by default not allow keyboard focus on links\n- $('li a', this.pagerBar).each(function() {\n+\n+ // Fix: Firefox by default to not allow keyboard focus on links\n+ $('li a', self.pagerBar).each(function() {\nvar a = $(this),\nli = a.closest('li');\n",
        "date": "03.01.2017 16:20:49",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Fix keyboard focus issue in Firefox for pager links"
    },
    {
        "msg": "add a fix to disable selected on",
        "diff": "diff --git a/js/listview.js b/js/listview.js // Selection View Click/Touch\nif (this.settings.selectable) {\n+\nthis.element.addClass('is-selectable');\nvar trigger = $('.list-detail-back-button').find('.app-header'),\npattern = $(this.element).closest('.list-detail, .builder');\n}\nif (!this.settings.hoverable || this.settings.hoverable === 'false') {\n+ this.element.removeClass('is-selectable');\n+ this.element.addClass('disable-hover');\n+ }\n+\n+ if (!this.settings.selectable || this.settings.selectable === 'false') {\n+ this.element.removeClass('is-selectable');\nthis.element.addClass('disable-hover');\n}\n",
        "date": "03.01.2017 17:00:01",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Add logic to disable hover and selection when settings are false"
    },
    {
        "msg": "add an event that can be triggered on a Masked field that causes it to re-mask itself.",
        "diff": "diff --git a/js/mask.js b/js/mask.js self.evaluateCurrentContents(undefined, e);\n});\n- // remove the value when blurred\n- self.element.on('blur.mask', function(e) {\n- if (self.element.prop('readonly')) {\n- e.preventDefault();\n- return false;\n- }\n-\n+ function reprocess() {\nvar val = self.element.val();\nif (self.settings.mustComplete) {\nself.processStringAgainstMask(val);\nself.element.trigger('change');\n}\n+ }\n+\n+ // custom event that can be triggered for forcing a remasking of the input field\n+ self.element.on('remask.mask', function() {\n+ reprocess();\n+ });\n+\n+ // remove the value when blurred\n+ self.element.on('blur.mask', function(e) {\n+ if (self.element.prop('readonly')) {\n+ e.preventDefault();\n+ return false;\n+ }\n+ reprocess();\nself.initValue = null;\n});\n",
        "date": "04.01.2017 15:55:53",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Refactor mask.js to reprocess input on blur and custom remask event"
    },
    {
        "msg": "add check for",
        "diff": "diff --git a/js/popupmenu.js b/js/popupmenu.js unwrapPopup($(this));\n});\n+ if (this.menu[0]) {\n$.removeData(this.menu[0], 'trigger');\n+ }\n+\nif (wrapper.data('place')) {\nwrapper.data('place').destroy();\n}\n",
        "date": "18.01.2017 09:56:18",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Remove trigger data from menu element if it exists"
    },
    {
        "msg": "add option to turn off mask's process string on blur",
        "diff": "diff --git a/js/mask.js b/js/mask.js negative: false,\nnumber: false,\nprocessOnInitialize: true, // If set to false, will not initialially mask the value of the input field.\n+ processOnBlur: true, // If set to false, will not mask the value of the input field upon blur.\nthousandsSeparator: false,\nshowSymbol: undefined, // can be 'currency', 'percent'\n},\nself.evaluateCurrentContents(undefined, e);\n});\n- function reprocess() {\n+ function reprocess(isRemask) {\nvar val = self.element.val();\nif (self.settings.mustComplete) {\nself.checkCompletion();\n}\nif (val && self.initValue !== val) {\n+ if (isRemask || self.settings.processOnBlur) {\nself.element.val('');\nself.processStringAgainstMask(val);\n+ }\nself.element.trigger('change');\n}\n}\n// custom event that can be triggered for forcing a remasking of the input field\nself.element.on('remask.mask', function() {\n- reprocess();\n+ reprocess(true);\n});\n// remove the value when blurred\n",
        "date": "19.01.2017 07:53:10",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Add processOnBlur option and update reprocess function to handle remasking."
    },
    {
        "msg": "add js-uglify task for min dist",
        "diff": "diff --git a/gruntfile.js b/gruntfile.js @@ -110,6 +110,13 @@ module.exports = function(grunt) {\n'concat:basic',\n]);\n+ grunt.registerTask('js-uglify', [\n+ 'copy:amd',\n+ 'strip_code',\n+ 'concat:basic',\n+ 'uglify',\n+ ]);\n+\n// Don't do any uglify/minify/jshint while the Dev Watch is running.\ngrunt.registerTask('sohoxi-watch', [\n'revision', 'sass', 'copy:amd', 'strip_code','concat', 'clean:amd', 'copy:main', 'usebanner'\n",
        "date": "20.01.2017 15:52:21",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Add js-uglify task to Gruntfile.js"
    },
    {
        "msg": "add existence check to supress console error",
        "diff": "diff --git a/js/listview.js b/js/listview.js }\nthis.element.attr({'tabindex': '-1'});\n- this.element.parent('.card-content, .widget-content')[0].style.overflow = 'hidden';\n+\n+ var cardWidgetContent = this.element.parent('.card-content, .widget-content');\n+ if (cardWidgetContent[0]) {\n+ cardWidgetContent[0].style.overflow = 'hidden';\n+ }\n// Add Aria Roles\nthis.element.attr({ 'role' : 'listbox',\n",
        "date": "30.01.2017 10:14:23",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Fix overflow issue in card and widget content elements"
    },
    {
        "msg": "add protection when data-validate attribute is empty",
        "diff": "diff --git a/js/validation.js b/js/validation.js if (field.is('input.dropdown') && field.prev().prev('select').attr('data-validate')) {\nvalidations = field.prev().prev('select').attr('data-validate').split(' ');\n- }\n- if (field.is('input.dropdown') && field.prev().prev('select').attr('data-validation')) {\n+ } else if (field.is('input.dropdown') && field.prev().prev('select').attr('data-validation')) {\nvalidations = field.prev().prev('select').attr('data-validation').split(' ');\n- }\n- if (field.attr('data-validation')) {\n+ } else if (field.attr('data-validation')) {\nvalidations = field.attr('data-validation').split(' ');\n- }\n- if (field.attr('data-validate')) {\n+ } else if (field.attr('data-validate')) {\nvalidations = field.attr('data-validate').split(' ');\n+ } else {\n+ validations = [];\n}\n//Filter out not needed events\n",
        "date": "01.02.2017 10:58:25",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Refactor validation logic for dropdown inputs in validation.js"
    },
    {
        "msg": "add a safety check for wrapper.",
        "diff": "diff --git a/js/popupmenu.js b/js/popupmenu.js this.menu[0].style.height = '';\nthis.menu[0].style.width = '';\n+ if (wrapper[0]) {\nwrapper[0].style.left = '-999px';\nwrapper[0].style.height = '';\nwrapper[0].style.width = '';\n+ }\nthis.menu.find('.submenu').off('mouseenter mouseleave').removeClass('is-submenu-open');\nif (menu[0]) {\n",
        "date": "07.02.2017 11:52:25",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Fix issue with submenu wrapper positioning and size"
    },
    {
        "msg": "add disabled attr back to toolbar menu button test case which properly prevents click event",
        "diff": "diff --git a/views/tests/toolbar/toolbar-menu-button-options.html b/views/tests/toolbar/toolbar-menu-button-options.html <div class=\"toolbar\">\n<div class=\"title\">\n- Toolbar\n+ Toolbar Title\n</div>\n<div class=\"buttonset\">\n<button type=\"button\" id=\"button-1\" class=\"btn\">\n- <span>Space Filler Button 1</span>\n+ <span>Space Filler With Long Text Button 1</span>\n</button>\n<button type=\"button\" id=\"button-2\" class=\"btn\">\n// Disable button or item\nif (element.is('button')) {\n- $(selector).prop('disabled', true);\n+ element.prop('disabled', true);\n} else {\nelement.addClass('is-disabled');\n+ element.children('a').attr('disabled', 'disabled'); // needed to prevent click event\n}\n});\n// Enable button or item\nif (element.is('button')) {\n- $(selector).removeAttr('disabled');\n+ element.removeAttr('disabled');\n} else {\nelement.removeClass('is-disabled');\n+ element.children('a').removeAttr('disabled');\n}\n});\n",
        "date": "13.02.2017 15:36:47",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Update toolbar title and button text, improve button disable/enable functionality"
    },
    {
        "msg": "add fix for (Unable to select first element in Ajax Dropdown)",
        "diff": "diff --git a/js/dropdown.js b/js/dropdown.js self = this,\ntouchPrevented = false,\nthreshold = 10,\n+ isEmpty = true,\npos;\nif (current.length > 0) {\n- current = current.eq(0);\n+ isEmpty = true;\n}\nif (Soho.env.os.name === 'ios') {\n}, 0);\n}\n- if (!this.settings.multiple) {\n+ if (!this.settings.multiple && !isEmpty) {\nthis.searchInput.val(current.find('a').text());\n}\nreturn;\n}\n- if (!this.settings.multiple && option.index() === this.element[0].selectedIndex) {\n- return;\n- }\n-\nvar code = option.val(),\nval = this.element.val(),\noldText = this.pseudoElem.text(),\n",
        "date": "13.02.2017 16:49:44",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Refactor dropdown.js to handle empty current selection and improve logic for single selection."
    },
    {
        "msg": "add patch from Landmark/Cheryl",
        "diff": "diff --git a/js/datagrid.js b/js/datagrid.js @@ -26,7 +26,7 @@ window.Formatters = {\nif (typeof value === 'string' && value) {\n- if (value === '00000000') { //Means no date in some applications\n+ if (value === '0'.repeat(value.length)) { //Means no date in some applications\nreturn '';\n}\n@@ -4675,12 +4675,12 @@ $.fn.datagrid = function(options) {\nreturn column || {};\n},\n- //Attempt to serialize the value back\n- coerceValue: function (value, oldVal, col) {\n+ //Attempt to serialize the value back into the dataset\n+ coerceValue: function (value, oldVal, col, row, cell) {\nvar newVal;\nif (col.serialize) {\n- newVal = col.serialize(value);\n+ newVal = col.serialize(value, oldVal, col, row, cell, this.settings.dataset[row]);\nreturn newVal;\n}\n",
        "date": "14.02.2017 14:46:24",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Refactor coerceValue function to include row and cell parameters"
    },
    {
        "msg": "add unit tests for decimal digits",
        "diff": "diff --git a/test2/unit/locale/common.js b/test2/unit/locale/common.js @@ -366,6 +366,15 @@ define([\nLocale.set('en-US');\nexpect(Locale.formatNumber(123456.123456, {style: 'decimal', maximumFractionDigits: 5})).to.equal('123,456.12345');\nexpect(Locale.formatNumber(123456.123456, {style: 'decimal', maximumFractionDigits: 4})).to.equal('123,456.1234');\n+ expect(Locale.formatNumber(1.001, {style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 3})).to.equal('1');\n+ expect(Locale.formatNumber(1.001, {style: 'decimal', minimumFractionDigits: 3, maximumFractionDigits: 3})).to.equal('1.001');\n+ expect(Locale.formatNumber(1.001, {style: 'decimal', minimumFractionDigits: 3, maximumFractionDigits: 3, round: true})).to.equal('1.001');\n+ expect(Locale.formatNumber(1.0019, {style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 3})).to.equal('1.001');\n+ expect(Locale.formatNumber(1.0019, {style: 'decimal', minimumFractionDigits: 3, maximumFractionDigits: 3})).to.equal('1.001');\n+ expect(Locale.formatNumber(1.0019, {style: 'decimal', minimumFractionDigits: 3, maximumFractionDigits: 3, round: true})).to.equal('1.002');\n+ expect(Locale.formatNumber(12345.6789, {style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 3})).to.equal('12,345.678');\n+ expect(Locale.formatNumber(12345.6789, {style: 'decimal', minimumFractionDigits: 3, maximumFractionDigits: 3})).to.equal('12,345.678');\n+ expect(Locale.formatNumber(12345.6789, {style: 'decimal', minimumFractionDigits: 3, maximumFractionDigits: 3, round: true})).to.equal('12,345.679');\n},\n'should format integers': function() {\n",
        "date": "16.02.2017 10:50:30",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Add additional test cases for formatting numbers with minimum and maximum fraction digits."
    },
    {
        "msg": "add a fix to prevent tabbing into buttons",
        "diff": "diff --git a/js/datagrid.js b/js/datagrid.js @@ -122,7 +122,7 @@ window.Formatters = {\n}\nreturn col.icon ?\n- ('<a href=\"'+ colHref +'\" class=\"btn-icon row-btn '+ (col.cssClass || '') +'\">'+\n+ ('<a href=\"'+ colHref +'\" class=\"btn-icon row-btn '+ (col.cssClass || '') +'\" tabindex=\"-1\">'+\n$.createIcon({ icon: col.icon, file: col.iconFile }) +\n'<span class=\"audible\">'+ textValue +'</span>'+\n'</a>') :\n@@ -149,7 +149,7 @@ window.Formatters = {\n}\nreturn (\n- '<button type=\"button\" class=\"btn-icon small datagrid-drilldown\">' +\n+ '<button type=\"button\" tabindex=\"-1\" class=\"btn-icon small datagrid-drilldown\">' +\n$.createIcon({icon: 'drilldown'}) +\n'<span>' + text + '</span>' +\n'</button>'\n@@ -340,7 +340,7 @@ window.Formatters = {\nButton: function (row, cell, value, col) {\nvar text = col.text ? col.text : ((value === null || value === undefined || value === '') ? '' : value.toString()),\n- markup ='<button type=\"button\" class=\"'+ ( col.icon ? 'btn-icon': 'btn') + ' row-btn ' + (col.cssClass ? col.cssClass : '') + '\">';\n+ markup ='<button type=\"button\" class=\"'+ ( col.icon ? 'btn-icon': 'btn') + ' row-btn ' + (col.cssClass ? col.cssClass : '') + '\" tabindex=\"-1\">';\nif (col.icon) {\nmarkup += $.createIcon({ icon: col.icon, file: col.iconFile });\n@@ -4883,7 +4883,7 @@ $.fn.datagrid = function(options) {\n}\n}\n- if (!this.settings.isList) {\n+ if (this.settings.cellNavigation) {\nvar headers = self.headerNodes();\nheaders.removeClass('is-active');\nheaders.eq(cell).addClass('is-active');\n",
        "date": "16.02.2017 11:29:43",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Add tabindex=\"-1\" to button elements in datagrid for accessibility"
    },
    {
        "msg": "add focus fix for",
        "diff": "diff --git a/js/datagrid.js b/js/datagrid.js @@ -4864,7 +4864,7 @@ $.fn.datagrid = function(options) {\nself.activeCell = prevCell;\n}\n- if (!$('input, button:not(.datagrid-expand-btn, .datagrid-drilldown)', self.activeCell.node).length) {\n+ if (!$('input, button:not(.datagrid-expand-btn, .datagrid-drilldown, .btn-icon)', self.activeCell.node).length) {\nself.activeCell.node.focus();\n}\nif (self.activeCell.node.hasClass('is-focusable')) {\n",
        "date": "16.02.2017 11:40:51",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Fix focus issue for buttons with .btn-icon class in datagrid."
    },
    {
        "msg": "add a check for defined container widths in the Toolbar's _destroy()_ method.",
        "diff": "diff --git a/js/toolbar.js b/js/toolbar.js }\nthis.element[0].classList.remove('do-resize');\n+ this.buttonset[0].style.width = '';\n+ if (this.title && this.title.length) {\n+ this.title[0].style.width = '';\n+ }\n+\nthis.element.removeAttr('role').removeAttr('aria-label');\n$.removeData(this.element[0], pluginName);\n}\n",
        "date": "17.02.2017 13:58:28",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Remove width styles for buttonset and title in toolbar.js"
    },
    {
        "msg": "add option to not initialize content of contextual action panel upon opening",
        "diff": "diff --git a/js/contextualactionpanel.js b/js/contextualactionpanel.js buttons: null, // List of buttons that will sit in the toolbar's Buttonset area\ntitle: 'Contextual Action Panel', // string that fits into the toolbar's Title field\ncontent: null, //Pass content through to modal\n+ initializeContent: true, // initialize content before opening\ntrigger: 'click'\n},\nsettings = $.extend({}, defaults, options);\n}).on('close.contextualactionpanel', function(e) {\npassEvent(e);\n}).on('beforeopen.contextualactionpanel', function(e) {\n+ if (self.settings.initializeContent) {\n$(this).initialize();\n+ }\npassEvent(e);\n}).on('afteropen.contextualactionpanel', function() {\nif (self.toolbar) {\n",
        "date": "22.02.2017 08:16:40",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Add option to initialize content before opening in contextual action panel"
    },
    {
        "msg": "add another fix to",
        "diff": "diff --git a/views/tests/tree/expand-collapse-splitter.html b/views/tests/tree/expand-collapse-splitter.html <div class=\"sidebar scrollable\">\n<div class=\"panel-header\">\n- <div class=\"toolbar\">\n+ <div class=\"toolbar standalone\">\n<div class=\"title\">\n<span>Nodes</span>\n</div>\n</div>\n</div>\n</div>\n- <div class=\"splitter splitter-right\"></div>\n+ <div class=\"splitter splitter-right\"><div class=\"panel-header\"></div></div>\n<ul role=\"tree\" aria-label=\"Asset Types\" class=\"tree\" data-init=\"false\" id=\"json-tree\">\n</ul>\n",
        "date": "22.02.2017 10:12:00",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Add panel-header to splitter-right in expand-collapse-splitter view"
    },
    {
        "msg": "add fix to map to zero",
        "diff": "diff --git a/js/slider.js b/js/slider.js this.settings.range = this.element.attr('data-range') !== undefined ? (this.element.attr('data-range') === 'true') : this.settings.range;\nthis.settings.step = !isNaN(this.element.attr('step')) ? Number(this.element.attr('step')) : this.settings.step;\n+ if (this.settings.value === '') {\n+ this.settings.value = this.settings.min;\n+ }\n+\n// build tick list\nvar parsedTicks;\nif (this.element.attr('data-ticks') !== undefined) {\n",
        "date": "22.02.2017 11:38:08",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Set default value if settings value is empty"
    },
    {
        "msg": "add correction for PR",
        "diff": "diff --git a/js/popupmenu.js b/js/popupmenu.js if (a.hasAttribute('disabled')) {\nSoho.DOM.addClass(li, 'is-disabled');\na.setAttribute('aria-disabled', 'true');\n- a.removeAttribute('disabled');\n}\n// menu items that contain submenus\n",
        "date": "27.02.2017 09:47:11",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Fix disabled attribute handling in popupmenu.js"
    },
    {
        "msg": "add button styles for menu/form buttons",
        "diff": "diff --git a/sass/controls/_buttons.scss b/sass/controls/_buttons.scss @@ -140,6 +140,23 @@ button {\nopacity: .7;\npointer-events: none;\n}\n+\n+ &.btn-menu {\n+ color: $primary-btn-color;\n+\n+ .icon {\n+ fill: $primary-btn-color;\n+ }\n+\n+ &:hover,\n+ &.is-open {\n+ color: $primary-btn-color;\n+\n+ .icon {\n+ fill: $primary-btn-color;\n+ }\n+ }\n+ }\n}\na.btn,\n@@ -165,7 +182,6 @@ a.btn-menu {\n}\n}\n-\n//Split Button\n.btn-split-menu {\n+ .separator {\n@@ -204,7 +220,6 @@ a.btn-menu {\n}\n}\n-\n// Normal / Secondary Button\n.btn,\n.btn-secondary {\n@@ -249,6 +264,25 @@ a.btn-menu {\n.ripple-effect {\nbackground: $graphite02;\n}\n+\n+ // Menu Button Form\n+ &.btn-menu {\n+ color: $btn-color;\n+\n+ .icon {\n+ fill: $btn-color;\n+ }\n+\n+ &:hover,\n+ &.is-open {\n+ color: $btn-color;\n+\n+ .icon {\n+ fill: $btn-color;\n+ }\n+ }\n+ }\n+\n}\n// Destructive Actions / Third Level Button\n",
        "date": "01.03.2017 11:21:56",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Add styling for menu buttons in _buttons.scss"
    },
    {
        "msg": "add api support for update dataset to Swaplist Test example:",
        "diff": "diff --git a/js/swaplist.js b/js/swaplist.js self.handle = ul.first().attr('data-swap-handle');\nself.handle = (!self.isTouch && !!$(self.handle, ul).length) ? self.handle : null;\n$(self.handle, ul).addClass('draggable')\n+ .off('mousedown.swaplist touchstart.swaplist')\n.on('mousedown.swaplist touchstart.swaplist', function() { self.selections.isHandle = true; })\n+ .off('mouseup.swaplist touchend.swaplist')\n.on('mouseup.swaplist touchend.swaplist', function() { self.selections.isHandle = false; });\nself.targets = ul.attr({'aria-dropeffect': 'none'});\nself.items = $('li:not(.is-disabled)', self.element)\n- .not('a[href], img').on('selectstart.swaplist', function() {\n+ .not('a[href], img')\n+ .off('selectstart.swaplist')\n+ .on('selectstart.swaplist', function() {\nif(this.dragDrop) { this.dragDrop(); } //ie9\nreturn false;\n}).end()\n}\n},\n+ // Update dataset\n+ updateDataset: function(ds) {\n+ var i, l, lv, c, api,\n+ self = this,\n+ s = self.settings,\n+ containers = [\n+ { type: 'available', dataset: ds.available, class: s.availableClass },\n+ { type: 'selected', dataset: ds.selected, class: s.selectedClass },\n+ { type: 'additional', dataset: ds.additional, class: s.additionalClass }\n+ ];\n+\n+ for (i = 0, l = containers.length; i < l; i++) {\n+ c = containers[i];\n+ lv = $(c.class +' .listview', self.element);\n+ api = lv.data('listview');\n+\n+ if (api) {\n+ api.unselectRowsBetweenIndexes([0, $('li', lv).length - 1]);\n+ s[c.type] = c.dataset || [];\n+ api.loadData(s[c.type]);\n+ }\n+ }\n+\n+ self.initDataset();\n+ self.makeDraggable();\n+ self.initSelected(s.availableClass);\n+ self.initSelected(s.additionalClass);\n+ },\n+\nunbind: function() {\nthis.actionButtons.off('click.swaplist');\nthis.containers.off('keydown.swaplist');\n",
        "date": "02.03.2017 16:25:46",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Refactor handle and selection event handling in swaplist.js, add updateDataset method and unbind method"
    },
    {
        "msg": "add fix to error introduced in earlier PR",
        "diff": "diff --git a/js/modal.js b/js/modal.js this.element = this.settings.content.closest('.modal');\n} else {\nvar self = this,\n- isIE11 = /Trident.*rv[ :]*11\\./i.test(navigator.userAgent);\n+ isIE11 = /Trident.*rv[ :]*11\\./i.test(navigator.userAgent),\n+ body = self.element.find('.modal-body');\n- self.element.find('.modal-body').append(self.settings.content);\n+ body.append(self.settings.content);\n//HACK force a paint for missing or icons are missing\nif (isIE11) {\nsetTimeout(function () {\n- var uses = self.settings.content[0].getElementsByTagName('use');\n+ var uses = body[0].getElementsByTagName('use');\nfor (var i = 0; i < uses.length; i++) {\nvar attr = uses[i].getAttribute('xlink:href');\nuses[i].setAttribute('xlink:href', 'x');\n",
        "date": "03.03.2017 09:21:37",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Refactor modal.js to improve performance and fix IE11 compatibility issue"
    },
    {
        "msg": "add exclude files param to get listing()",
        "diff": "diff --git a/app.js b/app.js @@ -197,7 +197,8 @@ var express = require('express'),\n}\n// Returns a directory listing as page content with working links\n- function getDirectoryListing(directory, req, res, next) {\n+ // @param Array excludes - List of files names to exclude\n+ function getDirectoryListing(directory, req, res, next, excludes) {\nfs.readdir('./views/' + directory, function(err, paths) {\nif (err) {\nconsole.log(err);\n@@ -210,12 +211,14 @@ var express = require('express'),\n// Strip out paths that aren't going to ever work\npaths.forEach(function pathIterator(val) {\n- var excludes = [\n- /^(layout)(\\s)?(\\.html)?/gm, // matches any filename that begins with \"layout\" (fx: \"layout***.html\")\n- /footer\\.html/,\n- /\\.DS_Store/\n- ],\n- match = false;\n+ if (excludes === undefined) {\n+ excludes = [];\n+ }\n+ excludes.push(/^(layout)(\\s)?(\\.html)?/gm); // matches any filename that begins with \"layout\" (fx: \"layout***.html\")\n+ excludes.push(/footer\\.html/);\n+ excludes.push(/\\.DS_Store/);\n+\n+ var match = false;\nexcludes.forEach(function(exclude) {\nif (val.match(exclude)) {\n@@ -343,7 +346,11 @@ var express = require('express'),\nend = end.replace(/\\?(.*)/, '');\nif (!end || !end.length || end === '/') {\n- getDirectoryListing('patterns/', req, res, next);\n+ var exclude = [\n+ 'step-process.html',\n+ 'step-process-markup.html'\n+ ];\n+ getDirectoryListing('patterns/', req, res, next, exclude);\nreturn;\n}\n",
        "date": "03.03.2017 13:59:18",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Refactor getDirectoryListing function to accept a list of files to exclude. Update function calls to pass in the list of exclusions."
    },
    {
        "msg": "add fix to scroll error in popupmenu",
        "diff": "diff --git a/js/popupmenu.js b/js/popupmenu.js menu = this.menu.find('.popupmenu');\nthis.menu.removeClass('is-open').attr('aria-hidden', 'true');\n+ if (this.menu[0]) {\nthis.menu[0].style.height = '';\nthis.menu[0].style.width = '';\n+ }\nif (wrapper[0]) {\nwrapper[0].style.left = '-999px';\n",
        "date": "08.03.2017 12:36:06",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Fix issue with popupmenu styling and positioning"
    },
    {
        "msg": "add stoppropogation to prevent form submitting, fix missing semicolon",
        "diff": "diff --git a/js/fileupload.js b/js/fileupload.js this.textInput = elem.parent().find('[type=\"text\"]');\nthis.textInput.on('keypress.fileupload', function (e) {\nif (e.which === 13 || e.which === 32) {\n+ e.stopPropagation();\nelem.find('input').trigger('click');\n}\n});\nif (this.fileInput.attr('readonly')) {\nthis.textInput.prop('disabled', false);\n- this.textInput[0].classList.remove('fileupload-background-transparent')\n+ this.textInput[0].classList.remove('fileupload-background-transparent');\nthis.fileInput.attr('disabled', 'disabled');\n}\n",
        "date": "09.03.2017 13:26:11",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Fix file upload input styling and behavior"
    },
    {
        "msg": "add one more fix to",
        "diff": "diff --git a/js/datagrid.js b/js/datagrid.js @@ -2848,7 +2848,6 @@ $.fn.datagrid = function(options) {\nvar percentWidth = Math.round(this.elemWidth / visibleColumns.length);\ncolWidth = percentWidth;\n-\n//Handle Columns where auto width is bigger than the percent width\nif (percentWidth < textWidth) {\ncolWidth = textWidth;\n@@ -2887,7 +2886,7 @@ $.fn.datagrid = function(options) {\nvar diff = this.elemWidth - this.totalWidth;\n- if ((diff > 0) && diff > colWidth && !this.widthPercent) {\n+ if ((diff > 0) && diff > colWidth && !this.widthPercent && !this.headerRow) {\ncolWidth = diff - 1;\nthis.headerWidths[index] = {id: col.id, width: colWidth, widthPercent: this.widthPercent};\ncol.width = colWidth;\n",
        "date": "17.03.2017 08:10:50",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Fix issue with column width calculation in datagrid"
    },
    {
        "msg": "add fix to remove x on destroy",
        "diff": "diff --git a/js/toolbarsearchfield.js b/js/toolbarsearchfield.js this.button.off('beforeopen.toolbarsearchfield');\n}\n+ if (this.xButton && this.xButton.length) {\n+ this.xButton.remove();\n+ }\n+\n// Used to determine if the \"Tab\" key was involved in switching focus to the searchfield.\n$(document).off('keydown.' + this.id);\n$('body').off('resize.' + this.id);\n",
        "date": "17.03.2017 08:18:54",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Remove xButton element and event listeners in toolbarsearchfield.js"
    },
    {
        "msg": "add fix if a space",
        "diff": "diff --git a/js/datagrid.js b/js/datagrid.js @@ -1450,7 +1450,9 @@ $.fn.datagrid = function(options) {\nthis.settings.uniqueId + '-' + suffix :\n(window.location.pathname.split('/').pop()\n.replace(/\\.xhtml|\\.shtml|\\.html|\\.htm|\\.aspx|\\.asp|\\.jspx|\\.jsp|\\.php/g, '')\n- .replace(/\\./g, '-') +'-'+\n+ .replace(/\\./g, '-')\n+ .replace(/ /g, '-')\n+ .replace(/%20/g, '-') +'-'+\n(this.element.attr('id') || 'datagrid') +'-'+ this.gridCount + suffix);\nreturn uniqueid.replace(/--/g, '-');\n",
        "date": "22.03.2017 11:38:37",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Refactor uniqueId generation in datagrid.js"
    },
    {
        "msg": "add safari fix for",
        "diff": "diff --git a/js/datagrid.js b/js/datagrid.js @@ -1151,11 +1151,13 @@ $.fn.datagrid = function(options) {\nDatagrid.prototype = {\ninit: function() {\n- var self = this;\n+ var self = this, html = $('html');\n+\nthis.isTouch = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\nthis.isFirefoxMac = (navigator.platform.indexOf('Mac') !== -1 && navigator.userAgent.indexOf(') Gecko') !== -1);\n- this.isIe = $('html').is('.ie');\n- this.isIe9 = $('html').is('.ie9');\n+ this.isIe = html.is('.ie');\n+ this.isIe9 = html.is('.ie9');\n+ this.isSafari = html.is('.is-safari');\nthis.isWindows = (navigator.userAgent.indexOf('Windows') !== -1);\nthis.settings = settings;\nthis.initSettings();\n@@ -2177,10 +2179,17 @@ $.fn.datagrid = function(options) {\nplaceholder: '<tr class=\"datagrid-reorder-placeholder\"><td colspan=\"'+ this.visibleColumns().length +'\"></td></tr>',\nhandle: '.datagrid-reorder-icon'\n})\n+ .on('beforearrange.datagrid', function(e, status) {\n+ if (self.isSafari) {\n+ status.start.css({'display': 'inline-block'});\n+ }\n+ })\n.on('arrangeupdate.datagrid', function(e, status) {\n+ if (self.isSafari) {\n+ status.end.css({'display': ''});\n+ }\n// Move the elem in the data set\nself.settings.dataset.splice(status.endIndex, 0, self.settings.dataset.splice(status.startIndex, 1)[0]);\n-\n// Fire an event\nself.element.trigger('rowreorder', [status]);\n});\n",
        "date": "22.03.2017 12:16:45",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Add Safari specific styling for row reordering in datagrid"
    },
    {
        "msg": "add deep copy to fix",
        "diff": "diff --git a/js/datagrid.js b/js/datagrid.js @@ -1161,7 +1161,7 @@ $.fn.datagrid = function(options) {\nthis.isWindows = (navigator.userAgent.indexOf('Windows') !== -1);\nthis.settings = settings;\nthis.initSettings();\n- this.originalColumns = this.settings.columns.slice(0);\n+ this.originalColumns = self.columnsFromString(JSON.stringify(this.settings.columns));\nthis.appendToolbar();\nthis.restoreColumns();\n@@ -3049,6 +3049,34 @@ $.fn.datagrid = function(options) {\n}\n},\n+ columnsFromString: function(columnStr) {\n+ var self = this,\n+ columns = JSON.parse(columnStr);\n+\n+ if (!columns) {\n+ return [];\n+ }\n+\n+ //Map back the missing functions/objects\n+ for (var i = 0; i < columns.length; i++) {\n+ var isHidden,\n+ orgCol = self.columnById(columns[i].id);\n+\n+ if (orgCol) {\n+ orgCol = orgCol[0];\n+ isHidden = columns[i].hidden;\n+\n+ $.extend(columns[i], orgCol);\n+\n+ if (isHidden !== undefined) {\n+ columns[i].hidden = isHidden;\n+ }\n+ }\n+ }\n+\n+ return columns;\n+ },\n+\n//Restore the columns from a saved list or local storage\nrestoreColumns: function (cols) {\nif (!this.settings.saveColumns || !this.canUseLocalStorage()) {\n@@ -3064,27 +3092,8 @@ $.fn.datagrid = function(options) {\nvar lsCols = localStorage[this.uniqueId('columns')];\nif (!cols && lsCols) {\n- lsCols = JSON.parse(lsCols);\nthis.originalColumns = this.settings.columns;\n-\n- //Map back the missing functions/objects\n- for (var i = 0; i < lsCols.length; i++) {\n- var isHidden,\n- orgCol = this.columnById(lsCols[i].id);\n-\n- if (orgCol) {\n- orgCol = orgCol[0];\n- isHidden = lsCols[i].hidden;\n-\n- $.extend(lsCols[i], orgCol);\n-\n- if (isHidden !== undefined) {\n- lsCols[i].hidden = isHidden;\n- }\n- }\n- }\n-\n- this.settings.columns = lsCols;\n+ this.settings.columns = this.columnsFromString(lsCols);\nreturn;\n}\n",
        "date": "22.03.2017 13:57:58",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Refactor column restoration logic to use columnsFromString method"
    },
    {
        "msg": "add </path> to double-chevron svg",
        "diff": "diff --git a/views/controls/svg.html b/views/controls/svg.html <path d=\"M15.414 3.414l-2.828-2.828c-.375-.375-.884-.586-1.415-.586h-6.671c-1.378 0-2.5 1.121-2.5 2.5v13c0 1.379 1.122 2.5 2.5 2.5h9c1.378 0 2.5-1.121 2.5-2.5v-10.672c0-.53-.211-1.039-.586-1.414zm-1.414 12.086c0 .276-.224.5-.5.5h-9c-.276 0-.5-.224-.5-.5v-13c0-.276.224-.5.5-.5h5.5v3c0 .55.45 1 1 1h3v9.5z\"></path>\n</symbol>\n- <symbol id=\"icon-double-chevron\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\">\n- <path d=\"M2 12c-.256 0-.512-.098-.707-.293-.391-.391-.391-1.023 0-1.414l3.293-3.293-3.293-3.293c-.391-.391-.391-1.023 0-1.414s1.023-.391 1.414 0l4 4c.391.391.391 1.023 0 1.414l-4 4c-.195.195-.451.293-.707.293m6 0c-.256 0-.512-.098-.707-.293-.391-.391-.391-1.023 0-1.414l3.293-3.293-3.293-3.293c-.391-.391-.391-1.023 0-1.414s1.023-.391 1.414 0l4 4c.391.391.391 1.023 0 1.414l-4 4c-.195.195-.451.293-.707.293\" fill=\"#5C5C5C\"/>\n+ <symbol id=\"icon-double-chevron\" viewBox=\"0 0 14 14\">\n+ <path d=\"M2 12c-.256 0-.512-.098-.707-.293-.391-.391-.391-1.023 0-1.414l3.293-3.293-3.293-3.293c-.391-.391-.391-1.023 0-1.414s1.023-.391 1.414 0l4 4c.391.391.391 1.023 0 1.414l-4 4c-.195.195-.451.293-.707.293m6 0c-.256 0-.512-.098-.707-.293-.391-.391-.391-1.023 0-1.414l3.293-3.293-3.293-3.293c-.391-.391-.391-1.023 0-1.414s1.023-.391 1.414 0l4 4c.391.391.391 1.023 0 1.414l-4 4c-.195.195-.451.293-.707.293\" fill=\"#5C5C5C\"></path>\n</symbol>\n<symbol id=\"icon-down-arrow\" viewBox=\"0 0 18 18\">\n",
        "date": "23.03.2017 16:30:49",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Refactor SVG code for icon-double-chevron to remove width and height attributes."
    },
    {
        "msg": "add check in case activeRow array is empty.",
        "diff": "diff --git a/js/datagrid.js b/js/datagrid.js @@ -4358,7 +4358,7 @@ $.fn.datagrid = function(options) {\n// activate a row when in mixed selection mode\nactivateRow: function(idx) {\n- if (this.activatedRow().row !== idx) {\n+ if (this.activatedRow().length === 0 || this.activatedRow()[0].row !== idx) {\nthis.toggleRowActivation(idx);\n}\n},\n",
        "date": "28.03.2017 08:10:32",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Fix row activation logic in mixed selection mode"
    },
    {
        "msg": "add fix for lower case french text",
        "diff": "diff --git a/sass/controls/_buttons.scss b/sass/controls/_buttons.scss @@ -534,6 +534,13 @@ html[dir='rtl'] {\n}\n}\n+//Do not allow upper case in french\n+html[lang^='fr-'] {\n+ [class^=\"btn\"] {\n+ text-transform: none;\n+ }\n+}\n+\n//Special \"Ghost\" Secondary Border button-font-size\n.btn-secondary-border {\n@include transition(all 300ms cubic-bezier(.17, .04, .03, .94));\n",
        "date": "30.03.2017 15:15:53",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Disallow upper case in French language buttons"
    },
    {
        "msg": "add fix for issue of not focusing the datagrid-expandable row cells Edits to git workflow",
        "diff": "diff --git a/js/datagrid.js b/js/datagrid.js @@ -3627,7 +3627,7 @@ $.fn.datagrid = function(options) {\n//Returns a cell node\ncellNode: function (row, cell, includeGroups) {\n- var rowNode = this.tableBody.find('tr').eq(row);\n+ var rowNode = this.tableBody.find('tr').not('.datagrid-expandable-row').eq(row);\nif (row instanceof jQuery) {\nrowNode = row;\n",
        "date": "04.04.2017 17:33:34",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Update cellNode function to exclude expandable rows in datagrid."
    },
    {
        "msg": "add a rule so datagrid in a pane would display it's pager bar",
        "diff": "diff --git a/sass/layouts/_panes.scss b/sass/layouts/_panes.scss width: 100%;\n}\n+ // used for panes that have a datagrid with a pager\n+ .datagrid-container.paginated {\n+ height: calc(100% - 103px);\n+ }\n+\n// scss-lint:enable ImportantRule\n//\n//Directional Panes\n",
        "date": "13.04.2017 10:31:49",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Add styling for panes with datagrid and pager"
    },
    {
        "msg": "add a rules so datagrid in a pane would display it's pager bar",
        "diff": "diff --git a/sass/layouts/_panes.scss b/sass/layouts/_panes.scss }\n// used for panes that have a datagrid with a pager\n- .datagrid-container.paginated {\n+ .datagrid-container {\n+ height: 100%;\n+\n+ &.paginated {\n+ height: calc(100% - 58px);\n+ }\n+ }\n+\n+ .toolbar + .datagrid-container {\n+ height: calc(100% - 45px);\n+\n+ &.paginated {\n+ height: calc(100% - 103px);\n+ }\n+ }\n+\n+ .tab-container.horizontal {\n+ height: 100%;\n+\n+ .tab-panel {\n+ height: calc(100% - 50px);\n+\n+ .page-container {\n+ position: static;\n+\n+ .toolbar + .datagrid-container {\n+ height: calc(100% - 45px);\n+\n+ &.paginated {\nheight: calc(100% - 103px);\n}\n+ }\n+\n+ // used for panes that have a datagrid with a pager\n+ .datagrid-container {\n+ height: 100%;\n+\n+ &.paginated {\n+ height: calc(100% - 58px);\n+ }\n+ }\n+ }\n+ }\n+ }\n// scss-lint:enable ImportantRule\n//\n",
        "date": "13.04.2017 12:35:13",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Refactor layout styles for datagrid containers and pagers"
    },
    {
        "msg": "add fix to color / slice sorting",
        "diff": "diff --git a/js/chart.js b/js/chart.js @@ -25,6 +25,7 @@ window.Chart = function(container) {\nthis.isTouch = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\nthis.pieColors = d3.scale.ordinal().range(colorRange);\n+ this.colorRange = colorRange;\nthis.greyColors = d3.scale.ordinal().range(['#737373', '#999999', '#bdbdbd', '#d8d8d8']);\nthis.sparklineColors = d3.scale.ordinal().range(['#1D5F8A', '#999999', '#bdbdbd', '#d8d8d8']);\nthis.colors = d3.scale.ordinal().range(colorRange);\n@@ -55,7 +56,7 @@ window.Chart = function(container) {\n}\nif (chartType === 'pie') {\n- return this.pieColors(i);\n+ return this.colorRange[i];\n}\nif (chartType === 'bar-single' || chartType === 'column-single') {\nreturn '#1D5F8A';\n@@ -794,7 +795,7 @@ window.Chart = function(container) {\nvar chartData = initialData[0].data;\nchartData = chartData.sort(function(a, b) {\n- return +a.value - +b.value;\n+ return isRTL ? +b.value - +a.value : +a.value - +b.value;\n});\nvar total = d3.sum(chartData, function(d) { return d.value; });\n@@ -812,12 +813,8 @@ window.Chart = function(container) {\nvar pie = d3.layout.pie().value(function (d) {\nreturn d.value;\n- });\n- // .sort(null);\n+ }).sort(null);\n- if (isRTL) {\n- pie.sort(null);\n- }\n// Store our chart dimensions\nvar dims = {\n@@ -954,7 +951,7 @@ window.Chart = function(container) {\nclearInterval(tooltipInterval);\ncharts.hideTooltip();\n})\n- .style('fill', function(d, i) {return charts.chartColor(i, 'pie', d.data); })\n+ .style('fill', function(d, i) {return charts.chartColor(self.isRTL ? chartData.length-i-1 : i, 'pie', d.data); })\n.transition().duration(750)\n.attrTween('d', function(d) {\nvar i = d3.interpolate(d.startAngle + 0.1, d.endAngle);\n@@ -1079,7 +1076,7 @@ window.Chart = function(container) {\n},\nlabelsColorFormatter = function (d, i, opt) {\n- return opt === 'color-as-arc' ? (charts.chartColor(i, 'pie', d.data)) : (opt === 'default' ? '' : opt);\n+ return opt === 'color-as-arc' ? (charts.chartColor(self.isRTL ? chartData.length-i-1 : i, 'pie', d.data)) : (opt === 'default' ? '' : opt);\n},\ndrawTextlabels = function (isShortName) {\n",
        "date": "19.04.2017 10:19:52",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Refactor chart.js to use colorRange instead of pieColors and update sorting logic for RTL support."
    },
    {
        "msg": "add a quick check to filter out popupmenus that are actually submenus.",
        "diff": "diff --git a/js/popupmenu.js b/js/popupmenu.js return;\n}\n- var otherMenus = $('.popupmenu.is-open').not(this.menu); //close others.\n+ var otherMenus = $('.popupmenu.is-open').filter(function() {\n+ return $(this).parents('.popupmenu').length === 0;\n+ }).not(this.menu); //close others.\n+\notherMenus.each(function() {\nvar api = $(this).data('trigger').data('popupmenu');\nif (api && typeof api.close === 'function') {\n",
        "date": "28.04.2017 11:52:42",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Refactor close functionality for popup menus to only close menus that are not nested within the current menu."
    },
    {
        "msg": "add example for landmark",
        "diff": "diff --git a/views/tests/datagrid/datagrid-row-click.html b/views/tests/datagrid/datagrid-row-click.html +<div class=\"row\">\n+ <div class=\"six columns\">&nbsp;</div>\n+ <div class=\"six columns\">\n+ <h3>Grid Functional Test</h3>\n+ <p>A visual test for showing the ability to click rows to navigate.\n+ You should be able to click any row, while hovering the row you will see a cursor.\n+ Then it will fire an alert() when you click it.\n+ </p>\n+ </div>\n+</div>\n<div class=\"row\">\n<div class=\"twelve columns\">\n-\n<div id=\"datagrid\">\n</div>\n-\n</div>\n</div>\n",
        "date": "10.05.2017 15:25:41",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Add grid functional test description to datagrid-row-click.html"
    },
    {
        "msg": "add a fix for broken open orders sample.",
        "diff": "diff --git a/views/examples/saleshub/open-orders-grid.html b/views/examples/saleshub/open-orders-grid.html <header class=\"header has-tabs-only\">\n<div class=\"call-to-action-header\">\n- <div class=\"tab-container header-tabs\">\n+ <div class=\"tab-container header-tabs\" data-options=\"{containerElement: '#header-tabs-container'}\">\n<ul class=\"tab-list\">\n<li class=\"tab is-selected\"><a href=\"#recent-activity\">Recent Activity</a></li>\n<li class=\"tab\"><a href=\"#customers\">Customers</a></li>\n</div>\n</div>\n</header>\n- <div class=\"page-container scrollable\">\n+ <div class=\"page-container scrollable\" id=\"header-tabs-container\">\n<div id=\"recent-activity\" class=\"tab-panel\">\n<header class=\"subheader\">\n<div class=\"full-searchfield-container\">\n",
        "date": "08.06.2017 12:28:53",
        "repo": "infor-design/enterprise",
        "type": "add",
        "chatgpt_zeroshot": "Add data-options to header-tabs container and set id for page-container"
    },
    {
        "msg": "fix small typo in utilities.md",
        "diff": "diff --git a/docs/utilities.md b/docs/utilities.md @@ -89,6 +89,6 @@ If you want to Escrow some funds, check out [`Escrow`](api/payment#escrow) and [\n### Misc\n-Want to check if an address is a contract? Use [`Address`](api/utils#address) and [`Address#isContract()`](api/utils#Address.isContract(address)).\n+Want to check if an address is a contract? Use [`Address`](api/utils#address) and [`Address.isContract()`](api/utils#Address.isContract(address)).\nWant to keep track of some numbers that increment by 1 every time you want another one? Check out [`Counter`](api/drafts#counter). This is especially useful for creating incremental ERC721 `tokenId`s like we did in the last section.\n",
        "date": "04.06.2019 10:51:33",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "fix",
        "chatgpt_zeroshot": "Fix typo in Address class method link in utilities.md"
    },
    {
        "msg": "fix a grammatical error in a comment changed a comment in the isContract function to make it grammatically right.",
        "diff": "diff --git a/contracts/utils/Address.sol b/contracts/utils/Address.sol @@ -24,7 +24,7 @@ library Address {\n* ====\n*/\nfunction isContract(address account) internal view returns (bool) {\n- // This method relies in extcodesize, which returns 0 for contracts in\n+ // This method relies on extcodesize, which returns 0 for contracts in\n// construction, since the code is only stored at the end of the\n// constructor execution.\n",
        "date": "08.09.2020 23:08:12",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "fix",
        "chatgpt_zeroshot": "Fix typo in comment in isContract function"
    },
    {
        "msg": "fix the ERC721 link in the ERC1155 doc",
        "diff": "diff --git a/docs/modules/ROOT/pages/erc1155.adoc b/docs/modules/ROOT/pages/erc1155.adoc ERC1155 is a novel token standard that aims to take the best from previous standards to create a xref:tokens.adoc#different-kinds-of-tokens[*fungibility-agnostic*] and *gas-efficient* xref:tokens.adoc#but_first_coffee_a_primer_on_token_contracts[token contract].\n-TIP: ERC1155 draws ideas from all of xref:erc20.adoc[ERC20], xref:721.adoc[ERC721], and xref:erc777.adoc[ERC777]. If you're unfamiliar with those standards, head to their guides before moving on.\n+TIP: ERC1155 draws ideas from all of xref:erc20.adoc[ERC20], xref:erc721.adoc[ERC721], and xref:erc777.adoc[ERC777]. If you're unfamiliar with those standards, head to their guides before moving on.\n[[multi-token-standard]]\n== Multi Token Standard\n",
        "date": "27.05.2021 05:11:08",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "fix",
        "chatgpt_zeroshot": "Update references to ERC721 in ERC1155 documentation"
    },
    {
        "msg": "fix a typo in erc20-supply.adoc Fix a typo",
        "diff": "diff --git a/docs/modules/ROOT/pages/erc20-supply.adoc b/docs/modules/ROOT/pages/erc20-supply.adoc @@ -4,7 +4,7 @@ In this guide you will learn how to create an ERC20 token with a custom supply m\nThe standard interface implemented by tokens built on Ethereum is called ERC20, and Contracts includes a widely used implementation of it: the aptly named xref:api:token/ERC20.adoc[`ERC20`] contract. This contract, like the standard itself, is quite simple and bare-bones. In fact, if you try to deploy an instance of `ERC20` as-is it will be quite literally useless... it will have no supply! What use is a token with no supply?\n-The way that supply is created is not defined in the ERC20 document. Every token is free to experiment with their own mechanisms, ranging from the most decentralized to the most centralized, from the most naive to the most researched, and more.\n+The way that supply is created is not defined in the ERC20 document. Every token is free to experiment with its own mechanisms, ranging from the most decentralized to the most centralized, from the most naive to the most researched, and more.\n[[fixed-supply]]\n== Fixed Supply\n",
        "date": "07.12.2021 14:41:21",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "fix",
        "chatgpt_zeroshot": "Fix typo in ERC20 supply documentation"
    },
    {
        "msg": "fix broken pull request links in change log",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md * `Votes`: Added a base contract for vote tracking with delegation. ([#2944](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2944))\n* `ERC721Votes`: Added an extension of ERC721 enabled with vote tracking and delegation. ([#2944](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2944))\n* `ERC2771Context`: use immutable storage to store the forwarder address, no longer an issue since Solidity >=0.8.8 allows reading immutable variables in the constructor. ([#2917](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2917))\n- * `Base64`: add a library to parse bytes into base64 strings using `encode(bytes memory)` function, and provide examples to show how to use to build URL-safe `tokenURIs`. ([#2884](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/#2884))\n- * `ERC20`: reduce allowance before triggering transfer. ([#3056](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/#3056))\n- * `ERC20`: do not update allowance on `transferFrom` when allowance is `type(uint256).max`. ([#3085](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/#3085))\n- * `ERC777`: do not update allowance on `transferFrom` when allowance is `type(uint256).max`. ([#3085](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/#3085))\n+ * `Base64`: add a library to parse bytes into base64 strings using `encode(bytes memory)` function, and provide examples to show how to use to build URL-safe `tokenURIs`. ([#2884](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2884))\n+ * `ERC20`: reduce allowance before triggering transfer. ([#3056](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3056))\n+ * `ERC20`: do not update allowance on `transferFrom` when allowance is `type(uint256).max`. ([#3085](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3085))\n+ * `ERC777`: do not update allowance on `transferFrom` when allowance is `type(uint256).max`. ([#3085](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3085))\n* `SignedMath`: a new signed version of the Math library with `max`, `min`, and `average`. ([#2686](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2686))\n* `SignedMath`: add a `abs(int256)` method that returns the unsigned absolute value of a signed value. ([#2984](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2984))\n* `ERC1967Upgrade`: Refactor the secure upgrade to use `ERC1822` instead of the previous rollback mechanism. This reduces code complexity and attack surface with similar security guarantees. ([#3021](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3021))\n## 4.4.2 (2022-01-11)\n### Bugfixes\n- * `GovernorCompatibilityBravo`: Fix error in the encoding of calldata for proposals submitted through the compatibility interface with explicit signatures. ([#3100](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/#3100))\n+ * `GovernorCompatibilityBravo`: Fix error in the encoding of calldata for proposals submitted through the compatibility interface with explicit signatures. ([#3100](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3100))\n## 4.4.1 (2021-12-14)\n",
        "date": "16.01.2022 01:02:27",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "fix",
        "chatgpt_zeroshot": "Add new features and improvements to contracts, including vote tracking, delegation, and signed math functions. Refactor secure upgrade mechanism for better security guarantees. Fix bug in encoding calldata for proposals in GovernorCompatibilityBravo."
    },
    {
        "msg": "fix broken forum URL",
        "diff": "diff --git a/contracts/token/ERC20/ERC20.sol b/contracts/token/ERC20/ERC20.sol @@ -15,7 +15,7 @@ import \"../../utils/Context.sol\";\n* For a generic mechanism see {ERC20PresetMinterPauser}.\n*\n* TIP: For a detailed writeup see our guide\n- * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n+ * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n* to implement supply mechanisms].\n*\n* We have followed general OpenZeppelin Contracts guidelines: functions revert\n",
        "date": "08.07.2022 19:03:39",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "fix",
        "chatgpt_zeroshot": "Update link to ERC20 supply mechanisms guide in ERC20.sol"
    },
    {
        "msg": "fix another broken dataset publication translation",
        "diff": "diff --git a/src/routes/Dataset/components/DatasetDataGouvPublication/DatasetDataGouvPublication.js b/src/routes/Dataset/components/DatasetDataGouvPublication/DatasetDataGouvPublication.js @@ -69,7 +69,7 @@ class DatasetDataGouvPublication extends React.PureComponent {\n} else {\nreturn (\n<div className={styles.checklist}>\n- <Trans i18nKey='DatasetDataGouvPublication.cantBePublished'>\n+ <Trans i18nKey='components.DatasetDataGouvPublication.cantBePublished'>\nThis dataset <b>can not</b> be published on data.gouv.fr\n</Trans>\n{expanded && (\n",
        "date": "28.08.2017 20:44:34",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor i18n key in DatasetDataGouvPublication component"
    },
    {
        "msg": "fix broken Filter import in FilterSummary",
        "diff": "diff --git a/src/routes/Search/components/FiltersSummary/FiltersSummary.js b/src/routes/Search/components/FiltersSummary/FiltersSummary.js @@ -2,7 +2,7 @@ import React from 'react'\nimport { translate } from 'react-i18next'\nimport PropTypes from 'prop-types'\n-import Filter from 'components/Filter'\n+import Filter from 'common/components/Filter'\nimport styles from './FiltersSummary.scss'\n",
        "date": "01.09.2017 15:08:47",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "fix",
        "chatgpt_zeroshot": "Move Filter component to common folder"
    },
    {
        "msg": "fix some issues with large facets counts",
        "diff": "diff --git a/components/facet.js b/components/facet.js @@ -85,7 +85,7 @@ const Facet = ({ facet, count, detailed, remove, onClick, t, i18n }) => {\n}\n.value {\n- max-width: 210px;\n+ max-width: 215px;\noverflow: hidden;\nwhite-space: nowrap;\ntext-overflow: ellipsis;\n@@ -95,11 +95,11 @@ const Facet = ({ facet, count, detailed, remove, onClick, t, i18n }) => {\n}\n@media (max-width: 960px) {\n- max-width: 280px;\n+ max-width: 255px;\n}\n@media (max-width: 551px) {\n- max-width: 160px;\n+ max-width: 145px;\n}\n}\n@@ -122,7 +122,13 @@ const Facet = ({ facet, count, detailed, remove, onClick, t, i18n }) => {\n.number {\nline-height: 26px;\nheight: 26px;\n- margin-left: 5px;\n+ margin-left: 4px;\n+ font-size: 0.9em;\n+\n+ @media (max-width: 551px) {\n+ margin-left: 2px;\n+ font-size: 0.8em;\n+ }\n}\n`}</style>\n</div>\n",
        "date": "10.11.2017 11:20:41",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "fix",
        "chatgpt_zeroshot": "Adjust max-width and margin-left values in facet component styling"
    },
    {
        "msg": "fix broken dataset margins",
        "diff": "diff --git a/pages/dataset.js b/pages/dataset.js @@ -225,11 +225,8 @@ class DatasetPage extends React.Component {\n@media (max-width: 1080px) {\nflex: 1 0 100%;\nwidth: 100%;\n- order: 2;\n- }\n-\n- @media (max-width: 768px) {\nmargin: 0;\n+ order: 2;\n}\n}\n",
        "date": "27.11.2017 17:16:52",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor responsive styling in dataset page"
    },
    {
        "msg": "fix small device header links margins",
        "diff": "diff --git a/components/page/header/index.js b/components/page/header/index.js @@ -132,7 +132,7 @@ class Header extends React.Component {\n}\n@media (max-width: 551px) {\n- margin-right: 5px;\n+ margin-right: 15px;\nmargin-bottom: 2px;\n+ li {\n",
        "date": "06.12.2017 17:33:56",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "fix",
        "chatgpt_zeroshot": "Increase margin-right in Header component for smaller screens"
    },
    {
        "msg": "fix active browse icon colour",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/constants.js b/MaterialSkin/HTML/material/html/js/constants.js @@ -26,7 +26,7 @@ const LMS_BLANK_IMAGE = \"html/images/blank.png\";\nconst LMS_DOUBLE_CLICK_TIMEOUT = 300;\nconst LMS_DARK_SVG = \"fff\";\nconst LMS_LIGHT_SVG = \"444\";\n-const LMS_DARK_ACTIVE_SVG =\"58b7ff\";\n+const LMS_DARK_ACTIVE_SVG =\"82b1ff\";\nconst LMS_LIGHT_ACTIVE_SVG = \"346dd2\";\n// Semi-constant :-)\n",
        "date": "09.09.2019 20:18:36",
        "repo": "cdrummond/lms-material",
        "type": "fix",
        "chatgpt_zeroshot": "Update LMS_DARK_ACTIVE_SVG color code"
    },
    {
        "msg": "fix all meterial CSS files",
        "diff": "diff --git a/mkrel.py b/mkrel.py @@ -155,8 +155,8 @@ def fixClassisSkinMods():\nwith open(path, \"r\") as f:\nlines=f.readlines()\nfor line in lines:\n- for css in [\"classic-skin-mods-dark\", \"classic-skin-mods-light\", \"classic-skin-mods\"]:\n- line=line.replace(css+\".css\", css+\".min.css\")\n+ if \"html/css/\" in line:\n+ line=line.replace(\".css?\", \".min.css?\")\nfixedLines.append(line)\nwith open(path, \"w\") as f:\n",
        "date": "09.02.2020 09:42:30",
        "repo": "cdrummond/lms-material",
        "type": "fix",
        "chatgpt_zeroshot": "Fix issue with classis skin mods file paths"
    },
    {
        "msg": "fix some classic ssskin icon mods",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/css/classic-skin/mods.css b/MaterialSkin/HTML/material/html/css/classic-skin/mods.css @@ -28,57 +28,6 @@ div#browsedbList {\nmargin-left:auto!important;\nmargin-right:auto!important;\n}\n-\n-/* hide add/play/fav and next-page images */\n-.browsedbLeftControls > a > img,\n-.browsedbRightControls > a > img,\n-.browsedbControls > a > img {\n- display:none;\n-}\n-.browsedbLeftControls > a.loadtracks:before,\n-.browsedbControls > a.loadtracks:before,\n-.browsedbLeftControls > a.addtracks:before,\n-.browsedbControls > a.addtracks:before,\n-.browsedbControls > a.edititem:before,\n-.browsedbRightControls > a.edititem:before,\n-.browsedbRightControls > a.heartitem:before,\n-.browsedbRightControls > a.removeitem:before, {\n- font-family: \"Material Icons\";\n- font-size:24px;\n- margin-right:4px;\n- text-decoration:none;\n- color:var(--text-color);\n-}\n-\n-/* Set play icon */\n-.browsedbLeftControls > a.loadtracks:before,\n-.browsedbControls > a.loadtracks:before {\n- content:\"\\e039\";\n-}\n-/* Set add icon */\n-.browsedbLeftControls > a.addtracks:before,\n-.browsedbControls > a.addtracks:before {\n- content:\"\\e148\";\n-}\n-/* Set edit icon */\n-.browsedbControls > a.edititem:before,\n-.browsedbRightControls > a.edititem:before {\n- content:\"edit\";\n-}\n-.browsedbRightControls > a.heartitem:before {\n- content:\"favorite\";\n-}\n-.browsedbRightControls > a.removeitem:before {\n- content:\"close\";\n-}\n-@media (hover: none) and (pointer: coarse) { /* Touch devices */\n- .browsedbLeftControls > a.loadtracks:before {\n- margin-right:12px;\n- }\n- .browsedbLeftControls > a.addtracks:before {\n- margin-right:8px;\n- }\n-}\n.pagebar > a, .pagebar > a > img, .pagebar > b, .browsedbLeftControls > a {\nvertical-align:middle;\n}\n@@ -151,10 +100,6 @@ td input { /* Fix entry/combo alignment in additional browse modes */\npadding-bottom:0px;\n}\n-td input[type=checkbox] { /* Fix checkbox in Performance / Custom pre-caching specification */\n- margin-top:-6px;\n-}\n-\n/* Advanced search */\n.border tbody tr td input[type=text] {\npadding-bottom:1px;\n@@ -246,7 +191,7 @@ input[type=\"submit\"], input[type=\"button\"] {\n}\ninput[type=checkbox], input[type=radio] {\n- vertical-align: sub;\n+ vertical-align: middle;\nwidth:24px;\nheight:24px;\n}\n@@ -254,13 +199,14 @@ input[type=checkbox], input[type=radio] {\ninput[type=checkbox]:before {\nfont-family: \"Material Icons\";\nfont-size:24px;\n- content:\"\\e835\";\n+ line-height:24px;\n+ content:\"check_box_outline_blank\";\n/*margin-right:4px;*/\ntext-decoration:none;\n}\ninput[type=checkbox]:checked:before {\n- content:\"\\e834\";\n+ content:\"check_box\";\n}\ninput[type=checkbox], input[type=radio] {\n@@ -273,16 +219,17 @@ input[type=checkbox], input[type=radio] {\n}\ninput[type=radio]:before {\n- vertical-align: sub;\n+ vertical-align: middle;\nfont-family: \"Material Icons\";\nfont-size:24px;\n- content:\"\\e836\";\n+ line-height:24px;\n+ content:\"radio_button_unchecked\";\n/*margin-right:4px;*/\ntext-decoration:none;\n}\ninput[type=radio]:checked:before {\n- content:\"\\e837 \";\n+ content:\"radio_button_checked\";\n}\n[type=\"checkbox\"]:before, [type=\"radio\"]:before {\n@@ -432,3 +379,64 @@ div#Info0, div#Info1, div#Info2, div#Info3, div#Info4, div#Info5, div#Info6, div\n.progressItem {\nmargin-bottom:-8px;\n}\n+\n+/* hide add/play/fav and next-page images */\n+.browsedbLeftControls > a > img,\n+.browsedbRightControls > a > img,\n+.browsedbControls > a > img {\n+ display:none;\n+}\n+\n+.browsedbLeftControls > a.loadtracks,\n+.browsedbControls > a.loadtracks,\n+.browsedbLeftControls > a.addtracks,\n+.browsedbControls > a.addtracks,\n+.browsedbControls > a.edititem,\n+.browsedbRightControls > a.edititem,\n+.browsedbRightControls > a.heartitem,\n+.browsedbRightControls > a.removeitem,\n+.browsedbLeftControls > a.loadtracks:before,\n+.browsedbControls > a.loadtracks:before,\n+.browsedbLeftControls > a.addtracks:before,\n+.browsedbControls > a.addtracks:before,\n+.browsedbControls > a.edititem:before,\n+.browsedbRightControls > a.edititem:before,\n+.browsedbRightControls > a.heartitem:before,\n+.browsedbRightControls > a.removeitem:before {\n+ font-family: \"Material Icons\"!important;\n+ font-size:24px!important;\n+ line-height:24px!important;\n+ margin-right:4px;\n+ text-decoration:none!important;\n+ color:var(--text-color)!important;\n+}\n+\n+/* Set play icon */\n+.browsedbLeftControls > a.loadtracks:before,\n+.browsedbControls > a.loadtracks:before {\n+ content:\"play_circle_outline\";\n+}\n+/* Set add icon */\n+.browsedbLeftControls > a.addtracks:before,\n+.browsedbControls > a.addtracks:before {\n+ content:\"add_circle_outline\";\n+}\n+/* Set edit icon */\n+.browsedbControls > a.edititem:before,\n+.browsedbRightControls > a.edititem:before {\n+ content:\"edit\";\n+}\n+.browsedbRightControls > a.heartitem:before {\n+ content:\"favorite\";\n+}\n+.browsedbRightControls > a.removeitem:before {\n+ content:\"close\";\n+}\n+@media (hover: none) and (pointer: coarse) { /* Touch devices */\n+ .browsedbLeftControls > a.loadtracks:before {\n+ margin-right:12px;\n+ }\n+ .browsedbLeftControls > a.addtracks:before {\n+ margin-right:8px;\n+ }\n+}\n",
        "date": "25.09.2020 12:14:51",
        "repo": "cdrummond/lms-material",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor CSS styles for browse controls and icons"
    },
    {
        "msg": "fix some CSS errors",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/css/style.css b/MaterialSkin/HTML/material/html/css/style.css @@ -761,7 +761,7 @@ div.v-subheader {\n}\n.toolbar-button {\n- margin:var(--toolbar-button-margin) 6px 4px 6px; !important;/* t, r, b, l */\n+ margin:var(--toolbar-button-margin) 6px 4px 6px !important;/* t, r, b, l */\nmin-height:36px !important;\nmin-width:36px !important;\n}\n@@ -1200,7 +1200,6 @@ progress {\n.shuffle-albums {\nborder:2px solid;\nborder-radius:50%;\n- padding:-2px;\n}\n.list-active {\n@@ -1333,11 +1332,6 @@ progress {\nmargin-right:8px;\n}\n-.subheader-action {\n- margin-left:auto;\n- margin-right:-var(--std-font-size);\n-}\n-\n#browse-list .v-subheader {\ncursor:pointer;\npadding-left:17px;\n@@ -1516,7 +1510,7 @@ progress {\ntext-align:center;\n}\n-.v-icon:not(.image-grid-item-icon), .svg-list-img, .svg-img, .radio-image .svg-img {\n+.v-icon:not(.image-grid-item-icon):not(.shuffle-albums), .svg-list-img, .svg-img, .radio-image .svg-img {\nwidth:var(--icon-size) !important;\nheight:var(--icon-size) !important;\nvertical-align:middle;\n@@ -1842,7 +1836,7 @@ div.v-subheader {\npadding-top:calc(var(--vh, 1vh)*8);\ntext-align:center;\nfont-weight:var(--std-weight);\n- font-size:val(--std-font-size);\n+ font-size:var(--std-font-size);\nopacity:0.55;\nposition:fixed;\nwidth:100%;\n@@ -1866,7 +1860,7 @@ div.v-subheader {\nfont-size:24px;\n}\n.screesaver-name {\n- font-size:val(--small-font-size);\n+ font-size:var(--small-font-size);\n}\n}\n",
        "date": "17.04.2021 12:43:08",
        "repo": "cdrummond/lms-material",
        "type": "fix",
        "chatgpt_zeroshot": "Fix styling issues in CSS file"
    },
    {
        "msg": "fix the root url to the main site",
        "diff": "diff --git a/ember-cli-build.js b/ember-cli-build.js @@ -30,13 +30,19 @@ module.exports = function(defaults) {\n'asset-cache': {\nversion: '4', //Might have to change this with the app build,\nprepend\n- }\n+ },\n});\n+ //TODO move the proxying main site to a variable for testing & dev\n+ app.options['ember-service-worker'] = {\n+ rootUrl: app.ENV.environment === 'production' ? 'https://emberjs.com/api-new/': '/'\n+ };\n+\n+\napp.options['esw-cache-first'] = {\npatterns: [\n- `${app.env.API_HOST}/json-docs-1/(.+)`,\n- `${app.env.API_HOST}/rev-index/(.+)`\n+ `${app.ENV.API_HOST}/json-docs-1/(.+)`,\n+ `${app.ENV.API_HOST}/rev-index/(.+)`\n]\n};\n",
        "date": "29.03.2017 11:35:52",
        "repo": "ember-learn/ember-api-docs",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor asset caching and add rootUrl variable for testing & dev. Update API_HOST references in esw-cache-first patterns."
    },
    {
        "msg": "fix broken function links for rsvp and jquery",
        "diff": "diff --git a/app/routes/project-version/functions/function.js b/app/routes/project-version/functions/function.js @@ -18,12 +18,21 @@ export default Route.extend({\nlet projectObj = await this.store.findRecord('project', projectID);\nlet compactVersion = transition.params['project-version'].project_version;\nlet projectVersion = getFullVersion(compactVersion, projectID, projectObj, this.get('metaStore'));\n- let className = params['module'];\n+ let name = params['module'];\nlet functionName = params['fn'];\n- let classObj = await this.store.find('class', `${projectID}-${projectVersion}-${className}`)\n+ let fnModule;\n+ let fn;\n+ if (name === 'rsvp' || name === 'jquery') {\n+ fnModule = await this.store.find('module', `${projectID}-${projectVersion}-${name}`);\n+ fn = fnModule.get(`allstaticfunctions.${name}`).find(elem => elem.name === functionName);\n+\n+ } else {\n+ fnModule = await this.store.find('class', `${projectID}-${projectVersion}-${name}`);\n+ fn = this.getFunctionObjFromList(fnModule, functionName);\n+ }\nreturn {\n- fnModule: classObj,\n- fn: this.getFunctionObjFromList(classObj, functionName)\n+ fnModule,\n+ fn\n};\n},\n",
        "date": "26.02.2018 02:00:49",
        "repo": "ember-learn/ember-api-docs",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor function.js to handle different module types and improve code readability"
    },
    {
        "msg": "fix an hbs linting error",
        "diff": "diff --git a/app/templates/project-version/classes/class.hbs b/app/templates/project-version/classes/class.hbs <span>Index</span>\n</LinkTo>\n{{#if @model.methods}}\n- <LinkTo @route={{concat this.parentName \".methods\" }} @models={{array @model.project.id @model.projectVersion.compactVersion @model.name}} @query={{hash anchor=undefined}} class=\"tabbed-layout__menu__item\" @activeClass=\"tabbed-layout__menu__item_selected\" @id=\"methods\" @current-when={{concat this.parentName \".methods\"}} data-test-tab=\"methods\">\n+ <LinkTo @route={{concat this.parentName \".methods\" }} @models={{array @model.project.id @model.projectVersion.compactVersion @model.name}} @query={{hash anchor=undefined}} class=\"tabbed-layout__menu__item\" @activeClass=\"tabbed-layout__menu__item_selected\" id=\"methods\" @current-when={{concat this.parentName \".methods\"}} data-test-tab=\"methods\">\n<span>Methods</span>\n</LinkTo>\n{{/if}}\n",
        "date": "05.08.2021 08:31:44",
        "repo": "ember-learn/ember-api-docs",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor LinkTo component in class.hbs template to remove unnecessary @id attribute."
    },
    {
        "msg": "fix a bug with Card Header toolbar buttons that was causing all buttons to be hidden on the Toolbar",
        "diff": "diff --git a/sass/patterns/_homepage.scss b/sass/patterns/_homepage.scss -webkit-font-smoothing: antialiased;\nfont-weight: 100;\nmargin: 0;\n- padding-top: 8px;\n+ padding-top: 3px;\ntext-rendering: optimizeLegibility !important;\n}\n}\n.searchfield-wrapper {\n- margin: 8px 5px 5px 0;\n+ margin: 4px 5px 5px 0;\n}\n+ /*\n.buttonset {\n> *:not(.searchfield-wrapper) {\nmargin-top: 6px;\nmargin-top: 6px;\n}\n}\n+ */\n}\n[class^=\"btn\"] {\n",
        "date": "12.01.2017 16:04:01",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Update padding and margin values in homepage.scss"
    },
    {
        "msg": "fix a bug in Tabs where jQuery-wrapped elements were not appending correctly in the new _createTabPanel()_ method",
        "diff": "diff --git a/js/tabs.js b/js/tabs.js createTabPanel: function(tabId, content, doInsert) {\ntabId = tabId.replace(/#/g, '');\n- var markup = $('<div id=\"'+ tabId +'\" class=\"tab-panel\" role=\"tabpanel\" style=\"display: none;\">'+ content +'</div>');\n+ // If a jQuery-wrapped element is provided, actually append the element.\n+ // If content is text/string, simply inline it.\n+ var markup = $('<div id=\"'+ tabId +'\" class=\"tab-panel\" role=\"tabpanel\" style=\"display: none;\"></div>');\n+ if (content instanceof $) {\n+ markup.append(content);\n+ } else {\n+ markup[0].innerHTML = content;\n+ }\nif (doInsert === true) {\nthis.container.append(markup);\n",
        "date": "23.01.2017 12:35:57",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor createTabPanel to handle jQuery-wrapped elements and text content efficiently"
    },
    {
        "msg": "fix a bug where Vertical Tabs was unexpectedly displaying a spillover menu.",
        "diff": "diff --git a/js/tabs.js b/js/tabs.js // Used for checking if a particular tab (in the form of a jquery-wrapped list item) is spilled into\n// the overflow area of the tablist container <UL>.\nisTabOverflowed: function(li) {\n+ if (this.isVerticalTabs()) {\n+ return false;\n+ }\n+\nreturn li[0].getBoundingClientRect().top > this.tablist[0].getBoundingClientRect().top;\n},\n",
        "date": "24.01.2017 10:29:04",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix issue with tab overflow check for vertical tabs"
    },
    {
        "msg": "fix a bug where re-invoked toolbars were throwing errors when rebuilding the spillover menu.",
        "diff": "diff --git a/js/toolbar.js b/js/toolbar.js if (popupMenuInstance) {\nthis.more\n- .triggerHandler('updated')\n.on('beforeopen.toolbar', function() {\nrefreshTextAndDisabled(self.moreMenu);\n- });\n+ })\n+ .triggerHandler('updated');\n} else {\nvar actionButtonOpts = $.fn.parseOptions(this.more[0]);\n",
        "date": "27.01.2017 14:32:32",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix triggerHandler call in toolbar.js"
    },
    {
        "msg": "fix some icons alignment with Editor",
        "diff": "diff --git a/sass/controls/_editor.scss b/sass/controls/_editor.scss &[data-element='foreColor'] {\n.icon {\n- margin-top: 0;\n+ height: 17px;\n+ margin-top: 1px;\n+ width: 16px;\n}\n.trigger {\n.icon {\nheight: 16px;\nmargin-left: -5px;\n- width: 16px;\n+ width: 12px;\n}\n}\n&[data-element='backColor'] {\n.icon {\n- margin-top: 0;\n+ height: 17px;\n+ margin-top: 1px;\n+ width: 16px;\n}\n.trigger {\n.icon {\nheight: 16px;\n- width: 16px;\n+ width: 12px;\n}\n}\n}\n",
        "date": "03.02.2017 10:24:37",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Update icon sizes and margins for foreColor and backColor controls in editor."
    },
    {
        "msg": "fix an issue with Standalone Toolbar alignment.",
        "diff": "diff --git a/sass/controls/_toolbar.scss b/sass/controls/_toolbar.scss @@ -47,7 +47,6 @@ $toolbar-buttonset-height: 40px;\n&.is-overflowed {\ndisplay: none;\n- //visibility: hidden;\n}\n}\n@@ -127,6 +126,7 @@ $toolbar-buttonset-height: 40px;\n&.standalone {\nbackground-color: $toolbar-standalone-bg-color;\nborder-bottom: 1px solid $toolbar-standalone-border-color;\n+ text-align: left;\n[class^=\"btn\"] {\n&[disabled],\n",
        "date": "10.02.2017 15:40:54",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Remove commented out code and add text-align left to standalone toolbar buttons."
    },
    {
        "msg": "fix a problem with CSS-based animations.",
        "diff": "diff --git a/js/tabs.js b/js/tabs.js // Avoid filter(:visible)\nfor (var i = 0; i < self.panels.length; i++) {\n- if (self.panels[i].style.display !== 'none') {\n+ if (self.panels[i].classList.contains('is-visible')) {\noldPanel = $(self.panels[i]);\n}\n}\n",
        "date": "13.02.2017 09:51:05",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Replace filter(:visible) with classList.contains('is-visible') in tabs.js"
    },
    {
        "msg": "fix an issue with Module Tabs in IE11 where the contents of all tab panels were being shown at the same time.",
        "diff": "diff --git a/sass/controls/_tabs.scss b/sass/controls/_tabs.scss }\n}\n+\n+ // These two rules fix an IE bug where contents of all tab panels are shown.\n+ > .page-container {\n+ position: static;\n+ }\n+ &.can-show {\n+ > .page-container {\n+ position: absolute;\n+ }\n+ }\n+\n}\n// Page containers that directly house '.tab-panel' elements will allow them to fill the height of the container\n// Used in vertical/header/module tabs.\n.page-container > .tab-panel {\n- height: 100%;\n+ height: 0;\npadding-top: 0;\n+ width: 0;\n+\n+ &.can-show {\n+ height: 100%;\n+ width: 100%;\n+ }\n> .busy-indicator-container {\n@include font-size(14);\n",
        "date": "16.02.2017 12:26:52",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix IE bug with tab panel contents not hiding properly"
    },
    {
        "msg": "fix one of the tests",
        "diff": "diff --git a/views/tests/toolbar/resize-favoring.html b/views/tests/toolbar/resize-favoring.html <div class=\"twelve columns\">\n<div id=\"toolbar-favor-buttonset\" class=\"toolbar\" role=\"toolbar\" data-options='{ \"resizeContainers\": true, \"favorButtonset\": false, \"maxVisibleButtons\": 4 }'>\n- <div class=\"title\">This Toolbar Favors the Buttonset Area</div>\n+ <div class=\"title\">This Toolbar Favors the Title Area</div>\n<div class=\"buttonset\">\n<button type=\"button\" id=\"category-button\" class=\"btn\" tabindex=\"-1\">\n<span>Category 1</span>\n",
        "date": "21.02.2017 11:34:09",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Update toolbar title to \"This Toolbar Favors the Title Area\""
    },
    {
        "msg": "fix a bug where all Module Tabs would be pushed into the spillover menu on some DPI/browser zoom combinations.",
        "diff": "diff --git a/js/tabs.js b/js/tabs.js }\nvar liTop = Math.round(li[0].getBoundingClientRect().top),\n- tablistTop = Math.round(this.tablist[0].getBoundingClientRect().top);\n+ tablistTop = Math.round(this.tablist[0].getBoundingClientRect().top + 1);\n+\n+ // +1 to compensate for top border on Module Tabs\n+ if (this.isModuleTabs()) {\n+ tablistTop = tablistTop + 1;\n+ }\nreturn liTop > tablistTop;\n},\n",
        "date": "14.03.2017 10:38:45",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add +1 to tablistTop to compensate for top border on Module Tabs"
    },
    {
        "msg": "fix a bug that was throwing exceptions in a keydown event on Autocomplete (was looking for the list when it was not generated yet)",
        "diff": "diff --git a/js/autocomplete.js b/js/autocomplete.js },\nlistIsOpen: function() {\n- return this.list && this.list.is(':visible');\n+ return this.list instanceof $ && this.list.length && this.list.is(':visible');\n},\nhandleEvents: function () {\nhandleAutocompleteKeydown: function(e) {\nvar self = this;\n- if (self.isLoading()) {\n+ if (this.isLoading()) {\ne.preventDefault();\nreturn false;\n}\n+ if (!this.listIsOpen()) {\n+ return;\n+ }\n+\nfunction getHighlighted(items) {\nreturn items.filter('.is-selected');\n}\n",
        "date": "31.03.2017 10:19:41",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor listIsOpen method to check for instance of $ and length of list"
    },
    {
        "msg": "fix a bug where Autocomplete fields attempting to close the list would sometimes get a null reference to the list.",
        "diff": "diff --git a/js/autocomplete.js b/js/autocomplete.js setTimeout( function() {\nvar activeElem = document.activeElement;\n- if ($.contains(self.list[0], activeElem) || self.element.is(activeElem)) {\n+ if ((self.listIsOpen() && $.contains(self.list[0], activeElem)) || self.element.is(activeElem)) {\nreturn;\n}\n",
        "date": "31.03.2017 13:01:23",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix issue with autocomplete list not closing when clicking outside of it"
    },
    {
        "msg": "fix the call to action example's datagrid to contain a \"List\" grid instead of a normal grid",
        "diff": "diff --git a/views/tests/call-to-action-header/tabs-with-button.html b/views/tests/call-to-action-header/tabs-with-button.html grid = $('#open-orders-datagrid').datagrid({\ncolumns: columns,\ndataset: data,\n+ isList: true,\npaging: true,\npagesize: 5\n}).data('datagrid');\n",
        "date": "12.04.2017 11:29:29",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add isList property to grid initialization in tabs-with-button.html"
    },
    {
        "msg": "fix a bug where Vertical Tabs' focus state on selected tabs would display when clicked",
        "diff": "diff --git a/sass/controls/_verticaltabs.scss b/sass/controls/_verticaltabs.scss > .tab-list-container > .tab-focus-indicator {\nborder-radius: 0;\n- &.is-selected {\n+ &.is-selected.is-visible {\nborder-color: transparent;\nbox-shadow: inset 0 0 0 1px $white;\n}\n",
        "date": "17.04.2017 10:04:07",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add is-visible class to selected tab in vertical tabs."
    },
    {
        "msg": "fix a bug in popupmenus where other popupmenus were no longer closing upon opening a new menu.",
        "diff": "diff --git a/js/popupmenu.js b/js/popupmenu.js return;\n}\n- var otherMenus = $('.popupmenu').not(this.menu); //close others.\n+ var otherMenus = $('.popupmenu.is-open').not(this.menu); //close others.\notherMenus.each(function() {\n- var api = $(this).data('popupmenu');\n+ var api = $(this).data('trigger').data('popupmenu');\nif (api && typeof api.close === 'function') {\napi.close();\n}\n",
        "date": "26.04.2017 12:38:35",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix issue with closing other popup menus when opening a new one"
    },
    {
        "msg": "fix a bug in Toolbars located inside of Tabsets where popupmenus could not close properly.",
        "diff": "diff --git a/js/toolbar.js b/js/toolbar.js this.items.filter('.btn-menu, .btn-actions')\n.off('close.toolbar').on('close.toolbar', function onClosePopup() {\n- var el = $(this);\n+ var el = $(this),\n+ last;\n+\nif (el.is('.is-overflowed')) {\n- self.getLastVisibleButton()[0].focus();\n+ last = self.getLastVisibleButton();\n+ if (last && last.length) {\n+ last[0].focus();\n+ }\nreturn;\n}\n+\nel.focus();\nself.buttonset.scrollTop(0);\n});\n",
        "date": "03.05.2017 11:00:07",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix focus issue in toolbar.js when closing popup."
    },
    {
        "msg": "fix a bug in the new Pager code where the dropdown for changing the number of records per page was no longer being visually updated when changed.",
        "diff": "diff --git a/js/pager.js b/js/pager.js this.pagerBar\n.find('.pager-count input').val(this.activePage);\n+ // Update the total number of pages\nif (this._pageCount !== '0' && !isNaN(this._pageCount)) {\nthis.pagerBar.find('.pager-total-pages').text(this._pageCount);\n}\n+ // Update the number of records per page\n+ this.pagerBar.find('.btn-menu span')\n+ .text(Locale.translate('RecordsPerPage').replace('{0}', this.settings.pagesize));\n+\n// Refresh Disabled\nvar prev = pb.find('.pager-prev a'),\nnext = pb.find('.pager-next a'),\n",
        "date": "10.05.2017 09:27:27",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Update pager.js to display total number of pages and number of records per page."
    },
    {
        "msg": "fix Selectable Popupmenu RTL to support New Tabs",
        "diff": "diff --git a/sass/controls/_popupmenu.scss b/sass/controls/_popupmenu.scss @@ -502,10 +502,11 @@ html[dir='rtl'] {\npadding: 0 10px;\n}\n- &.has-icons {\n+ &.has-icons,\n+ &.is-selectable {\n> li a {\npadding-left: 10px;\n- padding-right: 40px;\n+ padding-right: 35px;\n}\n.icon {\n",
        "date": "24.05.2017 10:43:14",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add support for selectable items in popup menu with icons"
    },
    {
        "msg": "fix a bug with an extra icon appearing on Dropdown tabs in the spillover menu",
        "diff": "diff --git a/js/tabs.js b/js/tabs.js // Link tab to its corresponding \"More Tabs\" menu option\n$item.data('moremenu-link', popupA);\n+ popupA.find('.icon-more').remove();\n// Link \"More Tabs\" menu option to its corresponding Tab.\n// Remove onclick methods from the popup <li> because they are called\n",
        "date": "30.05.2017 09:29:58",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Link tabs to corresponding \"More Tabs\" menu option and remove onclick methods from popup <li>"
    },
    {
        "msg": "fix some more v-tabs stuff",
        "diff": "diff --git a/sass/controls/_verticaltabs.scss b/sass/controls/_verticaltabs.scss // Also works for placing a set of vertical tabs directly inside of a higher-level '.tab-panel' element\n.page-container,\n.tab-panel {\n+\n> .tab-container.vertical {\nheight: 100%;\noverflow: auto;\n+ .tab-panel-container {\nmin-height: 100%;\n}\n+\n+ + .tab-panel-container > .tab-panel {\n+ margin: 30px;\n+ padding-top: 0;\n+ }\n}\n}\n",
        "date": "31.05.2017 15:17:00",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add styling for vertical tabs inside tab-panel container"
    },
    {
        "msg": "fix a bug where Module Tabs with an adjacent application menu were not properly getting a reference to a tab container, causing events not to bind.",
        "diff": "diff --git a/js/tabs.js b/js/tabs.js build: function() {\nvar self = this,\ntabPanelContainer,\n+ appMenu,\nmoveTabPanelContainer = false;\n// Check for a tab panel container immediately after the `.tab-container` element (default as of Soho Xi 4.3.0)\ntabPanelContainer = this.element.next('.tab-panel-container');\n+ // Check for a page container after an application menu\n+ if (!tabPanelContainer.length) {\n+ appMenu = $('.application-menu');\n+ if (appMenu.length) {\n+ tabPanelContainer = appMenu.next('.page-container');\n+ }\n+ }\n+\n// Auto-detect and move existing tab-panel containers in key areas, if applicable.\n// Check inside the container first\nif (!tabPanelContainer.length) {\n",
        "date": "07.06.2017 10:15:27",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "build: Added logic to check for a page container after an application menu in tabs.js"
    },
    {
        "msg": "fix a bug where pre-expanded toolbar searchfields were not being calculated correctly when the page loads.",
        "diff": "diff --git a/js/toolbarsearchfield.js b/js/toolbarsearchfield.js this.xButton = this.inputWrapper.children('.icon.close');\n// Open the searchfield once on intialize if it's a \"non-collapsible\" searchfield\n- if (this.settings.collapsible === false && this.shouldExpandOnMobile()) {\n+ if (this.settings.collapsible === false) {\nthis.inputWrapper.addClass('no-transition').one('expanded.' + this.id, function() {\n$(this).removeClass('no-transition');\n});\n+\n+ if (!this.shouldBeFullWidth()) {\nthis.expand(true);\n+ }\n} else {\nif (this.button instanceof $ && this.button.length) {\nthis.setClosedWidth();\n",
        "date": "13.06.2017 09:41:18",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor toolbarsearchfield.js to open searchfield on initialize if collapsible is false and expand if not full width."
    },
    {
        "msg": "fix a bug in Autocomplete Popupmenus inside Module Tabs Toolbar causing a stack overflow when attempting to close.",
        "diff": "diff --git a/js/autocomplete.js b/js/autocomplete.js this.element.addClass('is-open')\n.popupmenu(popupOpts)\n.on('close.autocomplete', function () {\n- self.closeList();\n+ self.closeList(true);\n});\n// Optionally select the first item in the list\nthis.element.trigger('listopen', [items]);\n},\n- closeList: function() {\n+ closeList: function(dontClosePopup) {\nvar popup = this.element.data('popupmenu');\nif (!popup) {\nreturn;\n}\n+ if (!dontClosePopup) {\npopup.close();\n+ }\n+\nthis.element.trigger('listclose');\n$('#autocomplete-list').parent('.popupmenu-wrapper').remove();\n$('#autocomplete-list').remove();\n",
        "date": "14.06.2017 15:20:09",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor closeList method to accept a parameter for not closing the popup."
    },
    {
        "msg": "fix an example",
        "diff": "diff --git a/views/controls/datagrid-grouped-headers.html b/views/controls/datagrid-grouped-headers.html data.push({ id: 6, productId: 2642206, productName: 'Some Compressor', activity: 'inspect and Repair', quantity: 41, price: '123.99', status: 'OK', orderDate: null, action: 'On Hold'});\n//Define Columns for the Grid.\n- columns.push({ id: 'productId', name: 'Product Id', field: 'productId', formatter: Formatters.Readonly, width: 75});\n- columns.push({ id: 'productName', name: 'Product Name', sortable: false, field: 'productName', formatter: Formatters.Hyperlink, width: 200});\n- columns.push({ id: 'activity', hidden: true, name: 'Activity', field: 'activity', width: 50});\n- columns.push({ id: 'quantity', name: 'Quantity', field: 'quantity', width: 50});\n- columns.push({ id: 'price', name: 'Price', field: 'price', formatter: Formatters.Decimal, width: 50});\n- columns.push({ id: 'orderDate', name: 'Order Date', field: 'orderDate', formatter: Formatters.Date, dateFormat: 'M/d/yyyy', width: 50});\n- columns.push({ id: 'status', name: 'Status', field: 'status', formatter: Formatters.Text, width: 50});\n- columns.push({ id: 'action', name: 'Action Item', field: 'action', width: 50});\n+ columns.push({ id: 'productId', name: 'Product Id', field: 'productId', formatter: Formatters.Readonly});\n+ columns.push({ id: 'productName', name: 'Product Name', sortable: false, field: 'productName', formatter: Formatters.Hyperlink});\n+ columns.push({ id: 'activity', hidden: true, name: 'Activity', field: 'activity'});\n+ columns.push({ id: 'quantity', name: 'Quantity', field: 'quantity'});\n+ columns.push({ id: 'price', name: 'Price', field: 'price', formatter: Formatters.Decimal});\n+ columns.push({ id: 'orderDate', name: 'Order Date', field: 'orderDate', formatter: Formatters.Date, dateFormat: 'M/d/yyyy'});\n+ columns.push({ id: 'status', name: 'Status', field: 'status', formatter: Formatters.Text});\n+ columns.push({ id: 'action', name: 'Action Item', field: 'action'});\n//Init and get the api for the grid\n",
        "date": "19.06.2017 16:33:31",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor grid column definitions to remove unnecessary width specifications."
    },
    {
        "msg": "fix a path",
        "diff": "diff --git a/views/controls/index.html b/views/controls/index.html <div><a class=\"hyperlink\" href=\"{{basepath}}controls/expandablearea\">Expandable Area</a></div>\n<div><a class=\"hyperlink\" href=\"{{basepath}}controls/tabs\" >Tabset</a></div>\n<div><a class=\"hyperlink\" href=\"{{basepath}}patterns/vertical-tabs\" >Vertical Tabs</a></div>\n- <div><a class=\"hyperlink\" href=\"{{basepath}}components/accordion/example-accordion\">Accordion</a></div>\n+ <div><a class=\"hyperlink\" href=\"{{basepath}}components/accordion/example-index\">Accordion</a></div>\n<div><a class=\"hyperlink\" href=\"{{basepath}}components/accordion/example-accordion-panels\">Accordion Panels</a></div>\n<div><a class=\"hyperlink\" href=\"{{basepath}}controls/fieldset\">Field Set</a></div>\n</div>\n",
        "date": "23.06.2017 15:59:46",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Update accordion link in index.html"
    },
    {
        "msg": "fix Searchfield's alternate example",
        "diff": "diff --git a/components/toolbarsearchfield/example-alternate-style.html b/components/toolbarsearchfield/example-alternate-style.html +<div class=\"row\">\n+ <div class=\"six columns\">\n+ <h2>Toolbar Searchfield Example: Alternate Style</h2>\n+ <p><a class=\"hyperlink\" href=\"https://jira.infor.com/browse/SOHO-6442\" target=\"_blank\">Related JIRA Ticket</a>.</p>\n+ </div>\n+</div>\n+\n<div class=\"row\">\n<div class=\"twelve columns\">\n<div class=\"toolbar no-actions-button left-aligned\">\n<div class=\"title\">\n- Toolbar Searchfield Example: Alternate Style\n+ Look over there\n</div>\n<div class=\"buttonset\">\n<!-- Begin Toolbar Searchfield Component Part -->\n+ <div class=\"searchfield-wrapper toolbar-searchfield-wrapper\">\n<label for=\"example-toolbar-searchfield\">Alternate Example</label>\n<input id=\"example-toolbar-searchfield\" class=\"searchfield alternate\" placeholder=\"Search...\"/>\n+ </div>\n<!-- End Toolbar Searchfield Component Part -->\n</div>\n",
        "date": "26.06.2017 16:40:41",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Update toolbar searchfield example with alternate style and related JIRA ticket link."
    },
    {
        "msg": "fix bug in context menu",
        "diff": "diff --git a/js/popupmenu.js b/js/popupmenu.js switch(e.which) {\ncase 13:\ncase 32:\n+ if (self.settings.trigger === 'click') {\nself.open(e);\n+ }\nbreak;\ncase 121:\nif (e.shiftKey) { //Shift F10\nopts.x = getCoordinates(e, 'x') - (isRTL ? menuDimensions.width : 0) + ((isRTL ? -1 : 1) * this.settings.offset.x);\nopts.y = getCoordinates(e, 'y') + this.settings.offset.y;\n+ if (opts.x === 0 && opts.y === 0) {\n+ opts.x = this.settings.offset.x || 0;\n+ opts.y = this.settings.offset.y || 0;\n+ opts.parent = this.element;\n+ opts.placement = 'bottom';\n+ opts.parentXAlignment = isRTL ? 'right' : 'left';\n+ }\n+\n} else {\nopts.x = this.settings.offset.x || 0;\nopts.y = this.settings.offset.y || 0;\n",
        "date": "28.06.2017 15:41:47",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add condition to open popup menu on click trigger and set default position if coordinates are 0."
    },
    {
        "msg": "fix test routes",
        "diff": "diff --git a/app.js b/app.js @@ -42,23 +42,6 @@ var express = require('express'),\ncommit: git.long(),\n};\n- /**\n- * Simple Logging system that wraps `console.log()`\n- * @param {string} message\n- */\n- /*\n- var logger = function(message) {\n- // Don't log empty messages.\n- if (typeof message !== 'string' || !message.length) {\n- return;\n- }\n-\n- if (console && console.log) {\n- console.log(message);\n- }\n- };\n- */\n-\n// Option Handling - Custom Middleware\n// Writes a set of default options the 'req' object. These options are always eventually passed to the HTML template.\n// In some cases, these options can be modified based on query parameters. Check the default route for these options.\n@@ -717,7 +700,7 @@ var express = require('express'),\nvar directory = 'tests/' + end;\nif (hasTrailingSlash(directory)) {\n- if (is('directory', directory) ) {\n+ if (is('directory', '/views/' + directory) ) {\ngetDirectoryListing(directory, req, res, next);\nreturn;\n}\n@@ -726,7 +709,6 @@ var express = require('express'),\n}\n// Custom configurations for some test folders\n-\nif (directory.match(/tests\\/base-tag/)) {\nopts.usebasehref = true;\n}\n@@ -775,8 +757,8 @@ var express = require('express'),\n}\n// No trailing slash. Check for an index file. If no index file, do directory listing\n- if (is('directory', directory)) {\n- if (is('file', directory + '/index')) {\n+ if (is('directory', '/views/' + directory)) {\n+ if (is('file', '/views/' + directory + '/index')) {\nres.render(directory + '/index', opts);\nreturn next();\n}\n@@ -811,8 +793,8 @@ var express = require('express'),\n//Tests Index Page and controls sub pages\nrouter.get('/tests/:component/:example', testsRouteHandler);\n- router.get('/tests/:component', testsRouteHandler);\nrouter.get('/tests/:component/', testsRouteHandler);\n+ router.get('/tests/:component', testsRouteHandler);\nrouter.get('/tests/', testsRouteHandler);\nrouter.get('/tests', testsRouteHandler);\n",
        "date": "29.06.2017 14:19:42",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor logging system and update route handling in app.js"
    },
    {
        "msg": "fix some stray padding/scrolling issues on the Composite Form styles.",
        "diff": "diff --git a/components/compositeform/_compositeform.scss b/components/compositeform/_compositeform.scss height: inherit;\noverflow-y: hidden;\n- > .tab-container {\n- &.horizontal {\n- padding: 0 0 0 20px;\n- }\n-\n- &.vertical-tabs {\n+ > .tab-panel-container {\nheight: inherit;\n- }\n- > .tab-list-container {\n- height: calc(100% - 20px);\n+ &.scrollable,\n+ &.scrollable-x,\n+ &.scrollable-y {\n+ height: 100%;\n}\n}\n- > .tab-panel-container {\n- height: inherit;\n+ > .tab-container {\n+ &.horizontal {\n+ padding: 0 0 0 20px;\n+ + .tab-panel-container {\n&.scrollable,\n&.scrollable-x,\n&.scrollable-y {\n+ height: calc(100% - 40px);\n+ }\n+ }\n+ }\n+\n+ &.vertical {\nheight: 100%;\n+ min-height: 0;\n+ }\n+\n+ > .tab-list-container {\n+ height: calc(100% - 20px);\n}\n}\n}\n",
        "date": "13.07.2017 14:48:27",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor tab container styles and add scrollable options for better layout control"
    },
    {
        "msg": "fix some time search text was not highlighting with Datagrid",
        "diff": "diff --git a/components/datagrid/datagrid.js b/components/datagrid/datagrid.js @@ -4842,6 +4842,10 @@ $.fn.datagrid = function(options) {\nthis.renderRows();\nthis.resetPager('searched');\nthis.setSearchActivePage();\n+\n+ if (!this.settings.paging) {\n+ this.highlightSearchRows(term);\n+ }\n},\n// Set search active page\n",
        "date": "27.07.2017 15:08:58",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add conditional highlighting of search results when paging is disabled"
    },
    {
        "msg": "fix a chart error",
        "diff": "diff --git a/components/charts/charts.js b/components/charts/charts.js @@ -3168,7 +3168,7 @@ window.Chart = function(container) {\n.style('text-anchor', 'start');\n}\n- if (settings.xAxis.formatText) {\n+ if (settings.xAxis && settings.xAxis.formatText) {\nsvg.selectAll('.x.axis .tick text').each(function(i) {\nvar elem = d3.select(this),\ntext = d3.select(this).text(),\n",
        "date": "28.08.2017 15:55:37",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix issue with xAxis formatText setting in charts.js"
    },
    {
        "msg": "fix one of the unit test was not working with Datepicker",
        "diff": "diff --git a/test/unit/locale/common.js b/test/unit/locale/common.js @@ -247,7 +247,7 @@ define([\nexpect(Locale.parseDate('10/28/2015', 'M/d/yyyy').getTime()).to.equal(new Date(2015, 9, 28).getTime());\nexpect(Locale.parseDate('10282015', 'Mdyyyy').getTime()).to.equal(new Date(2015, 9, 28).getTime());\nexpect(Locale.parseDate('10282015', 'Mdyyyy').getTime()).to.equal(new Date(2015, 9, 28).getTime());\n- expect(Locale.parseDate('10/28/99', 'MM/dd/yy').getTime()).to.equal(new Date(2099, 9, 28).getTime());\n+ expect(Locale.parseDate('10/28/99', 'MM/dd/yy').getTime()).to.equal(new Date(1999, 9, 28).getTime());\n//We can parse either 4 or 2 digit month day\nexpect(Locale.parseDate('10282015', 'Mdyyyy').getTime()).to.equal(new Date(2015, 9, 28).getTime());\n",
        "date": "31.08.2017 17:12:20",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix date parsing issue for year 1999 in common.js"
    },
    {
        "msg": "fix some bugs with time/date string detection in Masks",
        "diff": "diff --git a/components/mask/mask-functions.js b/components/mask/mask-functions.js @@ -231,6 +231,8 @@ var DATE_MAX_VALUES = {\n'yy': 99,\n'yyyy': 9999,\n'h': 12,\n+ 'hh': 12,\n+ 'H': 24,\n'HH': 24,\n'mm': 60,\n'ss': 60,\n@@ -380,10 +382,14 @@ window.Soho.masks.dateMask = function dateMask(rawValue, options) {\nvar times = (function(symbols) {\nvar sep = symbols.timeSeparator;\nreturn [\n- 'HH' + sep + 'mm',\n'HH' + sep + 'mm' + sep + 'ss',\n- 'h' + sep + 'mm',\n+ 'HH' + sep + 'mm',\n+ 'hh' + sep + 'mm' + sep + 'ss',\n+ 'hh' + sep + 'mm',\n+ 'H' + sep + 'mm' + sep + 'ss',\n+ 'H' + sep + 'mm',\n'h' + sep + 'mm' + sep + 'ss',\n+ 'h' + sep + 'mm'\n];\n})(options.symbols);\n",
        "date": "05.09.2017 15:46:22",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add support for 24-hour time format and additional time mask options"
    },
    {
        "msg": "fix a few bugs related to pulling settings from legacy mask patterns on Number Masks.",
        "diff": "diff --git a/components/mask/masked-input.js b/components/mask/masked-input.js _replaceLegacySettings: function() {\nvar modes = ['group', 'number', 'date', 'time'];\n+ // pre-set a bunch of objects if they don't already exist\n+ this.settings.patternOptions = this.settings.patternOptions || {};\n+ this.settings.patternOptions.symbols = this.settings.patternOptions.symbols || {};\n+\n//======================================\n// Deprecated as of v4.3.2\n//======================================\nif (typeof this.settings.pattern === 'string') {\n// If \"negative\" is defined, you can type the negative symbol in front of the number.\n// Will automatically set to \"true\" if a negative symbol is detected inside the mask.\n- this.settings.patternOptions.allowNegative = this.settings.pattern.indexOf('-') !== -1;\n+ var allowNegative = this.settings.pattern.indexOf('-') !== -1;\n+ if (allowNegative) {\n+ this.settings.patternOptions.allowNegative = allowNegative;\n+ this.settings.patternOptions.symbols.negative = '-';\n+ }\n// Detect the thousands separator and see if we use it.\nvar thousandsSep = this.settings.patternOptions && this.settings.patternOptions.symbols && this.settings.patternOptions.symbols.thousands ?\nvar hasThousandsInPattern = this.settings.pattern.indexOf(thousandsSep) !== -1;\nthis.settings.patternOptions.allowThousandsSeparator = hasThousandsInPattern;\nif (hasThousandsInPattern) {\n- this.settings.patternOptions.symbols = this.settings.patternOptions.symbols || {};\nthis.settings.patternOptions.symbols.thousands = thousandsSep;\n}\n// The new masking algorithm requires an \"integerLimit\" defined to function.\n// This grabs the number of items currently inside this part of the mask, and sets it.\n- var decimal = this.settings.patternOptions && this.settings.patternOptions.symbols && typeof this.settings.patternOptions.symbols.decimal === 'string' ?\n+ var decimal = typeof this.settings.patternOptions.symbols.decimal === 'string' ?\nthis.settings.patternOptions.symbols.decimal : '.';\n+ var decimalParts = this.settings.pattern.split(decimal);\n- this.settings.patternOptions.integerLimit = this.settings.pattern.split(decimal)[0].replace(/[^#0]/g, '').length;\n+ this.settings.patternOptions.integerLimit = decimalParts[0].replace(/[^#0]/g, '').length;\n+\n+ if (decimalParts[1]) {\n+ this.settings.patternOptions.allowDecimal = true;\n+ this.settings.patternOptions.decimalLimit = decimalParts[1].toString().length;\n+ if (!this.settings.patternOptions.symbols.decimal) {\n+ this.settings.patternOptions.symbols.decimal = decimal;\n+ }\n+ }\n}\n}\n",
        "date": "07.09.2017 09:40:24",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor masked input settings and add support for negative symbols and decimal limits"
    },
    {
        "msg": "fix some issue for Editor H3/H4 buttons were not getting its state ForeColor button were not getting its state ForeColor button were not moving focus",
        "diff": "diff --git a/components/editor/editor.js b/components/editor/editor.js this.hideToolbarActions();\n},\n- //See if the Editor is Selected and Show Toolbar\n+ //Set button states for toolbar buttons\nsetToolbarButtonStates: function () {\nvar buttons = this.toolbarActions.find('button');\nthis.checkButtonState('bold');\nthis.checkButtonState('italic');\nthis.checkButtonState('underline');\n+ this.colorpickerButtonState('foreColor');\n+ if (this.toolbar.find('.buttonset [data-action=\"backColor\"]').length) {\n+ this.colorpickerButtonState('backColor');\n+ }\nvar self = this,\nparentNode = this.getSelectedParentElement();\nif (currentElement === this.element) {\nif (action.indexOf('append-') > -1) {\nthis.execFormatBlock(action.replace('append-', ''));\n- this.setToolbarButtonStates();\n} else if (action === 'anchor') {\nthis.restoreLinkSelection();\nthis.modals.url.data('modal').open();\nthis.switchToolbars();\n},\n- // Colorpicker actions ['foreColor'|'backColor']\n- colorpickerActions: function(action) {\n+ // Set ['foreColor'|'backColor'] button icon color in toolbar\n+ colorpickerButtonState: function(action) {\nvar self = this,\ncpBtn = $('[data-action=\"'+ action +'\"]', this.toolbar),\ncpApi = cpBtn.data('colorpicker'),\ncolor = cpApi.rgb2hex(color);\ncpBtn.attr('data-value', color).find('.icon').css('fill', color);\n}\n+ return {cpBtn:cpBtn, cpApi:cpApi, color:color};\n+ },\n+\n+ // Colorpicker actions ['foreColor'|'backColor']\n+ colorpickerActions: function(action) {\n+ var self = this,\n+ state = this.colorpickerButtonState(action),\n+ cpBtn = state.cpBtn,\n+ cpApi = state.cpApi;\ncpBtn.on('selected.editor', function (e, item) {\nvar value = ('#' + item.data('value')).toLowerCase();\n}, 0);\n}\n+\n+ setTimeout(function() {\n+ self.getCurrentElement().focus();\n+ }, 0);\n});\n// Toggle colorpicker\n",
        "date": "15.09.2017 11:24:07",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor toolbar button states and colorpicker functionality in editor.js"
    },
    {
        "msg": "fix a bug where certain number combinations would cause a date mask not to allow a double-digit month/day value in areas where it was valid.",
        "diff": "diff --git a/components/mask/mask-functions.js b/components/mask/mask-functions.js @@ -261,7 +261,7 @@ window.Soho.masks.dateMask = function dateMask(rawValue, options) {\nif (part.length === 1 && rawValueFirstDigit > maxFirstDigit) {\nmask.push(digitRegex);\n- } else if (rawValueStr !== '0' && rawValueStr.length === 1 && rawValueFirstDigit <= maxFirstDigit) {\n+ } else if (rawValueStr !== '0' && rawValueStr.length === 1 && rawValueFirstDigit <= maxFirstDigit && rawValueArray[i+1] !== undefined) {\nmask.push(digitRegex);\n} else {\nmask = mask.concat(getRegexForPart(value, 'digits'));\n",
        "date": "15.09.2017 11:48:56",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add condition to check if next digit is not undefined before pushing digitRegex"
    },
    {
        "msg": "fix a bug in legacy settings interepreting for the Mask that was causing some decimal number mask patterns to have incorrect size.",
        "diff": "diff --git a/components/mask/masked-input.js b/components/mask/masked-input.js if (decimalParts[1]) {\nthis.settings.patternOptions.allowDecimal = true;\n- this.settings.patternOptions.decimalLimit = decimalParts[1].toString().length;\n+ this.settings.patternOptions.decimalLimit = decimalParts[1].toString().replace(/[^#0]/g, '').length;\nif (!this.settings.patternOptions.symbols.decimal) {\nthis.settings.patternOptions.symbols.decimal = decimal;\n}\n",
        "date": "15.09.2017 13:07:26",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor decimalLimit calculation in masked-input.js"
    },
    {
        "msg": "fix bug in toolbar sample",
        "diff": "diff --git a/components/popupmenu/popupmenu.js b/components/popupmenu/popupmenu.js // Check external AJAX source, if applicable\nif (!ajaxReturn) {\ncanOpen = this.callSource(e, true);\n+\n+ if (this.settings.beforeOpen) {\nreturn;\n}\n+ }\nvar otherMenus = $('.popupmenu.is-open').filter(function() {\nreturn $(this).parents('.popupmenu').length === 0;\n",
        "date": "27.09.2017 12:55:32",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add check for beforeOpen setting in popupmenu.js"
    },
    {
        "msg": "fix some more Dropdown styles",
        "diff": "diff --git a/components/dropdown/_dropdown.scss b/components/dropdown/_dropdown.scss @@ -749,6 +749,11 @@ div.dropdown-xs,\n}\n}\n+ .dropdown-search {\n+ padding-bottom: 8px;\n+ padding-top: 10px;\n+ }\n+\n&.dropdown-short {\n.dropdown-search {\n@include font-size(12);\n@@ -756,6 +761,13 @@ div.dropdown-xs,\n}\n}\n}\n+\n+ div.dropdown,\n+ div.multiselect {\n+ > span {\n+ padding-top: 1px;\n+ }\n+ }\n}\n// iOS needs a nudge too\n@@ -845,7 +857,7 @@ html[dir='rtl'] {\n> .trigger {\n.icon {\n- margin-right: -24px;\n+ margin-right: -22px;\n}\n}\n@@ -954,9 +966,4 @@ html[dir='rtl'] {\n}\n}\n}\n-\n- .trigger .icon {\n- left: 6px;\n- right: auto;\n- }\n}\n",
        "date": "30.11.2017 16:32:01",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Adjust padding and margin in dropdown styles"
    },
    {
        "msg": "fix a bug that causes tooltips to give an error on closing CAP",
        "diff": "diff --git a/components/tooltip/tooltip.js b/components/tooltip/tooltip.js self.handleAfterPlace(e, placementObj);\n});\n+ //Tool tip may be cleaned up on a modal or CAP\n+ if (this.tooltip.data('place')) {\nthis.tooltip.data('place').place(opts);\n+ } else {\n+ this.tooltip.place(opts);\n+ this.tooltip.data('place').place(opts);\n+ }\nreturn this;\n},\n",
        "date": "01.12.2017 10:23:17",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add conditional logic to handle tooltip placement on modal or CAP cleanup."
    },
    {
        "msg": "fix lower case formate with Timepicker",
        "diff": "diff --git a/components/mask/mask-functions.js b/components/mask/mask-functions.js @@ -261,7 +261,7 @@ window.Soho.masks.dateMask = function dateMask(rawValue, options) {\nif (part.length === 1 && rawValueFirstDigit > maxFirstDigit) {\nmask.push(digitRegex);\n- } else if (rawValueStr !== '0' && rawValueStr.length === 1 && rawValueFirstDigit <= maxFirstDigit && rawValueArray[i+1] !== undefined && part !== 'HH') {\n+ } else if (rawValueStr !== '0' && rawValueStr.length === 1 && rawValueFirstDigit <= maxFirstDigit && rawValueArray[i+1] !== undefined && part.toUpperCase() !== 'HH') {\nmask.push(digitRegex);\n} else {\nmask = mask.concat(getRegexForPart(value, 'digits'));\n",
        "date": "04.12.2017 14:12:45",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix condition to exclude 'HH' part in dateMask function"
    },
    {
        "msg": "fix a test for displaying Searchfield Categories",
        "diff": "diff --git a/components/searchfield/test-rich-categories.html b/components/searchfield/test-rich-categories.html </div>\n</div>\n+<style id=\"category-tests-style\">\n+ #output-area {\n+ padding: 20px;\n+ }\n+</style>\n+\n<div class=\"row\">\n<div class=\"six columns\">\n// Fill the console with information about currently selected categories.\nfunction getSelectionData(type, api) {\nvar data = api.getCategoryData(true),\n- outputHTML = '<h3>'+ type +' Selected Elements</h3>';\n+ outputHTML = '<h3>'+ type +' Selected Elements</h3><br />';\nfor (var i = 0; i < data.length; i++) {\noutputHTML += '<b>' + data[i].name + '</b><br />';\nbuttonClear.on('click.test', clear);\n// Get pseudo markup for categories button\n- singleCategoriesButton = singleAPI.button;\n- multiCategoriesButton = multiAPI.button;\n+ singleCategoriesButton = singleAPI.categoryButton;\n+ multiCategoriesButton = multiAPI.categoryButton;\n// Clear the console whenever category selection on the searchfield changes.\nsingleCategoriesButton.on('selected.test', function() {\n",
        "date": "13.12.2017 09:22:46",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Style changes and variable renaming in searchfield test for rich categories."
    },
    {
        "msg": "fix a bug as the old count was wrong",
        "diff": "diff --git a/components/datagrid/datagrid.js b/components/datagrid/datagrid.js @@ -5035,7 +5035,7 @@ $.fn.datagrid = function(options) {\nif (self.grandTotal) {\ncountText = self.settings.resultsText(self, self.grandTotal, count);\n} else {\n- countText = self.settings.resultsText(self, count, self.filteredCount || 0);\n+ countText = self.settings.resultsText(self, count, (count - self.filteredCount) || 0);\n}\n} else {\n",
        "date": "14.12.2017 15:53:51",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix calculation of countText in datagrid.js"
    },
    {
        "msg": "fix branch",
        "diff": "diff --git a/components/trackdirty/trackdirty.js b/components/trackdirty/trackdirty.js if (field.is('.editor-container')) {\n// editors values are further down it's tree in a textarea,\n// so get the elements with the value\n- const textArea = field.find('textarea');\n+ var textArea = field.find('textarea');\noriginal = textArea[0].defaultValue;\ncurrent = self.valMethod(textArea);\n}\n",
        "date": "19.01.2018 08:52:04",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor variable declaration in trackdirty.js"
    },
    {
        "msg": "fix a slider translation bug",
        "diff": "diff --git a/components/slider/slider.js b/components/slider/slider.js @@ -643,48 +643,23 @@ Slider.prototype = {\ne.preventDefault();\nclearTimeout(handle.data('animationTimeout'));\n- function getIncrementBy() {\n- if (increment !== undefined) {\n- return increment;\n- }\n- if (this.settings.step !== undefined) {\n- return this.settings.step;\n- }\n- return 1;\n- }\n-\nconst val = this.value().slice(0);\n- let incrementBy = getIncrementBy();\n+ let incrementBy = increment !== undefined ? increment : this.settings.step !== undefined ? this.settings.step : 1; //eslint-disable-line\nlet testVal;\nlet updatedVal;\nlet finalVal;\n- function checkIncrementBy(handleType) {\n- if (isInt(testVal)) {\n- return incrementBy;\n- }\n- const subtract = handleType === 'lower';\n- const fraction = testVal % incrementBy;\n- if (isNaN(fraction)) {\n- return 0;\n- }\n- if (subtract) {\n- return incrementBy - fraction;\n- }\n- return fraction;\n- }\n-\nif (handle.hasClass('higher')) {\ntestVal = value !== undefined ? value : val[1];\n- incrementBy = checkIncrementBy();\n+ incrementBy = isInt(testVal) ? incrementBy : isNaN(testVal % incrementBy) ? 0 : testVal % incrementBy; //eslint-disable-line\nupdatedVal = testVal + incrementBy <\n- (this.settings.max ? testVal + incrementBy : this.settings.max);\n+ this.settings.max ? testVal + incrementBy : this.settings.max;\nfinalVal = updatedVal % incrementBy ? updatedVal : roundToIncrement(updatedVal, incrementBy);\nthis.value([undefined, finalVal]);\n} else {\ntestVal = value !== undefined ? value : val[0];\nconst maxValue = val[1] === undefined ? this.settings.max : val[1];\n- incrementBy = checkIncrementBy();\n+ incrementBy = isInt(testVal) ? incrementBy : isNaN(testVal % incrementBy) ? 0 : incrementBy - (testVal % incrementBy); //eslint-disable-line\nupdatedVal = testVal + incrementBy < maxValue ? testVal + incrementBy : maxValue;\nfinalVal = updatedVal % incrementBy ? updatedVal : roundToIncrement(updatedVal, incrementBy);\nthis.value([finalVal]);\n@@ -706,49 +681,24 @@ Slider.prototype = {\ne.preventDefault();\nclearTimeout(handle.data('animationTimeout'));\n- function getDecrementBy() {\n- if (decrement !== undefined) {\n- return decrement;\n- }\n- if (this.settings.step !== undefined) {\n- return this.settings.step;\n- }\n- return 1;\n- }\n-\nconst val = this.value();\n- let decrementBy = getDecrementBy();\n+ let decrementBy = decrement !== undefined ? decrement : this.settings.step !== undefined ? this.settings.step : 1; //eslint-disable-line\nlet testVal;\nlet updatedVal;\nlet finalVal;\n- function checkDecrementBy(handleType) {\n- if (isInt(testVal)) {\n- return decrementBy;\n- }\n- const subtract = handleType === 'higher';\n- const fraction = testVal % decrementBy;\n- if (isNaN(fraction)) {\n- return 0;\n- }\n- if (subtract) {\n- return decrementBy - fraction;\n- }\n- return fraction;\n- }\n-\nif (handle.hasClass('higher')) {\ntestVal = value !== undefined ? value : val[1];\nconst minValue = val[0] === undefined ? this.settings.min : val[0];\n- decrementBy = checkDecrementBy();\n+ decrementBy = isInt(testVal) ? decrementBy : isNaN(testVal % decrementBy) ? 0 : decrementBy - (testVal % decrementBy); //eslint-disable-line\nupdatedVal = testVal - decrementBy > minValue ? testVal - decrementBy : minValue;\nfinalVal = updatedVal % decrementBy ? updatedVal : roundToIncrement(updatedVal, decrementBy);\nthis.value([undefined, finalVal]);\n} else {\ntestVal = value !== undefined ? value : val[0];\n- decrementBy = checkDecrementBy();\n+ decrementBy = isInt(testVal) ? decrementBy : isNaN(testVal % decrementBy) ? 0 : testVal % decrementBy; //eslint-disable-line\nupdatedVal = testVal - decrementBy >\n- (this.settings.min ? testVal - decrementBy : this.settings.min);\n+ this.settings.min ? testVal - decrementBy : this.settings.min;\nfinalVal = updatedVal % decrementBy ? updatedVal : roundToIncrement(updatedVal, decrementBy);\nthis.value([finalVal]);\n}\n",
        "date": "30.01.2018 15:28:47",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor increment and decrement logic in slider.js"
    },
    {
        "msg": "fix an autocomplete bug where Searchfields that filter application menus were also showing an empty autocomplete list",
        "diff": "diff --git a/components/autocomplete/autocomplete.js b/components/autocomplete/autocomplete.js @@ -262,6 +262,7 @@ Autocomplete.prototype = {\nthis.settings.displayResultsCallback(modifiedFilterResults, () => {\nself.element.trigger('listopen', [modifiedFilterResults]);\n});\n+ return;\n}\nthis.handleListResults(term, items, modifiedFilterResults);\n",
        "date": "05.02.2018 13:51:36",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add return statement in displayResultsCallback to prevent further execution."
    },
    {
        "msg": "fix a bug from ES6 conversion where some pre-defined listview datasets were not properly being displayed (change in logic that handles the internal dataset)",
        "diff": "diff --git a/components/listview/listview.js b/components/listview/listview.js @@ -339,7 +339,7 @@ ListView.prototype = {\nds = ds || this.settings.dataset;\npagerInfo = pagerInfo || {};\n- if (!Array.isArray(ds) || !ds.length) {\n+ if (!Array.isArray(ds)) {\nreturn;\n}\n",
        "date": "07.02.2018 12:11:39",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor dataset validation in ListView component"
    },
    {
        "msg": "fix some weirdness in CSS styles",
        "diff": "diff --git a/components/toolbar-flex/_toolbar-flex.scss b/components/toolbar-flex/_toolbar-flex.scss &:not(.favor) {\noverflow-x: hidden;\n- text-overflow: ellipsis;\n+ overflow-y: auto;\n}\n}\n&.title {\nh1, h2, h3, h4, h5, h6, {\n- display: inline-block;\n+ display: inline;\n}\n.page-title, .section-title {\n+ .toolbar-section.buttonset {\ntext-align: right;\n}\n+\n+ &:not(.favor) {\n+ text-overflow: ellipsis;\n+ }\n}\n+ .toolbar-section.title {\npadding-left: 10px;\n}\n+ &.buttonset {\n+ padding: 4px;\n+\n+ [class^=\"btn\"] {\n+ margin-right: 0;\n+ }\n+ }\n+\n&.search {\npadding: 0 10px;\n}\n@@ -73,6 +85,10 @@ html[dir='rtl'] {\npadding-left: 0;\npadding-right: 10px;\n}\n+\n+ &.buttonset {\n+ margin-left: 0;\n+ }\n}\n}\n",
        "date": "02.03.2018 11:08:50",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Update toolbar-flex styles for better alignment and text overflow handling"
    },
    {
        "msg": "fix a bad accordion example",
        "diff": "diff --git a/components/accordion/example-index.html b/components/accordion/example-index.html <div class=\"accordion-header\">\n<a href=\"#\"><span>Sort By</span></a>\n</div>\n- <div class=\"accordion-pane is-expanded\">\n+ <div class=\"accordion-pane\">\n<div class=\"accordion-content\">\n<div class=\"radio-group\">\n<input type=\"radio\" class=\"radio\" name=\"sort\" id=\"sort-recent\" value=\"recent\" />\n",
        "date": "02.03.2018 12:58:56",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Remove is-expanded class from accordion-pane in example-index.html"
    },
    {
        "msg": "fix a bug in Toolbar where default settings were not propagating correctly during initialization (ES6 conversion)",
        "diff": "diff --git a/components/toolbar/toolbar.js b/components/toolbar/toolbar.js @@ -51,7 +51,7 @@ const TOOLBAR_DEFAULTS = {\n*/\nfunction Toolbar(element, settings) {\nthis.element = $(element);\n- this.settings = utils.mergeSettings(this.element[0], settings, this.settings);\n+ this.settings = utils.mergeSettings(this.element[0], settings, TOOLBAR_DEFAULTS);\ndebug.logTimeStart(COMPONENT_NAME);\nthis.init();\n",
        "date": "12.03.2018 11:39:50",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Update toolbar.js to use default settings when merging with user settings"
    },
    {
        "msg": "fix bug with Step Process not working correctly in IE11 (example had ES6 code present)",
        "diff": "diff --git a/components/stepprocess/example-index.html b/components/stepprocess/example-index.html createHTML: function(stepFolder, step) {\nvar $stepContainer = $(stepFolder);\nvar $contentContainer = $('.step-container');\n- $stepContainer.append(`\n- <li class=\"js-step\">\n- <a class=\"js-step-link\" href=\"#${step.id}\">\n- <svg class=\"step-alert icon-empty-circle icon\" focusable=\"false\" aria-hidden=\"true\" role=\"presentation\">\n- <use xlink:href=\"#icon-empty-circle\"></use>\n- </svg>\n- <span class='tree-text'>${step.title}</span>\n- </a>\n- </li>\n- `);\n- $contentContainer.append(`\n- <div id=\"${step.id}\" class=\"js-step-panel\">\n- <h2>${step.title}</h2>\n- <p>This is step ${step.id}</p>\n- </div>\n- `);\n+ $stepContainer.append('<li class=\"js-step\">' +\n+ '<a class=\"js-step-link\" href=\"#' + step.id + '\">' +\n+ '<svg class=\"step-alert icon-empty-circle icon\" focusable=\"false\" aria-hidden=\"true\" role=\"presentation\">' +\n+ '<use xlink:href=\"#icon-empty-circle\"></use>' +\n+ '</svg>' +\n+ '<span class=\"tree-text\">' + step.title + '</span>' +\n+ '</a>' +\n+ '</li>');\n+ $contentContainer.append('<div id=\"' + step.id + '\" class=\"js-step-panel\">' +\n+ '<h2>' + step.title + '</h2>' +\n+ '<p>This is step ${step.id}</p>' +\n+ '</div>');\n}\n};\n",
        "date": "13.03.2018 15:47:57",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor createHTML function to improve code readability and maintainability"
    },
    {
        "msg": "fix a bug where in-page Searchfields were being sized smaller than normal.",
        "diff": "diff --git a/components/searchfield/searchfield.js b/components/searchfield/searchfield.js @@ -572,7 +572,7 @@ SearchField.prototype = {\n}\nlet subtractWidth = 0;\n- let targetWidthProp = '100%';\n+ let targetWidthProp;\nif (this.hasCategories()) {\nsubtractWidth += this.categoryButton.outerWidth(true);\n@@ -585,8 +585,9 @@ SearchField.prototype = {\nif (subtractWidth > 0) {\ntargetWidthProp = `calc(100% - ${subtractWidth}px)`;\n}\n-\n+ if (targetWidthProp) {\nthis.element[0].style.width = targetWidthProp;\n+ }\n},\n/**\n",
        "date": "21.03.2018 13:10:42",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix dynamic width calculation in searchfield component"
    },
    {
        "msg": "fix up some logging in the deploy script",
        "diff": "diff --git a/build/deploy-documentation.js b/build/deploy-documentation.js @@ -282,7 +282,7 @@ function cleanAll() {\nconsole.error(chalk.red('Error!'), err);\n})\n.then(res => {\n- logTaskAction('Cleaned', paths.idsWebsite.dist);\n+ logTaskAction('Cleaned', paths.idsWebsite.dist.replace(rootPath, '.'));\ncreateDirs([\npaths.idsWebsite.root,\npaths.idsWebsite.dist,\n@@ -317,7 +317,7 @@ function markdownToHtml(filePath) {\nreject(err);\n} else {\ncomponentStats.numConverted++;\n- logTaskAction('Converting', fileBasename + '.md')\n+ logTaskAction('Converting', fileBasename + '.md', true);\nresolve(allDocsObjMap[fileBasename].body = content);\n}\n});\n@@ -334,7 +334,7 @@ function createDirs(arrPaths) {\nfor (let path of arrPaths) {\nif (!fs.existsSync(path)) {\nfs.mkdirSync(path);\n- logTaskAction('Created', path);\n+ logTaskAction('Created', path.replace(rootPath, '.'));\n}\n}\n}\n@@ -369,7 +369,7 @@ function documentJsToHtml(componentName) {\nreturn output.map((file) => {\nreturn vinylToString(file, 'utf8').then(contents => {\ncomponentStats.numDocumented++;\n- logTaskAction('Documented', componentName + '.js');\n+ logTaskAction('Documented', componentName + '.js', true);\nallDocsObjMap[componentName].api = contents;\n});\n})\n@@ -411,10 +411,12 @@ function logTaskEnd(taskName) {\n* Log an individual task's action\n* @param {string} action - the action\n* @param {string} desc - a brief description or more details\n+ * @param {boolean} [onlyVerbose] - console log only with verbose flag\n* @param {string} [color] - one of the chalk module's color aliases\n+ *\n*/\n-function logTaskAction(action, desc, color = 'green') {\n- if (argv.verbose) {\n+function logTaskAction(action, desc, onlyVerbose=false, color = 'green') {\n+ if (!onlyVerbose || (onlyVerbose && argv.verbose)) {\nconsole.log('-', action, chalk[color](desc));\n}\n}\n@@ -425,23 +427,24 @@ function logTaskAction(action, desc, color = 'green') {\nfunction postZippedBundle() {\nconst formData = require('form-data');\n- logTaskStart(`publish to server \"${deployTo}\"`);\n+ logTaskStart(`attempt publish to server \"${deployTo}\"`);\nlet form = new formData();\nform.append('file', fs.createReadStream(`${paths.idsWebsite.dist}.zip`));\nform.append('root_path', `ids-enterprise/${packageJson.version}`);\nform.append('post_auth_key', process.env.DOCS_API_KEY ? process.env.DOCS_API_KEY : \"\");\nform.submit(serverURIs[deployTo], (err, res) => {\n+ logTaskEnd(`attempt publish to server \"${deployTo}\"`);\nif (err) {\nconsole.error(err);\n+ logTaskAction('Failed!', `Status ${err}`, false, 'red');\n} else {\nif (res.statusCode == 200) {\nlogTaskAction('Success', `to \"${serverURIs[deployTo]}\"`)\n} else {\n- logTaskAction('Failed!', `Status ${res.statusCode}`, 'red');\n+ logTaskAction('Failed!', `Status ${res.statusCode}: ${res.statusMessage}`, false, 'red');\n}\nres.resume();\n- logTaskEnd(`publish to server \"${deployTo}\"`);\nnumArchivesSent++;\nstatsConclusion();\n}\n@@ -509,7 +512,7 @@ function writeHtmlFile(hbsTemplate, componentName) {\nif (err) {\nreject(err);\n} else {\n- logTaskAction('Created', `${componentName}.html`);\n+ logTaskAction('Created', `${componentName}.html`, true);\nresolve();\n}\n});\n@@ -528,7 +531,7 @@ function writeJsonFile(componentName) {\nreject(err);\n} else {\ncomponentStats.numWritten++;\n- logTaskAction('Created', thisName + '.json');\n+ logTaskAction('Created', thisName + '.json', true);\nresolve();\n}\n});\n",
        "date": "06.04.2018 11:08:39",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor logTaskAction function and improve logging messages"
    },
    {
        "msg": "fix bug with navigation when using disabled toolbar items.",
        "diff": "diff --git a/components/toolbar-flex/toolbar-flex.js b/components/toolbar-flex/toolbar-flex.js @@ -349,6 +349,9 @@ ToolbarFlex.prototype = {\nreturn;\n}\n+ // reference the original direction for later, if placement fails.\n+ const originalDirection = 0 + direction;\n+\nif (currentIndex === undefined) {\ncurrentIndex = this.items.indexOf(this.focusedItem);\n}\n@@ -376,7 +379,7 @@ ToolbarFlex.prototype = {\nconst targetItem = this.items[currentIndex];\nif (targetItem.focusable === false) {\n- this.navigate(direction > 0 ? 1 : -1, currentIndex, doSetFocus);\n+ this.navigate(originalDirection > 0 ? 1 : -1, currentIndex, doSetFocus);\nreturn;\n}\n",
        "date": "09.04.2018 12:45:25",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix navigation issue in ToolbarFlex component"
    },
    {
        "msg": "fix a bug in some App Menu accordion headers, which in some cases were throwing JS errors.",
        "diff": "diff --git a/components/applicationmenu/applicationmenu.js b/components/applicationmenu/applicationmenu.js @@ -671,7 +671,7 @@ ApplicationMenu.prototype = {\nthis.accordion.on('blur.applicationmenu', () => {\nself.closeMenu();\n}).on('selected.applicationmenu', (e, header) => {\n- const a = header.children('a');\n+ const a = $(header).children('a');\nself.handleDismissOnClick(a);\n}).on('followlink.applicationmenu', (e, anchor) => {\nself.handleDismissOnClick(anchor);\n",
        "date": "16.04.2018 10:59:12",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix issue with selecting anchor element in application menu."
    },
    {
        "msg": "fix a bug in Tabs where certain bad keypresses were firing `keypress` on the Add Tab button when they shouldn't be",
        "diff": "diff --git a/components/tabs/tabs.js b/components/tabs/tabs.js @@ -1393,6 +1393,13 @@ Tabs.prototype = {\nreturn false;\n}\n+ const validKeys = [13, 32, 37, 38, 39, 40];\n+ const key = e.which;\n+\n+ if (validKeys.indexOf(key) < 0) {\n+ return false;\n+ }\n+\nconst self = this;\nconst isRTL = Locale.isRTL();\nlet targetLi;\n@@ -1413,7 +1420,7 @@ Tabs.prototype = {\ntargetLi = self.tablist.find(filter).first();\n}\n- switch (e.which) {\n+ switch (key) {\ncase 37: // left\nif (isRTL) {\nfirstTab();\n",
        "date": "18.04.2018 17:00:31",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor keyboard navigation in tabs component"
    },
    {
        "msg": "fix the paths for windows backslash seperators",
        "diff": "diff --git a/build/deploy-documentation.js b/build/deploy-documentation.js @@ -388,9 +388,9 @@ function documentJsToHtml(componentName) {\n* @returns {string} - the component's name\n*/\nfunction deriveComponentName(dirPath) {\n- return dirPath\n- .replace(`${paths.components}/`, '')\n- .slice(0, -1);\n+ dirPath = removeTrailingSlash(dirPath);\n+ const arr = dirPath.split(path.sep);\n+ return arr[arr.length - 1];\n}\n/**\n@@ -468,6 +468,15 @@ function readSitemapYaml() {\nreturn sitemap;\n}\n+/**\n+ * Remove trialing slash\n+ * @param {string} uri - a uri/path\n+ * @returns {string} - the path with a trailing slash\n+ */\n+function removeTrailingSlash(uri) {\n+ return uri.replace(/\\/$/, '');\n+}\n+\n/**\n* Console.log statistics from the build\n*/\n",
        "date": "30.04.2018 13:26:04",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor deriveComponentName function and add removeTrailingSlash function"
    },
    {
        "msg": "fix right click was returning wrong row index with Tree Datagrid",
        "diff": "diff --git a/src/components/datagrid/datagrid.js b/src/components/datagrid/datagrid.js @@ -4192,7 +4192,7 @@ Datagrid.prototype = {\nconst self = this;\nconst cell = $(e.target).closest('td').index();\nconst rowElem = $(e.target).closest('tr');\n- let row = self.dataRowIndex(rowElem);\n+ let row = this.settings.treeGrid ? this.actualRowIndex(rowElem) : this.dataRowIndex(rowElem);\nlet isTrigger = true;\nif ($(e.target).is('a')) {\n",
        "date": "30.05.2018 14:44:04",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor dataRowIndex method to handle treeGrid setting"
    },
    {
        "msg": "fix a bug shown in the angular component with down arrow",
        "diff": "diff --git a/src/components/colorpicker/colorpicker.js b/src/components/colorpicker/colorpicker.js @@ -335,6 +335,7 @@ ColorPicker.prototype = {\nariaListbox: true,\nmenuId: 'colorpicker-menu',\ntrigger: 'immediate',\n+ attachToBody: true,\nplacementOpts: {\ncontainerOffsetX: 10,\ncontainerOffsetY: 10,\n",
        "date": "05.06.2018 10:37:08",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add option to attach color picker to body"
    },
    {
        "msg": "fix some size calculation issues -- soho-7580",
        "diff": "diff --git a/src/components/searchfield/searchfield.js b/src/components/searchfield/searchfield.js @@ -1018,7 +1018,7 @@ SearchField.prototype = {\n* @returns {boolean} the ability to cancel the menu's opening.\n*/\nhandlePopupBeforeOpen(e, menu) {\n- if (!this.isExpanded || !menu) {\n+ if ((this.isCollapsible && (this.isExpanding || !this.isExpanded)) || !menu) {\nreturn false;\n}\n",
        "date": "21.06.2018 11:05:27",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor handlePopupBeforeOpen to account for collapsible behavior"
    },
    {
        "msg": "fix the build errors",
        "diff": "diff --git a/src/components/locale/locale.js b/src/components/locale/locale.js @@ -338,7 +338,7 @@ const Locale = { // eslint-disable-line\nconst hours = value.getHours();\nconst seconds = value.getSeconds();\n- if (cal.conversions) {\n+ if (cal && cal.conversions) {\nif (attribs.fromGregorian) {\nconst islamicParts = cal.conversions.fromGregorian(value);\nday = islamicParts[2];\n",
        "date": "22.06.2018 12:37:22",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix issue with cal object being undefined in locale.js"
    },
    {
        "msg": "fix some markdown indentation",
        "diff": "diff --git a/docs/PUBLISH.md b/docs/PUBLISH.md @@ -34,7 +34,7 @@ To do a dev release, publish a dated semever to npm.\n## Official, Tagged Releases\n-#### Documentation\n+### Documentation\n- Verify the [changelog](/changelog) is up-to-date\n- Generate Release Notes <http://bit.ly/2w6X8Xw>\n",
        "date": "22.06.2018 14:28:45",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Update documentation section header in PUBLISH.md"
    },
    {
        "msg": "fix the NG changelog link",
        "diff": "diff --git a/docs/CHANGELOG.md b/docs/CHANGELOG.md ## v4.8.0\n- [Npm Package](https://www.npmjs.com/package/ids-enterprise)\n-- [IDS NG (Angular) Change Log](https://github.com/infor-design/enterprise-ng/blob/master/CHANGELOG.md)\n+- [IDS NG (Angular) Change Log](https://github.com/infor-design/enterprise-ng/blob/master/docs/CHANGELOG.md)\n### v4.8.0 Features\n",
        "date": "03.07.2018 10:30:37",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Update IDS NG (Angular) Change Log link in documentation"
    },
    {
        "msg": "fix the display of full option list on multiselect -- soho-7494",
        "diff": "diff --git a/src/components/dropdown/dropdown.js b/src/components/dropdown/dropdown.js @@ -1032,7 +1032,7 @@ Dropdown.prototype = {\nresetList() {\n// 'typeahead' reloading skips client-side filtering in favor of server-side\nif (this.settings.source && this.settings.reload === 'typeahead') {\n- this.callSource();\n+ this.callSource(null, true);\nreturn;\n}\n@@ -2412,14 +2412,15 @@ Dropdown.prototype = {\n/**\n* Execute the source ajax option\n* @private\n- * @param {function} callback - The function call back.\n+ * @param {function} callback The function call back.\n+ * @param {boolean} doReset if defined, acts as a \"reset\" source call, where the search term will be ignored.\n* @returns {function} The callback for execution.\n*/\n- callSource(callback) {\n+ callSource(callback, doReset) {\nconst self = this;\nlet searchTerm = '';\n- if (this.isOpen() && !this.element.hasClass('search-mode')) {\n+ if (!doReset && this.isOpen() && !this.element.hasClass('search-mode')) {\nsearchTerm = this.searchInput.val();\n}\n",
        "date": "10.07.2018 09:57:56",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor callSource method to include a doReset parameter"
    },
    {
        "msg": "fix more tooltip on programmatically created more action buttons on toolbar",
        "diff": "diff --git a/src/components/toolbar/toolbar.js b/src/components/toolbar/toolbar.js @@ -151,7 +151,9 @@ Toolbar.prototype = {\nthis.more = $('<button class=\"btn-actions\" type=\"button\"></button>')\n.html(`${$.createIcon({ icon: 'more' })\n}<span class=\"audible\">${Locale.translate('MoreActions')}</span>`)\n+ .attr('title', Locale.translate('More'))\n.appendTo(moreContainer);\n+ this.more = $(this.more).initialize();\n}\n// Reference all interactive items in the toolbar\n",
        "date": "12.07.2018 12:49:34",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add title attribute to 'more' button and initialize it in toolbar."
    },
    {
        "msg": "fix test to avoid tabs",
        "diff": "diff --git a/test/components/datepicker/datepicker.e2e-spec.js b/test/components/datepicker/datepicker.e2e-spec.js @@ -238,7 +238,6 @@ describe('Datepicker Month Year Picker Tests', () => {\nawait dropdownEl.sendKeys(protractor.Key.ARROW_DOWN);\nawait dropdownEl.sendKeys(protractor.Key.ARROW_DOWN);\nawait dropdownEl.sendKeys(protractor.Key.ENTER);\n- await dropdownEl.sendKeys(protractor.Key.TAB);\nconst buttonEl = await element(by.css('.select-month.btn-tertiary'));\nawait buttonEl.click();\n@@ -246,7 +245,7 @@ describe('Datepicker Month Year Picker Tests', () => {\nconst testDate = new Date();\ntestDate.setMonth(testDate.getMonth() + 1);\n- expect(await element(by.id('month-year')).getAttribute('value')).toEqual(`${(testDate.getMonth() + 1).toString().padStart(2, '0')}/${testDate.getFullYear()}`);\n+ expect(await element(by.id('month-year')).getAttribute('value')).toEqual(`${(testDate.getMonth()).toString().padStart(2, '0')}/${testDate.getFullYear()}`);\n});\nit('Should be able to function as month/year picker long', async () => {\n@@ -257,13 +256,12 @@ describe('Datepicker Month Year Picker Tests', () => {\nawait dropdownEl.sendKeys(protractor.Key.ARROW_DOWN);\nawait dropdownEl.sendKeys(protractor.Key.ARROW_DOWN);\nawait dropdownEl.sendKeys(protractor.Key.ENTER);\n- await dropdownEl.sendKeys(protractor.Key.TAB);\nconst buttonEl = await element(by.css('.select-month.btn-tertiary'));\nawait buttonEl.click();\nconst testDate = new Date();\n- testDate.setMonth(testDate.getMonth() + 1);\n+ testDate.setMonth(testDate.getMonth());\nexpect(await element(by.id('month-year-long')).getAttribute('value')).toEqual(testDate.toLocaleDateString('en-US', { year: 'numeric', month: 'short' }));\n});\n@@ -282,29 +280,25 @@ describe('Datepicker Month Year Changer Tests', () => {\nawait dropdownEl.sendKeys(protractor.Key.ARROW_DOWN);\nawait dropdownEl.sendKeys(protractor.Key.ARROW_DOWN);\nawait dropdownEl.sendKeys(protractor.Key.ENTER);\n- await dropdownEl.sendKeys(protractor.Key.TAB);\nconst yearEl = await element(by.css('#year-dropdown + .dropdown-wrapper div[aria-controls=\"dropdown-list\"]'));\nawait yearEl.sendKeys(protractor.Key.ARROW_DOWN);\nawait yearEl.sendKeys(protractor.Key.ARROW_DOWN);\nawait yearEl.sendKeys(protractor.Key.ARROW_DOWN);\nawait yearEl.sendKeys(protractor.Key.ENTER);\n- await yearEl.sendKeys(protractor.Key.TAB);\nconst prevButtonEl = await element(by.css('.prev.btn-icon'));\n- await prevButtonEl.sendKeys(protractor.Key.TAB);\nawait prevButtonEl.sendKeys(protractor.Key.ENTER);\nconst lastButtonEl = await element(by.css('.next.btn-icon'));\nawait lastButtonEl.sendKeys(protractor.Key.ENTER);\n- await lastButtonEl.sendKeys(protractor.Key.TAB);\nawait browser.driver.sleep(config.sleep);\nconst buttonEl = await element.all(by.css('.calendar-table td:not(.alternate)')).first();\nawait buttonEl.click();\nconst testDate = new Date();\n- testDate.setMonth(testDate.getMonth() + 2);\n+ testDate.setMonth(testDate.getMonth() + 1);\nexpect(await element(by.id('date-field-normal')).getAttribute('value')).toEqual(`${(testDate.getMonth())}/1/${testDate.getFullYear()}`);\n});\n",
        "date": "18.07.2018 14:53:21",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor datepicker e2e tests and fix month calculation bug"
    },
    {
        "msg": "fix up several incorrect element selectors",
        "diff": "diff --git a/test/components/datagrid/datagrid-paging.func-spec.js b/test/components/datagrid/datagrid-paging.func-spec.js @@ -280,7 +280,7 @@ describe('Datagrid Paging API', () => {\nconst dataSourceContainer = {\ndataSource: (request, response) => {\nrequest.firstPage = false;\n- request.lastPage = request.type === 'last';\n+ request.lastPage = request.type === 'next';\nresponse(sampleData, request);\n}\n};\n@@ -297,7 +297,7 @@ describe('Datagrid Paging API', () => {\n// and the paging bar is rendered\nsetTimeout(() => {\n// get first button and click it\n- const buttonEl = document.body.querySelector('li.pager-last a');\n+ const buttonEl = document.body.querySelector('li.pager-next a');\nconst buttonClickSpy = spyOnEvent(buttonEl, 'click.button');\nbuttonEl.click();\n@@ -308,18 +308,18 @@ describe('Datagrid Paging API', () => {\n// ensure it's been called with a request.type of 'first'\nexpect(dataSourceSpy).toHaveBeenCalled();\nexpect(dataSourceSpy.calls.mostRecent().args[0].type).toBeDefined();\n- expect(dataSourceSpy.calls.mostRecent().args[0].type).toEqual('last');\n+ expect(dataSourceSpy.calls.mostRecent().args[0].type).toEqual('next');\ndone();\n}, 500);\n}, 1);\n});\n- it('test using last paging bar button', (done) => {\n+ it('test using previous paging bar button', (done) => {\n// build a source function\nconst dataSourceContainer = {\ndataSource: (request, response) => {\n- request.firstPage = false;\n- request.lastPage = request.type === 'last';\n+ request.firstPage = request.type === 'prev';\n+ request.lastPage = false;\nresponse(sampleData, request);\n}\n};\n@@ -336,7 +336,7 @@ describe('Datagrid Paging API', () => {\n// and the paging bar is rendered\nsetTimeout(() => {\n// get first button and click it\n- const buttonEl = document.body.querySelector('li.pager-last a');\n+ const buttonEl = document.body.querySelector('li.pager-prev a');\nconst buttonClickSpy = spyOnEvent(buttonEl, 'click.button');\nbuttonEl.click();\n@@ -347,7 +347,7 @@ describe('Datagrid Paging API', () => {\n// ensure it's been called with a request.type of 'first'\nexpect(dataSourceSpy).toHaveBeenCalled();\nexpect(dataSourceSpy.calls.mostRecent().args[0].type).toBeDefined();\n- expect(dataSourceSpy.calls.mostRecent().args[0].type).toEqual('last');\n+ expect(dataSourceSpy.calls.mostRecent().args[0].type).toEqual('prev');\ndone();\n}, 500);\n}, 1);\n",
        "date": "08.08.2018 13:38:06",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Update paging bar buttons to use 'next' and 'prev' instead of 'last' and 'first' respectively."
    },
    {
        "msg": "fix broken test?",
        "diff": "diff --git a/test/components/tabs/tabs.e2e-spec.js b/test/components/tabs/tabs.e2e-spec.js @@ -452,7 +452,7 @@ describe('Tabs ajax as href tests', () => {\nit('Should be able to activate href tabs', async () => {\nexpect(await element(by.id('ajaxified-tabs-tab-1')).getAttribute('innerHTML')).not.toBe('');\n- await element.all(by.className('tab')).get(2).click();\n+ await element.all(by.id('example-tab-two')).click();\nawait browser.driver\n.wait(protractor.ExpectedConditions.visibilityOf(element(by.css('#ajaxified-tabs-tab-2.is-visible'))), config.waitsFor);\n",
        "date": "20.08.2018 14:20:50",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor tab click method in e2e test"
    },
    {
        "msg": "fix more issues with remaining active states with field options",
        "diff": "diff --git a/src/components/field-options/field-options.js b/src/components/field-options/field-options.js @@ -114,6 +114,13 @@ FieldOptions.prototype = {\nconst removeFocused = (elem) => {\n(elem || this.element).removeClass('is-focused');\n};\n+ const canActive = (e) => {\n+ let r = isFocus(this.element);\n+ r = datepicker && datepicker.isOpen() ? false : r;\n+ r = timepicker && timepicker.isOpen() ? false : r;\n+ r = dropdown && dropdown.isOpen() ? false : r;\n+ return r;\n+ }\nconst doActive = () => {\nself.element.add(self.trigger).add(self.field).add(self.fieldParent)\n.addClass('is-active');\n@@ -175,9 +182,15 @@ FieldOptions.prototype = {\n// In desktop environments, the button should only display when the field is in use.\nif (env.features.touch) {\nthis.field.addClass('visible');\n- this.trigger.on(`beforeopen.${COMPONENT_NAME}`, () => {\n+ this.trigger.on(`beforeopen.${COMPONENT_NAME}`, (e) => {\n+ if (!canActive(e)) {\n+ return;\n+ }\ndoActive();\n- }).on(`close.${COMPONENT_NAME}`, () => {\n+ }).on(`close.${COMPONENT_NAME}`, (e) => {\n+ if (!canUnactive(e)) {\n+ return;\n+ }\ndoUnactive();\n});\n} else {\n@@ -329,8 +342,8 @@ FieldOptions.prototype = {\n.on(`selected.${COMPONENT_NAME}`, () => {\nthis.popupmenuApi.settings.returnFocus = true;\n})\n- .on(`close.${COMPONENT_NAME}`, (e, isCancelled) => {\n- if (canUnactive(e) && isCancelled) {\n+ .on(`close.${COMPONENT_NAME}`, (e) => {\n+ if (canUnactive(e)) {\ndoUnactive();\n}\n});\n",
        "date": "22.08.2018 09:30:41",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor field options component event handling and add new canActive function"
    },
    {
        "msg": "fix some lousy grammar",
        "diff": "diff --git a/docs/DEVELOPER.md b/docs/DEVELOPER.md @@ -77,7 +77,7 @@ Finally, in a footer section below the markup on your page, add a `<script>` tag\n</script>\n```\n-It's also possible to manually initialize each component you want to use individually:\n+It's also possible to manually initialize each individual component:\n```js\n$('#my-button').button();\n",
        "date": "31.08.2018 13:03:31",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor component initialization message for clarity"
    },
    {
        "msg": "fix some jsdoc comment inconsistencies",
        "diff": "diff --git a/src/components/wizard/wizard.js b/src/components/wizard/wizard.js @@ -251,7 +251,7 @@ Wizard.prototype = {\n* Fires before a step is activated/pressed. You can cancel selection by returning a 'beforeactivate'\n* handler as 'false'\n* @event beforeactivate\n- * @memberof Datagrid\n+ * @memberof Wizard\n* @property {object} event - The jquery event object\n* @property {HTMLElement} tick - The tick (link) that was activated.\n*/\n@@ -272,7 +272,7 @@ Wizard.prototype = {\n* Fires while a step is activated/pressed.\n* handler as 'false'\n* @event activated\n- * @memberof Datagrid\n+ * @memberof Wizard\n* @property {object} event - The jquery event object\n* @property {HTMLElement} tick - The tick (link) that was activated.\n*/\n@@ -281,8 +281,8 @@ Wizard.prototype = {\n/**\n* Fires after a step is activated/pressed. And the new Dom is loaded.\n* handler as 'false'\n- * @event activated\n- * @memberof Datagrid\n+ * @event afteractivated\n+ * @memberof Wizard\n* @property {object} event - The jquery event object\n* @property {HTMLElement} tick - The tick (link) that was activated.\n*/\n",
        "date": "20.09.2018 12:31:17",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor event handlers in Wizard component"
    },
    {
        "msg": "fix bug and remove trailing spaces.",
        "diff": "diff --git a/src/components/dropdown/dropdown.js b/src/components/dropdown/dropdown.js @@ -978,7 +978,6 @@ Dropdown.prototype = {\nreturn;\n}\n-\nresults.removeClass('hidden');\nlist.not(results).add(headers).addClass('hidden');\nlist.filter(results).each(function (i) {\n@@ -1012,10 +1011,12 @@ Dropdown.prototype = {\nterm = '';\nthis.position();\n+ if (this.list.find('svg').length > 2) {\n+ this.list.find('svg').last().changeIcon('icon-empty-circle');\n+ }\n+\nif (noIcons && this.list.find('input').css('padding-left')) {\nthis.list.find('input').addClass('no-icon-padding');\n- } else {\n- this.list.find('svg').last().changeIcon('icon-empty-circle');\n}\n},\n@@ -1070,6 +1071,10 @@ Dropdown.prototype = {\nlis.removeClass('hidden');\nthis.position();\n+ if (this.list.find('svg').length === 2) {\n+ this.list.find('svg').last().remove();\n+ }\n+\nif (this.list.find('input').css('padding-left')) {\nthis.list.find('input').addClass('no-icon-padding');\n}\n",
        "date": "26.09.2018 10:42:58",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor dropdown.js to handle icon changes efficiently"
    },
    {
        "msg": "fix Titles/Headers",
        "diff": "diff --git a/test/components/bar/bar-stacked.e2e-spec.js b/test/components/bar/bar-stacked.e2e-spec.js @@ -55,14 +55,14 @@ describe('Stacked Bar Chart example-colors', () => {\nawait utils.checkForErrors();\n});\n- it('Should first bar is green', async () => {\n+ it('Should detect that first bar is green', async () => {\nconst fGroupEl = await element.all(by.css('.series-group')).get(0);\nconst barEl = await fGroupEl.element(by.css('.bar.series-0'));\nexpect(await barEl.getCssValue('fill')).toBe('rgb(142, 209, 198)');\n});\n- it('Should second bar is violet', async () => {\n+ it('Should detect that second bar is violet', async () => {\nconst sGroupEl = await element.all(by.css('.series-group')).get(1);\nconst barEl = await sGroupEl.element(by.css('.bar.series-0'));\n",
        "date": "10.10.2018 10:08:07",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor test descriptions to be more descriptive"
    },
    {
        "msg": "fix Undefined on Backspace",
        "diff": "diff --git a/src/components/dropdown/dropdown.js b/src/components/dropdown/dropdown.js @@ -1057,7 +1057,15 @@ Dropdown.prototype = {\nconst li = $(this);\nconst text = a.text();\n- const icon = (li.children('a').find('svg').length !== 0) ? li.children('a').find('svg')[0].outerHTML : '';\n+ let icon = '';\n+\n+ if (li.children('a').find('svg').length !== 0) {\n+ if (li.children('a').find('svg')[0].outerHTML) {\n+ icon = li.children('a').find('svg')[0].outerHTML;\n+ } else {\n+ icon = new XMLSerializer().serializeToString(li.children('a').find('svg')[0]);\n+ }\n+ }\nif (icon) {\nhasIcons = true;\n",
        "date": "26.10.2018 17:37:33",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor icon handling in dropdown.js"
    },
    {
        "msg": "fix Azure 01 issue",
        "diff": "diff --git a/src/components/colorpicker/colorpicker.js b/src/components/colorpicker/colorpicker.js @@ -115,7 +115,8 @@ const COLORPICKER_DEFAULTS = {\n{ label: 'Azure', number: '05', value: '4EA0D1' },\n{ label: 'Azure', number: '04', value: '69B5DD' },\n{ label: 'Azure', number: '03', value: '8DC9E6' },\n- { label: 'Azure', number: '02', value: 'ADD8EB' }\n+ { label: 'Azure', number: '02', value: 'ADD8EB' },\n+ { label: 'Azure', number: '01', value: 'C8E9F4' }\n],\nplaceIn: null, // null|'editor'\nshowLabel: false,\n@@ -540,10 +541,6 @@ ColorPicker.prototype = {\nconst a = $(`<a href=\"#\" title=\"${s.clearableText}\"><span class=\"swatch is-empty${isBorderAll ? ' is-border' : ''}\"></span></a>`).appendTo(li);\na.data('label', s.clearableText).data('value', '').tooltip();\nmenu.append(li);\n- } else if (!this.settings.customColors) {\n- const li = $('<li></li>');\n- $('<a href=\"#\" title=\"Azure01 #C8E9F4\"><span class=\"swatch\" style=\"background-color: rgb(173 ,216, 235);\"></span></a>').appendTo(li).tooltip();\n- menu.append(li);\n}\n$('body').append(menu);\n",
        "date": "15.11.2018 15:25:13",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add Azure01 color option and remove unnecessary code in colorpicker.js"
    },
    {
        "msg": "fix one error",
        "diff": "diff --git a/src/components/bar/bar.js b/src/components/bar/bar.js @@ -647,6 +647,11 @@ Bar.prototype = {\n* @private\n*/\nsetTextValues() {\n+ if (this.settings.isGrouped) {\n+ // These are TODO, as you need a different structure since its using the group name\n+ return;\n+ }\n+\nconst elems = document.querySelectorAll('.bar-chart .axis.y .tick text');\nconst dataset = this.settings.dataset;\nfor (let i = 0; i < dataset.length; i++) {\n",
        "date": "16.11.2018 13:01:42",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add conditional check for grouped data in setTextValues()"
    },
    {
        "msg": "fix small misalignment",
        "diff": "diff --git a/src/components/searchfield/_searchfield.scss b/src/components/searchfield/_searchfield.scss @@ -86,6 +86,7 @@ $cubic-bezier-ease: cubic-bezier(0.17, 0.04, 0.03, 0.94);\nborder-left: 0;\nborder-right: 0;\nborder-top: 0;\n+ height: 33px;\npadding-left: 32px;\nwidth: 100%;\n",
        "date": "28.11.2018 10:46:44",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add height property to searchfield component"
    },
    {
        "msg": "fix a test and parse error",
        "diff": "diff --git a/test/components/listview/listview.e2e-spec.js b/test/components/listview/listview.e2e-spec.js @@ -52,14 +52,14 @@ describe('Listview example-singleselect tests', () => {\nit('Should deselect one item on click', async () => {\nconst listviewItemEl = await element(by.css('li[aria-posinset=\"1\"]'));\n- listviewItemEl.click();\n+ await listviewItemEl.click();\nawait browser.driver\n.wait(protractor.ExpectedConditions.presenceOf(element(by.css('li[aria-selected=\"true\"].is-selected'))), config.waitsFor);\nexpect(await element(by.css('li[aria-selected=\"true\"]')).isPresent()).toBeTruthy();\nexpect(await element(by.className('selection-count')).getText()).toContain('1 Selected');\n- listviewItemEl.click();\n+ await listviewItemEl.click();\nawait browser.driver\n.wait(protractor.ExpectedConditions.presenceOf(element(by.css('li[aria-selected=\"false\"]'))), config.waitsFor);\n",
        "date": "28.11.2018 10:47:43",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix issue with deselecting items in listview component"
    },
    {
        "msg": "fix close event",
        "diff": "diff --git a/src/components/tabs/tabs.js b/src/components/tabs/tabs.js @@ -3235,7 +3235,17 @@ Tabs.prototype = {\ne.preventDefault();\ne.stopPropagation();\n+\n+ if (li.is('.dismissible') && li.is('.has-popupmenu') && li.is('.submenu')) {\n+ const listMenu = li.find('.wrapper').children().children();\n+ const hrefs = [];\n+ $.each(listMenu, (i, item) => {\n+ hrefs.push(item.children[0].href);\n+ });\n+ self.closeDismissibleTabs(hrefs);\n+ } else {\nself.closeDismissibleTab(li.children('a').attr('href'));\n+ }\nself.popupmenu.close();\n}\n",
        "date": "04.12.2018 14:04:19",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add functionality to close multiple dismissible tabs with submenu in tabs.js"
    },
    {
        "msg": "fix a BS test",
        "diff": "diff --git a/test/components/datepicker/datepicker.e2e-spec.js b/test/components/datepicker/datepicker.e2e-spec.js @@ -640,6 +640,7 @@ describe('Datepicker Timeformat Tests', () => {\nconst todayEl = await element(by.css('button.is-today'));\nconst testDate = new Date();\nawait todayEl.click();\n+ const value = await element(by.id('dp3')).getAttribute('value');\nlet hours = testDate.getHours();\nconst minutes = testDate.getMinutes();\n@@ -651,10 +652,12 @@ describe('Datepicker Timeformat Tests', () => {\n}\nexpect([\n+ `${(testDate.getMonth() + 1)}/${testDate.getDate()}/${testDate.getFullYear()} ${hours}:${(minutes - 2).toString().padStart(2, '0')} ${amPm}`,\n+ `${(testDate.getMonth() + 1)}/${testDate.getDate()}/${testDate.getFullYear()} ${hours}:${(minutes - 1).toString().padStart(2, '0')} ${amPm}`,\n`${(testDate.getMonth() + 1)}/${testDate.getDate()}/${testDate.getFullYear()} ${hours}:${(minutes).toString().padStart(2, '0')} ${amPm}`,\n`${(testDate.getMonth() + 1)}/${testDate.getDate()}/${testDate.getFullYear()} ${hours}:${(minutes + 1).toString().padStart(2, '0')} ${amPm}`,\n`${(testDate.getMonth() + 1)}/${testDate.getDate()}/${testDate.getFullYear()} ${hours}:${(minutes + 2).toString().padStart(2, '0')} ${amPm}` // for slow test on ci\n- ]).toContain(await element(by.id('dp3')).getAttribute('value'));\n+ ]).toContain(value);\n});\n});\n",
        "date": "12.12.2018 11:50:57",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor datepicker e2e test for time format validation"
    },
    {
        "msg": "fix test for animation",
        "diff": "diff --git a/test/components/tabs/tabs-api.func-spec.js b/test/components/tabs/tabs-api.func-spec.js @@ -289,11 +289,15 @@ describe('Tabs API', () => {\nexpect(tab.length).toBeFalsy();\n});\n- it('Should select tab, and focus', () => {\n+ it('Should select tab, and focus', (done) => {\ntabsObj.select('#tabs-normal-contracts');\nexpect(document.querySelector('.tab.is-selected').innerText).toEqual('Contracts');\n+\n+ setTimeout(() => {\nexpect(parseInt(document.querySelector('.animated-bar').style.left, 10)).toBeCloseTo(0, 1);\n+ done();\n+ }, 500);\n});\nit('Should return false whether tabs are overflowed at 300px', () => {\n",
        "date": "02.01.2019 12:08:58",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add async test for selecting tab and focusing"
    },
    {
        "msg": "fix the delay",
        "diff": "diff --git a/test/components/datagrid/datagrid.e2e-spec.js b/test/components/datagrid/datagrid.e2e-spec.js @@ -1506,7 +1506,7 @@ describe('Datagrid timezone tests', () => {\nif (utils.isChrome() && utils.isCI()) {\nit('Should not visual regress', async () => {\nconst containerEl = await element(by.className('container'));\n- await browser.driver.sleep(1500);\n+ await browser.driver.sleep(400);\nexpect(await browser.protractorImageComparison.checkElement(containerEl, 'datagrid-timezone')).toEqual(0);\n});\n",
        "date": "27.02.2019 08:39:20",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Reduce sleep time in datagrid timezone e2e test"
    },
    {
        "msg": "fix test [Skip Travis]",
        "diff": "diff --git a/test/components/datagrid/datagrid.e2e-spec.js b/test/components/datagrid/datagrid.e2e-spec.js @@ -1490,11 +1490,11 @@ describe('Datagrid select event tests', () => {\n});\n});\n-describe('Datagrid timezone tests', () => {\n+fdescribe('Datagrid timezone tests', () => {\nbeforeEach(async () => {\nawait utils.setPage('/components/datagrid/test-timezone-formats?layout=nofrills&locale=nl-NL');\n- const datagridEl = await element(by.css('.datagrid tr:nth-child(10)'));\n+ const datagridEl = await element(by.css('.datagrid tr:nth-child(5)'));\nawait browser.driver\n.wait(protractor.ExpectedConditions.presenceOf(datagridEl), config.waitsFor);\n});\n@@ -1506,7 +1506,6 @@ describe('Datagrid timezone tests', () => {\nif (utils.isChrome() && utils.isCI()) {\nit('Should not visual regress', async () => {\nconst containerEl = await element(by.className('container'));\n- await browser.driver.sleep(400);\nexpect(await browser.protractorImageComparison.checkElement(containerEl, 'datagrid-timezone')).toEqual(0);\n});\n",
        "date": "27.02.2019 08:42:10",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Update datagrid timezone tests to use correct row index"
    },
    {
        "msg": "fix some off padding and spacing in IE/FF",
        "diff": "diff --git a/src/components/form-compact/_form-compact.scss b/src/components/form-compact/_form-compact.scss font-weight: 700;\n}\n+// Specific paddings for non-Blink-based browsers (IE, FF)\n+.ie,\n+.is-firefox {\n+ .form-compact {\n+ .column,\n+ .columns {\n+ &.form-section-header {\n+ padding: 16px 10px 15px;\n+ }\n+\n+ label {\n+ padding: 6px 9px 0;\n+ }\n+\n+ input {\n+ padding: 0 8px 6px;\n+ }\n+ }\n+ }\n+}\n+\n// Ensures a common min-height on headers\n@media (max-width: $breakpoint-phone-to-tablet + 1) {\n.form-compact {\n",
        "date": "01.03.2019 16:42:56",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add specific paddings for non-Blink-based browsers (IE, FF) in form-compact styles."
    },
    {
        "msg": "fix the timeout",
        "diff": "diff --git a/test/components/datagrid/datagrid.e2e-spec.js b/test/components/datagrid/datagrid.e2e-spec.js @@ -612,7 +612,7 @@ describe('Datagrid paging tests', () => {\nawait element(by.css('.pager-count input')).clear();\nawait element(by.css('.pager-count input')).sendKeys('101');\nawait element(by.css('.pager-count input')).sendKeys(protractor.Key.ENTER);\n- await browser.driver.sleep(300);\n+ await browser.driver.sleep(500);\nexpect(await element(by.css('tbody tr:nth-child(1) td:nth-child(2) span')).getText()).toEqual('0');\nexpect(await element(by.css('tbody tr:nth-child(10) td:nth-child(2) span')).getText()).toEqual('9');\n",
        "date": "08.03.2019 09:30:39",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Increase sleep time in datagrid e2e test to 500ms"
    },
    {
        "msg": "fix one more",
        "diff": "diff --git a/test/components/datagrid/datagrid.e2e-spec.js b/test/components/datagrid/datagrid.e2e-spec.js @@ -1081,7 +1081,7 @@ describe('Datagrid disableRowDeactivation setting tests', () => {\nbeforeEach(async () => {\nawait utils.setPage('/components/datagrid/test-mixed-selection-disable-row-dectivation');\n- const datagridEl = await element(by.id('datagrid-header'));\n+ const datagridEl = await element(by.css('#datagrid-header .datagrid-body tbody tr:nth-child(1)'));\nawait browser.driver\n.wait(protractor.ExpectedConditions.presenceOf(datagridEl), config.waitsFor);\n});\n",
        "date": "18.03.2019 08:55:03",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor datagrid element selection in e2e test"
    },
    {
        "msg": "fix one more datagrid test",
        "diff": "diff --git a/test/components/datagrid/datagrid.e2e-spec.js b/test/components/datagrid/datagrid.e2e-spec.js @@ -394,7 +394,7 @@ describe('Datagrid index tests', () => {\nbeforeEach(async () => {\nawait utils.setPage('/components/datagrid/example-index?layout=nofrills');\n- const datagridEl = await element(by.id('datagrid'));\n+ const datagridEl = await element(by.css('#datagrid tbody tr:nth-child(1)'));\nawait browser.driver\n.wait(protractor.ExpectedConditions.presenceOf(datagridEl), config.waitsFor);\nawait element(by.css('body')).sendKeys(protractor.Key.TAB);\n",
        "date": "18.03.2019 11:04:20",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor datagrid element selection in e2e test"
    },
    {
        "msg": "fix the test by allowing all the values to be possible",
        "diff": "diff --git a/test/components/datepicker/datepicker.e2e-spec.js b/test/components/datepicker/datepicker.e2e-spec.js @@ -577,7 +577,7 @@ describe('Datepicker Timeformat Tests', () => {\nconst dateVariances = [-2, -1, 0, 1, 2]\n.map(amt => testDate.setSeconds(testDate.getSeconds() + amt));\n- expect(dateVariances).toEqual(new Date(value).getTime());\n+ expect(dateVariances).toContain(new Date(value).getTime());\n});\n});\n",
        "date": "28.03.2019 09:37:51",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix datepicker timeformat test assertion to check if dateVariances contain the value instead of equal to it"
    },
    {
        "msg": "fix the label localization on the number mask gauntlet",
        "diff": "diff --git a/app/views/components/mask/test-number-mask-gauntlet.html b/app/views/components/mask/test-number-mask-gauntlet.html }\n};\n- var localeString = Locale.currentLocale.name,\n+ var thisLocale = Locale.currentLocale,\n+ localeString = thisLocale.name,\nisLocalized = localeString !== 'en-US'; // default for the test suite\n// localize the label\nif (isLocalized) {\n- var number = Locale.parseNumber(numberSpan.text().toString()),\n+ var spanText = numberSpan.text();\n+ var hasThousands = spanText.indexOf(thisLocale.data.numbers.group) !== -1;\n+ var number = Locale.parseNumber(spanText.toString()),\nlocalizedLabelOpts = {\ngroup: thisOpts.patternOptions.symbols.thousands,\ndecimal: thisOpts.patternOptions.symbols.decimal,\nminusSign: thisOpts.patternOptions.symbols.negative,\nminimumFractionDigits: 0\n};\n+ if (!hasThousands) {\n+ localizedLabelOpts.groupSizes = [0, 0];\n+ }\nif (thisOpts.patternOptions.decimalLimit) {\nlocalizedLabelOpts.maximumFractionDigits = thisOpts.patternOptions.decimalLimit;\n}\n",
        "date": "25.03.2019 16:41:39",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor number mask gauntlet to handle localization and thousands separator"
    },
    {
        "msg": "fix up the clean cmds",
        "diff": "diff --git a/package.json b/package.json \"build\": \"node ./scripts/build\",\n\"build:custom\": \"node ./scripts/build\",\n\"build:icons\": \"node ./scripts/build-icons.js\",\n- \"clean\": \"npx grunt clean\",\n+ \"clean\": \"rimraf temp && rimraf dist\",\n+ \"clean:app\": \"rimraf app/dist\",\n\"stop\": \"./scripts/stop.sh\",\n\"watch\": \"npx grunt watch\",\n\"stylelint:demo\": \"npx stylelint 'app/src/**/*.scss'\",\n\"eslint:error-only\": \"npm run build:icons && npx eslint -c .eslintrc.js --quiet src test\",\n\"lint:ci\": \"npm run eslint:error-only && npm run mdlint && npm run stylelint\",\n\"minify\": \"node ./scripts/minify.js\",\n- \"minify:js\": \"node ./scripts/minify-js.js\",\n- \"minify:css\": \"node ./scripts/minify-css.js\",\n\"functional:local\": \"npx karma start test/karma.conf.js\",\n\"functional:ci\": \"npx karma start test/karma.conf.js --single-run\",\n\"e2e:ci\": \"npm run webdriver:update && npx protractor test/protractor.ci.conf.js\",\n\"pygmentize-bundled\": \"^2.3.0\",\n\"r2\": \"^2.0.1\",\n\"release-it\": \"^10.3.1\",\n+ \"rimraf\": \"^2.6.3\",\n\"rollup\": \"^1.6.0\",\n\"rollup-plugin-analyzer\": \"^3.0.0\",\n\"rollup-plugin-babel\": \"^3.0.2\",\n",
        "date": "28.03.2019 14:34:36",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor build and clean scripts in package.json"
    },
    {
        "msg": "fix an event-based memory leak in `header.js`",
        "diff": "diff --git a/src/components/header/header.js b/src/components/header/header.js @@ -368,32 +368,34 @@ Header.prototype = {\nconst self = this;\nthis.element\n- .on('updated.header', (e, settings) => {\n+ .on(`updated.${COMPONENT_NAME}`, (e, settings) => {\nself.updated(settings);\n})\n- .on('reset.header', () => {\n+ .on(`reset.${COMPONENT_NAME}`, () => {\nself.reset();\n})\n- .on('drilldown.header', (e, viewTitle) => {\n+ .on(`drilldown.${COMPONENT_NAME}`, (e, viewTitle) => {\nself.drilldown(viewTitle);\n})\n- .on('drillup.header', (e, viewTitle) => {\n+ .on(`drillup.${COMPONENT_NAME}`, (e, viewTitle) => {\nself.drillup(viewTitle);\n});\n// Events for the title button. e.preventDefault(); stops Application Menu\n// functionality while drilled\n- this.titleButton.bindFirst('click.header', (e) => {\n+ if (this.titleButton && this.titleButton.length) {\n+ this.titleButton.bindFirst(`click.${COMPONENT_NAME}`, (e) => {\nif (self.levelsDeep.length > 1) {\ne.stopImmediatePropagation();\nself.drillup();\ne.returnValue = false;\n}\n});\n+ }\n// Popupmenu Events\n- if (this.settings.usePopupmenu) {\n- this.titlePopup.on('selected.header', function (e, anchor) {\n+ if (this.titlePopup && this.titlePopup.length) {\n+ this.titlePopup.on(`selected.${COMPONENT_NAME}`, function (e, anchor) {\n$(this).children('h1').text(anchor.text());\n});\n}\n@@ -716,8 +718,21 @@ Header.prototype = {\n* @returns {this} component instance\n*/\nunbind() {\n- this.titleButton.off('click.header');\n- this.element.off('drilldown.header drillup.header');\n+ if (this.titleButton && this.titleButton.length) {\n+ this.titleButton.off(`click.${COMPONENT_NAME}`);\n+ }\n+\n+ if (this.titlePopup && this.titlePopup.length) {\n+ this.titlePopup.off(`updated.${COMPONENT_NAME}`);\n+ }\n+\n+ this.element.off([\n+ `updated.${COMPONENT_NAME}`,\n+ `reset.${COMPONENT_NAME}`,\n+ `drilldown.${COMPONENT_NAME}`,\n+ `drillup.${COMPONENT_NAME}`,\n+ ].join(' '));\n+\nreturn this;\n},\n",
        "date": "01.04.2019 12:07:48",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor event binding in header component to use COMPONENT_NAME variable for consistency"
    },
    {
        "msg": "fix (newly) incorrect comments about groupsize in the tests",
        "diff": "diff --git a/test/components/locale/locale.func-spec.js b/test/components/locale/locale.func-spec.js @@ -1053,7 +1053,7 @@ describe('Locale API', () => {\n});\nit('Should handle group size', () => {\n- Locale.set('en-US'); // 3, 0\n+ Locale.set('en-US'); // 3, 3\nexpect(Locale.formatNumber(-2.53, { style: 'percent', minimumFractionDigits: 2 })).toEqual('-253.00 %');\nexpect(Locale.formatNumber(1.1234)).toEqual('1.123');\n@@ -1103,7 +1103,7 @@ describe('Locale API', () => {\n});\nit('Should parse group size', () => {\n- Locale.set('en-US'); // 3, 0\n+ Locale.set('en-US'); // 3, 3\nexpect(Locale.parseNumber('-253.00 %')).toEqual(-253);\nexpect(Locale.parseNumber('1.123')).toEqual(1.123);\n@@ -1153,7 +1153,7 @@ describe('Locale API', () => {\n});\nit('Should be able to not show the group size', () => {\n- Locale.set('en-US'); // 3, 0\n+ Locale.set('en-US'); // 3, 3\nexpect(Locale.formatNumber(1234567.1234, { group: '' })).toEqual('1234567.123');\nexpect(Locale.formatNumber(12345678.1234, { group: '' })).toEqual('12345678.123');\n@@ -1170,7 +1170,7 @@ describe('Locale API', () => {\n});\nit('Should be able to set the group size', () => {\n- Locale.set('en-US'); // 3, 0\n+ Locale.set('en-US'); // 3, 3\nexpect(Locale.formatNumber(1234567.1234, { groupSizes: [3, 0] })).toEqual('1234,567.123');\nexpect(Locale.formatNumber(12345678.1234, { groupSizes: [3, 0] })).toEqual('12345,678.123');\n@@ -1187,7 +1187,7 @@ describe('Locale API', () => {\n});\nit('Should be able to set zero group size', () => {\n- Locale.set('en-US'); // 3, 0\n+ Locale.set('en-US'); // 3, 3\nexpect(Locale.formatNumber(1234567.1234, { groupSizes: [0, 0] })).toEqual('1234567.123');\nexpect(Locale.formatNumber(12345678.1234, { groupSizes: [0, 0] })).toEqual('12345678.123');\n",
        "date": "04.04.2019 12:04:12",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Update group size handling in Locale API to use group size of 3."
    },
    {
        "msg": "fix a lint error in an MD",
        "diff": "diff --git a/src/components/expandablearea/readme.md b/src/components/expandablearea/readme.md @@ -56,7 +56,6 @@ Its possible to assign a custom button that can toggle a specific area using the\n</div>\n```\n-\n## Testability\n- Please refer to the [Application Testability Checklist](https://design.infor.com/resources/application-testability-checklist) for further details.\n",
        "date": "15.04.2019 09:49:59",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Remove unnecessary bullet point in expandable area readme"
    },
    {
        "msg": "fix a bug on the page class",
        "diff": "diff --git a/src/components/personalize/personalize.js b/src/components/personalize/personalize.js @@ -311,8 +311,8 @@ Personalize.prototype = {\n*/\nsetTheme(incomingTheme) {\nif (theme.currentTheme.id === incomingTheme) {\n- if (!$('html').hasClass(`${theme}-theme`)) {\n- $('html').addClass(`${theme}-theme`);\n+ if (!$('html').hasClass(`${incomingTheme}-theme`)) {\n+ $('html').addClass(`${incomingTheme}-theme`);\n}\nreturn;\n}\n",
        "date": "17.04.2019 17:25:15",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix issue with setting theme class in personalize.js"
    },
    {
        "msg": "fix an issue with icon build/clean timing",
        "diff": "diff --git a/scripts/build/create-svg-html.js b/scripts/build/create-svg-html.js @@ -142,8 +142,7 @@ function createHtmlFiles() {\n*/\nfunction createSvgHtml(verbose) {\nIS_VERBOSE = verbose;\n- cleanFiles();\n- return createHtmlFiles();\n+ cleanFiles().then(createHtmlFiles);\n}\nmodule.exports = createSvgHtml;\n",
        "date": "18.04.2019 14:30:32",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor createSvgHtml function to use promises for cleaner code."
    },
    {
        "msg": "fix some scrolling examples",
        "diff": "diff --git a/src/components/datagrid/_datagrid.scss b/src/components/datagrid/_datagrid.scss @@ -193,13 +193,13 @@ $datagrid-short-row-height: 23px;\n&.has-group-headers.has-filterable-columns {\n.datagrid-body {\n- height: calc(100% - 100px);\n+ height: calc(100% - 105px);\n}\n}\n&.has-filterable-columns {\n.datagrid-body {\n- height: calc(100% - 65px);\n+ height: calc(100% - 66px);\n}\n.datagrid-filter-wrapper {\n",
        "date": "25.04.2019 17:54:19",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Adjust datagrid body height for better alignment."
    },
    {
        "msg": "fix a demo app issue in slider",
        "diff": "diff --git a/app/views/components/slider/example-index.html b/app/views/components/slider/example-index.html <div class=\"field\">\n<label for=\"slider-regular\">Regular</label>\n- <input id=\"slider-regular\" name=\"slider-regular\" value=\"10\" class=\"slider\" type=\"range\" data-tooltip-content=\"['']\" data-tooltip-persist=\"true\" />\n+ <input id=\"slider-regular\" name=\"slider-regular\" value=\"10\" class=\"slider\" type=\"range\" data-options=\"{'persistTooltip': false, tooltipContent: ['']}\"/>\n</div>\n</div>\n",
        "date": "26.04.2019 11:09:36",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor slider input options in example-index.html"
    },
    {
        "msg": "fix the change log",
        "diff": "diff --git a/docs/CHANGELOG.md b/docs/CHANGELOG.md - `[Datagrid]` Added an example of expandOnActivate on a customer editor. ([#353](https://github.com/infor-design/enterprise-ng/issues/353))\n- `[Datagrid]` Added ability to pass a function to the tooltip option for custom formatting. ([#354](https://github.com/infor-design/enterprise-ng/issues/354))\n- `[Dropdown]` Changed the way dropdowns work with screen readers to be a collapsible listbox.([#404](https://github.com/infor-design/enterprise/issues/404))\n-- `[Dropdown]` Changed the way dropdowns work with screen readers to be a collapsible listbox.([#404](https://github.com/infor-design/enterprise/issues/404))\n+- `[Dropdown]` Fixed an issue where multiselect dropdown unchecking \"Select All\" was not getting clear after close list with Safari browser.([#1882](https://github.com/infor-design/enterprise/issues/1882))\n- `[Dropdown]` Added an example of a color dropdown showing palette colors as icons.([#2013](https://github.com/infor-design/enterprise/issues/2013))\n- `[Listbuilder]` Fixed an issue where the text was not sanitizing. ([#1692](https://github.com/infor-design/enterprise/issues/1692))\n- `[Lookup]` Fixed an issue where the tooltip was using audible text in the code block component. ([#354](https://github.com/infor-design/enterprise-ng/issues/354))\n",
        "date": "26.04.2019 14:11:30",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix issues with dropdown functionality and add color dropdown example."
    },
    {
        "msg": "fix an issue initializing the app menu in some NG situations",
        "diff": "diff --git a/src/components/applicationmenu/applicationmenu.js b/src/components/applicationmenu/applicationmenu.js @@ -29,7 +29,7 @@ const APPLICATIONMENU_DEFAULTS = {\ndismissOnClickMobile: false,\nfilterable: false,\nopenOnLarge: false,\n- triggers: [],\n+ triggers: ['.application-menu-trigger'],\nonExpandSwitcher: null,\nonCollapseSwitcher: null,\n};\n",
        "date": "29.04.2019 12:11:45",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add default trigger for application menu."
    },
    {
        "msg": "fix the badge",
        "diff": "diff --git a/README.md b/README.md [![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n[![npm version](https://badge.fury.io/js/ids-enterprise.svg)](https://badge.fury.io/js/ids-enterprise)\n[![Build Status](https://travis-ci.com/infor-design/enterprise.svg?branch=master)](https://travis-ci.com/infor-design/enterprise)\n-[![BrowserStack Status](https://www.browserstack.com/automate/badge.svg?badge_key=M2l2RFNkS2hHUU1CU0kvcFdsSGdIWFlMNEF0RVZzRzNvSHVTemJIektiOD0tLTUvWm1JUWNXbjhML01oR2hJNllLb2c9PQ==--dff99debefe381a9d6031c2ce209d663d727ecf9)](https://www.browserstack.com/automate/public-build/M2l2RFNkS2hHUU1CU0kvcFdsSGdIWFlMNEF0RVZzRzNvSHVTemJIektiOD0tLTUvWm1JUWNXbjhML01oR2hJNllLb2c9PQ==--dff99debefe381a9d6031c2ce209d663d727ecf9)\n+[![BrowserStack Status](https://www.browserstack.com/automate/badge.svg?badge_key=ZTBSMS9NZFgxN2VCZnpaNmdsa1NhY2J1NHlsNnFuMG5UcGViQUhMYnl1QT0tLVlTTks3UUVQbXd0emlxL1BKK2RjeGc9PQ==--eb3493141181901c21b84c0bf6c9c7d44635df2ausmvtmcconechy:enterprusmusmvtuusuuuuusuusmvusmvtuusmvuusuuuuuuu)](https://www.browserstack.com/automate/public-build/ZTBSMS9NZFgxN2VCZnpaNmdsa1NhY2J1NHlsNnFuMG5UcGViQUhMYnl1QT0tLVlTTks3UUVQbXd0emlxL1BKK2RjeGc9PQ==--eb3493141181901c21b84c0bf6c9c7d44635df2ausmvtmcconechy:enterprusmusmvtuusuuuuusuusmvusmvtuusmvuusuuuuuuu)\nInfor Design System's Enterprise component library is a framework-independent UI library consisting of CSS and JS that provides Infor product development teams, partners, and customers the tools to create user experiences that are approachable, focused, relevant, perceptive.\n",
        "date": "29.04.2019 13:51:38",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Update BrowserStack badge in README.md"
    },
    {
        "msg": "fix the link again",
        "diff": "diff --git a/README.md b/README.md [![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n[![npm version](https://badge.fury.io/js/ids-enterprise.svg)](https://badge.fury.io/js/ids-enterprise)\n[![Build Status](https://travis-ci.com/infor-design/enterprise.svg?branch=master)](https://travis-ci.com/infor-design/enterprise)\n-[![BrowserStack Status](https://www.browserstack.com/automate/badge.svg?badge_key=YjZiNnMrdklFaml2V3ZaY1g0NnFVNVhsZ2RjTjJleStKb2pzdmN1c2lraz0tLWEzdVBmUDhFYml5VzV2cGdKVnZiQnc9PQ==--2f996e1132d31738f133e4d1414e9591e2187a10](https://www.browserstack.com/automate/public-build/YjZiNnMrdklFaml2V3ZaY1g0NnFVNVhsZ2RjTjJleStKb2pzdmN1c2lraz0tLWEzdVBmUDhFYml5VzV2cGdKVnZiQnc9PQ==--2f996e1132d31738f133e4d1414e9591e2187a10)\n+[![BrowserStack Status](https://www.browserstack.com/automate/badge.svg?badge_key=YjZiNnMrdklFaml2V3ZaY1g0NnFVNVhsZ2RjTjJleStKb2pzdmN1c2lraz0tLWEzdVBmUDhFYml5VzV2cGdKVnZiQnc9PQ==--2f996e1132d31738f133e4d1414e9591e2187a10)](https://www.browserstack.com/automate/public-build/YjZiNnMrdklFaml2V3ZaY1g0NnFVNVhsZ2RjTjJleStKb2pzdmN1c2lraz0tLWEzdVBmUDhFYml5VzV2cGdKVnZiQnc9PQ==--2f996e1132d31738f133e4d1414e9591e2187a10)\nInfor Design System's Enterprise component library is a framework-independent UI library consisting of CSS and JS that provides Infor product development teams, partners, and customers the tools to create user experiences that are approachable, focused, relevant, perceptive.\n",
        "date": "29.04.2019 13:56:40",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Update BrowserStack badge in README.md"
    },
    {
        "msg": "fix a listbuilder test which was failing randomly",
        "diff": "diff --git a/test/components/listbuilder/listbuilder-api.func-spec.js b/test/components/listbuilder/listbuilder-api.func-spec.js import { ListBuilder } from '../../../src/components/listbuilder/listbuilder';\n+import { cleanup } from '../../helpers/func-utils';\nconst listbuilderHTML = require('../../../app/views/components/listbuilder/example-index.html');\nconst svg = require('../../../src/components/icons/svg.html');\n@@ -6,7 +7,6 @@ const svg = require('../../../src/components/icons/svg.html');\nrequire('../../../src/components/locale/cultures/en-US.js');\nlet listbuilderEl;\n-let svgEl;\nlet listbuilderObj;\n// Define dataset\n@@ -27,19 +27,16 @@ ds.push({ id: 12, value: 'opt-12', text: 'Libya' });\ndescribe('ListBuilder API', () => {\nbeforeEach(() => {\nlistbuilderEl = null;\n- svgEl = null;\nlistbuilderObj = null;\ndocument.body.insertAdjacentHTML('afterbegin', svg);\ndocument.body.insertAdjacentHTML('afterbegin', listbuilderHTML);\nlistbuilderEl = document.body.querySelector('#example-listbuilder');\n- svgEl = document.body.querySelector('.svg-icons');\nlistbuilderObj = new ListBuilder(listbuilderEl, { dataset: [...ds] });\n});\nafterEach(() => {\nlistbuilderObj.destroy();\n- listbuilderEl.parentNode.removeChild(listbuilderEl);\n- svgEl.parentNode.removeChild(svgEl);\n+ cleanup(['#example-listbuilder-container', '.svg-icons', '#listbuilder-script', '#listbuilder-tmpl']);\n});\nit('Should be defined as an object', () => {\n",
        "date": "01.05.2019 10:04:05",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor listbuilder-api.func-spec.js to include cleanup function and remove unnecessary code"
    },
    {
        "msg": "fix a change log entry",
        "diff": "diff --git a/docs/CHANGELOG.md b/docs/CHANGELOG.md -# What's New with Enterprise\n+turquoiseturquoise# What's New with Enterprise\n## v4.19.0\n- `[Listview]` Improved accessibility when configured as selectable (all types), as well as re-enabled accessibility e2e tests. ([#403](https://github.com/infor-design/enterprise/issues/403))\n- `[Datagrid]` Fixed charts in columns not resizing correctly to short row height. ([#1930](https://github.com/infor-design/enterprise/issues/1930))\n- `[Datagrid]` Fixed an issue for xss where console.log was not sanitizing and make grid to not render. ([#1941](https://github.com/infor-design/enterprise/issues/1941))\n+- `[Personalization]` Changed the default turquoise personalization to a darker one. ([#2063](https://github.com/infor-design/enterprise/issues/2063))\n+- `[Personalization]` Added a default option to the personalization color pickers. ([#2063](https://github.com/infor-design/enterprise/issues/2063))\n- `[Tree]` Fixed an issue where children property null was breaking tree to not render. ([#1908](https://github.com/infor-design/enterprise/issues/1908))\n### v4.19.0 Chores & Maintenance\n",
        "date": "07.05.2019 12:50:45",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Update personalization colors and add default option"
    },
    {
        "msg": "fix more functional tests",
        "diff": "diff --git a/test/components/toolbar-flex/toolbar-flex-api.func-spec.js b/test/components/toolbar-flex/toolbar-flex-api.func-spec.js @@ -109,7 +109,7 @@ describe('Flex Toolbar', () => {\nexpect(overflow[0]).toEqual(jasmine.any(ToolbarFlexItem));\nexpect(overflow[0].overflowed).toBeTruthy();\ndone();\n- }, 300);\n+ }, 350);\n});\nit('Can programmatically navigate toolbar items', () => {\n@@ -332,7 +332,9 @@ describe('Flex Toolbar', () => {\nconst textButton = toolbarAPI.items[0];\nexpect(textButton.overflowed).toBeFalsy();\n+ }, 300);\n+ setTimeout(() => {\nconst secondIconButton = toolbarAPI.items[2];\nexpect(secondIconButton.overflowed).toBeTruthy();\n",
        "date": "13.05.2019 14:28:43",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Increase timeout for toolbar-flex-api.func-spec.js test case and add missing setTimeout for proper execution."
    },
    {
        "msg": "fix a button alignment issue",
        "diff": "diff --git a/src/components/datagrid/_datagrid.scss b/src/components/datagrid/_datagrid.scss @@ -1051,6 +1051,10 @@ $datagrid-short-row-height: 23px;\nmin-width: 20px;\n}\n+ &.btn-primary {\n+ top: -1px;\n+ }\n+\n.icon {\nmargin-top: -3px;\n}\n",
        "date": "13.05.2019 16:20:45",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Adjust positioning of primary button in datagrid."
    },
    {
        "msg": "fix some components that have errors on IE 11",
        "diff": "diff --git a/src/components/personalize/personalize.js b/src/components/personalize/personalize.js @@ -261,14 +261,14 @@ Personalize.prototype = {\n// Adapt them for backwards compatibility\nconst legacyThemeNames = ['light', 'dark', 'high-contrast'];\n- if (legacyThemeNames.includes(incomingTheme)) {\n+ if (legacyThemeNames.indexOf(incomingTheme) > -1) {\nincomingTheme += '-theme';\n}\n$html\n.removeClass((idx, val) => {\nconst classes = val.split(' ');\n- const toRemove = classes.filter(c => c.includes('theme'));\n+ const toRemove = classes.filter(c => c.indexOf('theme') > -1);\nreturn toRemove.join();\n})\n.addClass(incomingTheme);\n@@ -375,7 +375,7 @@ Personalize.prototype = {\n}\n// Copy the old settings to compare\n- const prevSettings = Object.assign({}, this.settings);\n+ const prevSettings = utils.extend({ }, this.settings);\n// Merge in the new settings\nthis.settings = utils.mergeSettings(this.element[0], settings, this.settings);\n",
        "date": "20.05.2019 09:31:51",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor legacy theme handling and update settings merge method"
    },
    {
        "msg": "fix right-side padding on RTL standalone searchfields",
        "diff": "diff --git a/src/components/searchfield/_searchfield.scss b/src/components/searchfield/_searchfield.scss @@ -355,6 +355,11 @@ $cubic-bezier-ease: cubic-bezier(0.17, 0.04, 0.03, 0.94);\n// RTL Styles\nhtml[dir='rtl'] {\n.searchfield-wrapper {\n+ .searchfield {\n+ padding-left: 10px;\n+ padding-right: 34px;\n+ }\n+\n> .icon {\n&:not(.close) {\nleft: auto;\n",
        "date": "21.05.2019 11:06:32",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add padding to searchfield in RTL mode"
    },
    {
        "msg": "fix an IE issue on a hierarchy example",
        "diff": "diff --git a/app/views/components/hierarchy/test-multiple-charts.html b/app/views/components/hierarchy/test-multiple-charts.html console.log(event, eventInfo);\nif (eventInfo.data.childrenUrl) {\n- $.getJSON(`{{basepath}}api/${eventInfo.data.childrenUrl}`, function(newData) {\n+ $.getJSON('{{basepath}}api/' + eventInfo.data.childrenUrl, function(newData) {\nreload(eventInfo, hierarchyControl, newData);\n});\n}\n</script>\n</div>\n<div id=\"tabs-two\" class=\"tab-panel\">\n- <figure class=\"hierarchy\" id=\"hierarchyTwo\"></figure>\n+ <figure class=\"hierarchy\" id=\"hierarchy-two\"></figure>\n<script>\nconst optionsTwo = {\n// Initial load\n$.getJSON('{{basepath}}api/hc-john-randolph', function(data) {\noptionsTwo.dataset = [data];\n- $('#hierarchyTwo').hierarchy(optionsTwo);\n+ $('#hierarchy-two').hierarchy(optionsTwo);\n});\n- $('#hierarchyTwo').on('selected', function(event, eventInfo) {\n- const hierarchyControl = $('#hierarchyTwo').data('hierarchy');\n+ $('#hierarchy-two').on('selected', function(event, eventInfo) {\n+ const hierarchyControl = $('#hierarchy-two').data('hierarchy');\nconsole.log(event, eventInfo);\nif (eventInfo.data.childrenUrl) {\n- $.getJSON(`{{basepath}}api/${eventInfo.data.childrenUrl}`, function(newData) {\n+ $.getJSON('{{basepath}}api/' + eventInfo.data.childrenUrl, function(newData) {\nreload(eventInfo, hierarchyControl, newData);\n});\n}\n",
        "date": "22.05.2019 10:15:30",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor hierarchy component IDs and event listeners"
    },
    {
        "msg": "fix a test failure and bug when language is already resolved",
        "diff": "diff --git a/src/components/locale/locale.js b/src/components/locale/locale.js @@ -394,13 +394,16 @@ const Locale = { // eslint-disable-line\n});\n}\n+ const correctLocale = this.correctLocale(lang);\nif (this.languages[lang]) {\nthis.currentLanguage = this.languages[lang];\nthis.updateLanguageTag(lang);\n- } else {\n- this.currentLanguage.name = lang;\n+ this.dff[correctLocale] = $.Deferred();\n+ return this.dff[correctLocale].resolve();\n}\n- return this.dff[this.correctLocale(lang)];\n+\n+ this.currentLanguage.name = lang;\n+ return this.dff[correctLocale];\n},\n/**\n",
        "date": "29.05.2019 12:00:42",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor language selection logic in Locale component"
    },
    {
        "msg": "fix a bug when dragging columns",
        "diff": "diff --git a/src/components/datagrid/datagrid.js b/src/components/datagrid/datagrid.js @@ -4855,7 +4855,7 @@ Datagrid.prototype = {\n}\nconst clone = columns.map((col) => {\n- const newCol = col;\n+ const newCol = utils.extend({}, col);\nif (newCol.editorOptions) {\ndelete newCol.editorOptions;\n}\n",
        "date": "30.05.2019 17:51:06",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix bug in Datagrid component by cloning column objects before modifying them"
    },
    {
        "msg": "fix the alignment on filter dropdowns",
        "diff": "diff --git a/src/components/datagrid/_datagrid-uplift.scss b/src/components/datagrid/_datagrid-uplift.scss font-size: $theme-size-font-xs !important;\n}\n+// Adjust Filter Text\n+.datagrid-header .datagrid-filter-wrapper .dropdown {\n+ padding: 1px 0 0 5px;\n+}\n+\n// Adjust Row Links\n.datagrid td .hyperlink {\nmargin-top: -2px;\n",
        "date": "04.06.2019 15:21:28",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Adjust filter text and row links styling in datagrid."
    },
    {
        "msg": "fix an ie 11 incompatibility in the example",
        "diff": "diff --git a/app/views/components/datagrid/example-beforeselect-veto.html b/app/views/components/datagrid/example-beforeselect-veto.html }\n// If just Control or Meta (Mac) is done then allow the select.\n- if (Soho.keyboard.pressedKeys.entries().next().value[0] === 'Control' ||\n- Soho.keyboard.pressedKeys.entries().next().value[0] === 'Meta') {\n+ if (Soho.keyboard.pressedKeys.get('Control') ||\n+ Soho.keyboard.pressedKeys.get('Meta')) {\nvar isSelected = gridApi.isRowSelected(args.idx);\nif (isSelected) {\ngridApi.deselectRow(args.idx, false, true);\n} else {\ngridApi.selectRow(args.idx, false, true);\n}\n+ return true;\n}\n+\n+ $('body').toast({title: 'Selection Vetoed', message: 'In this example, selection is vetoed. You must hold CTRL and click a row to select (or Command on Mac)'});\nreturn false;\n},\ntoolbar: {title: 'Data Grid Header Title', personalize: true, results: true, actions: true, rowHeight: true, selectCount: true}\n",
        "date": "06.06.2019 10:58:07",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor selection veto logic in datagrid example-beforeselect-veto.html"
    },
    {
        "msg": "fix one failing test with popupmenu",
        "diff": "diff --git a/src/components/popupmenu/popupmenu.js b/src/components/popupmenu/popupmenu.js @@ -786,11 +786,8 @@ PopupMenu.prototype = {\nif (!immediate) {\n// Left-Click activation\nif (leftClick) {\n- this.element\n- .on('click.popupmenu', (e) => {\n- if (this.element.hasClass('is-open')) {\n- self.close();\n- } else {\n+ this.element.on('click.popupmenu', (e) => {\n+ if (!this.element.is('.is-open')) {\ncontextMenuHandler(e, true);\n}\n});\n",
        "date": "06.06.2019 17:15:14",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor left-click activation in PopupMenu"
    },
    {
        "msg": "fix some links in the tests",
        "diff": "diff --git a/test/components/dount/line.e2e-spec.js b/test/components/dount/line.e2e-spec.js @@ -30,7 +30,7 @@ describe('Line Chart tests', () => {\ndescribe('Line Chart Zero Millions tests', () => {\nbeforeEach(async () => {\n- await utils.setPage('/components/donut/example-zero-millions?layout=nofrills');\n+ await utils.setPage('/components/line/example-zero-millions?layout=nofrills');\n});\nit('Should not have errors', async () => {\n@@ -53,7 +53,7 @@ describe('Line Chart Zero Millions tests', () => {\ndescribe('Line Chart Two Line tests', () => {\nbeforeEach(async () => {\n- await utils.setPage('/components/donut/example-two-lines.html?layout=nofrills');\n+ await utils.setPage('/components/line/example-two-lines.html?layout=nofrills');\n});\nit('Should not have errors', async () => {\n@@ -76,7 +76,7 @@ describe('Line Chart Two Line tests', () => {\ndescribe('Line Chart Axis Label tests', () => {\nbeforeEach(async () => {\n- await utils.setPage('/components/donut/example-axis-labels.html?layout=nofrills');\n+ await utils.setPage('/components/line/example-axis-labels.html?layout=nofrills');\n});\nit('Should not have errors', async () => {\n@@ -99,7 +99,7 @@ describe('Line Chart Axis Label tests', () => {\ndescribe('Line Chart Axis Rotate tests', () => {\nbeforeEach(async () => {\n- await utils.setPage('/components/donut/example-rotate.html?layout=nofrills');\n+ await utils.setPage('/components/line/example-rotate.html?layout=nofrills');\n});\nit('Should not have errors', async () => {\n",
        "date": "10.06.2019 13:33:30",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor donut to line chart in test components"
    },
    {
        "msg": "fix a settings test",
        "diff": "diff --git a/test/components/datagrid/datagrid-settings.func-spec.js b/test/components/datagrid/datagrid-settings.func-spec.js +/* eslint-disable object-curly-newline */\nimport { Datagrid } from '../../../src/components/datagrid/datagrid';\nimport { Formatters } from '../../../src/components/datagrid/datagrid.formatters';\n@@ -15,14 +16,14 @@ let defaultSettings;\n// Define Columns for the Grid.\nconst columns = [];\n-columns.push({ id: 'productId', name: 'Id', field: 'productId', reorderable: true, formatter: Formatters.Text, width: 100, filterType: 'Text' });\n-columns.push({ id: 'productName', name: 'Product Name', field: 'productName', reorderable: true, formatter: Formatters.Hyperlink, width: 300, filterType: 'Text' });\n-columns.push({ id: 'activity', name: 'Activity', field: 'activity', reorderable: true, filterType: 'Text' });\n-columns.push({ id: 'hidden', hidden: true, name: 'Hidden', field: 'hidden', filterType: 'Text' });\n-columns.push({ id: 'price', align: 'right', name: 'Actual Price', field: 'price', reorderable: true, formatter: Formatters.Decimal, numberFormat: { minimumFractionDigits: 0, maximumFractionDigits: 0, style: 'currency', currencySign: '$' } });\n-columns.push({ id: 'percent', align: 'right', name: 'Actual %', field: 'percent', reorderable: true, formatter: Formatters.Decimal, numberFormat: { minimumFractionDigits: 0, maximumFractionDigits: 0, style: 'percent' } });\n-columns.push({ id: 'orderDate', name: 'Order Date', field: 'orderDate', reorderable: true, formatter: Formatters.Date, dateFormat: 'M/d/yyyy' });\n-columns.push({ id: 'phone', name: 'Phone', field: 'phone', reorderable: true, filterType: 'Text', formatter: Formatters.Text });\n+columns.push({ id: 'productId', name: 'Id', field: 'productId', hideable: true, reorderable: true, formatter: Formatters.Text, width: 100, filterType: 'Text' });\n+columns.push({ id: 'productName', name: 'Product Name', field: 'productName', hideable: true, reorderable: true, formatter: Formatters.Hyperlink, width: 300, filterType: 'Text' });\n+columns.push({ id: 'activity', name: 'Activity', field: 'activity', hideable: true, reorderable: true, filterType: 'Text' });\n+columns.push({ id: 'hidden', hidden: true, name: 'Hidden', hideable: true, field: 'hidden', filterType: 'Text' });\n+columns.push({ id: 'price', align: 'right', name: 'Actual Price', hideable: true, field: 'price', reorderable: true, formatter: Formatters.Decimal, numberFormat: { minimumFractionDigits: 0, maximumFractionDigits: 0, style: 'currency', currencySign: '$' } });\n+columns.push({ id: 'percent', align: 'right', name: 'Actual %', hideable: true, field: 'percent', reorderable: true, formatter: Formatters.Decimal, numberFormat: { minimumFractionDigits: 0, maximumFractionDigits: 0, style: 'percent' } });\n+columns.push({ id: 'orderDate', name: 'Order Date', field: 'orderDate', hideable: true, reorderable: true, formatter: Formatters.Date, dateFormat: 'M/d/yyyy' });\n+columns.push({ id: 'phone', name: 'Phone', field: 'phone', hideable: false, reorderable: true, filterType: 'Text', formatter: Formatters.Text });\ndescribe('Datagrid Settings', () => {\nconst Locale = window.Soho.Locale;\n@@ -126,6 +127,7 @@ describe('Datagrid Settings', () => {\n});\nit('Should set settings', () => {\n+ debugger;\ndatagridObj.destroy();\ndatagridObj = new Datagrid(datagridEl, { dataset: data, columns });\ndatagridObj.settings.emptyMessage.title = 'No Data Available';\n",
        "date": "12.06.2019 15:04:12",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Update datagrid column settings to include hideable property and add debugger statement."
    },
    {
        "msg": "fix a regression test",
        "diff": "diff --git a/test/components/datagrid/datagrid.e2e-spec.js b/test/components/datagrid/datagrid.e2e-spec.js @@ -741,6 +741,10 @@ fdescribe('Datagrid Align Header Text Tests', () => { //eslint-disable-line\n.wait(protractor.ExpectedConditions.presenceOf(datagridEl), config.waitsFor);\n});\n+ it('Should not have errors', async () => {\n+ await utils.checkForErrors();\n+ });\n+\nif (utils.isChrome() && utils.isCI()) {\nit('Should not visual regress', async () => {\nconst containerEl = await element(by.className('container'));\n@@ -770,9 +774,14 @@ fdescribe('Datagrid Align Header Text Toggle Tests', () => { //eslint-disable-li\nexpect(await element(by.css('.has-filterable-columns'))).toBeTruthy();\n});\n- if (utils.isChrome() && utils.isCI()) {\n+ it('Should not have errors', async () => {\n+ await utils.checkForErrors();\n+ });\n+\n+ //if (utils.isChrome() && utils.isCI()) {\nit('Should not visual regress', async () => {\nconst containerEl = await element(by.className('container'));\n+ await element.all(by.css('.btn-actions')).first().click();\nawait browser.driver\n.wait(protractor.ExpectedConditions.visibilityOf(await element(by.css('.popupmenu.is-open'))), config.waitsFor);\nawait element(by.css('li a[data-option=\"show-filter-row\"')).click();\n@@ -782,7 +791,7 @@ fdescribe('Datagrid Align Header Text Toggle Tests', () => { //eslint-disable-li\nexpect(await browser.protractorImageComparison.checkElement(containerEl, 'datagrid-test-align-header-text-toggle')).toEqual(0);\n});\n- }\n+ //}\n});\ndescribe('Datagrid page size selector tests', () => {\n",
        "date": "14.06.2019 15:39:48",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add error checking in e2e tests and update visual regression tests for datagrid components."
    },
    {
        "msg": "fix a test with a missing link",
        "diff": "diff --git a/test/components/bar/bar.e2e-spec.js b/test/components/bar/bar.e2e-spec.js @@ -79,25 +79,6 @@ describe('Bar Chart example-negative-value tests', () => {\n});\n});\n-describe('Bar Chart example-hide-legend tests', () => {\n- beforeEach(async () => {\n- await utils.setPage('/components/bar/example-hide-legend');\n- });\n-\n- it('Should not have errors', async () => {\n- await utils.checkForErrors();\n- });\n-\n- it('Should not have visible legends', async () => {\n- const chartEl = await element(by.css('.chart-legend'));\n-\n- const resultEl = await browser.driver\n- .wait(protractor.ExpectedConditions.invisibilityOf(chartEl), config.waitsFor);\n-\n- expect(await resultEl).toBe(true);\n- });\n-});\n-\ndescribe('Bar Chart example-colors', () => {\nbeforeEach(async () => {\nawait utils.setPage('/components/bar/example-colors?layout=nofrills');\n",
        "date": "18.06.2019 14:25:14",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Remove tests for hiding legend in Bar Chart example"
    },
    {
        "msg": "fix an undefined error on IE",
        "diff": "diff --git a/src/components/tooltip/tooltip.js b/src/components/tooltip/tooltip.js @@ -451,7 +451,7 @@ Tooltip.prototype = {\ntitleArea.style.display = 'none';\n}\n- if (!contentArea.previousElementSibling.classList.contains('arrow')) {\n+ if (contentArea && !contentArea.previousElementSibling.classList.contains('arrow')) {\ncontentArea.insertAdjacentHTML('beforebegin', '<div class=\"arrow\"></div>');\n}\n",
        "date": "19.06.2019 15:37:19",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix issue with tooltip arrow not being displayed when contentArea is null"
    },
    {
        "msg": "fix this a different way",
        "diff": "diff --git a/src/components/tooltip/tooltip.js b/src/components/tooltip/tooltip.js @@ -442,6 +442,10 @@ Tooltip.prototype = {\nconst tooltip = this.tooltip[0];\nlet classes = 'tooltip is-hidden';\n+ if (!contentArea) {\n+ return;\n+ }\n+\nif (extraClass) {\nclasses += ` ${extraClass}`;\n}\n@@ -451,7 +455,7 @@ Tooltip.prototype = {\ntitleArea.style.display = 'none';\n}\n- if (contentArea && !contentArea.previousElementSibling.classList.contains('arrow')) {\n+ if (!contentArea.previousElementSibling.classList.contains('arrow')) {\ncontentArea.insertAdjacentHTML('beforebegin', '<div class=\"arrow\"></div>');\n}\n",
        "date": "19.06.2019 15:52:25",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix issue with tooltip not displaying when contentArea is not present"
    },
    {
        "msg": "fix both the undefined error on tooltip and an new bug on focus tooltips",
        "diff": "diff --git a/src/components/tooltip/tooltip.js b/src/components/tooltip/tooltip.js @@ -442,10 +442,6 @@ Tooltip.prototype = {\nconst tooltip = this.tooltip[0];\nlet classes = 'tooltip is-hidden';\n- if (!contentArea) {\n- return;\n- }\n-\nif (extraClass) {\nclasses += ` ${extraClass}`;\n}\n@@ -455,7 +451,7 @@ Tooltip.prototype = {\ntitleArea.style.display = 'none';\n}\n- if (!contentArea.previousElementSibling.classList.contains('arrow')) {\n+ if (contentArea && !contentArea.previousElementSibling.classList.contains('arrow')) {\ncontentArea.insertAdjacentHTML('beforebegin', '<div class=\"arrow\"></div>');\n}\n",
        "date": "20.06.2019 15:34:54",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix tooltip arrow display issue"
    },
    {
        "msg": "fix a misnamed variable that caused several errors",
        "diff": "diff --git a/src/components/datagrid/datagrid.js b/src/components/datagrid/datagrid.js @@ -8265,7 +8265,7 @@ Datagrid.prototype = {\nconst rowIdx = this.dataRowIndex(rowNode);\nreturn this.settings.treeGrid ?\nthis.settings.treeDepth[rowIdx].node :\n- this.settings.dataset[dataRowIdx];\n+ this.settings.dataset[rowIdx];\n},\n/**\n",
        "date": "20.06.2019 15:46:10",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor dataset retrieval in Datagrid to use rowIdx instead of dataRowIdx"
    },
    {
        "msg": "fix some typo for color utils",
        "diff": "diff --git a/src/utils/color.js b/src/utils/color.js @@ -74,7 +74,7 @@ colorUtils.validateHex = function validateHex(hex) {\n* @param {string} dark Optional a custom hex color to return.\n* @returns {string} a calculated contrast color string.\n*/\n-colorUtils.getContrastColor = function getContrastYIQ(hex, light, dark) {\n+colorUtils.getContrastColor = function getContrastColor(hex, light, dark) {\nhex = hex ? hex.replace('#', '') : '';\nconst r = parseInt(hex.substr(0, 2), 16);\nconst g = parseInt(hex.substr(2, 2), 16);\n",
        "date": "26.06.2019 10:43:21",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor getContrastYIQ function to getContrastColor"
    },
    {
        "msg": "fix the link in an unrelated CHANGELOG entry.",
        "diff": "diff --git a/docs/CHANGELOG.md b/docs/CHANGELOG.md ### v4.20.0 Features\n- `[Datagrid]` Added support to resize column widths after a value change via the stretchColumnOnChange setting. ([#2174](https://github.com/infor-design/enterprise/issues/2174))\n-- `[Datagrid]` Added a Sort Function to the datagrid column to allow the value to be formatted for the sort. ([#1766](https://github.com/infor-design/enterprise/issues/2274)))\n+- `[Datagrid]` Added a Sort Function to the datagrid column to allow the value to be formatted for the sort. ([#2274](https://github.com/infor-design/enterprise/issues/2274)))\n- `[Datagrid]` Added placeholder functionality to Lookup, Dropdown, and Decimal Formatrers. ([#2408](https://github.com/infor-design/enterprise/issues/2408)))\n- `[Datagrid]` Added support to restrict the size of a column with minWidth and maxWidth setting on the column. ([#2313](https://github.com/infor-design/enterprise/issues/2313))\n- `[Datagrid]` Automatically remove nonVisibelCellError when a row is removed. ([#2436](https://github.com/infor-design/enterprise/issues/2436))\n",
        "date": "01.07.2019 12:30:13",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add new features and improvements to Datagrid functionality"
    },
    {
        "msg": "fix some broken calendar tests",
        "diff": "diff --git a/test/components/calendar/calendar.e2e-spec.js b/test/components/calendar/calendar.e2e-spec.js @@ -99,7 +99,7 @@ describe('Calendar ajax loading tests', () => { //eslint-disable-line\n});\n});\n-describe('Calendar specific month tests', () => {\n+fdescribe('Calendar specific month tests', () => { //eslint-disable-line\nbeforeEach(async () => {\nawait utils.setPage('/components/calendar/test-specific-month');\nconst dateField = await element(by.id('monthview-datepicker-field'));\n@@ -121,6 +121,8 @@ describe('Calendar specific month tests', () => {\nit('Should be able to click on events', async () => {\nawait element.all(by.css('.calendar-event-title')).first().click();\n+ await browser.driver\n+ .wait(protractor.ExpectedConditions.visibilityOf(await element(by.css('#calendar-popup')), config.waitsFor));\nexpect(await element(by.css('#calendar-popup')).isDisplayed()).toBe(true);\nawait utils.checkForErrors();\n@@ -235,7 +237,7 @@ describe('Calendar only calendar', () => { //eslint-disable-line\n}\n});\n-describe('Calendar specific locale', () => {\n+fdescribe('Calendar specific locale', () => { //eslint-disable-line\nbeforeEach(async () => {\nawait utils.setPage('/components/calendar/test-specific-locale');\nconst dateField = await element(by.id('monthview-datepicker-field'));\n",
        "date": "01.07.2019 13:33:48",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Update calendar.e2e-spec.js with fdescribe for specific month and locale tests"
    },
    {
        "msg": "fix a test failure",
        "diff": "diff --git a/test/components/datagrid/datagrid.e2e-spec.js b/test/components/datagrid/datagrid.e2e-spec.js @@ -1324,6 +1324,7 @@ describe('Datagrid filter lookup custom click function tests', () => {\nawait lookup.click();\nawait browser.driver.sleep(config.sleep);\nawait element.all(by.cssContainingText('#lookup-datagrid td', 'I Love Compressors')).first().click();\n+ await element(by.css('#test-filter-lookup-click-function-datagrid-1-header-filter-1')).click();\nexpect(await element(by.css('#test-filter-lookup-click-function-datagrid-1-header-2 input')).getAttribute('value')).toEqual('I Love Compressors');\nif (utils.isChrome() && utils.isCI()) {\n",
        "date": "09.07.2019 09:59:47",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add click function test for custom filter lookup in datagrid"
    },
    {
        "msg": "fix a test failure due to incorrect click logic",
        "diff": "diff --git a/test/components/datagrid/datagrid.e2e-spec.js b/test/components/datagrid/datagrid.e2e-spec.js @@ -1324,9 +1324,11 @@ describe('Datagrid filter lookup custom click function tests', () => {\nawait lookup.click();\nawait browser.driver.sleep(config.sleep);\nawait element.all(by.cssContainingText('#lookup-datagrid td', 'I Love Compressors')).first().click();\n- await element(by.css('#test-filter-lookup-click-function-datagrid-1-header-filter-1')).click();\n+ await browser.driver.sleep(config.sleep);\nexpect(await element(by.css('#test-filter-lookup-click-function-datagrid-1-header-2 input')).getAttribute('value')).toEqual('I Love Compressors');\n+ await browser.driver.sleep(config.sleep);\n+ await element(by.css('#test-filter-lookup-click-function-datagrid-1-header-filter-1')).click();\nif (utils.isChrome() && utils.isCI()) {\nconst containerEl = await element(by.className('container'));\n",
        "date": "09.07.2019 10:07:03",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix issue with filter lookup custom click function in datagrid"
    },
    {
        "msg": "fix all Multiselect tests?",
        "diff": "diff --git a/test/components/multiselect/multiselect.e2e-spec.js b/test/components/multiselect/multiselect.e2e-spec.js @@ -96,7 +96,7 @@ describe('Multiselect example-index tests', () => {\n});\nif (!utils.isSafari()) {\n- it('Should arrow down to Arizona, and focus', async () => {\n+ it('Can navigate and properly focus dropdown list elements with the keyboard', async () => {\nconst multiselectEl = await element.all(by.css('div.dropdown')).first();\nawait browser.driver\n.wait(protractor.ExpectedConditions.presenceOf(multiselectEl), config.waitsFor);\n@@ -114,7 +114,7 @@ describe('Multiselect example-index tests', () => {\n});\n// Edited for #920\n- it('Should tab into deselect Alaska, then tab out, and input should be empty', async () => {\n+ fit('Can deselect all items and display an empty pseudo-element', async () => {\nconst multiselectEl = await element.all(by.css('div.dropdown')).first();\nawait browser.driver\n.wait(protractor.ExpectedConditions.presenceOf(multiselectEl), config.waitsFor);\n@@ -124,14 +124,14 @@ describe('Multiselect example-index tests', () => {\nawait multiselectEl.sendKeys(protractor.Key.ENTER);\nconst multiselectSearchEl = await element(by.id('dropdown-search'));\nawait multiselectSearchEl.sendKeys(protractor.Key.ENTER);\n- await multiselectSearchEl.sendKeys(protractor.Key.TAB);\n+ await multiselectSearchEl.sendKeys(protractor.Key.ESCAPE);\nexpect(['<span class=\"audible\">States (Max 10) </span>', ''])\n.toContain(await element.all(by.css('.dropdown span')).first().getText());\n});\n// Edited for #920\n- it('Should arrow down to Arizona select, arrow down, and select Arkansas, and update search input', async () => {\n+ it('Can select multiple items and display them in the pseudo-element', async () => {\nconst multiselectEl = await element.all(by.css('div.dropdown')).first();\nawait browser.driver\n.wait(protractor.ExpectedConditions.presenceOf(multiselectEl), config.waitsFor);\n@@ -175,7 +175,7 @@ describe('Multiselect example-index tests', () => {\n});\n}\n- it('Should search for Colorado', async () => {\n+ it('Can show a filtered list of items that match a search term (Colorado)', async () => {\nconst multiselectEl = await element.all(by.css('div.dropdown')).first();\nawait browser.driver\n.wait(protractor.ExpectedConditions.presenceOf(multiselectEl), config.waitsFor);\n",
        "date": "15.07.2019 16:38:19",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor multiselect.e2e-spec.js to improve keyboard navigation and item selection functionality."
    },
    {
        "msg": "fix the build number on master",
        "diff": "diff --git a/package.json b/package.json {\n\"name\": \"ids-enterprise\",\n\"slug\": \"ids-enterprise\",\n- \"version\": \"4.20.0-beta.0\",\n+ \"version\": \"4.21.0-dev\",\n\"description\": \"Infor Design System (IDS) Enterprise Components for the web\",\n\"repository\": {\n\"type\": \"git\",\n",
        "date": "26.07.2019 15:52:36",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Update version to 4.21.0-dev in package.json"
    },
    {
        "msg": "fix a test by adding a safety check",
        "diff": "diff --git a/src/components/modal/modal.js b/src/components/modal/modal.js @@ -889,8 +889,10 @@ Modal.prototype = {\nreturn true;\n}\n+ if (this.changeObserver) {\nthis.changeObserver.disconnect();\ndelete this.changeObserver;\n+ }\nconst elemCanClose = this.element.triggerHandler('beforeclose');\nconst self = this;\nconst fields = this.element.find('[data-validate]');\n@@ -976,8 +978,10 @@ Modal.prototype = {\ndestroy() {\nconst self = this;\nconst canDestroy = this.element.trigger('beforedestroy');\n+ if (this.changeObserver) {\nthis.changeObserver.disconnect();\ndelete this.changeObserver;\n+ }\nif (!canDestroy) {\nreturn;\n",
        "date": "06.08.2019 15:37:03",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor modal.js to disconnect changeObserver in destroy method"
    },
    {
        "msg": "fix a lint issue in the changelog",
        "diff": "diff --git a/docs/CHANGELOG.md b/docs/CHANGELOG.md - `[Locale]` Fixed race condition when using initialize and loading locales with a parent locale. ([#2540](https://github.com/infor-design/enterprise/issues/2540))\n- `[Lookup]` Fixed a double scrollbar when the modal needs to be scrolled. ([#2586](https://github.com/infor-design/enterprise/issues/2586))\n- `[Modal]` Fixed an issue where the modal component would disappear if its content had a checkbox in it in RTL. ([#332](https://github.com/infor-design/enterprise-ng/issues/332))\n-- `[Modal]` Fixed an issue where tabbing was very slow on large DOMs in IE 11. (#2607](https://github.com/infor-design/enterprise/issues/2607))\n+- `[Modal]` Fixed an issue where tabbing was very slow on large DOMs in IE 11. ([#2607](https://github.com/infor-design/enterprise/issues/2607))\n- `[Personalization]` Fixed an issue where the text color was too dark. Changed the text color to be more readable in high contrast mode. ([#2539](https://github.com/infor-design/enterprise/issues/2539))\n- `[Personalization]` Updated some of the colors to more readable in contrast mode. ([#2097](https://github.com/infor-design/enterprise/issues/2097))\n- `[Personalization]` Fixes an issue where text color was too dark. ([#2476](https://github.com/infor-design/enterprise/issues/2476))\n",
        "date": "06.08.2019 16:06:28",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix various UI issues in modal and personalization components"
    },
    {
        "msg": "fix one test that was a bit intermittent",
        "diff": "diff --git a/test/components/datepicker/datepicker.e2e-spec.js b/test/components/datepicker/datepicker.e2e-spec.js @@ -957,9 +957,10 @@ describe('Datepicker Umalqura EG Tests', () => {\n});\n});\n-describe('Datepicker Gregorian SA Tests', () => {\n+fdescribe('Datepicker Gregorian SA Tests', () => { //eslint-disable-line\nbeforeEach(async () => {\nawait utils.setPage('/components/datepicker/test-ar-sa-gregorian');\n+ await browser.driver.sleep(config.sleep);\n});\nit('Should render gregorian on ar-SA time', async () => {\n",
        "date": "06.08.2019 19:13:40",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix failing test for Gregorian SA datepicker on ar-SA time"
    },
    {
        "msg": "fix an failing functional test with modal",
        "diff": "diff --git a/src/components/modal/modal.js b/src/components/modal/modal.js @@ -1039,7 +1039,7 @@ Modal.prototype = {\nelem = self.trigger[0];\n}\n}\n- if (elem) {\n+ if (elem && modalApi && modalApi.overlay) {\nmodalApi.overlay.remove();\n$.removeData(elem, COMPONENT_NAME);\n}\n",
        "date": "08.08.2019 10:08:01",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add check for modalApi and modalApi.overlay before removing overlay in modal component."
    },
    {
        "msg": "fix another date test",
        "diff": "diff --git a/test/components/datepicker/datepicker.e2e-spec.js b/test/components/datepicker/datepicker.e2e-spec.js @@ -986,7 +986,9 @@ describe('Datepicker Gregorian SA Tests', () => {\ntestDate.setMinutes(0);\ntestDate.setSeconds(0);\n- expect(await element(by.id('islamic-date')).getAttribute('value')).toEqual(`${testDate.getDate()}/${(testDate.getMonth() + 1).toString().padStart(2, '0')}/${testDate.getFullYear()}`);\n+ const value = await element(by.id('islamic-date')).getAttribute('value');\n+\n+ expect([9, 10]).toContain(value.length);\n});\n});\n",
        "date": "08.08.2019 10:57:45",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor datepicker.e2e-spec.js to improve readability and maintainability"
    },
    {
        "msg": "fix one more bs test failure",
        "diff": "diff --git a/test/components/datepicker/datepicker.e2e-spec.js b/test/components/datepicker/datepicker.e2e-spec.js @@ -988,7 +988,7 @@ describe('Datepicker Gregorian SA Tests', () => {\nconst value = await element(by.id('islamic-date')).getAttribute('value');\n- expect([9, 10]).toContain(value.length);\n+ expect([8, 9, 10]).toContain(value.length);\n});\n});\n",
        "date": "08.08.2019 11:14:52",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Update datepicker e2e test to include additional value length in expectations"
    },
    {
        "msg": "fix the datepicker from actively selecting on closing the month/year pane",
        "diff": "diff --git a/src/components/datepicker/datepicker.js b/src/components/datepicker/datepicker.js @@ -779,7 +779,6 @@ DatePicker.prototype = {\nself.currentDate = self.conversions.toGregorian(year, month, 1);\n}\n- self.insertDate(self.isIslamic ? self.currentDateIslamic : self.currentDate);\nif (s.range.useRange) {\nself.isFocusAfterClose = false;\n} else if (btn.hasClass('is-select-month')) {\n",
        "date": "09.08.2019 10:12:27",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Remove unnecessary code for inserting date in datepicker"
    },
    {
        "msg": "fix the highlight test",
        "diff": "diff --git a/test/components/utils/highlight.func-spec.js b/test/components/utils/highlight.func-spec.js import '../../../src/utils/highlight';\n-const ipsum = require('../../../app/views/tests/highlight/lorem-ipsum.html');\n+const ipsum = `<section id=\"main\" class=\"page-container\" role=\"main\">\n+ <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras convallis orci quis leo suscipit lobortis. Aenean congue bibendum mauris, nec volutpat leo consectetur in. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Sed lobortis sed odio nec auctor. Integer efficitur augue nisl, vitae gravida tortor tristique fermentum. Donec vestibulum orci vel enim gravida dictum. Pellentesque et orci in massa fermentum tempus. Proin risus tortor, facilisis facilisis risus vel, euismod congue ipsum. Fusce semper odio at neque aliquet, id ornare nisl consectetur. In finibus ipsum orci, vel tempor turpis venenatis in.\n+ </p>\n+ <p>In in mauris a nulla imperdiet convallis id ut felis. Donec arcu nulla, varius congue elit nec, lacinia porta elit. Mauris blandit lorem a ex ultrices viverra. Sed facilisis varius risus, quis ornare erat rutrum id. Curabitur neque velit, gravida in consectetur eget, lobortis eu leo. Quisque in ornare lacus, auctor rhoncus nisl. Sed tellus metus, luctus rhoncus efficitur sit amet, malesuada vestibulum eros. Ut laoreet rhoncus ornare. Etiam volutpat tincidunt tincidunt. Curabitur sed massa tortor. Aenean eu nisl consectetur, molestie elit vitae, luctus erat. Fusce sed mattis erat, in bibendum lacus. Proin mi lectus, tincidunt tempus lacus sed, aliquam hendrerit urna. Integer ullamcorper leo at egestas sagittis. Fusce ut dapibus felis.</p>\n+ <p>Aliquam condimentum sapien metus, quis commodo urna blandit sit amet. In elit eros, elementum ut erat eget, malesuada feugiat nisi. Donec dapibus neque nec gravida fermentum. Vestibulum in sapien et metus vehicula porta. Donec vel turpis dui. Morbi ultricies ut sapien ut placerat. Donec sagittis egestas sagittis. Aliquam enim dui, congue vel sollicitudin sit amet, luctus efficitur turpis. Nam nec neque ante. Praesent tempor turpis et auctor interdum. Fusce lobortis libero sit amet ultrices cursus. Cras pellentesque ultrices leo in vehicula. Aenean vehicula, elit quis rhoncus blandit, neque ligula cursus purus, vitae lacinia libero sem at lectus. Suspendisse ac metus mi.</p>\n+ <p>Sed at venenatis est. Mauris molestie blandit quam et porta. Nam accumsan lacus neque. Donec vitae condimentum justo. Maecenas sagittis imperdiet nunc vitae aliquam. Nulla consequat tincidunt ante, ut vestibulum augue mattis vitae. Nulla facilisi. Donec scelerisque nunc non nisl accumsan, in rutrum quam condimentum. Nullam non rhoncus erat. Suspendisse interdum gravida mollis. Nulla laoreet enim justo, vel tincidunt velit condimentum sed. Aenean odio ipsum, ornare nec velit at, fringilla consectetur dui. Sed malesuada mi ac dignissim porta. In et arcu non dui vehicula porta. In eget rhoncus ante. Fusce sodales mauris vitae lorem luctus pellentesque.</p>\n+ <p>Etiam lacus mauris, blandit molestie sem a, semper vulputate eros. Duis et rutrum nibh. Interdum et malesuada fames ac ante ipsum primis in faucibus. Donec finibus turpis vitae justo cursus, facilisis ullamcorper tortor commodo. Maecenas porta elit a cursus convallis. Fusce arcu est, viverra sed elit eget, aliquam pretium lacus. Mauris interdum ligula vitae nisi dictum elementum. Proin ac velit aliquam, pretium lectus non, commodo sem. Cras iaculis imperdiet neque, ac volutpat enim sollicitudin sit amet. Maecenas nec efficitur orci. Nulla ut facilisis tortor. Aenean eget tincidunt leo.</p>\n+</section>`;\nlet ipsumEl;\n",
        "date": "13.08.2019 16:00:59",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor lorem ipsum content in highlight function spec test"
    },
    {
        "msg": "fix the timing of the datagrid test if CRON runs slower",
        "diff": "diff --git a/test/components/datagrid/datagrid-api.func-spec.js b/test/components/datagrid/datagrid-api.func-spec.js @@ -677,7 +677,7 @@ describe('Datagrid API', () => {\nconst end = new Date().getTime();\nconst result = (end - start) / 1000; // seconds\n- expect(result).toBeLessThan(0.5);\n+ expect(result).toBeLessThan(0.65);\nexpect(table[0].querySelectorAll('tr').length).toEqual(2000);\nexpect(table[0].querySelector('tr').outerHTML).toEqual('<tr><td>1</td><td>T100</td><td><b>sku #9000001-237</b></td><td>Compressor</td><td>Assemble Paint</td><td>1</td><td>true</td><td>210.99</td><td>0.1</td><td>OK</td><td>2018-08-07T06:00:00.000Z</td><td>Action</td></tr>');\n});\n",
        "date": "20.08.2019 15:16:58",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Update time expectation in datagrid-api.func-spec.js"
    },
    {
        "msg": "fix the failed test due to behvior changes",
        "diff": "diff --git a/test/components/datagrid/datagrid.e2e-spec.js b/test/components/datagrid/datagrid.e2e-spec.js @@ -1524,10 +1524,8 @@ describe('Datagrid filter load data and update columns tests', () => {\nawait multiselectSearchEl.sendKeys(protractor.Key.ARROW_DOWN);\nawait multiselectSearchEl.sendKeys(protractor.Key.ARROW_DOWN);\nawait multiselectSearchEl.sendKeys(protractor.Key.SPACE);\n- await multiselectSearchEl.sendKeys(protractor.Key.ARROW_DOWN);\n- await multiselectSearchEl.sendKeys(protractor.Key.SPACE);\n- expect(await element.all(by.css('#datagrid tbody tr')).count()).toEqual(4);\n+ expect(await element.all(by.css('#datagrid tbody tr')).count()).toEqual(3);\nawait utils.checkForErrors();\n});\n});\n",
        "date": "21.08.2019 14:31:57",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor datagrid filter test to fix count validation error"
    },
    {
        "msg": "fix two of the e2e tests",
        "diff": "diff --git a/test/components/datagrid/datagrid.e2e-spec.js b/test/components/datagrid/datagrid.e2e-spec.js @@ -2499,7 +2499,7 @@ describe('Datagrid Tree Paging Tests', () => {\nit('Should expand/collapse on first page click', async () => {\nexpect(await element.all(by.css('tr.is-hidden')).count()).toEqual(3);\nexpect(await element.all(by.css('tr:not(.is-hidden)')).count()).toEqual(20);\n- await element(by.css('#datagrid tbody tr:nth-child(1) td:nth-child(1) button')).click();\n+ await element(by.css('#datagrid tbody tr:nth-child(1) td:nth-child(2) button')).click();\nexpect(await element.all(by.css('tr.is-hidden')).count()).toEqual(0);\nexpect(await element.all(by.css('tr:not(.is-hidden)')).count()).toEqual(23);\n@@ -2512,7 +2512,7 @@ describe('Datagrid Tree Paging Tests', () => {\nexpect(await element.all(by.css('tr[aria-rowindex=\"26\"]')).count()).toEqual(1);\nexpect(await element.all(by.css('tr.is-hidden')).count()).toEqual(3);\nexpect(await element.all(by.css('tr:not(.is-hidden)')).count()).toEqual(20);\n- await element(by.css('#datagrid tbody tr:nth-child(1) td:nth-child(1) button')).click();\n+ await element(by.css('#datagrid tbody tr:nth-child(1) td:nth-child(2) button')).click();\nexpect(await element.all(by.css('tr.is-hidden')).count()).toEqual(0);\nexpect(await element.all(by.css('tr:not(.is-hidden)')).count()).toEqual(23);\n",
        "date": "22.08.2019 15:44:18",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix expand/collapse button click location in datagrid.e2e-spec.js"
    },
    {
        "msg": "fix a couple deps",
        "diff": "diff --git a/package.json b/package.json \"extend\": \"^3.0.0\",\n\"front-matter\": \"^2.3.0\",\n\"grunt\": \"^1.0.4\",\n- \"grunt-chokidar\": \"^1.0.2\",\n+ \"grunt-chokidar\": \"^1.0.1\",\n\"grunt-cli\": \"^1.2.0\",\n\"grunt-contrib-compress\": \"^1.5.0\",\n\"grunt-contrib-copy\": \"^1.0.0\",\n\"protractor-image-comparison\": \"^2.0.1\",\n\"pygmentize-bundled\": \"^2.3.0\",\n\"r2\": \"^2.0.1\",\n- \"release-it\": \"^12.3.6\",\n+ \"release-it\": \"^10.4.2\",\n\"rimraf\": \"^2.6.3\",\n\"rollup\": \"^1.10.0\",\n\"rollup-plugin-analyzer\": \"^3.0.0\",\n",
        "date": "03.09.2019 14:10:08",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Update grunt-chokidar and release-it versions in package.json"
    },
    {
        "msg": "fix a toast test",
        "diff": "diff --git a/test/components/toast/toast.e2e-spec.js b/test/components/toast/toast.e2e-spec.js @@ -34,6 +34,7 @@ describe('Toast example-index tests', () => {\nconst buttonEl = await element(by.id('show-toast-message'));\nawait buttonEl.click();\nawait browser.driver.wait(protractor.ExpectedConditions.visibilityOf(element(by.css('.toast'))), config.waitsFor);\n+ await browser.driver.sleep(config.sleepShort);\nexpect(await element.all(by.css('.toast')).count()).toEqual(1);\n",
        "date": "06.09.2019 13:36:19",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add sleep before checking toast count in e2e test"
    },
    {
        "msg": "fix an error in the other example",
        "diff": "diff --git a/app/views/components/modal/test-xss.html b/app/views/components/modal/test-xss.html @@ -42,13 +42,11 @@ var modals = {\nopt = $.extend({\nbuttons: [{\ntext: 'Cancel',\n- // id: 'modal-button-1',\nclick: function(e, modal) {\nmodal.close();\n}\n}, {\ntext: 'Save',\n- // id: 'modal-button-2',\nclick: function(e, modal) {\nmodal.close();\n},\n",
        "date": "17.09.2019 10:37:27",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Remove commented out code for modal buttons in test-xss.html"
    },
    {
        "msg": "fix another lint error",
        "diff": "diff --git a/test/components/icons/icons.e2e-spec.js b/test/components/icons/icons.e2e-spec.js @@ -11,7 +11,7 @@ xdescribe('Icon Soho (Subtle) tests', () => {\nawait browser.driver.sleep(config.sleep);\n});\n- it('Should render without error', async () => {\n+ it('Should render without any error', async () => {\nawait utils.checkForErrors();\n});\n",
        "date": "23.09.2019 20:49:01",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor test to specify rendering without any error"
    },
    {
        "msg": "fix back the correct URL",
        "diff": "diff --git a/test/protractor.ci.bs.conf.js b/test/protractor.ci.bs.conf.js @@ -22,7 +22,7 @@ exports.config = {\nspecs: specs,\nseleniumAddress: 'http://hub-cloud.browserstack.com/wd/hub',\nSELENIUM_PROMISE_MANAGER: false,\n- baseUrl: 'https://fix-cron-enterprise.demo.design.infor.com/',\n+ baseUrl: 'http://master-enterprise.demo.design.infor.com/',\njasmineNodeOpt: {\ndefaultTimeoutInterval: 10000,\nshowColors: true,\n",
        "date": "27.09.2019 14:26:56",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Update base URL in protractor configuration file"
    },
    {
        "msg": "fix more alignment",
        "diff": "diff --git a/src/components/dropdown/_dropdown-uplift.scss b/src/components/dropdown/_dropdown-uplift.scss @@ -57,18 +57,38 @@ div.multiselect {\ntop: 12px;\n&.swatch {\n- left: 15px;\n+ left: 12px;\n+ }\n+\n+ + span {\n+ padding-left: 26px;\n}\n}\n}\n.dropdown-list {\n+ &.has-icons {\n+ .dropdown-search {\n+ padding-left: 36px;\n+ }\n+ }\n+\n> ul {\nli.dropdown-option {\n.listoption-icon {\ntop: 3px;\n}\n}\n+\n+ li {\n+ &.is-swatch {\n+ padding-left: 26px;\n+ }\n+\n+ span.swatch {\n+ margin-left: -15px;\n+ }\n+ }\n}\n&:not(.dropdown-short) {\n@@ -78,6 +98,10 @@ div.multiselect {\n.listoption-icon {\ntop: 11px;\n+\n+ &.swatch {\n+ left: 11px;\n+ }\n}\n}\n@@ -106,7 +130,25 @@ div.multiselect {\nleft: 12px;\n&.swatch {\n- left: 15px;\n+ left: 12px;\n+ }\n+ }\n+ }\n+\n+ .dropdown-list {\n+ > .listoption-icon {\n+ &.swatch {\n+ left: 11px;\n+ }\n+ }\n+\n+ .dropdown-option {\n+ &.is-swatch {\n+ padding-left: 26px;\n+ }\n+\n+ .swatch {\n+ margin-left: -15px;\n}\n}\n}\n@@ -124,6 +166,10 @@ html.is-firefox:not([dir='rtl']) {\n> .listoption-icon {\ntop: 10px;\n+\n+ + span {\n+ padding-left: 26px;\n+ }\n}\n}\n@@ -142,7 +188,7 @@ html.is-firefox:not([dir='rtl']) {\n&.has-icons {\n.dropdown-search {\n- padding: 6px 30px 6px 39px;\n+ padding: 6px 30px 6px 36px;\n}\n}\n",
        "date": "10.10.2019 20:26:02",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Update dropdown styles for better alignment and padding."
    },
    {
        "msg": "fix a bug when setting isnt set",
        "diff": "diff --git a/src/components/calendar/calendar.js b/src/components/calendar/calendar.js @@ -107,8 +107,10 @@ Calendar.prototype = {\n* @returns {void}\n*/\nsetLocale() {\n+ if (this.settings.language) {\nLocale.getLocale(this.settings.language);\nthis.language = this.settings.language;\n+ }\nif (this.settings.locale && (!this.locale || this.locale.name !== this.settings.locale)) {\nLocale.getLocale(this.settings.locale).done((locale) => {\n",
        "date": "15.10.2019 15:06:14",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add condition to setLocale method to check for language setting"
    },
    {
        "msg": "fix the link in a test",
        "diff": "diff --git a/test/components/modal/modal.e2e-spec.js b/test/components/modal/modal.e2e-spec.js @@ -317,7 +317,7 @@ fdescribe('Modal xss tests', () => {\nfdescribe('Modal button tests', () => {\nbeforeEach(async () => {\n- await utils.setPage('/components/modal/test-inline-buttons.');\n+ await utils.setPage('/components/modal/test-inline-buttons');\nconst modalEl = await element(by.id('btn-show-modal'));\nawait browser.driver\n.wait(protractor.ExpectedConditions.presenceOf(modalEl), config.waitsFor);\n@@ -327,6 +327,10 @@ fdescribe('Modal button tests', () => {\nawait browser.driver.sleep(config.sleep);\n});\n+ it('Should not have errors', async () => {\n+ await utils.checkForErrors();\n+ });\n+\nif (utils.isChrome() && utils.isCI()) {\nit('Should not visual regress on 3 buttons', async () => {\nconst bodyEl = await element(by.className('modal-engaged'));\n",
        "date": "22.10.2019 15:27:05",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix typo in modal URL and add error check in modal button tests"
    },
    {
        "msg": "fix the id in the example",
        "diff": "diff --git a/app/views/components/modal/test-inline-buttons.html b/app/views/components/modal/test-inline-buttons.html <div class=\"row top-padding\">\n<div class=\"twelve columns\">\n- <button class=\"btn-secondary\" type=\"button\" data-modal=\"modal-1\" id=\"btn-show-modal'\">Four Buttons</button>\n+ <button class=\"btn-secondary\" type=\"button\" data-modal=\"modal-1\" id=\"btn-show-modal\">Four Buttons</button>\n<div class=\"modal\" id=\"modal-1\">\n<div class=\"modal-content\">\n",
        "date": "28.10.2019 09:29:31",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix typo in button id in test-inline-buttons.html"
    },
    {
        "msg": "fix the extra border",
        "diff": "diff --git a/src/components/calendar/_calendar.scss b/src/components/calendar/_calendar.scss .calendar-monthview {\nbackground-color: $calendar-bg-color;\nflex: 1 1 auto;\n- margin-right: 0 !important;\n.monthview-table {\ntable-layout: fixed;\n",
        "date": "08.11.2019 16:02:55",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Remove margin-right property in calendar-monthview styling"
    },
    {
        "msg": "fix open the datepick on day and week view",
        "diff": "diff --git a/src/components/week-view/week-view.js b/src/components/week-view/week-view.js @@ -597,11 +597,10 @@ WeekView.prototype = {\n*/\naddToolbar() {\n// Invoke the toolbar\n- this.currentDate = new Date();\nthis.header = $('<div class=\"week-view-header\"><div class=\"calendar-toolbar\"></div></div>').appendTo(this.element);\nthis.calendarToolbarEl = this.header.find('.calendar-toolbar');\nthis.calendarToolbarAPI = new CalendarToolbar(this.calendarToolbarEl[0], {\n- onOpenCalendar: () => this.currentDate || this.settings.startDate,\n+ onOpenCalendar: () => this.settings.startDate,\nlocale: this.settings.locale,\nyear: this.currentYear,\nmonth: this.currentMonth,\n@@ -627,7 +626,6 @@ WeekView.prototype = {\nthis.element.off(`change-date.${COMPONENT_NAME}`).on(`change-date.${COMPONENT_NAME}`, (e, args) => {\nconst startDate = args.isToday ? new Date() : args.selectedDate;\n- this.currentDate = startDate;\nif (this.isDayView) {\nthis.settings.startDate = startDate;\n@@ -706,7 +704,6 @@ WeekView.prototype = {\n} else {\nthis.settings.endDate.setDate(this.settings.endDate.getDate() + diff);\n}\n- this.currentDate = this.settings.startDate;\nthis.showWeek(this.settings.startDate, this.settings.endDate);\n},\n",
        "date": "20.11.2019 10:11:17",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor toolbar initialization and date handling in WeekView"
    },
    {
        "msg": "fix the documentation problem in Searchfield described in",
        "diff": "diff --git a/src/components/searchfield/searchfield.js b/src/components/searchfield/searchfield.js @@ -672,49 +672,6 @@ SearchField.prototype = {\nreturn this.settings.showGoButton && this.goButton && this.goButton.length;\n},\n- /**\n- * Fires when the searchfield is focused.\n- * @event focusin\n- * @memberof ToolbarSearchfield\n- * @property {object} event - The jquery event object\n- * /\n- /**\n- * Fires when a key is pressed inside of the searchfield.\n- * @event keydown\n- * @memberof ToolbarSearchfield\n- * @property {object} event - The jquery event object\n- */\n- /**\n- * Fires when a `collapse` event is triggered externally on the searchfield.\n- * @event collapse\n- * @memberof ToolbarSearchfield\n- * @property {object} event - The jquery event object\n- */\n- /**\n- * Fires when a `beforeopen` event is triggered on the searchfield's optional categories menubutton.\n- * @event beforeopen\n- * @memberof ToolbarSearchfield\n- * @property {object} event - The jquery event object\n- */\n- /**\n- * Fires when a `navigate` event is triggered on the searchfield's parent toolbar.\n- * @event navigate\n- * @memberof ToolbarSearchfield\n- * @property {object} event - The jquery event object\n- */\n- /**\n- * Fires when a `keydown` event is triggered at the `document` level.\n- * @event keydown\n- * @memberof ToolbarSearchfield\n- * @property {object} event - The jquery event object\n- */\n- /**\n- * Fires when a `resize` event is triggered at the `body` level.\n- * @event resize\n- * @memberof ToolbarSearchfield\n- * @property {object} event - The jquery event object\n- */\n-\n/**\n* Sets up the event-listening structure for this component instance.\n* @private\n@@ -1536,6 +1493,13 @@ SearchField.prototype = {\n* @param {object} anchor the link object\n*/\nhandleCategorySelected(e, anchor) {\n+ /**\n+ * Fires when the searchfield has become collapsed.\n+ * @event selected\n+ * @memberof SearchField\n+ * @type {object}\n+ * @property {object} event - The jquery event object\n+ */\nthis.element.trigger('selected', [anchor]);\n// Only change the text and searchfield size if we can\n@@ -1746,6 +1710,13 @@ SearchField.prototype = {\neventArgs.push(containerSizeSetters);\n}\n+ /**\n+ * Fires before the searchfield is expanded.\n+ * @event beforeexpand\n+ * @memberof SearchField\n+ * @type {object}\n+ * @property {object} event - The jquery event object\n+ */\nself.element.trigger('beforeexpand');\n$(self.toolbarParent).triggerHandler('recalculate-buttons', eventArgs);\n@@ -1754,7 +1725,16 @@ SearchField.prototype = {\nupdateCallback() {}, // TODO: make this work without an empty function\ntimeoutCallback() {\n$(self.toolbarParent).triggerHandler('recalculate-buttons', eventArgs);\n+\n+ /**\n+ * Fires when the searchfield has become expanded.\n+ * @event expanded\n+ * @memberof SearchField\n+ * @type {object}\n+ * @property {object} event - The jquery event object\n+ */\nself.element.trigger('expanded');\n+\ndelete self.isExpanding;\nself.isExpanded = true;\n@@ -1805,6 +1785,13 @@ SearchField.prototype = {\nself.categoryButton.data('popupmenu').close(false, true);\n}\n+ /**\n+ * Fires before the searchfield is collapsed.\n+ * @event beforecollapse\n+ * @memberof SearchField\n+ * @type {object}\n+ * @property {object} event - The jquery event object\n+ */\nself.element.trigger('beforecollapse');\ndelete self.isExpanded;\n@@ -1816,6 +1803,14 @@ SearchField.prototype = {\ntimeoutCallback() {\ndelete self.isCollapsing;\n$(self.toolbarParent).triggerHandler('recalculate-buttons');\n+\n+ /**\n+ * Fires when the searchfield has become collapsed.\n+ * @event collapsed\n+ * @memberof SearchField\n+ * @type {object}\n+ * @property {object} event - The jquery event object\n+ */\nself.element.trigger('collapsed');\nresolve();\n}\n@@ -1854,6 +1849,14 @@ SearchField.prototype = {\n// Collapse followed by a special event trigger (gets picked up by Flex Toolbar)\nthis.collapse().then(() => {\n+ /**\n+ * Fires when the searchfield has become collapsed.\n+ * @event collapsed-responsive\n+ * @memberof SearchField\n+ * @type {object}\n+ * @property {object} event - The jquery event object\n+ * @property {number} dir - The direction in which the Flex Toolbar has navigated (can be 0 to stay, or 1 to navigate forward)\n+ */\nself.wrapper.trigger('collapsed-responsive', [dir]);\n});\n},\n",
        "date": "20.11.2019 12:09:51",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor event handling in SearchField component"
    },
    {
        "msg": "fix a test with a timebomb",
        "diff": "diff --git a/test/components/calendar/calendar.e2e-spec.js b/test/components/calendar/calendar.e2e-spec.js @@ -343,7 +343,6 @@ describe('Calendar WeekView settings tests', () => {\n});\nit('Should render without error', async () => {\n- expect(await element.all(by.css('.calendar-event')).count()).toEqual(14);\nawait utils.checkForErrors();\n});\n",
        "date": "20.11.2019 13:58:31",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Remove unnecessary assertion in Calendar WeekView settings test"
    },
    {
        "msg": "fix a bug hovering on nested datagrids",
        "diff": "diff --git a/src/components/datagrid/datagrid.js b/src/components/datagrid/datagrid.js @@ -9628,15 +9628,14 @@ Datagrid.prototype = {\n* @returns {object} The dom jQuery node\n*/\nrowNodes(row) {\n+ let container = this.element;\n+\nif (row instanceof jQuery) {\n+ container = row.closest('.datagrid-container');\nrow = row.attr('aria-rowindex') - 1;\n}\n- const getRow = el => (el ? el.find(`tr[aria-rowindex=\"${row + 1}\"]`) : $());\n- const leftNodes = getRow(this.tableBodyLeft);\n- const centerNodes = getRow(this.tableBody);\n- const rightNodes = getRow(this.tableBodyRight);\n- return $(centerNodes).add(leftNodes).add(rightNodes);\n+ return container.find(`> .datagrid-body-container > .datagrid-body > table > tbody > tr[aria-rowindex=\"${row + 1}\"]`);\n},\n/**\n",
        "date": "20.11.2019 14:04:16",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor rowNodes method to improve performance and readability"
    },
    {
        "msg": "fix a focus issue with new rowNodes",
        "diff": "diff --git a/src/components/datagrid/datagrid.js b/src/components/datagrid/datagrid.js @@ -437,10 +437,10 @@ Datagrid.prototype = {\nthis.isInitialRender = true;\nself.table.empty();\nself.clearHeaderCache();\n+ self.container = self.element.closest('.datagrid-container');\nself.renderRows();\nself.element.append(this.bodyContainer);\nself.renderHeader();\n- self.container = self.element.closest('.datagrid-container');\nif (this.settings.emptyMessage) {\nself.setEmptyMessage(this.settings.emptyMessage);\n@@ -3352,10 +3352,6 @@ Datagrid.prototype = {\nself.setAlternateRowShading();\nself.createDraggableRows();\n- if (!self.activeCell || !self.activeCell.node) {\n- self.activeCell = { node: self.cellNode(0, 0).attr('tabindex', '0'), isFocused: false, cell: 0, row: 0 };\n- }\n-\nif (self.activeCell.isFocused) {\nself.setActiveCell(self.activeCell.row, self.activeCell.cell);\n}\n@@ -3400,9 +3396,20 @@ Datagrid.prototype = {\nself.tableRight.parent().find('.datagrid-column-wrapper').eq(0).width(w);\nself.headerTableRight.width(w);\n}\n+ this.activateFirstCell();\n});\n},\n+ /**\n+ * Set active node to first cell and focus if possible\n+ * @private\n+ */\n+ activateFirstCell() {\n+ if (!this.activeCell || !this.activeCell.node) {\n+ this.activeCell = { node: this.cellNode(0, 0).attr('tabindex', '0'), isFocused: false, cell: 0, row: 0 };\n+ }\n+ },\n+\n/**\n* Trigger the onDestroyCell for each cell\n* @private\n@@ -9648,7 +9655,6 @@ Datagrid.prototype = {\ncontainer = row.closest('.datagrid-container');\nrow = row.attr('aria-rowindex') - 1;\n}\n-\nreturn container.find(`> .datagrid-body-container > .datagrid-body > table > tbody > tr[aria-rowindex=\"${row + 1}\"]`);\n},\n",
        "date": "20.11.2019 15:26:52",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor Datagrid component to set active node to first cell and focus if possible"
    },
    {
        "msg": "fix another case for saved position with toast",
        "diff": "diff --git a/src/components/toast/toast.js b/src/components/toast/toast.js @@ -67,12 +67,15 @@ Toast.prototype = {\n*/\nshow() {\nconst self = this;\n- const s = self.settings;\n+ const s = this.settings;\nconst maxHideTime = parseFloat(math.convertDelayToFPS(s.timeout));\nconst message = s.allowLink ? xssUtils.stripTags(s.message, '<a><br><p>') : xssUtils.stripHTML(s.message);\nlet isPausePlay = false;\nlet percentage = 100;\n- let container = $('#toast-container');\n+\n+ this.uniqueId = this.generateUniqueId('usersettings-position');\n+\n+ let container = $(`#toast-container-${this.uniqueId}`);\nconst toast = $(`\n<div class=\"toast\">\n<span class=\"toast-title\">${xssUtils.stripHTML(s.title)}</span>\n@@ -87,7 +90,7 @@ Toast.prototype = {\nconst progress = $('<div class=\"toast-progress\"></div>');\nif (!container.length) {\n- container = $('<div id=\"toast-container\" class=\"toast-container\" aria-relevant=\"additions\" aria-live=\"polite\"></div>').appendTo('body');\n+ container = $(`<div id=\"toast-container-${this.uniqueId}\" class=\"toast-container\" aria-relevant=\"additions\" aria-live=\"polite\"></div>`).appendTo('body');\n}\ncontainer\n@@ -263,7 +266,7 @@ Toast.prototype = {\nconst doc = $(document);\ndoc\n.off('mouseup.toast').on('mouseup.toast', (e) => {\n- if ($('#toast-container .toast').length === 1) {\n+ if ($(`#toast-container-${this.uniqueId} .toast`).length === 1) {\nconst dragApi = container.data('drag');\nif (dragApi && typeof dragApi.getElementsFromPoint === 'function') {\nconst args = { dragApi, x: e.pageX, y: e.pageY };\n@@ -274,7 +277,7 @@ Toast.prototype = {\n}\n})\n.off('touchend.toast').on('touchend.toast', (e) => {\n- if ($('#toast-container .toast').length === 1) {\n+ if ($(`#toast-container-${this.uniqueId} .toast`).length === 1) {\nconst dragApi = container.data('drag');\nif (dragApi && typeof dragApi.getElementsFromPoint === 'function') {\nconst orig = e.originalEvent;\n@@ -304,7 +307,7 @@ Toast.prototype = {\n}\n// Save position to local storage\n- localStorage[this.uniqueId('usersettings-position')] = JSON.stringify(pos);\n+ localStorage[this.uniqueId] = JSON.stringify(pos);\n/**\n* Fires after settings are changed in some way\n@@ -328,7 +331,7 @@ Toast.prototype = {\nreturn null;\n}\n- const lsPosition = localStorage[this.uniqueId('usersettings-position')];\n+ const lsPosition = localStorage[this.uniqueId];\nreturn lsPosition ? JSON.parse(lsPosition) : null;\n},\n@@ -355,7 +358,7 @@ Toast.prototype = {\n* @param {object} suffix Add this string to make the id more unique\n* @returns {string} The unique id.\n*/\n- uniqueId(suffix) {\n+ generateUniqueId(suffix) {\nsuffix = (suffix === undefined || suffix === null) ? '' : suffix;\nconst uniqueid = `toast-${this.settings.uniqueid || ''}-${suffix}`;\nreturn uniqueid.replace(/--/g, '-').replace(/-$/g, '');\n@@ -399,7 +402,7 @@ Toast.prototype = {\nremove(toast) {\nconst removeCallback = () => {\ntoast.remove();\n- const canDestroy = !$('#toast-container .toast').length;\n+ const canDestroy = !$(`#toast-container-${this.uniqueId} .toast`).length;\nif (canDestroy) {\nthis.destroy();\n}\n@@ -440,7 +443,7 @@ Toast.prototype = {\n* @returns {void}\n*/\ndestroy() {\n- const container = $('#toast-container');\n+ const container = $(`#toast-container-${this.uniqueId}`);\nif (container[0]) {\nconst toasts = [].slice.call(container[0].querySelectorAll('.toast'));\ntoasts.forEach((toast) => {\n@@ -450,6 +453,7 @@ Toast.prototype = {\n}\n$(document).off('keydown.toast keyup.toast mouseup.toast touchend.toast');\ncontainer.remove();\n+ delete this.uniqueId;\n$.removeData(this.element[0], COMPONENT_NAME);\n}\n};\n",
        "date": "26.11.2019 14:41:51",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor toast component to use unique id for toast container."
    },
    {
        "msg": "fix some fail test for toast",
        "diff": "diff --git a/src/components/toast/toast.js b/src/components/toast/toast.js @@ -73,9 +73,9 @@ Toast.prototype = {\nlet isPausePlay = false;\nlet percentage = 100;\n- this.uniqueId = this.generateUniqueId('usersettings-position');\n+ this.uniqueId = s.uniqueid ? this.generateUniqueId('usersettings-position') : '';\n- let container = $(`#toast-container-${this.uniqueId}`);\n+ let container = $(`#toast-container${this.uniqueId}`);\nconst toast = $(`\n<div class=\"toast\">\n<span class=\"toast-title\">${xssUtils.stripHTML(s.title)}</span>\n@@ -90,7 +90,7 @@ Toast.prototype = {\nconst progress = $('<div class=\"toast-progress\"></div>');\nif (!container.length) {\n- container = $(`<div id=\"toast-container-${this.uniqueId}\" class=\"toast-container\" aria-relevant=\"additions\" aria-live=\"polite\"></div>`).appendTo('body');\n+ container = $(`<div id=\"toast-container${this.uniqueId}\" class=\"toast-container\" aria-relevant=\"additions\" aria-live=\"polite\"></div>`).appendTo('body');\n}\ncontainer\n@@ -266,7 +266,7 @@ Toast.prototype = {\nconst doc = $(document);\ndoc\n.off('mouseup.toast').on('mouseup.toast', (e) => {\n- if ($(`#toast-container-${this.uniqueId} .toast`).length === 1) {\n+ if ($(`#toast-container${this.uniqueId} .toast`).length === 1) {\nconst dragApi = container.data('drag');\nif (dragApi && typeof dragApi.getElementsFromPoint === 'function') {\nconst args = { dragApi, x: e.pageX, y: e.pageY };\n@@ -277,7 +277,7 @@ Toast.prototype = {\n}\n})\n.off('touchend.toast').on('touchend.toast', (e) => {\n- if ($(`#toast-container-${this.uniqueId} .toast`).length === 1) {\n+ if ($(`#toast-container${this.uniqueId} .toast`).length === 1) {\nconst dragApi = container.data('drag');\nif (dragApi && typeof dragApi.getElementsFromPoint === 'function') {\nconst orig = e.originalEvent;\n@@ -402,7 +402,7 @@ Toast.prototype = {\nremove(toast) {\nconst removeCallback = () => {\ntoast.remove();\n- const canDestroy = !$(`#toast-container-${this.uniqueId} .toast`).length;\n+ const canDestroy = !$(`#toast-container${this.uniqueId} .toast`).length;\nif (canDestroy) {\nthis.destroy();\n}\n@@ -443,7 +443,7 @@ Toast.prototype = {\n* @returns {void}\n*/\ndestroy() {\n- const container = $(`#toast-container-${this.uniqueId}`);\n+ const container = $(`#toast-container${this.uniqueId}`);\nif (container[0]) {\nconst toasts = [].slice.call(container[0].querySelectorAll('.toast'));\ntoasts.forEach((toast) => {\n",
        "date": "26.11.2019 15:23:22",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix uniqueId generation and container selection in toast component"
    },
    {
        "msg": "fix a couple DG errors in NG",
        "diff": "diff --git a/src/components/datagrid/datagrid.js b/src/components/datagrid/datagrid.js @@ -2929,6 +2929,10 @@ Datagrid.prototype = {\nself.bodyColGroupHtmlRight = '<colgroup>';\nself.triggerDestroyCell(); // Trigger Destroy on previous cells\n+ if (!self.settings.columns || self.settings.columns.length === 0) {\n+ self.settings.columns.push({ id: 'blank', value: '', field: '' });\n+ }\n+\nfor (j = 0; j < self.settings.columns.length; j++) {\nconst col = self.settings.columns[j];\nconst container = self.getContainer(col.id);\n@@ -5033,7 +5037,12 @@ Datagrid.prototype = {\n$('body').off('open.datagrid');\n}\n}]\n- }).on('beforeopen.datagrid', (e, modal) => {\n+ }).off('beforeopen.datagrid')\n+ .on('beforeopen.datagrid', (e, modal) => {\n+ if (!modal) {\n+ return;\n+ }\n+\nself.isColumnsChanged = false;\nmodal.element.find('.searchfield').searchfield({ clearable: true });\nmodal.element.find('.listview')\n@@ -5061,7 +5070,8 @@ Datagrid.prototype = {\nsearchableTextCallback: item => item.name\n}\n})\n- .off('selected.datagrid').on('selected.datagrid', function (selectedEvent, args) {\n+ .off('selected.datagrid')\n+ .on('selected.datagrid', function (selectedEvent, args) {\nconst chk = args.elem.find('.checkbox');\nconst id = chk.attr('data-column-id');\nconst isChecked = chk.prop('checked');\n",
        "date": "16.12.2019 11:45:32",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add default column if no columns are specified and update event handling in datagrid."
    },
    {
        "msg": "fix an incorrect legacy setting adjustment that broke toolbar flex ajax",
        "diff": "diff --git a/src/components/toolbar-flex/toolbar-flex.js b/src/components/toolbar-flex/toolbar-flex.js @@ -57,13 +57,14 @@ ToolbarFlex.prototype = {\nlet itemComponentSettings = {};\nconst isActionButton = $(item).hasClass('btn-actions');\n- if (isActionButton || this.settings.moreMenuSettings) {\n- itemComponentSettings = this.settings.moreMenuSettings;\n- }\n+ if (isActionButton) {\n+ itemComponentSettings = this.settings.moreMenuSettings || itemComponentSettings;\n+\nif (this.settings.beforeMoreMenuOpen) {\nwarnAboutDeprecation('settings.moreMenuSettings.beforeOpen', 'settings.beforeMoreMenuOpen', 'Flex Toolbar');\nitemComponentSettings.beforeOpen = this.settings.beforeMoreMenuOpen;\n}\n+ }\n$(item).toolbarflexitem({\ntoolbarAPI: this,\n",
        "date": "20.12.2019 10:28:13",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor toolbar-flex.js to handle moreMenuSettings for action buttons."
    },
    {
        "msg": "fix bug with typeahead reloading",
        "diff": "diff --git a/src/components/dropdown/dropdown.js b/src/components/dropdown/dropdown.js @@ -1822,7 +1822,7 @@ Dropdown.prototype = {\nif (typeof this.filterTerm === 'string' && this.filterTerm.length > 0) {\nthis.searchInput.val(this.filterTerm);\n} else if (!this.settings.multiple && current.length) {\n- this.searchInput.val(current.find('a').text());\n+ this.searchInput.val(current.find('a').text().trim());\n}\nconst noScroll = this.settings.multiple;\n",
        "date": "12.01.2020 22:23:33",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix issue with dropdown search input value trimming"
    },
    {
        "msg": "fix some one-off color issues",
        "diff": "diff --git a/src/themes/theme-uplift-contrast.scss b/src/themes/theme-uplift-contrast.scss @@ -117,12 +117,12 @@ $tooltip-error-color: $theme-color-palette-white;\n// Badges\n$badge-neutral-color: $theme-color-palette-graphite-100;\n$badge-neutral-icon-color: $theme-color-palette-graphite-100;\n-$badge-neutral-bg-color: $theme-color-palette-graphite-30;\n+$badge-neutral-bg-color: $theme-color-palette-graphite-20;\n$badge-neutral-hover-border-color: $theme-color-palette-graphite-100;\n$badge-neutral-hover-bg-color: $theme-color-palette-white;\n$badge-secondary-color: $theme-color-palette-black;\n$badge-secondary-icon-color: $theme-color-palette-black;\n-$badge-secondary-bg-color: $theme-color-palette-graphite-40;\n+$badge-secondary-bg-color: $theme-color-palette-graphite-10;\n$badge-secondary-border-color: $theme-color-palette-graphite-60;\n$badge-secondary-hover-bg-color: $theme-color-palette-white;\n$badge-secondary-disabled-border-color: $theme-color-palette-graphite-50;\n",
        "date": "14.01.2020 16:36:00",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Update badge background colors in theme-uplift-contrast"
    },
    {
        "msg": "fix a lint issue in the tests",
        "diff": "diff --git a/test/components/slider/slider.e2e-spec.js b/test/components/slider/slider.e2e-spec.js @@ -47,7 +47,6 @@ describe('Slider Vertical tests', () => { //eslint-disable-line\n}\n});\n-\ndescribe('Slider short tests', () => { //eslint-disable-line\nbeforeEach(async () => {\nawait utils.setPage('/components/slider/example-short?layout=nofrills');\n",
        "date": "05.02.2020 16:02:37",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Remove unnecessary code in slider.e2e-spec.js"
    },
    {
        "msg": "fix a bug on med filter height",
        "diff": "diff --git a/src/components/datagrid/_datagrid.scss b/src/components/datagrid/_datagrid.scss @@ -884,15 +884,9 @@ $datagrid-short-row-height: 25px;\n}\n.lookup-wrapper {\n- padding-left: 14px !important;\n+ padding-left: 0 !important;\npadding-top: 2px !important;\n- .trigger {\n- margin-left: -8px !important;\n- margin-top: -4px !important;\n- overflow: visible;\n- }\n-\n.align-text-right {\n+ .trigger {\nmargin-left: 0 !important;\n",
        "date": "05.02.2020 16:36:15",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor padding and alignment in datagrid component"
    },
    {
        "msg": "fix bug with searchfield `collapseSize` setting being empty",
        "diff": "diff --git a/src/components/searchfield/searchfield.js b/src/components/searchfield/searchfield.js @@ -1969,7 +1969,9 @@ SearchField.prototype = {\nupdated(settings) {\nif (settings) {\nthis.settings = utils.mergeSettings(this.element, settings, this.settings);\n- if (settings.collapseSize === undefined) {\n+\n+ // `utils.mergeSettings` misses passing the empty `collapseSize` property, so we need to check for it\n+ if (Object.prototype.hasOwnProperty.call(settings, 'collapseSize') && settings.collapseSize === undefined) {\nthis.settings.collapseSize = settings.collapseSize;\n}\n}\n",
        "date": "05.02.2020 21:08:14",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix issue with missing `collapseSize` property in `utils.mergeSettings`"
    },
    {
        "msg": "fix an additional error found in the tests",
        "diff": "diff --git a/src/components/datepicker/datepicker.js b/src/components/datepicker/datepicker.js @@ -1710,7 +1710,7 @@ DatePicker.prototype = {\n*/\nsetTime(date) {\nconst hasPopup = this.popup !== undefined;\n- if (!hasPopup) {\n+ if (!this.timepicker || !hasPopup) {\nif (!this.settings.useCurrentTime) {\ndate.setHours(0, 0, 0, 0);\n}\n",
        "date": "28.02.2020 15:51:29",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix setTime method to only set hours, minutes, and seconds to 0 if timepicker is disabled."
    },
    {
        "msg": "fix the two column example",
        "diff": "diff --git a/app/views/components/datagrid/test-two-columns.html b/app/views/components/datagrid/test-two-columns.html data = res.data;\n// Define Columns for the Grid.\n- columns.push({id: 'productId', name: 'Product Id', field: 'productId', reorderable: false, formatter: Formatters.Text});\n- columns.push({ id: 'productName', name: 'Product Name', field: 'productName', reorderable: false, formatter: Formatters.Hyperlink});\n+ columns.push({id: 'productId', name: 'Product Id', field: 'productId', reorderable: false, formatter: Formatters.Text, width: '50%'});\n+ columns.push({ id: 'productName', name: 'Product Name', field: 'productName', reorderable: false, formatter: Formatters.Hyperlink, width: '50%'});\n// Init and get the api for the grid\n$('#datagrid').datagrid({\n",
        "date": "02.03.2020 11:26:04",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "\"Update column widths in datagrid component\""
    },
    {
        "msg": "fix the date test",
        "diff": "diff --git a/app/views/components/datepicker/test-specific-lang.html b/app/views/components/datepicker/test-specific-lang.html <div class=\"field\">\n<label for=\"date-field-normal\" class=\"label\">Date Field</label>\n- <input id=\"date-field-normal\" class=\"datepicker\" name=\"date-field\" type=\"text\" data-options=\"{'locale': 'da-DK', 'language': 'es'}\"/>\n+ <input id=\"date-field-normal\" class=\"datepicker\" name=\"date-field\" type=\"text\" data-options=\"{'locale': 'da-DK', 'language': 'es'}\" value=\"05-02-2020\"/>\n</div>\n</div>\n",
        "date": "02.03.2020 13:04:19",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add default value to date field in specific language test page"
    },
    {
        "msg": "fix broken multiple modals test due to bug in `renderButtonset`",
        "diff": "diff --git a/src/components/modal/modal.js b/src/components/modal/modal.js @@ -493,7 +493,7 @@ Modal.prototype = {\n// Handle Validation\nif (settingsJSON.validate) {\n- btn.element.classList.add('no-validation');\n+ btn.element[0].classList.add('no-validation');\n}\n}\n",
        "date": "06.03.2020 15:24:06",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix issue with adding 'no-validation' class to button element in modal"
    },
    {
        "msg": "fix this resolution issues from last refactor.",
        "diff": "diff --git a/src/components/homepage/homepage.js b/src/components/homepage/homepage.js @@ -191,7 +191,7 @@ Homepage.prototype = {\n});\ncards\n- .on('mouseenter.card', () => {\n+ .on('mouseenter.card', function () {\nconst card = $(this);\nconst eastHandle = $('<div>').addClass('ui-resizable-handle ui-resizable-e')\n.drag({ axis: 'x' })\n@@ -270,23 +270,23 @@ Homepage.prototype = {\n}\ncard.css({ border: '1px solid #078cd9' });\n})\n- .on('mouseleave.card', () => {\n+ .on('mouseleave.card', function () {\nconst card = $(this);\nif (!card.hasClass('ui-resize-passive')) {\n$('.ui-resizable-handle').remove();\n}\ncard.css({ border: '1px solid #bdbdbd' });\n})\n- .on('dragstart.card', () => {\n+ .on('dragstart.card', function () {\nconst card = $(this);\ncard.addClass('is-dragging');\n})\n- .on('dragover.card', (event) => {\n+ .on('dragover.card', function (event) {\n// For mac chrome/safari to remove animation\n// https://stackoverflow.com/questions/32206010/disable-animation-for-drag-and-drop-chrome-safari\nevent.preventDefault();\n})\n- .on('dragenter.card', (event) => {\n+ .on('dragenter.card', function (event) {\nevent.preventDefault();\nconst card = $(this);\nconst draggingCard = $('.is-dragging');\n@@ -306,7 +306,7 @@ Homepage.prototype = {\ncard.append(homepage.guide);\nhomepage.refresh(false);\n})\n- .on('dragend.card', () => {\n+ .on('dragend.card', function () {\nconst card = $(this);\nconst cardOver = $(cards).has('.drop-indicator');\nif (card.index() < cardOver.index()) {\n",
        "date": "24.03.2020 10:48:39",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor card event listeners to use function expressions instead of arrow functions"
    },
    {
        "msg": "fix an error if the date is a string",
        "diff": "diff --git a/src/components/datepicker/datepicker.js b/src/components/datepicker/datepicker.js @@ -527,7 +527,7 @@ DatePicker.prototype = {\nconst self = this;\nconst s = this.settings;\nconst timeOptions = {};\n- this.lastValue = this.currentDate?.getTime();\n+ this.lastValue = typeof this.currentDate === 'string' ? this.currentDate : this.currentDate?.getTime();\nif ((this.element.is(':disabled') || this.element.attr('readonly')) && this.element.closest('.monthview').length === 0) {\nreturn;\n@@ -1216,8 +1216,9 @@ DatePicker.prototype = {\n}));\n}\n- const isChanged = this.lastValue !== this.currentDate?.getTime();\n- this.lastValue = this.currentDate?.getTime();\n+ const newValue = typeof this.currentDate === 'string' ? this.currentDate : this.currentDate?.getTime();\n+ const isChanged = this.lastValue !== newValue;\n+ this.lastValue = newValue;\nif (trigger && isChanged) {\nif (s.range.useRange) {\n",
        "date": "03.04.2020 13:39:39",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor datepicker.js to handle current date as string or time value"
    },
    {
        "msg": "fix an additional selection issue",
        "diff": "diff --git a/src/components/datagrid/datagrid.js b/src/components/datagrid/datagrid.js @@ -6941,6 +6941,7 @@ Datagrid.prototype = {\nthis.unselectRow(idx, true, true);\n}\n}\n+ this.settings.dataset.map((row) => { delete row._selected; }); //eslint-disable-line\n// Sync the Ui and call the events\nthis.dontSyncUi = false;\nthis._selectedRows = [];\n",
        "date": "13.04.2020 11:09:37",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Remove _selected property from dataset rows and sync UI changes"
    },
    {
        "msg": "fix the merge util for complex objects",
        "diff": "diff --git a/src/utils/utils.js b/src/utils/utils.js @@ -642,6 +642,25 @@ DOM.focusableElems = function focusableElems(el) {\n});\n};\n+/**\n+ * See if the object is simple or more complex (has a constructor).\n+ * @param {object} obj The object to check\n+ * @returns {boolean} Returns true if simple\n+ */\n+utils.isPlainObject = function isPlainObject(obj) {\n+ if (!obj || Object.prototype.toString.call(obj) !== '[object Object]') {\n+ return false;\n+ }\n+\n+ // Objects with no prototype (e.g., `Object.create( null )`) are plain\n+ const proto = Object.getPrototypeOf(obj);\n+ if (!proto) {\n+ return true;\n+ }\n+\n+ return obj !== null && typeof (obj) === 'object' && Object.getPrototypeOf(obj) === Object.prototype;\n+};\n+\n/**\n* Object deep copy and merge. Replaces jQuery.extend without the true option.\n* @param {boolean|object} deep For a deep extend, set the first argument to `true`.\n@@ -668,7 +687,8 @@ utils.extend = function extend() {\n// Needed for now until jQuery is fully dropped\nextended[prop] = $(obj[prop]);\n} else if (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {\n- extended[prop] = extend(extended[prop], obj[prop]);\n+ const isPlain = utils.isPlainObject(obj[prop]);\n+ extended[prop] = isPlain ? extend(extended[prop], obj[prop]) : obj[prop];\n} else {\nextended[prop] = obj[prop] === undefined && extended[prop] !== undefined ?\nextended[prop] : obj[prop];\n",
        "date": "20.04.2020 13:24:06",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add isPlainObject function and use it in extend function for object checking"
    },
    {
        "msg": "fix up e2e scripts",
        "diff": "diff --git a/test/components/error-page/error-page.e2e-spec.js b/test/components/error-page/error-page.e2e-spec.js @@ -73,6 +73,19 @@ describe('Error Page example-index tests', () => {\nexpect(await element(by.css('body')).getAttribute('class')).not.toContain('modal-engaged');\n});\n+});\n+\n+describe('Error page open example-index tests on click', () => {\n+ beforeEach(async () => {\n+ await utils.setPage('/components/error-page/example-index');\n+ const modalEl = await element(by.id('modal-context'));\n+ await browser.driver\n+ .wait(protractor.ExpectedConditions.presenceOf(modalEl), config.waitsFor);\n+ await modalEl.click();\n+ await browser.driver\n+ .wait(protractor.ExpectedConditions.presenceOf(element(by.className('overlay'))), config.waitsFor);\n+ await browser.driver.sleep(config.sleep);\n+ });\nif (utils.isChrome() && utils.isCI()) {\nit('Should not visual regress', async () => {\n@@ -84,4 +97,9 @@ describe('Error Page example-index tests', () => {\nexpect(await browser.protractorImageComparison.checkScreen('error-page-message')).toEqual(0);\n});\n}\n+\n+ it('Should open error page on click', async () => {\n+ expect(await element(by.css('.modal.is-visible')).isDisplayed()).toBeTruthy();\n+ });\n});\n+\n",
        "date": "24.04.2020 18:19:36",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add test for opening error page on click in error-page.e2e-spec.js"
    },
    {
        "msg": "fix the tests and an additional error",
        "diff": "diff --git a/src/components/datepicker/datepicker.js b/src/components/datepicker/datepicker.js @@ -1611,7 +1611,8 @@ DatePicker.prototype = {\n// Check and fix two digit year for main input element\nconst dateFormat = self.pattern;\n- const isStrict = !(dateFormat === 'MMMM d' || dateFormat === 'yyyy' || dateFormat === 'MMMM' || dateFormat === 'MMM');\n+ const isStrict = !(dateFormat === 'MMMM d' || dateFormat === 'yyyy' ||\n+ dateFormat === 'MMMM' || dateFormat === 'MMM' || dateFormat === 'MM');\nconst fieldValueTrimmed = self.element.val().trim();\nif (fieldValueTrimmed !== '' && !s.range.useRange) {\n@@ -1911,7 +1912,7 @@ DatePicker.prototype = {\n// Fix two digit year for main input element\nself.element.on('blur.datepicker', () => {\n- this.lastValue = this.currentDate?.getTime();\n+ this.lastValue = this.currentDate?.getTime;\nif (this.element.val().trim() !== '') {\nthis.setValueFromField();\n",
        "date": "28.04.2020 12:29:58",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix issue with two digit year handling in datepicker."
    },
    {
        "msg": "fix another test bug",
        "diff": "diff --git a/test/components/searchfield/searchfield.e2e-spec.js b/test/components/searchfield/searchfield.e2e-spec.js @@ -205,8 +205,7 @@ if (utils.isChrome() && utils.isCI()) {\n// blur the input field first, so we don't accidentaly get a text cursor in the screen capture.\nawait browser.executeScript('document.activeElement.blur();').then(async () => {\n- expect(await browser.protractorImageComparison\n- .checkElement(await element(by.css('.container')), 'searchfield-above-01')).toEqual(0);\n+ expect(await browser.imageComparison.checkElement(await element(by.css('.container')), 'searchfield-above-01')).toEqual(0);\n});\nawait searchfieldInputEl.sendKeys('ew');\n@@ -214,8 +213,7 @@ if (utils.isChrome() && utils.isCI()) {\n// blur the input field first, so we don't accidentaly get a text cursor in the screen capture.\nawait browser.executeScript('document.activeElement.blur();').then(async () => {\n- expect(await browser.protractorImageComparison\n- .checkElement(await element(by.css('.container')), 'searchfield-above-02')).toEqual(0);\n+ expect(await browser.imageComparison.checkElement(await element(by.css('.container')), 'searchfield-above-02')).toEqual(0);\n});\nawait browser.driver.manage().window().setSize(windowSize.width, windowSize.height);\n",
        "date": "06.05.2020 11:46:00",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor image comparison method in searchfield.e2e-spec.js"
    },
    {
        "msg": "fix one failing test",
        "diff": "diff --git a/test/components/accordion/accordion.e2e-spec.js b/test/components/accordion/accordion.e2e-spec.js @@ -231,6 +231,7 @@ describe('Accordion adding headers dynamically tests', () => {\n.sendKeys(protractor.Key.TAB)\n.sendKeys(protractor.Key.TAB)\n.sendKeys(protractor.Key.TAB)\n+ .sendKeys(protractor.Key.TAB)\n.perform();\nconst focusedElem = await browser.driver.switchTo().activeElement();\n",
        "date": "06.05.2020 12:18:47",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add additional tab key press in accordion.e2e-spec.js"
    },
    {
        "msg": "fix another e2e issue",
        "diff": "diff --git a/test/components/slider/slider.e2e-spec.js b/test/components/slider/slider.e2e-spec.js @@ -70,7 +70,7 @@ describe('Slider short tests', () => { //eslint-disable-line\ndescribe('Slider tooltip position test', () => { //eslint-disable-line\nbeforeEach(async () => {\n- await utils.setPage('/components/slider/example-tooltip-position?layout=nofrills');\n+ await utils.setPage('/components/slider/example-tooltip-position');\n});\nit('Should show the tooltip on top', async () => {\n",
        "date": "07.05.2020 14:36:06",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Remove unnecessary query parameter from slider tooltip position test page URL"
    },
    {
        "msg": "fix test translation",
        "diff": "diff --git a/src/components/swaplist/swaplist.js b/src/components/swaplist/swaplist.js @@ -221,8 +221,8 @@ SwapList.prototype = {\n// Dragging time placeholder\ns.numOfSelectionsClass = 'num-of-selections';\ns.itemContentClass = 'swaplist-item-content';\n- s.itemContentTempl = $(`<div><p><span class=\"${s.numOfSelectionsClass}\">###</span> ${\n- Locale ? Locale.translate('ItemsSelected') : ' Items Selected '}</p><div/>`);\n+ s.itemContentTempl = $(`<div><p><span class=\"${s.numOfSelectionsClass}\">###</span>\n+ <span class=\"${s.numOfSelectionsClass}-text\">&nbsp;</span></p><div/>`);\n// Make top buttons disabled if not draggable\nif (!s.draggable.available) {\n@@ -1105,6 +1105,7 @@ SwapList.prototype = {\n}\n$(`.${settings.numOfSelectionsClass}`, settings.itemContentTempl).html(selections.items.length);\n+ $(`.${settings.numOfSelectionsClass}-text`, settings.itemContentTempl).text(Locale.translate('ItemsSelected'));\nself.addDropeffects();\nif (!self.isTouch) {\n",
        "date": "12.05.2020 12:58:32",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Update itemContentTempl in SwapList component to display text for number of selected items."
    },
    {
        "msg": "fix broken change log reference",
        "diff": "diff --git a/docs/CONTRIBUTING.md b/docs/CONTRIBUTING.md @@ -67,7 +67,7 @@ If you'd like to submit a pull request you'll need to do the following:\n- Occasionally there will be a need to contribute to a version branch (i.e. `4.9.x`) in which case you want to branch off of one of those.\n- If you are unsure, just ask someone on the team so you don't have to redo your branch.\n1. Remember to make an **e2e or functional test** for your case.\n-1. Remember to add a **note to the [Change Log](docs/CHANGELOG.md)**.\n+1. Remember to add a **note to the [Change Log](CHANGELOG.md)**.\n1. **Commit your changes locally.** Try to follow the standards for your commit message outlined below.\n- Try to follow\n- [Github's commit message standards](https://github.com/erlang/otp/wiki/Writing-good-commit-messagesMore)\n",
        "date": "12.05.2020 12:36:06",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Update link to Change Log in CONTRIBUTING.md"
    },
    {
        "msg": "fix the spinbox tests for the settings changes",
        "diff": "diff --git a/test/components/spinbox/spinbox-settings.func-spec.js b/test/components/spinbox/spinbox-settings.func-spec.js @@ -32,11 +32,11 @@ describe('Spinbox settings', () => {\nspinboxEl.removeAttribute('data-options');\nspinboxApi.destroy();\nconst settings = {\n- autocorrectOnBlur: false,\n+ autocorrectOnBlur: true,\nmin: 0,\nmax: 10,\nstep: null,\n- validateOnInput: true\n+ maskOptions: null\n};\nsettings.min = 0; // example initializes with data-options\n@@ -47,11 +47,11 @@ describe('Spinbox settings', () => {\nit('Should update set settings via data', () => {\nconst settings = {\n- autocorrectOnBlur: false,\n+ autocorrectOnBlur: true,\nmin: 10,\nmax: 20,\nstep: null,\n- validateOnInput: true\n+ maskOptions: null\n};\nspinboxApi.updated();\n@@ -63,11 +63,11 @@ describe('Spinbox settings', () => {\nit('Should update set settings via parameter', () => {\nconst settings = {\n- autocorrectOnBlur: false,\n+ autocorrectOnBlur: true,\nmin: 10,\nmax: 20,\nstep: null,\n- validateOnInput: true\n+ maskOptions: null\n};\nspinboxApi.updated(settings);\nspinboxApi.settings.min = 10;\n@@ -78,11 +78,11 @@ describe('Spinbox settings', () => {\nit('Should update settings via data-options', () => {\nconst settings = {\n- autocorrectOnBlur: false,\n+ autocorrectOnBlur: true,\nmin: 0,\nmax: 10,\nstep: null,\n- validateOnInput: true\n+ maskOptions: null\n};\nexpect(spinboxApi.settings).toEqual(settings);\n",
        "date": "18.05.2020 10:31:20",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Update Spinbox settings to enable autocorrectOnBlur and add maskOptions."
    },
    {
        "msg": "fix some commments",
        "diff": "diff --git a/docs/CHANGELOG.md b/docs/CHANGELOG.md ### v4.29.0 Features\n-- `[Lookup]` Added x icon button so it has the ability to clear the field. ([#740](https://github.com/infor-design/enterprise/issues/740))\n-- `[Lookuo]` Added x icon and apply button inside of modal so it has a two options to clear the field. ([#2507](https://github.com/infor-design/enterprise/issues/2507))\n+- `[Lookup]` Added a clear (x icon) button to clear the field. ([#740](https://github.com/infor-design/enterprise/issues/740))\n+- `[Lookup]` Added a clear (x icon) button and apply button inside of modal so there are now two options to clear the field. ([#2507](https://github.com/infor-design/enterprise/issues/2507))\n- `[Multiselect]` Moved the functionality for displaying the Multiselect List's searchfield underneath/above the pseudo element into a configurable setting. ([#3864](https://github.com/infor-design/enterprise/issues/3864))\n- `[Slider]` Added the ability to set position of the tooltip. ([#3746](https://github.com/infor-design/enterprise/issues/3746))\n- `[Toast]` Added the ability to dismiss toasts via keyboard. ([#3521](https://github.com/infor-design/enterprise/issues/3521))\n",
        "date": "18.05.2020 10:35:42",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add clear button to Lookup field and modal for clearing options."
    },
    {
        "msg": "fix right custom example and color on the firmae example",
        "diff": "diff --git a/src/components/splitter/_splitter.scss b/src/components/splitter/_splitter.scss }\n.splitter-overlay {\n+ background-color: $theme-color-palette-white;\nheight: 100%;\n- opacity: 0.6;\n+ opacity: 0.8;\nposition: static;\nvisibility: visible;\n}\n",
        "date": "21.05.2020 09:45:16",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Increase opacity of splitter overlay and change background color to white"
    },
    {
        "msg": "fix an error on destroy when add isnt added",
        "diff": "diff --git a/src/components/tabs/tabs.js b/src/components/tabs/tabs.js @@ -3957,8 +3957,10 @@ Tabs.prototype = {\n}\n$('.tab-panel input').off('error.tabs valid.tabs');\n+ if (this.addTabButton) {\nthis.addTabButton.remove();\nthis.addTabButton = undefined;\n+ }\nthis.element.find('.close.icon').remove();\nreturn this;\n",
        "date": "22.05.2020 10:18:45",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Remove add tab button and close icon in tabs component"
    },
    {
        "msg": "fix a datagrid functional test",
        "diff": "diff --git a/test/components/datagrid/datagrid-settings.func-spec.js b/test/components/datagrid/datagrid-settings.func-spec.js @@ -102,6 +102,7 @@ describe('Datagrid Settings', () => { //eslint-disable-line\nallowOneExpandedRow: true,\nenableTooltips: false,\ndisableRowDeactivation: false,\n+ disableRowDeselection: false,\nsizeColumnsEqually: false,\nexpandableRow: false,\nexportConvertNegative: false,\n",
        "date": "29.05.2020 15:59:28",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add option to disable row deselection in datagrid settings"
    },
    {
        "msg": "fix an error when spell checking",
        "diff": "diff --git a/docs/CHANGELOG.md b/docs/CHANGELOG.md -properly# What's New with Enterprise\n+# What's New with Enterprise\n## v4.30.0\n@@ -10,7 +10,7 @@ properly# What's New with Enterprise\n### v4.30.0 Fixes\n-- `[Accordion]` Fixed an issue where the chevron icon is not poperly centered in Safari. ([#2161](https://github.com/infor-design/enterprise/issues/2161))\n+- `[Accordion]` Fixed an issue where the chevron icon is not properly centered in Safari. ([#2161](https://github.com/infor-design/enterprise/issues/2161))\n- `[Lookup]` Fixed an issue in the min width examples that showed up in Safari only. ([#3949](https://github.com/infor-design/enterprise/issues/3949))\n## v4.29.0\n",
        "date": "01.06.2020 10:39:00",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix alignment issue with chevron icon in Accordion component for Safari"
    },
    {
        "msg": "fix a test like we did on master",
        "diff": "diff --git a/test/karma.conf.js b/test/karma.conf.js @@ -12,6 +12,7 @@ const files = [\n'dist/js/d3.v5.js',\n'dist/js/sohoxi.js',\n'dist/js/cultures/en-US.js',\n+ 'dist/js/cultures/da-DK.js',\n'dist/js/cultures/ar-EG.js',\n'dist/js/cultures/es-ES.js',\n'dist/js/cultures/fr-FR.js',\n",
        "date": "02.06.2020 13:51:00",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add support for Danish culture (da-DK) in karma.conf.js"
    },
    {
        "msg": "fix a bug with tooltip position on initial load",
        "diff": "diff --git a/src/components/datagrid/datagrid.js b/src/components/datagrid/datagrid.js @@ -11299,6 +11299,14 @@ Datagrid.prototype = {\nplaceOptions.y = 0;\n}\n+ tooltip\n+ .one('afterplace.gridtooltip', (e, placementObj) => {\n+ this.handleAfterPlaceTooltip(e, tooltip, placementObj);\n+ })\n+ .on('click.gridtooltip', () => {\n+ this.hideTooltip();\n+ });\n+\n// If not already have place instance\nif (!tooltip.data('place')) {\ntooltip.place(placeOptions);\n@@ -11310,14 +11318,6 @@ Datagrid.prototype = {\n// Flag to mark as gridtooltip\ntooltip.data('gridtooltip', true);\n- tooltip\n- .one('afterplace.gridtooltip', (e, placementObj) => {\n- this.handleAfterPlaceTooltip(e, tooltip, placementObj);\n- })\n- .on('click.gridtooltip', () => {\n- this.hideTooltip();\n- });\n-\n// Hide the tooltip when the page scrolls.\n$('body, .scrollable').off('scroll.gridtooltip').on('scroll.gridtooltip', () => {\nthis.hideTooltip();\n",
        "date": "08.06.2020 10:43:49",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor tooltip event handling in datagrid component"
    },
    {
        "msg": "fix an additional bug",
        "diff": "diff --git a/src/components/calendar/calendar.js b/src/components/calendar/calendar.js @@ -766,7 +766,7 @@ Calendar.prototype = {\nif (eventHead[0]) {\nconst children = eventHead[0].parentNode.children;\n- for (let i = 0; i < children.length; i++) {\n+ for (let i = container.querySelector('.day-container').children.length; i < children.length; i++) {\nconst dataid = children[i].getAttribute('data-id');\nif (dataid === event.id) {\nbreak;\n",
        "date": "12.06.2020 13:58:48",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor loop to use container querySelector in calendar.js"
    },
    {
        "msg": "fix test to account for animation",
        "diff": "diff --git a/test/components/calendar/calendar.e2e-spec.js b/test/components/calendar/calendar.e2e-spec.js @@ -380,6 +380,7 @@ describe('Calendar allow one pane tests', () => {\nawait browser.driver\n.wait(protractor.ExpectedConditions.visibilityOf(await element(by.css('.calendar-event-details > div:nth-child(6).is-expanded'))), config.waitsFor);\n+ await browser.driver.sleep(1000);\nexpect(await element.all(by.css('.calendar-event-details .accordion-pane.is-expanded')).count()).toEqual(1);\n});\n",
        "date": "17.06.2020 10:17:46",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add delay before checking element visibility in calendar.e2e-spec.js"
    },
    {
        "msg": "fix an incorrect test",
        "diff": "diff --git a/test/components/locale/locale.func-spec.js b/test/components/locale/locale.func-spec.js @@ -1284,7 +1284,7 @@ describe('Locale API', () => {\nconst testDate2 = Soho.Locale.formatDate([1441, 6, 5, 0, 0, 0, 0], formatDateOptions);\n- expect(testDate2).toEqual('0915');\n+ expect(testDate2).toEqual('0229');\nconst testDate3 = Locale.formatDate('May 01', {\npattern: 'MMMM dd',\n",
        "date": "17.07.2020 15:02:14",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Update date format in locale.func-spec.js test"
    },
    {
        "msg": "fix broken columns in sample",
        "diff": "diff --git a/app/views/components/breadcrumb/example-callback.html b/app/views/components/breadcrumb/example-callback.html <div class=\"row\">\n- <div class=\"six colums\">\n+ <div class=\"six columns\">\n<p>Clicking on each of the Breadcrumb Items below will fire a callback</p>\n</div>\n</div>\n",
        "date": "18.08.2020 17:16:24",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix typo in class name in breadcrumb example callback HTML"
    },
    {
        "msg": "fix the position of animated bar when more button is visible (RTL)",
        "diff": "diff --git a/src/components/tabs/tabs.js b/src/components/tabs/tabs.js @@ -3484,6 +3484,7 @@ Tabs.prototype = {\nconst scrollingTablist = this.tablistContainer;\nconst tablistScrollLeft = scrollingTablist[0].scrollLeft;\nconst tablistScrollWidth = scrollingTablist[0].scrollWidth;\n+ const tabListDifferWidth = tablistScrollWidth - this.tablistContainer[0].offsetWidth;\nconst targetStyle = window.getComputedStyle(target[0], null);\nlet paddingRight = parseInt(targetStyle.getPropertyValue('padding-right'), 10) || 0;\n@@ -3498,7 +3499,7 @@ Tabs.prototype = {\n(paddingRight + target.position().left + target.outerWidth(true)) : (target.position().left);\nif (Locale.isRTL()) {\n- style.right = `${tablistScrollWidth + paddingRight - (left + tablistScrollLeft)}px`;\n+ style.right = `${tablistScrollWidth + paddingRight - (left + tablistScrollLeft) - tabListDifferWidth}px`;\n} else {\nstyle.left = `${left + tablistScrollLeft}px`;\n}\n",
        "date": "30.09.2020 00:53:20",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix tab positioning issue in Tabs component"
    },
    {
        "msg": "fix bug in empty message",
        "diff": "diff --git a/src/components/datagrid/datagrid.js b/src/components/datagrid/datagrid.js @@ -5923,7 +5923,7 @@ Datagrid.prototype = {\n* @param {object} emptyMessage The update empty message config object.\n*/\nsetEmptyMessage(emptyMessage) {\n- this.element[emptyMessage.height === 'small' ? 'addClass' : 'removeClass']('empty-message-height-small');\n+ this.element[emptyMessage?.height === 'small' ? 'addClass' : 'removeClass']('empty-message-height-small');\nif (!this.emptyMessage) {\nthis.emptyMessageContainer = $('<div class=\"empty-message-container\"><div></div></div>');\nthis.element.append(this.emptyMessageContainer).addClass('has-empty-message');\n",
        "date": "30.10.2020 12:45:11",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix issue with setting empty message height conditionally based on emptyMessage object's height property."
    },
    {
        "msg": "fix broken autocomplete",
        "diff": "diff --git a/src/components/autocomplete/autocomplete.js b/src/components/autocomplete/autocomplete.js @@ -688,6 +688,7 @@ Autocomplete.prototype = {\n* @param {array} event An array with the buffer in it\n*/\nself.element.trigger('requeststart', [buffer]);\n+ self.lastTerm = buffer;\nif (sourceType === 'function') {\n// Call the 'source' setting as a function with the done callback.\n@@ -762,7 +763,6 @@ Autocomplete.prototype = {\n// Attempt to resolve source as a URL string. Do an AJAX get with the URL\nconst sourceURL = self.settings.source.toString();\nconst request = $.getJSON(sourceURL + buffer);\n- this.lastTerm = buffer;\nrequest.done((data) => {\ndone(buffer, data, true);\n",
        "date": "06.11.2020 10:12:48",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add lastTerm assignment in Autocomplete.prototype"
    },
    {
        "msg": "fix home page test",
        "diff": "diff --git a/test/components/homepage/homepage.e2e-spec.js b/test/components/homepage/homepage.e2e-spec.js @@ -84,7 +84,7 @@ describe('Homepage example five column tests', () => {\n];\nconst windowSize = await browser.driver.manage().window().getSize();\nawait browser.driver.manage().window().setSize(1920, 1080);\n- await browser.driver.sleep(config.sleep);\n+ await browser.driver.sleep(config.sleepLonger);\nconst widgets = await element.all(by.css('.homepage .widget'));\nconst len = widgets.length;\n@@ -115,7 +115,7 @@ describe('Homepage example five column tests', () => {\n];\nconst windowSize = await browser.driver.manage().window().getSize();\nawait browser.driver.manage().window().setSize(1680, 1050);\n- await browser.driver.sleep(config.sleep);\n+ await browser.driver.sleep(config.sleepLonger);\nconst widgets = await element.all(by.css('.homepage .widget'));\nconst len = widgets.length;\n@@ -146,7 +146,7 @@ describe('Homepage example five column tests', () => {\n];\nconst windowSize = await browser.driver.manage().window().getSize();\nawait browser.driver.manage().window().setSize(1200, 1600);\n- await browser.driver.sleep(config.sleep);\n+ await browser.driver.sleep(config.sleepLonger);\nconst widgets = await element.all(by.css('.homepage .widget'));\nconst len = widgets.length;\n@@ -177,7 +177,7 @@ describe('Homepage example five column tests', () => {\n];\nconst windowSize = await browser.driver.manage().window().getSize();\nawait browser.driver.manage().window().setSize(768, 1024);\n- await browser.driver.sleep(config.sleep);\n+ await browser.driver.sleep(config.sleepLonger);\nconst widgets = await element.all(by.css('.homepage .widget'));\nconst len = widgets.length;\n@@ -208,7 +208,7 @@ describe('Homepage example five column tests', () => {\n];\nconst windowSize = await browser.driver.manage().window().getSize();\nawait browser.driver.manage().window().setSize(320, 480);\n- await browser.driver.sleep(config.sleep);\n+ await browser.driver.sleep(config.sleepLonger);\nconst widgets = await element.all(by.css('.homepage .widget'));\nconst len = widgets.length;\n",
        "date": "03.12.2020 11:20:17",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Increase sleep time in e2e tests for homepage widgets"
    },
    {
        "msg": "fix test for new year",
        "diff": "diff --git a/test/components/locale/locale.func-spec.js b/test/components/locale/locale.func-spec.js @@ -1290,7 +1290,7 @@ describe('Locale API', () => {\ncalendarName: 'gregorian'\n};\n- const testDate2 = Soho.Locale.formatDate([1441, 6, 5, 0, 0, 0, 0], formatDateOptions);\n+ const testDate2 = Soho.Locale.formatDate([1442, 6, 5, 0, 0, 0, 0], formatDateOptions);\nexpect(testDate2).toEqual('0229');\n",
        "date": "04.01.2021 09:28:59",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Update testDate2 year value in locale.func-spec.js"
    },
    {
        "msg": "fix the extra outline when focused",
        "diff": "diff --git a/docs/CHANGELOG.md b/docs/CHANGELOG.md - `[Pager]` Fixed a bug that automation id's are not added when the attachToBody is used. ([#4692](https://github.com/infor-design/enterprise/issues/4692))\n- `[Rating]` Fixed a bug with the readonly function, it did not toggle the readonly state correctly. ([#958](https://github.com/infor-design/enterprise-ng/issues/958))\n- `[Tabs]` Added support for a \"More Actions\" button to exist beside horizontal/header tabs. ([#4532](https://github.com/infor-design/enterprise/issues/4532))\n-- `[Toolbar Searchfield]` Fixed a bug where the toolbar searchfield were unable to focused when tabbing through the page. ([#4683](https://github.com/infor-design/enterprise/issues/4683))\n+- `[Toolbar Searchfield]` Fixed a bug where the search bar were showing extra outline when focused. ([#4682](https://github.com/infor-design/enterprise/issues/4682))\n- `[Tree]` Fixed an issue where the parent value was get deleted after use `addNode()` method. ([#4486](https://github.com/infor-design/enterprise/issues/4486))\n- `[Wizard]` Fixed a slight layout issue with the highlighted step in RTL mode. ([#4714](https://github.com/infor-design/enterprise/issues/4714))\n",
        "date": "07.01.2021 00:12:16",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix bugs and add features to various components."
    },
    {
        "msg": "fix a test case by making it an async function",
        "diff": "diff --git a/test/components/breadcrumb/breadcrumb.e2e-spec.js b/test/components/breadcrumb/breadcrumb.e2e-spec.js @@ -128,7 +128,7 @@ describe('Breadcrumb automation tests', () => {\n});\n});\n-describe('Breadcrumb should be accessible with no WCAG 2AA violations', () => {\n+describe('Breadcrumb should be accessible with no WCAG 2AA violations', async () => {\nif (!utils.isIE()) {\nawait utils.setPage(`/components/breadcrumb/example-disabled?theme=classic&layout=nofrills`);\nit('Should be accessible with no WCAG 2AA violations', async () => {\n",
        "date": "19.03.2021 17:34:13",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix async issue in breadcrumb e2e test suite"
    },
    {
        "msg": "fix the async functionality on the unit test",
        "diff": "diff --git a/test/components/breadcrumb/breadcrumb.e2e-spec.js b/test/components/breadcrumb/breadcrumb.e2e-spec.js @@ -128,12 +128,12 @@ describe('Breadcrumb automation tests', () => {\n});\n});\n-describe('Breadcrumb should be accessible with no WCAG 2AA violations', async () => {\n- if (!utils.isIE()) {\n- await utils.setPage(`/components/breadcrumb/example-disabled?theme=classic&layout=nofrills`);\n+describe('Breadcrumb should be accessible with no WCAG 2AA violations', () => {\nit('Should be accessible with no WCAG 2AA violations', async () => {\n+ if (!utils.isIE()) {\n+ await utils.setPage('/components/breadcrumb/example-disabled?theme=classic&layout=nofrills');\nconst res = await axePageObjects(browser.params.theme);\nexpect(res.violations.length).toEqual(0);\n- });\n}\n});\n+});\n",
        "date": "22.03.2021 09:52:48",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix accessibility test for Breadcrumb component"
    },
    {
        "msg": "fix large searchfield icon alignment (not related to",
        "diff": "diff --git a/src/components/searchfield/_searchfield.scss b/src/components/searchfield/_searchfield.scss @@ -574,3 +574,14 @@ html[dir='rtl'] {\ntop: 0;\n}\n}\n+\n+/**\n+ * align large searchfield search icon\n+ */\n+.header > .full-searchfield-container .searchfield-wrapper {\n+ & > svg.icon:nth-child(1) {\n+ height: 100%;\n+ top: 50%;\n+ transform: translateY(-50%);\n+ }\n+}\n",
        "date": "30.04.2021 18:45:59",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "\"Align large searchfield search icon vertically\""
    },
    {
        "msg": "fix off-by-one-regression in app bar nav/searchfield case",
        "diff": "diff --git a/src/components/searchfield/_searchfield.scss b/src/components/searchfield/_searchfield.scss @@ -602,4 +602,10 @@ html[class*='theme-classic-'] {\ntop: -1px;\n}\n}\n+\n+ .application-menu.has-searchfield {\n+ .searchfield-wrapper.has-close-icon-button > .btn-icon.close > svg.close.icon {\n+ top: 0;\n+ }\n+ }\n}\n",
        "date": "03.05.2021 10:22:10",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Adjust position of close icon in searchfield wrapper for application menu."
    },
    {
        "msg": "fix the double border when the first column is hidden.",
        "diff": "diff --git a/src/components/datagrid/_datagrid.scss b/src/components/datagrid/_datagrid.scss @@ -279,7 +279,8 @@ $datagrid-small-row-height: 25px;\nbackground-color: $datagrid-empty-bg-color;\n}\n- td:first-child {\n+ td:first-child,\n+ td.is-hidden:first-child + td {\nborder-left: 0;\n}\n@@ -3043,7 +3044,8 @@ $datagrid-small-row-height: 25px;\n&.center,\n&.left {\n- th:first-child {\n+ th:first-child,\n+ th.is-hidden:first-child + th {\nborder-left: 0;\n}\n}\n",
        "date": "09.08.2021 12:13:33",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix border-left styling for hidden cells in datagrid table cells"
    },
    {
        "msg": "fix the unwanted hash being appended to the url on angular",
        "diff": "diff --git a/src/components/popupmenu/popupmenu.js b/src/components/popupmenu/popupmenu.js @@ -1023,10 +1023,6 @@ PopupMenu.prototype = {\nself.handleItemClick(e, a);\n});\n- this.menu.on(`click.btn-menu.${this.id}`, function (e) {\n- e.preventDefault();\n- });\n-\nconst excludes = 'li:not(.separator):not(.hidden):not(.heading):not(.group):not(.is-disabled):not(.is-placeholder)';\n// Select on Focus\n@@ -1285,6 +1281,11 @@ PopupMenu.prototype = {\n}\nreturn undefined;\n});\n+\n+ $(document).off(`click.btn.${this.id}`).on(`click.btn-menu.${this.id}`, (e) => {\n+ e.preventDefault();\n+ return false;\n+ });\n}, 1);\n},\n@@ -2334,12 +2335,6 @@ PopupMenu.prototype = {\nthis.menu.off('click.popupmenu touchend.popupmenu touchcancel.popupmenu dragstart.popupmenu');\n}\n- setTimeout(() => {\n- if (this.menu && this.menu.length) {\n- this.menu.off(`click.btn-menu.${this.id}`);\n- }\n- }, 1);\n-\n$('iframe').each(function () {\nconst frame = $(this);\ntry {\n",
        "date": "16.09.2021 03:43:52",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix click event handling in PopupMenu component"
    },
    {
        "msg": "fix test by recreating a new month view calendar",
        "diff": "diff --git a/test/components/monthview/monthview-api.func-spec.js b/test/components/monthview/monthview-api.func-spec.js @@ -39,7 +39,6 @@ describe('Monthview API', () => {\nmonth: 8,\nyear: 2018,\nactiveDate: new Date(2018, 8, 10),\n- firstDayOfWeek: 1,\n});\n});\n@@ -191,8 +190,13 @@ describe('Monthview API', () => {\n});\nit('Should populate header starting from given day of the week', () => {\n- monthviewAPI.showMonth(9, 2021);\n- expect(document.getElementById('monthview-datepicker-field').textContent).toEqual('October 2021');\n+ monthviewAPI.destroy();\n+ monthviewAPI = new MonthView(monthviewEl, {\n+ month: 8,\n+ year: 2018,\n+ activeDate: new Date(2018, 8, 10),\n+ firstDayOfWeek: 1\n+ });\nexpect(document.getElementsByClassName('monthview-table')[0].children[0].children[0].children[0].innerHTML).toEqual('Mon');\n});\n});\n",
        "date": "26.10.2021 11:37:28",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor Monthview API initialization and destruction"
    },
    {
        "msg": "fix a lint issue on the last change",
        "diff": "diff --git a/src/components/datagrid/datagrid.js b/src/components/datagrid/datagrid.js @@ -1578,7 +1578,7 @@ Datagrid.prototype = {\ncol.filterMaskOptions = utils.extend(true, {}, decimalDefaults, col.filterMaskOptions);\n}\n- if (col.maskOptions && typeof col.maskOptions != 'function') {\n+ if (col.maskOptions && typeof col.maskOptions !== 'function') {\ncol.maskOptions = utils.extend(true, {}, decimalDefaults, col.maskOptions);\n}\n}\n",
        "date": "17.12.2021 16:05:26",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix comparison operator in maskOptions condition"
    },
    {
        "msg": "fix a translation test",
        "diff": "diff --git a/test/components/locale/locale.func-spec.js b/test/components/locale/locale.func-spec.js @@ -2215,7 +2215,7 @@ describe('Locale API', () => {\nLocale.set('tl-PH');\nexpect(Locale.translate('Clickable')).toEqual('Clickable sa editor');\n- expect(Locale.translate('Columns')).toEqual('Mga kolum');\n+ expect(Locale.translate('Columns')).toEqual('Mga Column');\nexpect(Locale.translate('Component')).toEqual('Bahagi');\nexpect(Locale.translate('Classic')).toEqual('Klasiko');\nexpect(Locale.translate('ClassicDarkTheme')).toEqual('Klasiko Dark');\n",
        "date": "27.12.2021 10:02:24",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Update translation for 'Columns' in locale.func-spec.js"
    },
    {
        "msg": "fix one in weekview",
        "diff": "diff --git a/src/components/week-view/week-view.js b/src/components/week-view/week-view.js @@ -910,6 +910,8 @@ WeekView.prototype = {\nthis.teardown();\nthis.element.empty();\n$.removeData(this.element[0], COMPONENT_NAME);\n+ $.removeData(this.element[0], 'init');\n+ $.removeData(this.element[0], 'automationId');\nreturn this;\n}\n};\n",
        "date": "13.01.2022 13:09:30",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Remove additional data attributes in WeekView teardown"
    },
    {
        "msg": "fix the last example",
        "diff": "diff --git a/app/views/components/datagrid/test-stretch-last-column.html b/app/views/components/datagrid/test-stretch-last-column.html columns: columns,\ndataset: data,\nselectable: 'single',\n- stretchColumn: columns[columns.length -1].id,\n+ stretchColumn: columns[columns.length -1].id, // 'last' used to work see #6063\ntoolbar: {title: 'Data Grid Header Title', collapsibleFilter: true, results: true, keywordFilter: true, actions: true, rowHeight: true}\n});\n});\n",
        "date": "26.01.2022 09:34:43",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix issue with stretchColumn not working for last column, now using 'last' keyword as a workaround. See #6063."
    },
    {
        "msg": "fix character per line",
        "diff": "diff --git a/src/components/tooltip/tooltip.js b/src/components/tooltip/tooltip.js @@ -280,9 +280,7 @@ Tooltip.prototype = {\nif (!this.tooltip.length) {\nconst name = (elem ? elem.substring(1, elem.length) : this.componentName);\nthis.tooltip = $(`<div class=\"${className} bottom is-hidden\" id=\"${name}\">\n- <div class=\"arrow\"></div>\n- <div class=\"tooltip-content\"></div>\n- </div>`);\n+ <div class=\"arrow\"></div><div class=\"tooltip-content\"></div></div>`);\nxssUtils.removeWhiteSpaceCharacters(this.tooltip);\n}\n",
        "date": "04.02.2022 00:45:38",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor tooltip element creation in tooltip.js"
    },
    {
        "msg": "fix the tag tests",
        "diff": "diff --git a/package.json b/package.json \"e2e:local:debug\": \"npm run webdriver:update && npx protractor test/protractor.local.debug.conf.js\",\n\"e2e:puppeteer\": \"npx --no-install jest --config=test/jest.config.js --runInBand --detectOpenHandles --forceExit\",\n\"webdriver:clean\": \"npx webdriver-manager clean\",\n- \"webdriver:update\": \"npx webdriver-manager update --versions.chrome=97.0.4692.99 --standalone false --quiet --gecko=false\",\n+ \"webdriver:update\": \"npx webdriver-manager update --standalone false --quiet --gecko=false\",\n\"zip-dist\": \"npx grunt zip-dist\",\n\"documentation\": \"node ./scripts/deploy-documentation.js\",\n\"release:dev\": \"node scripts/publish-nightly-manual\",\n",
        "date": "11.02.2022 09:13:15",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Remove specific Chrome version from webdriver update command"
    },
    {
        "msg": "fix some regressions",
        "diff": "diff --git a/app/views/components/modal/example-index.html b/app/views/components/modal/example-index.html -<style>\n- .container {\n- width: 100%;\n- }\n- input {\n- min-width: 300px;\n- }\n- .modal-content .modal-body-wrapper {\n- padding-bottom: 0;\n- }\n- .row:last-child {\n- margin-bottom: 0px;\n- }\n-</style>\n<div class=\"row top-padding\">\n<div class=\"twelve columns\">\n",
        "date": "05.04.2022 10:24:22",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Remove unnecessary styles from modal example-index.html"
    },
    {
        "msg": "fix the value of total",
        "diff": "diff --git a/src/components/bar/bar.js b/src/components/bar/bar.js @@ -584,9 +584,14 @@ Bar.prototype = {\ntotal = 0;\nhexColor = charts.chartColor(j, 'bar', series[j]);\nfor (let k = 0, kl = dataset.length; k < kl; k++) {\n+ if (s.isNormalized) {\n+ total += dataset[k][i].value;\n+ totals[k] = dataset[k][i].value;\n+ } else {\ntotal += dataset[k][i].x;\ntotals[k] = dataset[k][i].x;\n}\n+ }\ncontent += `<div class=\"swatch-row\">\n<div class=\"swatch-color\">${setPattern(series[j].pattern, hexColor)}</div>\n<span>${series[j].name}</span>\n",
        "date": "11.05.2022 11:03:58",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Add support for normalized data in bar chart calculations"
    },
    {
        "msg": "fix more position of axis labels, and fix RTL positions too",
        "diff": "diff --git a/src/components/bar/bar.js b/src/components/bar/bar.js @@ -298,11 +298,11 @@ Bar.prototype = {\nself.svg = d3.select(this.element[0])\n.append('svg')\n- .attr('width', w)\n- .attr('height', h)\n+ .attr('width', w + (isAxisLabels.atLeastOne ? 20 : 0))\n+ .attr('height', h + (isAxisLabels.atLeastOne ? 5 : 0))\n.append('g')\n.attr('class', 'group')\n- .attr('transform', `translate(${textWidth},${margins.top})`);\n+ .attr('transform', `translate(${textWidth},${margins.top - (isAxisLabels.atLeastOne ? 3 : 0)})`);\nconst xMin = d3.min(dataset, g => (d3.min(g, d => (s.isStacked ? (d.x + d.x0) : d.x))));\nlet xMax = d3.max(dataset, g => (d3.max(g, d => (s.isStacked ? (d.x + d.x0) : d.x))));\n@@ -716,7 +716,7 @@ Bar.prototype = {\n});\n// Adjust the labels\n- self.svg.selectAll('.axis.y text').attr('x', () => (self.isRTL ? 15 : -15));\n+ self.svg.selectAll('.axis.y text').attr('x', () => (self.isRTL ? (isAxisLabels.atLeastOne ? 5 : 15) : (isAxisLabels.atLeastOne ? -5 : -15)));\nself.svg.selectAll('.axis.x text').attr('class', d => (d < 0 ? 'negative-value' : 'positive-value'));\nif (self.isRTL && (charts.isIE || charts.isIEEdge)) {\n@@ -726,20 +726,21 @@ Bar.prototype = {\nif (isAxisLabels.atLeastOne) {\nconst axisLabelGroup = self.svg.append('g').attr('class', 'axis-labels');\n- const widthAxisLabel = w - 45;\n+ const widthAxisLabel = w - 95;\n+ const heightAxisLabel = height - 60;\nconst place = {\n- top: `translate(${widthAxisLabel / 2 - 51},${-5})`,\n- right: `translate(${widthAxisLabel + 28},${height / 2})rotate(90)`,\n- bottom: `translate(${widthAxisLabel / 2},${height + 40})`,\n- left: `translate(${-80},${height / 2})rotate(-90)`,\n+ top: `translate(${widthAxisLabel / 2},${-4})`,\n+ right: `translate(${widthAxisLabel + 53},${height / 2})rotate(90)`,\n+ bottom: `translate(${widthAxisLabel / 2},${heightAxisLabel + 89})`,\n+ left: `translate(${-35},${height / 2})rotate(-90)`,\n};\nconst placeStyle = {\n- top: `rotate(0deg) scale(-1) translate(-${widthAxisLabel / 2}px, ${-10}px)`,\n- right: `rotate(90deg) scaleX(-1) translate(-${(height / 2) + 5}px, -${widthAxisLabel + (self.isRTL ? 55 : 28)}px)`,\n- bottom: `rotate(0deg) scaleX(-1) translate(-${widthAxisLabel / 2}px, ${height + 47}px)`,\n- left: `rotate(90deg) scaleX(-1) translate(-${(height / 2 - 5)}px, ${self.isRTL ? 35 : 55}px)`\n+ top: `rotate(0deg) scaleX(-1) translate(-${widthAxisLabel / 2}px, ${-4}px)`,\n+ right: `rotate(90deg) scaleX(-1) translate(-${(height / 2) + 5}px, -${widthAxisLabel + (this.isRTL ? 45 : 28)}px)`,\n+ bottom: `rotate(0deg) scaleX(-1) translate(-${widthAxisLabel / 2}px, ${heightAxisLabel + 89}px)`,\n+ left: `rotate(90deg) scaleX(-1) translate(-${(height / 2 - 5)}px, ${this.isRTL ? 45 : 55}px)`\n};\nconst addAxis = (pos) => {\n",
        "date": "25.05.2022 13:21:15",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Adjust axis label positioning and size in bar chart component"
    },
    {
        "msg": "fix test, need to improve",
        "diff": "diff --git a/test/components/datagrid/datagrid.puppeteer-spec.js b/test/components/datagrid/datagrid.puppeteer-spec.js @@ -171,7 +171,8 @@ describe('Datagrid', () => {\n});\n});\n- describe('Count in select all current page setting', () => {\n+ // TODO: improve this test\n+ describe.skip('Count in select all current page setting', () => {\nconst url = `${baseUrl}/test-count-in-select-all-current-page-setting.html`;\nbeforeAll(async () => {\nawait page.goto(url, { waitUntil: ['domcontentloaded', 'networkidle0'] });\n",
        "date": "25.01.2023 19:46:52",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Improve test for count in select all current page setting"
    },
    {
        "msg": "fix more test",
        "diff": "diff --git a/test/components/popdown/popdown.puppeteer-spec.js b/test/components/popdown/popdown.puppeteer-spec.js -const { checkDataAutomationId, checkIfElementHasFocused, checkIfElementExist, checkIfElementExists } = require('../../helpers/e2e-utils.js');\n+const { checkDataAutomationId, checkIfElementHasFocused, checkIfElementExists } = require('../../helpers/e2e-utils.js');\n/**\n* #TODO: Refactor all the tests\n*/\n@@ -73,10 +73,10 @@ describe('Popdown Puppeteer Tests', () => {\n// 1. On open first input should be focused.\n// 2. On first input (Shift + Tab) should close and focus to previous.\n// 3. On last input Tab should close and focus to next.\n- it('should let close the popdown and if available focus to prev/next', async () => {\n+ it.skip('should let close the popdown and if available focus to prev/next', async () => {\nconst tabPresses = 5;\n- await Promise.all(Array.from({ length: tabPresses }, () => page.keyboard.press('Tab')));\n+ await Promise.all(Array.from({ length: tabPresses }, () => page.keyboard.press('Tab', { delay: 400 })));\nawait page.waitForSelector('.popdown', { visible: true });\n// Popdown should open and first input should be focused.\n@@ -134,17 +134,16 @@ describe('Popdown Puppeteer Tests', () => {\n});\nit('Should remain open when an inner Lookup component is opened', async () => {\n- const isFailed = [];\n// Open the Popdown\nawait page.click('#popdown-trigger');\n- isFailed.push(await checkIfElementExist('.popdown.bottom.visible'));\n+ expect(await checkIfElementExists(page, '.popdown.bottom.visible')).toBe(true);\n// Open the Lookup\nawait page.click('.btn-icon');\n- isFailed.push(await checkIfElementExist('.lookup-modal'));\n+ expect(await checkIfElementExists(page, '.lookup-modal')).toBe(true);\n// Test that the Popdown remained open\n- isFailed.push(await checkIfElementExist('.popdown.bottom.visible'));\n+ expect(await checkIfElementExists(page, '.popdown.bottom.visible'));\n// Choose an option from the Lookup\nawait page.click('#lookup-datagrid > div.datagrid-wrapper.center.scrollable-x.scrollable-y > table > tbody > tr:nth-child(1) > td:nth-child(2) > div > a');\n@@ -152,41 +151,7 @@ describe('Popdown Puppeteer Tests', () => {\nconst input = await (await element.getProperty('value')).jsonValue();\nexpect(input).toBe('2142201');\n- // Test that the Popdown remained open\n- isFailed.push(await checkIfElementExist('.popdown.bottom.visible'));\n- expect(isFailed).not.toContain(true);\n- });\n- });\n-\n- describe('Outside Event Tests', () => {\n- const url = 'http://localhost:4000/components/popdown/test-click-outside.html';\n- beforeEach(async () => {\n- await page.goto(url, { waitUntil: ['domcontentloaded', 'networkidle0'] });\n- });\n-\n- it('should show the title', async () => {\n- await expect(page.title()).resolves.toMatch('IDS Enterprise');\n- });\n-\n- it('should show have outside event', async () => {\n- expect.assertions(8);\n- // |----------------------------------------------------------|\n- // | https://github.com/infor-design/enterprise/issues/3618 |\n- // |----------------------------------------------------------|\n- page\n- .on('console', (message) => {\n- expect(message.text()).toContain('click outside');\n- const { _type, _text, _args } = message;\n- const { _remoteObject } = _args[0];\n- const value = _remoteObject.value;\n- expect(_type).toBe('log');\n- expect(_text).toBe('click outside JSHandle@object');\n- expect(value).toBe('click outside');\n- });\n- await page.click('#popdown-example-trigger');\n- await page.waitForSelector('#maincontent');\n- await page.click('#maincontent', { delay: 500 });\n- await page.click('[data-automation-id=\"popover-listview-example-automation-id\"]', { delay: 500 });\n+ expect(await checkIfElementExists(page, '.popdown.bottom.visible')).toBe(true);\n});\n});\n});\n",
        "date": "26.01.2023 15:34:57",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor tests and update keyboard press delay in Popdown Puppeteer tests"
    },
    {
        "msg": "fix close icon visibility",
        "diff": "diff --git a/src/components/searchfield/_searchfield-toolbar.scss b/src/components/searchfield/_searchfield-toolbar.scss @@ -521,7 +521,7 @@ $toolbarsearchfield-category-empty-width: 51px;\n&:not(.active) {\n.btn-icon.close,\n- .icon.close {\n+ &:not(.is-hovered) .icon.close {\ndisplay: none;\n}\n}\n",
        "date": "31.01.2023 22:15:51",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Hide close icon only when search field is not hovered"
    },
    {
        "msg": "fix one bubble test based on arbitrary order for",
        "diff": "diff --git a/spec/bubble-chart-spec.js b/spec/bubble-chart-spec.js @@ -458,7 +458,7 @@ describe('dc.bubbleChart', function () {\nit('draws bubbles in appropriate locations', function () {\nvar coords = [\n- [170.4,0], [820,155], [489.9,155], [394,310], [149.1,310], [0,310]\n+ [0,310], [149.1,310], [170.4,0], [394,310], [489.9,155], [820,155],\n];\nchart.selectAll('g.node').each(function (d, i) {\nexpect(d3.select(this).attr('transform'))\n",
        "date": "13.01.2017 18:18:02",
        "repo": "dc-js/dc.js",
        "type": "fix",
        "chatgpt_zeroshot": "Reorder bubble locations in bubble chart to display correctly"
    },
    {
        "msg": "fix this test by restoring old behavior of chart Alphabetical order may still be wanted in some cases for",
        "diff": "diff --git a/spec/data-addition-spec.js b/spec/data-addition-spec.js @@ -26,6 +26,7 @@ describe('Dynamic data addition in crossfilter', function () {\n.width(width)\n.height(height)\n.radius(radius)\n+ .ordering(function (kv) { return kv.key; })\n.transitionDuration(0);\nchart.render();\nbaseData.add(moreData);\n@@ -47,14 +48,14 @@ describe('Dynamic data addition in crossfilter', function () {\nexpect(chart.selectAll('svg g g.pie-slice path').data().length).toEqual(7);\n});\nit('default function should be used to dynamically generate label', function () {\n- expect(d3.select(chart.selectAll('text.pie-slice')[0][0]).text()).toEqual('44');\n+ expect(d3.select(chart.selectAll('text.pie-slice')[0][0]).text()).toEqual('11');\n});\n- it('pie chart slices should be in numerical size order', function () {\n+ it('pie chart slices should be in numerical order', function () {\nexpect(chart.selectAll('text.pie-slice').data().map(function (slice) { return slice.data.key; }))\n- .toEqual(['44', '22', '33', '55', '11', '66', '76']);\n+ .toEqual(['11','22','33','44','55','66','76']);\n});\nit('default function should be used to dynamically generate title', function () {\n- expect(d3.select(chart.selectAll('g.pie-slice title')[0][0]).text()).toEqual('44: 3');\n+ expect(d3.select(chart.selectAll('g.pie-slice title')[0][0]).text()).toEqual('11: 1');\n});\nafterEach(function () {\nvalueDimension.filterAll();\n",
        "date": "24.05.2017 18:12:14",
        "repo": "dc-js/dc.js",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor pie chart slices to be in numerical order and update default label and title generation."
    },
    {
        "msg": "fix test cases for Microsoft Edge",
        "diff": "diff --git a/spec/helpers/custom_matchers.js b/spec/helpers/custom_matchers.js @@ -191,13 +191,14 @@ beforeEach(function () {\n/*\nURL can be like:\nurl(http://localhost:8888/spec/?random=true#composite-chart-clip)\n+ url(\"http://localhost:8888/spec/?random=true#composite-chart-clip\")\nhttp://localhost:8888/spec/?random=true#composite-chart-clip\nhttp://localhost:8888/spec/##composite-chart-clip\n*/\nvar cleanURL = function (u) {\nvar matches = u.match(/url\\((.*)\\)/);\nif (matches) {\n- u = matches[1];\n+ u = matches[1].replace(/\"/g, '');\n}\nreturn u.replace(/\\#+/, '#');\n};\n",
        "date": "22.03.2018 21:10:06",
        "repo": "dc-js/dc.js",
        "type": "fix",
        "chatgpt_zeroshot": "Fix URL cleaning function to remove double quotes"
    },
    {
        "msg": "fix test cases in phantomjs",
        "diff": "diff --git a/src/cbox-menu.js b/src/cbox-menu.js @@ -73,7 +73,7 @@ dc.cboxMenu = function (parent, chartGroup) {\nif (_chart.hasFilter() && _multiple) {\n_cbox.selectAll('input')\n.property('checked', function (d) {\n- return d && _chart.filters().indexOf(String(_chart.keyAccessor()(d))) >= 0;\n+ return d && _chart.filters().indexOf(String(_chart.keyAccessor()(d))) >= 0 || false;\n});\n} else if (_chart.hasFilter()) {\n_cbox.select('input[value=\"' + _chart.filter() + '\"]')\n",
        "date": "30.03.2018 18:17:43",
        "repo": "dc-js/dc.js",
        "type": "fix",
        "chatgpt_zeroshot": "Fix checkbox selection logic in cbox-menu"
    },
    {
        "msg": "fix test: radius no longer set automatically",
        "diff": "diff --git a/spec/sunburst-chart-spec.js b/spec/sunburst-chart-spec.js @@ -104,8 +104,8 @@ describe('dc.sunburstChart', function () {\nit('height should be set', function () {\nexpect(chart.height()).toEqual(height);\n});\n- it('radius should be set', function () {\n- expect(chart.radius()).toEqual(radius);\n+ it('radius should not be set', function () {\n+ expect(chart.radius()).toBeFalsy();\n});\nit('cx should be set', function () {\nexpect(chart.cx()).toEqual(defaultCenter.x);\n@@ -185,6 +185,16 @@ describe('dc.sunburstChart', function () {\n});\n});\n+ describe('with radius', function () {\n+ beforeEach(function () {\n+ chart.radius(100)\n+ .render();\n+ });\n+ it('should take', function () {\n+ expect(chart.radius()).toEqual(radius);\n+ });\n+ });\n+\ndescribe('re-render', function () {\nbeforeEach(function () {\nchart.render();\n",
        "date": "09.10.2018 14:00:25",
        "repo": "dc-js/dc.js",
        "type": "fix",
        "chatgpt_zeroshot": "Fix radius test in sunburst-chart-spec"
    },
    {
        "msg": "fix an invalid arguments test that returns a better result now",
        "diff": "diff --git a/spec/color-spec.js b/spec/color-spec.js @@ -57,9 +57,9 @@ describe('dc.colorMixin', function () {\nit('linear', function () {\n// GIGO: mapping ordinal domain to linear scale is nonsensical\n- // actually it gets scaled to NaN and then d3 corrects it\n+ // d3 pre-5.8: scaled to NaN and corrected to black; 5.8+: scale returns undefined\nchart.linearColors(['#ff0000','#00ff00']);\n- expect(colorTest(chart, domain)).toMatchColors(['#000000', '#000000', '#000000', '#000000', '#000000']);\n+ expect(colorTest(chart, domain)).toEqual([undefined, undefined, undefined, undefined, undefined]);\n});\n});\ndescribe('with numeric domain' , function () {\n",
        "date": "28.01.2019 14:17:50",
        "repo": "dc-js/dc.js",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor colorMixin linear scale handling for d3 version compatibility"
    },
    {
        "msg": "fix some more",
        "diff": "diff --git a/web-src/examples/header.js b/web-src/examples/header.js '<a href=\"//dc-js.github.io/dc.js\"><img src=\"../dc.logo.png\" style=\"float:left; padding-right: 1em\" width=50 height=50></img></a>',\n'<div id=\"links\" style=\"padding:10px 0px 0px 10px\">',\n'<a href=\".\">all ' + dir + '</a>&emsp;<a href=\"',\n- 'https://github.com/dc-js/dc.js/tree/master/web-src/' + dir + '/' + filename,\n+ 'https://github.com/dc-js/dc.js/tree/develop/web-src/' + dir + '/' + filename,\n'\">source</a>',\n'<div style=\"float:right\"><span id=\"version\"></span></div>',\n'</div>',\n",
        "date": "27.04.2020 20:46:14",
        "repo": "dc-js/dc.js",
        "type": "fix",
        "chatgpt_zeroshot": "Update source code link to point to develop branch"
    },
    {
        "msg": "fix one more web-src link",
        "diff": "diff --git a/web-src/index.html b/web-src/index.html <li><a href=\"vc/index.html\">US Venture Capital Landscape 2011 (choropleth chart, bubble chart)</a></li>\n<li><a href=\"crime/index.html\">Major Canadian City Crime Stats 1998-2011 (bubble overlay, bar chart, line chart)</a></li>\n<li><a href=\"https://github.com/dc-js/dc.js/wiki#examples-contributed-by-community\">List of Community Contributed Examples</a></li>\n- <li><a href=\"./examples\">Simple, Specific Chart Examples</a> (<a href=\"https://github.com/dc-js/dc.js/tree/master/web/examples\">source</a>)</li>\n+ <li><a href=\"./examples\">Simple, Specific Chart Examples</a> (<a href=\"https://github.com/dc-js/dc.js/tree/master/web-src/examples\">source</a>)</li>\n</ul>\n<h2>Nasdaq 100 Index 1985/11/01-2012/06/29</h2>\n",
        "date": "10.01.2020 12:51:53",
        "repo": "dc-js/dc.js",
        "type": "fix",
        "chatgpt_zeroshot": "Update source link for Simple, Specific Chart Examples in index.html"
    },
    {
        "msg": "fix an issue with out of date code in BatchManagementClient as per",
        "diff": "diff --git a/lib/services/batchManagement/README.md b/lib/services/batchManagement/README.md @@ -22,7 +22,7 @@ npm install azure-arm-batch\n// the user will get a DeviceTokenCredentials object.\nmsRestAzure.interactiveLogin(function(err, credentials) {\nvar client = new batchManagementClient(credentials, 'your-subscription-id');\n- client.account.list(rgName, function(err, result, request, response) {\n+ client.batchAccountOperations.list(rgName, function(err, result, request, response) {\nif (err) console.log(err);\nconsole.log(result);\n});\n",
        "date": "23.01.2017 09:01:12",
        "repo": "azure/azure-sdk-for-node",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor batch account list method to use batchAccountOperations API"
    },
    {
        "msg": "fix bug of HDInsight Hive job submission parameters error",
        "diff": "diff --git a/lib/services/HDInsightJob2/lib/hDInsightJobManagementClient.js b/lib/services/HDInsightJob2/lib/hDInsightJobManagementClient.js @@ -1467,21 +1467,21 @@ var JobOperations = ( /** @lends JobOperations */ function() {\n*\n* @param {HiveJobSubmissionParameters} parameters Hive job parameters.\n*\n- * @param {string} [parameters.query]\n+ * @param {string} [parameters.query] One of either \"execute\" or \"file\" is required.\n*\n* @param {string} [parameters.userName]\n*\n- * @param {string} [parameters.file]\n+ * @param {string} [parameters.file] One of either \"execute\" or \"file\" is required.\n*\n- * @param {string} [parameters.files]\n+ * @param {string} [parameters.files] optional in Hive 0.12.0+\n*\n* @param {string} [parameters.defines]\n*\n- * @param {string} [parameters.arguments]\n+ * @param {string} [parameters.arguments] optional in Hive 0.12.0+\n*\n* @param {string} [parameters.statusDir]\n*\n- * @param {string} [parameters.enableLog]\n+ * @param {string} [parameters.enableLog] optional in Hive 0.12.0+\n*\n* @param {function} callback\n*\n@@ -1525,7 +1525,34 @@ var JobOperations = ( /** @lends JobOperations */ function() {\nhttpRequest.headers['User-Agent'] = 'xplat Hive job submission';\n// Serialize Request\n- var requestContent = 'user.name=' + parameters.userName + '&execute=' + parameters.query + '&file=' + parameters.file + '&arg=' + parameters.arguments + '&files=' + parameters.files + '&statusdir=' + parameters.statusDir + '&enablelog=' + parameters.enableLog + parameters.defines;\n+ var requestContent = '';\n+ if (!parameters.query && !parameters.file) {\n+ throw new Error('One of either \"execute\" or \"file\" is required.');\n+ }\n+ if (parameters.username) {\n+ requestContent += 'user.name=' + parameters.username;\n+ }\n+ if (parameters.query) {\n+ requestContent += '&execute=' + parameters.query;\n+ }\n+ if (parameters.file) {\n+ requestContent += '&file=' + parameters.file;\n+ }\n+ if (parameters.arguments) {\n+ requestContent += '&arg=' + parameters.arguments;\n+ }\n+ if (parameters.files) {\n+ requestContent += '&files=' + parameters.files;\n+ }\n+ if (parameters.statusDir) {\n+ requestContent += '&statusdir=' + parameters.statusDir;\n+ }\n+ if (parameters.enableLog) {\n+ requestContent += '&enablelog=' + parameters.enableLog;\n+ }\n+ if (parameters.defines) {\n+ requestContent += '&define=' + encodeURIComponent(parameters.defines);\n+ }\nhttpRequest.body = requestContent;\nhttpRequest.headers['Content-Length'] = Buffer.isBuffer(requestContent) ? requestContent.length : Buffer.byteLength(requestContent, 'UTF8');\n// Send Request\n",
        "date": "22.07.2017 17:55:55",
        "repo": "azure/azure-sdk-for-node",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor Hive job submission parameters handling in JobOperations"
    },
    {
        "msg": "fix a bug where absolute disk paths would attempt to be resolved using the npm resolver",
        "diff": "diff --git a/src/plugins/npm-plugin/index.js b/src/plugins/npm-plugin/index.js @@ -29,7 +29,7 @@ export default function npmPlugin({ publicPath = '/@npm', prefix = '\\bnpm/', ext\nif (id.startsWith(publicPath)) return { id, external };\nif (id.startsWith(prefix)) id = id.substring(prefix.length);\n- else if (/^(?:\\0|[a-z]+:)/.test(id)) return;\n+ else if (/^(?:\\0|[a-z]+:|\\/)/.test(id)) return;\nif (importer && importer.startsWith(prefix)) importer = importer.substring(prefix.length);\n",
        "date": "17.09.2020 19:48:02",
        "repo": "preactjs/wmr",
        "type": "fix",
        "chatgpt_zeroshot": "Fix regex pattern to allow for absolute paths in npmPlugin"
    },
    {
        "msg": "fix drop `publicPath` prefix during prerender",
        "diff": "diff --git a/src/lib/prerender.js b/src/lib/prerender.js @@ -4,15 +4,16 @@ import { Worker } from 'worker_threads';\n* @param {object} options\n* @property {string} [cwd = '.']\n* @property {string} [out = '.cache']\n+ * @property {string} publicPath\n*/\n-export function prerender({ cwd = '.', out = '.cache' }) {\n+export function prerender({ cwd = '.', out = '.cache', publicPath }) {\nconst w = new Worker(\n`(${workerCode})(require('worker_threads').workerData)\n.then(r => require('worker_threads').parentPort.postMessage([1,r]))\n.catch(err => require('worker_threads').parentPort.postMessage([0,err && err.stack || err+'']))`,\n{\neval: true,\n- workerData: { cwd, out },\n+ workerData: { cwd, out, publicPath },\n// execArgv: ['--experimental-modules'],\nstderr: true\n}\n@@ -28,7 +29,7 @@ export function prerender({ cwd = '.', out = '.cache' }) {\n});\n}\n-async function workerCode({ cwd, out }) {\n+async function workerCode({ cwd, out, publicPath }) {\n/*global globalThis*/\nconst path = require('path');\n@@ -67,6 +68,7 @@ async function workerCode({ cwd, out }) {\nthrow Error(`Unable to detect <script src=\"entry.js\"> in your index.html.`);\n}\n// script = new URL(`../dist/${script.replace(/^(\\.?\\/)?/g, '')}`, selfUrl).href;\n+ script = script.replace(publicPath, '');\nscript = path.resolve(cwd, out, script.replace(/^(\\.?\\/)?/g, ''));\n// Prevent Rollup from transforming `import()` here.\n",
        "date": "03.12.2020 07:28:55",
        "repo": "preactjs/wmr",
        "type": "fix",
        "chatgpt_zeroshot": "Add publicPath option to prerender function"
    },
    {
        "msg": "fix broken code frame content",
        "diff": "diff --git a/packages/wmr/src/plugins/wmr/client.js b/packages/wmr/src/plugins/wmr/client.js @@ -389,7 +389,7 @@ function createErrorOverlay(data) {\n'div.inner',\nnull,\nh('h1.title', null, String(data.error)),\n- h('pre.code-frame', null, h('code', null, lines)),\n+ h('pre.code-frame', null, h('code', null, ...lines)),\nh(\n'details.detail',\nnull,\n",
        "date": "27.04.2021 18:11:39",
        "repo": "preactjs/wmr",
        "type": "fix",
        "chatgpt_zeroshot": "Fix code frame rendering in error overlay"
    },
    {
        "msg": "fix First, not last, non-external script in HTML should have prerender()",
        "diff": "diff --git a/packages/wmr/src/lib/prerender.js b/packages/wmr/src/lib/prerender.js @@ -76,7 +76,7 @@ async function workerCode({ cwd, out, publicPath, customRoutes }) {\nconst SCRIPT_TAG = /<script(?:\\s[^>]*?)?\\s+src=(['\"]?)([^>]*?)\\1(?:\\s[^>]*?)?>/g;\nlet match;\n- while ((match = SCRIPT_TAG.exec(tpl))) {\n+ while ((match = SCRIPT_TAG.exec(tpl)) && !script) {\n// Ignore external urls\nif (!match || /^(?:https?|file|data)/.test(match[2])) continue;\n",
        "date": "23.01.2022 21:51:02",
        "repo": "preactjs/wmr",
        "type": "fix",
        "chatgpt_zeroshot": "Fix issue with script tag matching in prerender.js"
    },
    {
        "msg": "fix one more error caused by wrtc Fix:",
        "diff": "diff --git a/index.js b/index.js @@ -507,6 +507,8 @@ Peer.prototype._maybeReady = function () {\nself._connecting = true\nself.getStats(function (err, items) {\n+ if (self.destroyed) return\n+\n// Treat getStats error as non-fatal. It's not essential.\nif (err) items = []\n",
        "date": "07.04.2017 14:08:31",
        "repo": "feross/simple-peer",
        "type": "fix",
        "chatgpt_zeroshot": "Handle getStats error as non-fatal in _maybeReady function"
    },
    {
        "msg": "fix a typo in the README.",
        "diff": "diff --git a/README.md b/README.md @@ -280,7 +280,7 @@ if (Peer.WEBRTC_SUPPORT) {\n### duplex stream\n-`Peer` objects are instances of `stream.Duplex`. The behave very similarly to a\n+`Peer` objects are instances of `stream.Duplex`. They behave very similarly to a\n`net.Socket` from the node core `net` module. The duplex stream reads/writes to the data\nchannel.\n",
        "date": "04.11.2017 16:22:00",
        "repo": "feross/simple-peer",
        "type": "fix",
        "chatgpt_zeroshot": "Fix typo in README.md - \"behave\" should be \"behave\""
    },
    {
        "msg": "fix no need for Promise.resolve here",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -655,23 +655,19 @@ module.exports = (\n// Check if plugin is a function.\n// If it is, call it on the configs we created.\nif (typeof plugin === 'function') {\n- config = await Promise.resolve(\n- runPlugin(\n+ config = await runPlugin(\nplugin,\nconfig,\n{ target, dev: IS_DEV },\nwebpackObject,\noptions\n- )\n);\n}\n}\n// Check if razzle.config.js has a modify function.\n// If it does, call it on the configs we created.\nif (modify) {\n- config = await Promise.resolve(\n- modify(config, { target, dev: IS_DEV }, webpackObject)\n- );\n+ config = await modify(config, { target, dev: IS_DEV }, webpackObject);\n}\nresolve(config);\n",
        "date": "25.07.2020 17:32:51",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor plugin and modify function calls in createConfigAsync.js"
    },
    {
        "msg": "fix more relaxed deps",
        "diff": "diff --git a/packages/razzle/package.json b/packages/razzle/package.json \"terser-webpack-plugin\": \"^2.3.5\",\n\"tiny-async-pool\": \"^1.1.0\",\n\"url-loader\": \"^2.3.0\",\n- \"webpack\": \"^5.18.0\",\n+ \"webpack\": \"4 || 5\",\n\"webpack-manifest-plugin\": \"3.0.0-rc.0\",\n- \"webpackbar\": \"^5.0.0-3\"\n+ \"webpackbar\": \"4 || 5\"\n},\n\"peerDependencies\": {\n\"babel-preset-razzle\": \"4.0.0-canary.25\",\n",
        "date": "29.01.2021 01:51:45",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Update webpack and webpackbar versions in package.json"
    },
    {
        "msg": "fix the initialization of `createSocketUrl` variable to happen before it is used",
        "diff": "diff --git a/packages/razzle-dev-utils/webpackHotDevClient.js b/packages/razzle-dev-utils/webpackHotDevClient.js @@ -17,9 +17,6 @@ var devServerMajorVersion = require('./devServerMajor');\nvar formatWebpackMessages = require('./formatWebpackMessages');\nvar ErrorOverlay = require('react-error-overlay');\n-var socketUrl = createSocketUrl();\n-var parsedSocketUrl = url.parse(socketUrl);\n-\nvar createSocketUrl;\nif (devServerMajorVersion > 3) {\n// The path changed with v4\n@@ -28,6 +25,9 @@ if (devServerMajorVersion > 3) {\ncreateSocketUrl = require('webpack-dev-server/client/utils/createSocketUrl');\n}\n+var socketUrl = createSocketUrl();\n+var parsedSocketUrl = url.parse(socketUrl);\n+\nErrorOverlay.setEditorHandler(function editorHandler(errorLocation) {\n// Keep this sync with errorOverlayMiddleware.js\nfetch(\n",
        "date": "20.10.2021 16:08:50",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor webpackHotDevClient.js to fix socketUrl creation issue"
    },
    {
        "msg": "fix another comment",
        "diff": "diff --git a/packages/razzle/scripts/start.js b/packages/razzle/scripts/start.js @@ -179,7 +179,7 @@ function main() {\n// listen was deprecated in v4 and causes issues when used, switch to its replacement\nclientDevServer.start();\n} else {\n- // Start Webpack-dev-server with the explicit host and port\n+ // Start Webpack-dev-server\nclientDevServer.listen(port, err => {\nif (err) {\nlogger.error(err);\n",
        "date": "20.10.2021 16:37:39",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Remove explicit host and port in webpack-dev-server start command"
    },
    {
        "msg": "fix another comment",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -895,7 +895,7 @@ module.exports = (\nconfig.plugins = [\n...config.plugins,\ndevServerMajorVersion > 3\n- ? null // avoid warning since, webpack v4 automatically adds the HRM plugin when `hot` is true\n+ ? null // avoid warning since v4 automatically adds the HRM plugin when `hot` is true\n: new webpack.HotModuleReplacementPlugin({\n// set this true will break HtmlWebpackPlugin\nmultiStep: !clientOnly,\n",
        "date": "21.10.2021 15:59:32",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Fix comment in createConfigAsync.js regarding webpack v4 HRM plugin auto addition"
    },
    {
        "msg": "fix a missing comma in code sample Transpilation of external modules code sample was missing a comma",
        "diff": "diff --git a/website/pages/docs/customization.md b/website/pages/docs/customization.md @@ -426,7 +426,7 @@ module.exports = {\nenv: {\ntarget, // the target 'node' or 'web'\ndev, // is this a development build? true or false\n- }\n+ },\noptions: {\nwebpackOptions, // the default options that will be used to configure webpack/ webpack loaders and plugins\n}\n",
        "date": "07.05.2022 12:41:18",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Fix missing comma in customization.md file"
    },
    {
        "msg": "fix argument order for Object.assign Thanks",
        "diff": "diff --git a/src/reducers/targets.js b/src/reducers/targets.js @@ -15,8 +15,8 @@ const reducer = function (state, action) {\n.filter(target => !target.isStage)\n.reduce(\n(targets, target, listId) => Object.assign(\n- {[target.id]: {order: listId, ...target}},\n- targets\n+ targets,\n+ {[target.id]: {order: listId, ...target}}\n),\n{}\n),\n",
        "date": "12.05.2017 17:42:37",
        "repo": "wdr-data/code4maus",
        "type": "fix",
        "chatgpt_zeroshot": "Reorder targets in reducer to maintain list order"
    },
    {
        "msg": "fix a warning on grow box",
        "diff": "diff --git a/src/components/modal/modal.jsx b/src/components/modal/modal.jsx @@ -21,7 +21,7 @@ class ModalComponent extends React.Component {\n>\n<Box\ndirection=\"column\"\n- grow=\"1\"\n+ grow={1}\n>\n<div className={styles.header}>\n<div className={classNames(styles.headerItem, styles.headerItemFilter)}>\n",
        "date": "25.05.2017 14:58:19",
        "repo": "wdr-data/code4maus",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor grow property in ModalComponent to use dynamic value"
    },
    {
        "msg": "fix test to not be so specific",
        "diff": "diff --git a/test/unit/util/audio-effects.test.js b/test/unit/util/audio-effects.test.js @@ -16,14 +16,14 @@ describe('Audio Effects manager', () => {\ntest('changes buffer length and playback rate for faster effect', () => {\nconst audioEffects = new AudioEffects(audioBuffer, 'faster');\n- expect(audioEffects.audioContext._.length).toEqual(Math.floor(400 / 1.5));\n- expect(audioEffects.source.playbackRate.value).toEqual(1.5);\n+ expect(audioEffects.audioContext._.length).toBeLessThan(400);\n+ expect(audioEffects.source.playbackRate.value).toBeGreaterThan(1);\n});\ntest('changes buffer length and playback rate for slower effect', () => {\nconst audioEffects = new AudioEffects(audioBuffer, 'slower');\n- expect(audioEffects.audioContext._.length).toEqual(Math.floor(400 / 0.5));\n- expect(audioEffects.source.playbackRate.value).toEqual(0.5);\n+ expect(audioEffects.audioContext._.length).toBeGreaterThan(400);\n+ expect(audioEffects.source.playbackRate.value).toBeLessThan(1);\n});\ntest('changes buffer length for echo effect', () => {\n",
        "date": "10.08.2017 10:29:45",
        "repo": "wdr-data/code4maus",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor audio effects test cases for faster and slower effects"
    },
    {
        "msg": "fix the safari rendering of the sound editor",
        "diff": "diff --git a/src/components/sound-editor/sound-editor.css b/src/components/sound-editor/sound-editor.css @@ -49,7 +49,7 @@ $border-radius: 0.25rem;\ntransition: 0.2s;\n}\n-.button img {\n+.button > img {\nflex-grow: 1;\nmax-width: 100%;\nmax-height: 100%;\n@@ -62,6 +62,10 @@ $border-radius: 0.25rem;\npadding-right: 10px; /* To equalize with empty whitespace from image on left */\n}\n+.trim-button > img {\n+ width: 1.5rem;\n+}\n+\n.trim-button-active {\nfilter: hue-rotate(155deg); /* @todo replace blue -> red with real submit icon */\n}\n",
        "date": "11.08.2017 10:28:11",
        "repo": "wdr-data/code4maus",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor button styling and add specific styling for trim button icon."
    },
    {
        "msg": "fix up localization after rebasing on LLK/develop",
        "diff": "diff --git a/src/components/browser-modal/browser-modal.jsx b/src/components/browser-modal/browser-modal.jsx @@ -2,6 +2,7 @@ import PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactModal from 'react-modal';\nimport Box from '../box/box.jsx';\n+import {defineMessages, injectIntl, intlShape, FormattedMessage} from 'react-intl';\nimport styles from './browser-modal.css';\n@@ -17,14 +18,16 @@ const BrowserModal = ({intl, ...props}) => (\n<ReactModal\nisOpen\nclassName={styles.modalContent}\n- contentLabel=\"Internet Explorer is not supported\"\n+ contentLabel={intl.formatMessage({...messages.label})}\noverlayClassName={styles.modalOverlay}\nonRequestClose={props.onBack}\n>\n<Box className={styles.illustration} />\n<Box className={styles.body}>\n- <h2>Internet Explorer is not supported</h2>\n+ <h2>\n+ <FormattedMessage {...messages.label} />\n+ </h2>\n<p>\n{ /* eslint-disable max-len */ }\n<FormattedMessage\n@@ -58,7 +61,8 @@ const BrowserModal = ({intl, ...props}) => (\n);\nBrowserModal.propTypes = {\n+ intl: intlShape.isRequired,\nonBack: PropTypes.func.isRequired\n};\n-export default BrowserModal;\n+export default injectIntl(BrowserModal);\n",
        "date": "12.04.2018 17:28:44",
        "repo": "wdr-data/code4maus",
        "type": "fix",
        "chatgpt_zeroshot": "Add internationalization support to browser modal component"
    },
    {
        "msg": "fix comments to fit in github review window",
        "diff": "diff --git a/src/containers/blocks.jsx b/src/containers/blocks.jsx @@ -70,9 +70,9 @@ class Blocks extends React.Component {\n);\nthis.workspace = this.ScratchBlocks.inject(this.blocks, workspaceConfig);\n- // we actually never want the workspace to enable \"refresh toolbox\" - this basically re-renders the entire toolbox\n- // every time we reset the workspace. We call updateToolbox as a part of componentDidUpdate so the toolbox will\n- // still correctly be updated\n+ // we actually never want the workspace to enable \"refresh toolbox\" - this basically re-renders the\n+ // entire toolbox every time we reset the workspace. We call updateToolbox as a part of\n+ // componentDidUpdate so the toolbox will still correctly be updated\nthis.setToolboxRefreshEnabled = this.workspace.setToolboxRefreshEnabled.bind(this.workspace);\nthis.workspace.setToolboxRefreshEnabled = () => this.setToolboxRefreshEnabled(false);\n",
        "date": "13.04.2018 13:04:38",
        "repo": "wdr-data/code4maus",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor toolbox refresh logic in Blocks component"
    },
    {
        "msg": "remove console.logs from timer",
        "diff": "diff --git a/test/helpers/timer.js b/test/helpers/timer.js // timer for tests specific to testrpc\nmodule.exports = s => {\n- console.log('timer to', s);\nreturn new Promise((resolve, reject) => {\nweb3.currentProvider.sendAsync({\njsonrpc: '2.0',\n@@ -8,7 +7,6 @@ module.exports = s => {\nparams: [s], // 60 seaconds, may need to be hex, I forget\nid: new Date().getTime() // Id of the request; anything works, really\n}, function(err) {\n- console.log('resolved to', err);\nif (err) return reject(err);\nresolve();\n});\n",
        "date": "10.02.2017 18:35:05",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor timer.js for testrpc specific tests"
    },
    {
        "msg": "remove unnecessary checks from safeDiv",
        "diff": "diff --git a/contracts/SafeMath.sol b/contracts/SafeMath.sol @@ -12,9 +12,9 @@ library SafeMath {\n}\nfunction div(uint a, uint b) internal returns (uint) {\n- assert(b > 0);\n+ // assert(b > 0); // Solidity automatically throws when dividing by 0\nuint c = a / b;\n- assert(a == b * c + a % b);\n+ // assert(a == b * c + a % b); // There is no case in which this doesn't hold\nreturn c;\n}\n",
        "date": "21.05.2017 16:41:18",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor div function in SafeMath.sol to remove unnecessary assert statements"
    },
    {
        "msg": "remove redundant return",
        "diff": "diff --git a/contracts/token/PausableToken.sol b/contracts/token/PausableToken.sol @@ -16,10 +16,10 @@ import '../lifecycle/Pausable.sol';\ncontract PausableToken is Pausable, StandardToken {\nfunction transfer(address _to, uint _value) whenNotPaused {\n- return super.transfer(_to, _value);\n+ super.transfer(_to, _value);\n}\nfunction transferFrom(address _from, address _to, uint _value) whenNotPaused {\n- return super.transferFrom(_from, _to, _value);\n+ super.transferFrom(_from, _to, _value);\n}\n}\n",
        "date": "02.06.2017 00:27:16",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor transfer functions in PausableToken contract"
    },
    {
        "msg": "remove return values of pause() and unpause() of Pausable",
        "diff": "diff --git a/contracts/lifecycle/Pausable.sol b/contracts/lifecycle/Pausable.sol @@ -34,18 +34,16 @@ contract Pausable is Ownable {\n/**\n* @dev called by the owner to pause, triggers stopped state\n*/\n- function pause() onlyOwner whenNotPaused returns (bool) {\n+ function pause() onlyOwner whenNotPaused {\npaused = true;\nPause();\n- return true;\n}\n/**\n* @dev called by the owner to unpause, returns to normal state\n*/\n- function unpause() onlyOwner whenPaused returns (bool) {\n+ function unpause() onlyOwner whenPaused {\npaused = false;\nUnpause();\n- return true;\n}\n}\n",
        "date": "28.07.2017 17:35:27",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor pause and unpause functions in Pausable.sol"
    },
    {
        "msg": "remove beta tag from truffle truffle@beta uses old solc 0.4.11 truffle main branch uses most up to date 0.4.15",
        "diff": "diff --git a/README.md b/README.md @@ -16,7 +16,7 @@ With OpenZeppelin, you can build distributed applications, protocols and organiz\nOpenZeppelin integrates with [Truffle](https://github.com/ConsenSys/truffle), an Ethereum development environment. Please install Truffle and initialize your project with `truffle init`.\n```sh\n-npm install -g truffle@beta\n+npm install -g truffle\nmkdir myproject && cd myproject\ntruffle init\n```\n",
        "date": "15.08.2017 14:55:37",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Remove beta tag from truffle installation command"
    },
    {
        "msg": "remove main field from package.json",
        "diff": "diff --git a/package.json b/package.json \"name\": \"zeppelin-solidity\",\n\"version\": \"1.2.0\",\n\"description\": \"Secure Smart Contract library for Solidity\",\n- \"main\": \"truffle.js\",\n\"scripts\": {\n\"test\": \"scripts/test.sh\",\n\"console\": \"truffle console\",\n",
        "date": "19.08.2017 18:22:42",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Remove truffle.js as main file in package.json"
    },
    {
        "msg": "remove onlyPayloadSize modifier",
        "diff": "diff --git a/contracts/token/StandardToken.sol b/contracts/token/StandardToken.sol @@ -71,7 +71,6 @@ contract StandardToken is ERC20, BasicToken {\n* From MonolithDAO Token.sol\n*/\nfunction increaseApproval (address _spender, uint _addedValue)\n- onlyPayloadSize(2 * 32)\nreturns (bool success) {\nallowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\nApproval(msg.sender, _spender, allowed[msg.sender][_spender]);\n@@ -79,7 +78,6 @@ contract StandardToken is ERC20, BasicToken {\n}\nfunction decreaseApproval (address _spender, uint _subtractedValue)\n- onlyPayloadSize(2 * 32)\nreturns (bool success) {\nuint oldValue = allowed[msg.sender][_spender];\nif (_subtractedValue > oldValue) {\n",
        "date": "20.08.2017 23:11:23",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Remove onlyPayloadSize modifier from increaseApproval and decreaseApproval functions"
    },
    {
        "msg": "remove coveralls script from package.json",
        "diff": "diff --git a/package.json b/package.json \"scripts\": {\n\"test\": \"scripts/test.sh\",\n\"console\": \"truffle console\",\n- \"coverage\": \"scripts/coverage.sh\",\n- \"coveralls\": \"scripts/coveralls.sh\"\n+ \"coverage\": \"scripts/coverage.sh\"\n},\n\"repository\": {\n\"type\": \"git\",\n",
        "date": "22.08.2017 10:15:21",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Remove coveralls script from package.json script section"
    },
    {
        "msg": "remove confusing comment left from FinalizableCrowdsale AFter this PR the comment was left.",
        "diff": "diff --git a/contracts/crowdsale/FinalizableCrowdsale.sol b/contracts/crowdsale/FinalizableCrowdsale.sol @@ -7,7 +7,7 @@ import './Crowdsale.sol';\n/**\n* @title FinalizableCrowdsale\n* @dev Extension of Crowsdale where an owner can do extra work\n- * after finishing. By default, it will end token minting.\n+ * after finishing.\n*/\ncontract FinalizableCrowdsale is Crowdsale, Ownable {\nusing SafeMath for uint256;\n",
        "date": "23.08.2017 18:57:22",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Remove default token minting end in FinalizableCrowdsale"
    },
    {
        "msg": "remove indexed declaration of uint event parameter",
        "diff": "diff --git a/contracts/token/BurnableToken.sol b/contracts/token/BurnableToken.sol @@ -23,5 +23,5 @@ contract BurnableToken is StandardToken {\nBurn(burner, _value);\n}\n- event Burn(address indexed burner, uint indexed value);\n+ event Burn(address indexed burner, uint256 value);\n}\n",
        "date": "11.09.2017 12:08:23",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Fix event parameter type in BurnableToken contract"
    },
    {
        "msg": "remove unused 'day' test variable",
        "diff": "diff --git a/test/DayLimit.js b/test/DayLimit.js @@ -6,7 +6,6 @@ import {increaseTimeTo, duration} from './helpers/increaseTime'\nvar DayLimitMock = artifacts.require('./helpers/DayLimitMock.sol');\ncontract('DayLimit', function(accounts) {\n- const day = 60 * 60 * 24;\nlet dayLimit;\nlet initLimit = 10;\n",
        "date": "14.11.2017 12:50:43",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unnecessary variable declaration in DayLimit.js"
    },
    {
        "msg": "remove duplicated constructor call in FinalizableCrowdsaleImpl",
        "diff": "diff --git a/contracts/mocks/FinalizableCrowdsaleImpl.sol b/contracts/mocks/FinalizableCrowdsaleImpl.sol @@ -13,7 +13,6 @@ contract FinalizableCrowdsaleImpl is FinalizableCrowdsale {\naddress _wallet\n) public\nCrowdsale(_startTime, _endTime, _rate, _wallet)\n- FinalizableCrowdsale()\n{\n}\n",
        "date": "15.12.2017 18:03:19",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unnecessary call to FinalizableCrowdsale constructor"
    },
    {
        "msg": "remove obsolete comment - explicit check in place",
        "diff": "diff --git a/contracts/token/ERC20/BasicToken.sol b/contracts/token/ERC20/BasicToken.sol @@ -32,7 +32,6 @@ contract BasicToken is ERC20Basic {\nrequire(_to != address(0));\nrequire(_value <= balances[msg.sender]);\n- // SafeMath.sub will throw if there is not enough balance.\nbalances[msg.sender] = balances[msg.sender].sub(_value);\nbalances[_to] = balances[_to].add(_value);\nTransfer(msg.sender, _to, _value);\n",
        "date": "04.04.2018 08:53:55",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unnecessary comment and update balance transfer logic"
    },
    {
        "msg": "remove collaborators and audits from README",
        "diff": "diff --git a/README.md b/README.md @@ -31,7 +31,7 @@ npm install -E zeppelin-solidity\nAfter that, you'll get all the library's contracts in the `node_modules/zeppelin-solidity/contracts` folder. You can use the contracts in the library like so:\n-```js\n+```solidity\nimport 'zeppelin-solidity/contracts/ownership/Ownable.sol';\ncontract MyContract is Ownable {\n@@ -60,23 +60,5 @@ Interested in contributing to OpenZeppelin?\n- Contribution guidelines: https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/CONTRIBUTING.md\n- Wiki: https://github.com/OpenZeppelin/zeppelin-solidity/wiki\n-## Collaborating organizations and audits by OpenZeppelin\n-- [Golem](https://golem.network/)\n-- [Mediachain](http://www.mediachain.io/)\n-- [Truffle](http://truffleframework.com/)\n-- [Firstblood](https://firstblood.io/)\n-- [Rootstock](https://www.rsk.co/)\n-- [Consensys](https://consensys.net/)\n-- [DigixGlobal](https://www.dgx.io/)\n-- [Coinfund](https://coinfund.io/)\n-- [DemocracyEarth](https://democracy.earth/)\n-- [Signatura](https://signatura.co/)\n-- [Ether.camp](http://www.ether.camp/)\n-- [Aragon](https://aragon.one/)\n-- [Wings](https://wings.ai/)\n-\n-among others...\n-\n-\n## License\nCode released under the [MIT License](https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/LICENSE).\n",
        "date": "04.04.2018 21:17:27",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor code to use Solidity syntax and remove collaborating organizations and audits section from README."
    },
    {
        "msg": "remove suggestion to rebase",
        "diff": "diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md @@ -12,7 +12,6 @@ Smart contracts manage value and are highly vulnerable to errors and attacks. We\nAs a contributor, you are expected to fork this repository, work on your own fork and then submit pull requests. The pull requests will be reviewed and eventually merged into the main repo. See [\"Fork-a-Repo\"](https://help.github.com/articles/fork-a-repo/) for how this works.\n*IMPORTANT*\n-* Please use `rebase` instead of `merge` when updating your fork.\n* Please see [\"Git flow wiki entry\"](https://github.com/OpenZeppelin/zeppelin-solidity/wiki/Git-flow) for understanding how to use branches in this repository.\n## A typical workflow\n",
        "date": "18.04.2018 14:47:22",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Remove outdated instruction to use `rebase` instead of `merge` in CONTRIBUTING.md"
    },
    {
        "msg": "remove mentions of 'development' branch in Contribution Guidelines",
        "diff": "diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md @@ -21,12 +21,11 @@ As a contributor, you are expected to fork this repository, work on your own for\n```\ncd openzeppelin-solidity\ngit fetch upstream\n-git checkout development\n-git pull --rebase upstream development\n+git pull --rebase upstream master\n```\nNOTE: The directory `openzeppelin-solidity` represents your fork's local copy.\n-2) Branch out from `development` into `fix/some-bug-#123`:\n+2) Branch out from `master` into `fix/some-bug-#123`:\n(Postfixing #123 will associate your PR with the issue #123 and make everyone's life easier =D)\n```\ngit checkout -b fix/some-bug-#123\n",
        "date": "04.06.2018 20:34:04",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Update branch name from `development` to `master` in CONTRIBUTING.md"
    },
    {
        "msg": "remove redundant modifiers from safeTransferFrom",
        "diff": "diff --git a/contracts/token/ERC721/ERC721BasicToken.sol b/contracts/token/ERC721/ERC721BasicToken.sol @@ -32,24 +32,6 @@ contract ERC721BasicToken is SupportsInterfaceWithLookup, ERC721Basic {\n// Mapping from owner to operator approvals\nmapping (address => mapping (address => bool)) internal operatorApprovals;\n- /**\n- * @dev Guarantees msg.sender is owner of the given token\n- * @param _tokenId uint256 ID of the token to validate its ownership belongs to msg.sender\n- */\n- modifier onlyOwnerOf(uint256 _tokenId) {\n- require(ownerOf(_tokenId) == msg.sender);\n- _;\n- }\n-\n- /**\n- * @dev Checks msg.sender can transfer a token, by being owner, approved, or operator\n- * @param _tokenId uint256 ID of the token to validate\n- */\n- modifier canTransfer(uint256 _tokenId) {\n- require(isApprovedOrOwner(msg.sender, _tokenId));\n- _;\n- }\n-\nconstructor()\npublic\n{\n@@ -158,8 +140,8 @@ contract ERC721BasicToken is SupportsInterfaceWithLookup, ERC721Basic {\nuint256 _tokenId\n)\npublic\n- canTransfer(_tokenId)\n{\n+ require(isApprovedOrOwner(msg.sender, _tokenId));\nrequire(_from != address(0));\nrequire(_to != address(0));\n@@ -188,7 +170,6 @@ contract ERC721BasicToken is SupportsInterfaceWithLookup, ERC721Basic {\nuint256 _tokenId\n)\npublic\n- canTransfer(_tokenId)\n{\n// solium-disable-next-line arg-overflow\nsafeTransferFrom(_from, _to, _tokenId, \"\");\n@@ -213,7 +194,6 @@ contract ERC721BasicToken is SupportsInterfaceWithLookup, ERC721Basic {\nbytes _data\n)\npublic\n- canTransfer(_tokenId)\n{\ntransferFrom(_from, _to, _tokenId);\n// solium-disable-next-line arg-overflow\n",
        "date": "20.07.2018 12:18:24",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor transfer functions and modifiers in ERC721BasicToken contract"
    },
    {
        "msg": "remove extraneous quantity check, fixes",
        "diff": "diff --git a/contracts/token/ERC20/ERC20.sol b/contracts/token/ERC20/ERC20.sol @@ -197,8 +197,6 @@ contract ERC20 is IERC20 {\n* @param value The amount that will be burnt.\n*/\nfunction _burnFrom(address account, uint256 value) internal {\n- require(value <= _allowed[account][msg.sender]);\n-\n// Should https://github.com/OpenZeppelin/zeppelin-solidity/issues/707 be accepted,\n// this function needs to emit an event with the updated approval.\n_allowed[account][msg.sender] = _allowed[account][msg.sender].sub(\n",
        "date": "02.11.2018 06:16:35",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unnecessary require statement in _burnFrom function"
    },
    {
        "msg": "remove unused return variables.",
        "diff": "diff --git a/contracts/token/ERC20/ERC20Pausable.sol b/contracts/token/ERC20/ERC20Pausable.sol @@ -20,11 +20,11 @@ contract ERC20Pausable is ERC20, Pausable {\nreturn super.approve(spender, value);\n}\n- function increaseAllowance(address spender, uint addedValue) public whenNotPaused returns (bool success) {\n+ function increaseAllowance(address spender, uint addedValue) public whenNotPaused returns (bool) {\nreturn super.increaseAllowance(spender, addedValue);\n}\n- function decreaseAllowance(address spender, uint subtractedValue) public whenNotPaused returns (bool success) {\n+ function decreaseAllowance(address spender, uint subtractedValue) public whenNotPaused returns (bool) {\nreturn super.decreaseAllowance(spender, subtractedValue);\n}\n}\n",
        "date": "19.03.2019 11:51:46",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor ERC20Pausable allowance functions to remove unnecessary 'success' return value"
    },
    {
        "msg": "remove note from CircleCI config",
        "diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -79,7 +79,6 @@ jobs:\nSOLIDITY_COVERAGE: true\n# TODO(xinbenlv, #1839): run SOLC_NIGHTLY to be run but allow it to fail.\n- # TODO(xinbenlv, #1839): requires SLACK WEBHOOK to be setup by repo owner.\nworkflows:\nversion: 2\n",
        "date": "07.08.2019 16:32:46",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Enable SOLIDITY_COVERAGE and SOLC_NIGHTLY in CircleCI config"
    },
    {
        "msg": "remove release date that was wrong",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md # Changelog\n-## 2.4.0 (2019-08-15)\n+## 2.4.0 (unreleased)\n### New features:\n* `Address.toPayable`: added a helper to convert between address types without having to resort to low-level casting. ([#1773](https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1773))\n",
        "date": "16.08.2019 21:11:07",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Update CHANGELOG.md for version 2.4.0 with new `Address.toPayable` feature."
    },
    {
        "msg": "remove release date",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md # Changelog\n-## 2.4.0 (2019-08-16)\n+## 2.4.0 (unreleased)\n### New features:\n* `Address.toPayable`: added a helper to convert between address types without having to resort to low-level casting. ([#1773](https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1773))\n",
        "date": "16.08.2019 21:31:34",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Update CHANGELOG.md for version 2.4.0 with new `Address.toPayable` feature."
    },
    {
        "msg": "remove unnecessary linter ignore",
        "diff": "diff --git a/contracts/payment/PullPayment.sol b/contracts/payment/PullPayment.sol @@ -62,10 +62,6 @@ contract PullPayment {\n* @param amount The amount to transfer.\n*/\nfunction _asyncTransfer(address dest, uint256 amount) internal virtual {\n- // solhint-disable-previous-line no-unused-vars\n-\n- // TODO: remove the previous linter directive once\n- // https://github.com/protofire/solhint/issues/170 is fixed\n_escrow.deposit{ value: amount }(dest);\n}\n}\n",
        "date": "21.04.2020 15:04:04",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unused linter directive and update asyncTransfer function in PullPayment contract"
    },
    {
        "msg": "remove misleading SafeMath comment",
        "diff": "diff --git a/contracts/math/SafeMath.sol b/contracts/math/SafeMath.sol @@ -109,7 +109,6 @@ library SafeMath {\n* - The divisor cannot be zero.\n*/\nfunction div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n- // Solidity only automatically asserts when dividing by 0\nrequire(b > 0, errorMessage);\nuint256 c = a / b;\n// assert(a == b * c + a % b); // There is no case in which this doesn't hold\n",
        "date": "28.04.2020 12:46:32",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor SafeMath div function to remove unnecessary comment and improve readability"
    },
    {
        "msg": "remove TokenVesting reference from Timelock docs",
        "diff": "diff --git a/contracts/token/ERC20/TokenTimelock.sol b/contracts/token/ERC20/TokenTimelock.sol @@ -10,8 +10,6 @@ import \"./SafeERC20.sol\";\n*\n* Useful for simple vesting schedules like \"advisors get all of their tokens\n* after 1 year\".\n- *\n- * For a more complete vesting schedule, see {TokenVesting}.\n*/\ncontract TokenTimelock {\nusing SafeERC20 for IERC20;\n",
        "date": "02.06.2020 13:32:14",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unnecessary comment in TokenTimelock contract"
    },
    {
        "msg": "remove acronym from Readme",
        "diff": "diff --git a/README.md b/README.md @@ -32,8 +32,8 @@ pragma solidity ^0.6.0;\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n-contract MyNFT is ERC721 {\n- constructor() ERC721(\"MyNFT\", \"MNFT\") public {\n+contract MyCollectible is ERC721 {\n+ constructor() ERC721(\"MyCollectible\", \"MCO\") public {\n}\n}\n```\n",
        "date": "24.07.2020 12:52:40",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Rename NFT contract to MyCollectible and update symbol to MCO"
    },
    {
        "msg": "remove bad SafeCast test",
        "diff": "diff --git a/test/utils/SafeCast.test.js b/test/utils/SafeCast.test.js @@ -73,13 +73,6 @@ contract('SafeCast', async (accounts) => {\n'SafeCast: value must be positive',\n);\n});\n-\n- it(`reverts when casting UINT256_MAX (${maxUint256})`, async function () {\n- await expectRevert(\n- this.safeCast.toUint256(maxUint256),\n- 'SafeCast: value must be positive',\n- );\n- });\n});\nfunction testToInt (bits) {\n",
        "date": "11.11.2020 12:22:06",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Remove test case for casting UINT256_MAX in SafeCast.test.js"
    },
    {
        "msg": "remove date from changelog",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md # Changelog\n-## 3.3.0 (2020-11-17)\n+## 3.3.0\n* `Address`: added `functionStaticCall` and `functionDelegateCall`, similar to the existing `functionCall`. ([#2333](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2333))\n* `TimelockController`: added a contract to augment access control schemes with a delay. ([#2364](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2364))\n",
        "date": "17.11.2020 19:25:45",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Update CHANGELOG.md for version 3.3.0 with new features for Address and TimelockController."
    },
    {
        "msg": "remove Context from function index in docs site",
        "diff": "diff --git a/docs/contract.hbs b/docs/contract.hbs .Functions\n--\n{{#each inheritedItems}}\n+{{#if (or @first (ne contract.name \"Context\"))}}\n{{#unless @first}}\n[.contract-subindex-inherited]\n.{{contract.name}}\n* {xref-{{slug anchor~}} }[`++{{name}}({{args.names}})++`]\n{{/each}}\n+{{/if}}\n{{/each}}\n--\n{{/if}}\n",
        "date": "20.11.2020 13:12:15",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor contract.hbs to display inherited functions in a more organized manner"
    },
    {
        "msg": "remove inheritance that conflicts with upgradeable transpiler",
        "diff": "diff --git a/contracts/mocks/BadBeacon.sol b/contracts/mocks/BadBeacon.sol pragma solidity >=0.6.0 <0.8.0;\n-import \"../proxy/IBeacon.sol\";\n-\ncontract BadBeaconNoImpl {\n}\n-contract BadBeaconNotContract is IBeacon {\n- function implementation() external view override returns (address) {\n+contract BadBeaconNotContract {\n+ function implementation() external view returns (address) {\nreturn address(0x1);\n}\n}\n",
        "date": "30.11.2020 16:31:42",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Remove IBeacon interface implementation from BadBeacon.sol"
    },
    {
        "msg": "remove extra changelog entry",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md * `ERC721URIStorage`: add a new extension that implements the `_setTokenURI` behavior as it was available in 3.4.0. ([#2555](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2555))\n* `AccessControl`: added ERC165 interface detection. ([#2562](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2562))\n* `ERC1155`: make `uri` public so overloading function can call it using super. ([#2576](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2576))\n- * `ERC777`: make reception acquirement optional in `_mint`. ([#2552](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2552))\n### Bug fixes for beta releases\n",
        "date": "09.03.2021 15:32:54",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Add new extensions and interface detection, make URI public for overloading, and make reception optional in `_mint` for ERC777."
    },
    {
        "msg": "remove unecessary code from Context",
        "diff": "diff --git a/contracts/utils/Context.sol b/contracts/utils/Context.sol @@ -18,7 +18,6 @@ abstract contract Context {\n}\nfunction _msgData() internal view virtual returns (bytes calldata) {\n- this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\nreturn msg.data;\n}\n}\n",
        "date": "14.06.2021 23:44:00",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unnecessary code in _msgData function"
    },
    {
        "msg": "remove repeated code from ERC1967Upgrade",
        "diff": "diff --git a/contracts/proxy/ERC1967/ERC1967Upgrade.sol b/contracts/proxy/ERC1967/ERC1967Upgrade.sol @@ -65,8 +65,7 @@ abstract contract ERC1967Upgrade {\nbytes memory data,\nbool forceCall\n) internal {\n- _setImplementation(newImplementation);\n- emit Upgraded(newImplementation);\n+ _upgradeTo(newImplementation);\nif (data.length > 0 || forceCall) {\nAddress.functionDelegateCall(newImplementation, data);\n}\n@@ -103,8 +102,7 @@ abstract contract ERC1967Upgrade {\n// Check rollback was effective\nrequire(oldImplementation == _getImplementation(), \"ERC1967Upgrade: upgrade breaks further upgrades\");\n// Finally reset to the new implementation and log the upgrade\n- _setImplementation(newImplementation);\n- emit Upgraded(newImplementation);\n+ _upgradeTo(newImplementation);\n}\n}\n",
        "date": "14.06.2021 23:50:51",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor upgrade functionality to use _upgradeTo method"
    },
    {
        "msg": "remove ERC20FlashMint from drafts section in docs",
        "diff": "diff --git a/contracts/token/ERC20/README.adoc b/contracts/token/ERC20/README.adoc @@ -33,7 +33,6 @@ Finally, there are some utilities to interact with ERC20 contracts in various wa\nThe following related EIPs are in draft status.\n- {ERC20Permit}\n-- {ERC20FlashMint}\nNOTE: This core set of contracts is designed to be unopinionated, allowing developers to access the internal functions in ERC20 (such as <<ERC20-_mint-address-uint256-,`_mint`>>) and expose them as external functions in the way they prefer. On the other hand, xref:ROOT:erc20.adoc#Presets[ERC20 Presets] (such as {ERC20PresetMinterPauser}) are designed using opinionated patterns to provide developers with ready to use, deployable contracts.\n@@ -61,14 +60,14 @@ NOTE: This core set of contracts is designed to be unopinionated, allowing devel\n{{ERC20Wrapper}}\n+{{ERC20FlashMint}}\n+\n== Draft EIPs\nThe following EIPs are still in Draft status. Due to their nature as drafts, the details of these contracts may change and we cannot guarantee their xref:ROOT:releases-stability.adoc[stability]. Minor releases of OpenZeppelin Contracts may contain breaking changes for the contracts in this directory, which will be duly announced in the https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/CHANGELOG.md[changelog]. The EIPs included here are used by projects in production and this may make them less likely to change significantly.\n{{ERC20Permit}}\n-{{ERC20FlashMint}}\n-\n== Presets\nThese contracts are preconfigured combinations of the above features. They can be used through inheritance or as models to copy and paste their source code.\n",
        "date": "16.07.2021 19:44:40",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Remove {ERC20FlashMint} from draft EIPs and add it to ERC20 contracts."
    },
    {
        "msg": "remove mention of 2.0.0 audit in docs",
        "diff": "diff --git a/docs/modules/ROOT/pages/index.adoc b/docs/modules/ROOT/pages/index.adoc * Implementations of standards like xref:erc20.adoc[ERC20] and xref:erc721.adoc[ERC721].\n* Flexible xref:access-control.adoc[role-based permissioning] scheme.\n* Reusable xref:utilities.adoc[Solidity components] to build custom contracts and complex decentralized systems.\n- * https://github.com/OpenZeppelin/openzeppelin-contracts/tree/master/audit[Audited] by leading security firms (_last full audit on v2.0.0_).\n== Overview\n",
        "date": "02.08.2021 20:06:30",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Add implementations of ERC20 and ERC721 standards, role-based permissioning, and reusable Solidity components."
    },
    {
        "msg": "remove changelog entry for test changes",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md * `ERC2771Context`: use private variable from storage to store the forwarder address. Fixes issues where `_msgSender()` was not callable from constructors. ([#2754](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2754))\n* `EnumerableSet`: add `values()` functions that returns an array containing all values in a single call. ([#2768](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2768))\n* `Governor`: added a modular system of `Governor` contracts based on `GovernorAlpha` and `GovernorBravo`. ([#2672](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2672))\n- * Fix hierarchy inconsistencies between `contracts` and `test` introduced during the 4.0 repo refactor. ([#2814](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2814))\n## 4.2.0 (2021-06-30)\n",
        "date": "06.08.2021 10:14:00",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Add new features and improvements, including ERC2771Context, EnumerableSet, and Governor contracts. Fix hierarchy inconsistencies introduced during repo refactor."
    },
    {
        "msg": "remove invalid parameters in MerkleProof tests",
        "diff": "diff --git a/test/utils/cryptography/MerkleProof.test.js b/test/utils/cryptography/MerkleProof.test.js @@ -37,7 +37,7 @@ contract('MerkleProof', function (accounts) {\nconst badElements = ['d', 'e', 'f'];\nconst badMerkleTree = new MerkleTree(badElements);\n- const badProof = badMerkleTree.getHexProof(badElements[0], keccak256, { hashLeaves: true, sortPairs: true });\n+ const badProof = badMerkleTree.getHexProof(badElements[0]);\nexpect(await this.merkleProof.verify(badProof, correctRoot, correctLeaf)).to.equal(false);\n});\n",
        "date": "15.10.2021 02:02:49",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor MerkleProof.test.js to simplify getHexProof method usage"
    },
    {
        "msg": "remove bad date from changelog",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md # Changelog\n-## 4.4.1 (2021-12-10)\n+## 4.4.1\n* `Initializable`: change the existing `initializer` modifier and add a new `onlyInitializing` modifier to prevent reentrancy risk. ([#3006](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3006))\n",
        "date": "14.12.2021 13:14:21",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor `Initializable` contract to prevent reentrancy risk."
    },
    {
        "msg": "remove outdated documentation in ERC2981._setTokenRoyalty",
        "diff": "diff --git a/contracts/token/common/ERC2981.sol b/contracts/token/common/ERC2981.sol @@ -88,7 +88,6 @@ abstract contract ERC2981 is IERC2981, ERC165 {\n*\n* Requirements:\n*\n- * - `tokenId` must be already minted.\n* - `receiver` cannot be the zero address.\n* - `feeNumerator` cannot be greater than the fee denominator.\n*/\n",
        "date": "07.04.2022 20:34:04",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Remove requirement for `tokenId` to be already minted in ERC2981 contract"
    },
    {
        "msg": "remove `_setupRole` docs usage in favor of `_grantRole`",
        "diff": "diff --git a/docs/modules/ROOT/pages/access-control.adoc b/docs/modules/ROOT/pages/access-control.adoc @@ -73,7 +73,7 @@ contract MyToken is ERC20, AccessControl {\nconstructor(address minter) ERC20(\"MyToken\", \"TKN\") {\n// Grant the minter role to a specified account\n- _setupRole(MINTER_ROLE, minter);\n+ _grantRole(MINTER_ROLE, minter);\n}\nfunction mint(address to, uint256 amount) public {\n@@ -104,8 +104,8 @@ contract MyToken is ERC20, AccessControl {\nbytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\");\nconstructor(address minter, address burner) ERC20(\"MyToken\", \"TKN\") {\n- _setupRole(MINTER_ROLE, minter);\n- _setupRole(BURNER_ROLE, burner);\n+ _grantRole(MINTER_ROLE, minter);\n+ _grantRole(BURNER_ROLE, burner);\n}\nfunction mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {\n@@ -123,7 +123,7 @@ So clean! By splitting concerns this way, more granular levels of permission may\n[[granting-and-revoking]]\n=== Granting and Revoking Roles\n-The ERC20 token example above uses `_setupRole`, an `internal` function that is useful when programmatically assigning roles (such as during construction). But what if we later want to grant the 'minter' role to additional accounts?\n+The ERC20 token example above uses `_grantRole`, an `internal` function that is useful when programmatically assigning roles (such as during construction). But what if we later want to grant the 'minter' role to additional accounts?\nBy default, **accounts with a role cannot grant it or revoke it from other accounts**: all having a role does is making the `hasRole` check pass. To grant and revoke roles dynamically, you will need help from the _role's admin_.\n@@ -149,7 +149,7 @@ contract MyToken is ERC20, AccessControl {\nconstructor() ERC20(\"MyToken\", \"TKN\") {\n// Grant the contract deployer the default admin role: it will be able\n// to grant and revoke any roles\n- _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\n+ _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n}\nfunction mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {\n",
        "date": "17.06.2022 13:27:00",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor role assignment functions to use _grantRole instead of _setupRole"
    },
    {
        "msg": "remove redundant changelog entry",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md * `SafeCast`: optimize downcasting of signed integers. ([#3565](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3565))\n* `VestingWallet`: remove unused library `Math.sol`. ([#3605](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3605))\n* `ECDSA`: Remove redundant check on the `v` value. ([#3591](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3591))\n- * `EIP712`: `utils/cryptography/EIP712.sol`\n### Deprecations\n",
        "date": "18.08.2022 22:54:43",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Optimize downcasting of signed integers, remove unused Math.sol library, and remove redundant check on v value in ECDSA."
    },
    {
        "msg": "remove unnecessary CI cache",
        "diff": "diff --git a/.github/actions/setup/action.yml b/.github/actions/setup/action.yml @@ -6,14 +6,13 @@ runs:\n- uses: actions/setup-node@v3\nwith:\nnode-version: 14.x\n- cache: npm\n- uses: actions/cache@v3\nid: cache\nwith:\npath: '**/node_modules'\nkey: npm-v3-${{ hashFiles('**/package-lock.json') }}\n- name: Install dependencies\n- run: npm ci --prefer-offline\n+ run: npm ci\nshell: bash\nif: steps.cache.outputs.cache-hit != 'true'\nenv:\n",
        "date": "12.01.2023 17:43:43",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor setup action to remove caching of node_modules and update npm ci command"
    },
    {
        "msg": "remove outdated note about virtual view functions",
        "diff": "diff --git a/docs/modules/ROOT/pages/extending-contracts.adoc b/docs/modules/ROOT/pages/extending-contracts.adoc @@ -66,8 +66,6 @@ contract ModifiedAccessControl is AccessControl {\nThe `super.revokeRole` statement at the end will invoke ``AccessControl``'s original version of `revokeRole`, the same code that would've run if there were no overrides in place.\n-NOTE: As of v3.0.0, `view` functions are not `virtual` in OpenZeppelin, and therefore cannot be overridden. We're considering https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2154[lifting this restriction] in an upcoming release. Let us know if this is something you care about!\n-\n[[using-hooks]]\n== Using Hooks\n",
        "date": "30.01.2023 21:00:56",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "remove",
        "chatgpt_zeroshot": "Remove note about `view` functions not being `virtual` in OpenZeppelin as of v3.0.0"
    },
    {
        "msg": "remove bluebird from bundle",
        "diff": "diff --git a/src/helpers/withResolver.js b/src/helpers/withResolver.js import React, { Component } from 'react'\nimport { cancelAllPromises, waitForDataAndSetState } from './components'\n-import Promise from 'bluebird'\nimport Errors from '../components/Errors/Errors'\nimport ContentLoader from '../components/Loader/ContentLoader'\n@@ -14,9 +13,9 @@ export default function withResolver(WrappedComponent, dependencies) {\n}\ncomponentDidMount() {\n- const dependenciesPromise = Promise.map(Object.keys(dependencies), dependencyName => {\n+ const dependenciesPromise = Promise.all(Object.keys(dependencies).map(dependencyName => {\nreturn waitForDataAndSetState(dependencies[dependencyName], this, dependencyName)\n- })\n+ }))\ndependenciesPromise.then(() => this.setState({ dependenciesReady: true }))\n",
        "date": "29.03.2017 14:14:50",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor dependenciesPromise to use Promise.all instead of Promise.map"
    },
    {
        "msg": "remove unused project.config setting",
        "diff": "diff --git a/project.config.js b/project.config.js @@ -48,9 +48,6 @@ module.exports = {\nINSPIRE_DATAGOUV_API_KEY: null\n},\n- /** Whether to enable verbose logging */\n- verbose: false,\n-\n/** The list of modules to bundle separately from the core application code */\nvendors: [\n'lodash',\n",
        "date": "12.07.2017 10:56:41",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Remove verbose logging option from project configuration"
    },
    {
        "msg": "remove development config and keep just the port Also override NODE_ENV when not defined in dev mode.",
        "diff": "diff --git a/project.config.js b/project.config.js const env = process.env.NODE_ENV || 'development'\n-\n-const development = {\n- host: 'localhost',\n- port: process.env.PORT || 3000\n-}\n+const port = process.env.PORT || 3000\nmodule.exports = {\n- /** Development server configuration */\n- development,\n+ /** Development server port */\n+ port,\n/** The environment to use when building the project */\nenv,\n@@ -42,7 +38,7 @@ module.exports = {\n/** A hash map of environment variables to retrieve and their default values */\nenvironment: {\n- PUBLIC_URL: `http://${development.host}:${development.port}`,\n+ PUBLIC_URL: `http://localhost:${port}`,\nINSPIRE_DATAGOUV_API_URL: 'https://next.data.gouv.fr/api',\nINSPIRE_DATAGOUV_API_KEY: null,\n",
        "date": "21.07.2017 14:20:27",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor development server configuration to only include port setting"
    },
    {
        "msg": "remove hardcoded API url in search action",
        "diff": "diff --git a/src/routes/Search/modules/actions.js b/src/routes/Search/modules/actions.js @@ -11,6 +11,8 @@ import {\nSEARCH_EXECUTE_FAILURE\n} from './constants'\n+const { INSPIRE_API_URL } = process.env\n+\nexport const execute = (query, limit = 20) => dispatch => {\ndispatch({\ntype: SEARCH_EXECUTE_PENDING\n@@ -19,7 +21,7 @@ export const execute = (query, limit = 20) => dispatch => {\nconst filters = flattenFilters(query.filters)\nreturn _get(\n- `https://inspire.data.gouv.fr/api/geogw/records?${qs.stringify({\n+ `${INSPIRE_API_URL}/records?${qs.stringify({\n...filters,\nq: query.textInput,\noffset: (query.page - 1) * limit,\n",
        "date": "18.07.2017 17:02:00",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Add INSPIRE_API_URL as an environment variable in search actions."
    },
    {
        "msg": "remove useless reducer injection",
        "diff": "diff --git a/src/routes/Search/index.js b/src/routes/Search/index.js @@ -18,11 +18,6 @@ export default store => ({\nasync onEnter({ location }) {\nconst search = await import(/* webpackChunkName: 'search' */ './modules/search')\n- injectReducer(store, {\n- key: 'search',\n- reducer: search.reducer\n- })\n-\nstore.dispatch(search.actions.execute(\nsearch.query.parse(location.query)\n))\n",
        "date": "19.07.2017 15:05:46",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Remove redundant code for injecting reducer in Search route."
    },
    {
        "msg": "remove useless curly braces",
        "diff": "diff --git a/src/routes/Dataset/components/DatasetView/DatasetView.js b/src/routes/Dataset/components/DatasetView/DatasetView.js @@ -99,7 +99,7 @@ class DatasetView extends React.PureComponent {\n<DatasetDataGouvPublication dataset={dataset} publication={publication} />\n</DatasetBlock>\n- <DatasetBlock title={'Contacts'}>\n+ <DatasetBlock title='Contacts'>\n<DatasetContactList contacts={dataset.metadata.contacts} />\n</DatasetBlock>\n</div>\n",
        "date": "27.07.2017 20:32:58",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Fixing quotes in DatasetView component for consistency"
    },
    {
        "msg": "remove braces for simple return",
        "diff": "diff --git a/src/components/Warning/Warning.js b/src/components/Warning/Warning.js @@ -28,9 +28,7 @@ class Warning extends React.PureComponent {\nrender() {\nconst { displayed } = this.state\n- if (!displayed) {\n- return null\n- }\n+ if (!displayed) return\nconst { error, title, children } = this.props\nconst color = error ? styles.errorStyle : styles.warning\n",
        "date": "01.08.2017 03:06:26",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor Warning component to simplify conditional rendering."
    },
    {
        "msg": "remove double slash and styles destructuring",
        "diff": "diff --git a/src/routes/Dataset/components/DatasetChecks/CheckLicense.js b/src/routes/Dataset/components/DatasetChecks/CheckLicense.js @@ -3,7 +3,7 @@ import PropTypes from 'prop-types'\nimport Check from './Check'\n-import { ACCEPTED_LICENSES } from 'common//helpers/dataGouvChecks'\n+import { ACCEPTED_LICENSES } from 'common/helpers/dataGouvChecks'\nclass CheckLicense extends React.PureComponent {\ncheck() {\n",
        "date": "02.08.2017 17:02:45",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Fix import path for ACCEPTED_LICENSES in CheckLicense component"
    },
    {
        "msg": "remove document.title to set page title Use react-document-title.",
        "diff": "diff --git a/src/routes/Home/components/HomePage/HomePage.js b/src/routes/Home/components/HomePage/HomePage.js import React from 'react'\nimport PropTypes from 'prop-types'\n-\n+import DocumentTitle from 'react-document-title'\nimport { browserHistory, Link } from 'react-router'\nimport { translate } from 'react-i18next'\n@@ -18,12 +18,6 @@ class HomePage extends React.PureComponent {\nt: PropTypes.func.isRequired\n}\n- componentDidMount() {\n- const { t } = this.props\n-\n- document.title = t('HomePage.home')\n- }\n-\nsearch = value => {\nbrowserHistory.push({\npathname: '/search',\n@@ -38,6 +32,7 @@ class HomePage extends React.PureComponent {\nconst { catalogs, t } = this.props\nreturn (\n+ <DocumentTitle title={t('HomePage.home')}>\n<div>\n<div className={styles.masthead}>\n<h1>\n@@ -70,6 +65,7 @@ class HomePage extends React.PureComponent {\n</div>\n</div>\n</div>\n+ </DocumentTitle>\n)\n}\n}\n",
        "date": "03.08.2017 16:39:40",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Add DocumentTitle component to HomePage.js"
    },
    {
        "msg": "remove useless inherit and ignore gh-pages branch",
        "diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -12,6 +12,8 @@ defaults:\nfilters: &default_filters\ntags:\nonly: '/v[0-9]+(\\.[0-9]+)*/'\n+ branches:\n+ ignore: gh-pages\nattach_workspace: &attach_workspace\nattach_workspace:\n@@ -122,26 +124,22 @@ workflows:\nbuild_test_deploy:\njobs:\n- install:\n- filters:\n- <<: *default_filters\n+ filters: *default_filters\n- lint:\nrequires:\n- install\n- filters:\n- <<: *default_filters\n+ filters: *default_filters\n- test:\nrequires:\n- install\n- filters:\n- <<: *default_filters\n+ filters: *default_filters\n- build:\nrequires:\n- install\n- filters:\n- <<: *default_filters\n+ filters: *default_filters\n- deploy:\nrequires:\n",
        "date": "04.08.2017 18:48:32",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor CircleCI config to ignore gh-pages branch in filters"
    },
    {
        "msg": "remove component children from <options /> Only text is allowed.",
        "diff": "diff --git a/src/components/LanguageSelection/LanguageSelection.scss b/src/components/LanguageSelection/LanguageSelection.scss width: 100px;\nheight: 30px;\n}\n-\n-.emoji {\n- margin-left: 1em;\n-}\n",
        "date": "22.08.2017 16:22:42",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Remove emoji styling in LanguageSelection component"
    },
    {
        "msg": "remove useless media queries on container",
        "diff": "diff --git a/src/components/Container/Container.scss b/src/components/Container/Container.scss width: 100%;\nmargin: 0 auto;\npadding: 0 20px;\n-\n- @media (min-width: 400px) {\n- width: 85%;\n- padding: 0;\n- }\n-\n- @media (min-width: 550px) {\n- width: 80%;\n- }\n}\n",
        "date": "20.10.2017 11:47:21",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor Container component styles for responsiveness."
    },
    {
        "msg": "remove align center from counter labels",
        "diff": "diff --git a/components/counter.js b/components/counter.js @@ -15,7 +15,6 @@ const Counter = ({ value, label, unit, size = '', color = '', title = '' }) => (\n.value {\nfont-size: 2.2rem;\nheight: 1.8rem;\n- text-align: left;\n}\n.unit {\n@@ -36,10 +35,6 @@ const Counter = ({ value, label, unit, size = '', color = '', title = '' }) => (\ncolor: ${colors.red};\n}\n- .label {\n- text-align: center;\n- }\n-\n// Sizes\n.small {\nfont-size: 0.8rem;\n",
        "date": "06.11.2017 12:12:17",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Remove text-align styling from counter value and label."
    },
    {
        "msg": "remove useless language prop from language-selection",
        "diff": "diff --git a/components/page/header/index.js b/components/page/header/index.js @@ -8,7 +8,7 @@ import LanguageSelection from './language-selection'\nimport { PUBLIC_URL, PUBLICATION_BASE_URL } from '@env'\n-const Header = ({ router, t, i18n }) => {\n+const Header = ({ router, t }) => {\nconst loginRedirect = `${PUBLIC_URL}/publication`\nconst isPublication = router.pathname.startsWith('/publication')\nconst logoutRedirect = isPublication ? PUBLIC_URL : PUBLIC_URL + router.pathname\n@@ -40,7 +40,7 @@ const Header = ({ router, t, i18n }) => {\n)}\n</li>\n<li>\n- <LanguageSelection language={i18n.language} />\n+ <LanguageSelection />\n</li>\n{user && (\n<li>\n@@ -112,9 +112,6 @@ Header.propTypes = {\npathname: PropTypes.string.isRequired\n}).isRequired,\n- i18n: PropTypes.shape({\n- language: PropTypes.string.isRequired\n- }).isRequired,\nt: PropTypes.func.isRequired\n}\n",
        "date": "07.11.2017 17:42:07",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Remove i18n prop from Header componentPropTypes and LanguageSelection component."
    },
    {
        "msg": "remove opacity",
        "diff": "diff --git a/components/catalog-preview.js b/components/catalog-preview.js @@ -87,7 +87,6 @@ export const CatalogPreview = ({ catalog, t }) => {\nright: 12px;\ntop: 9px;\nfont-size: 2em;\n- opacity: 0.7;\n}\n.title {\n",
        "date": "07.11.2017 19:55:07",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Remove opacity from catalog preview title styling"
    },
    {
        "msg": "remove useless locales from moment",
        "diff": "diff --git a/next.config.js b/next.config.js +const webpack = require('webpack')\nconst { join } = require('path')\nconst { BundleAnalyzerPlugin } = require('webpack-bundle-analyzer')\nmodule.exports = {\nwebpack: function (config, { dev }) {\n+ config.plugins.push(\n+ new webpack.ContextReplacementPlugin(/moment[/\\\\]locale$/, /fr/)\n+ )\n+\nif (!dev) {\nconfig.plugins.push(new BundleAnalyzerPlugin({\nanalyzerMode: 'static',\n",
        "date": "08.11.2017 13:38:10",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Add webpack plugin to only include French locale in moment.js"
    },
    {
        "msg": "remove p when switching filters",
        "diff": "diff --git a/components/facet.js b/components/facet.js @@ -52,6 +52,8 @@ class Facet extends React.Component {\n...router.query\n}\n+ delete query.p\n+\nconst match = query[filter.name]\nif (Array.isArray(match)) {\nquery[filter.name].push(filter.value)\n@@ -81,6 +83,8 @@ class Facet extends React.Component {\n...router.query\n}\n+ delete query.p\n+\nconst match = query[filter.name]\nif (Array.isArray(match)) {\nquery[filter.name] = match.filter(v => v !== filter.value)\n",
        "date": "10.11.2017 14:12:13",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unnecessary query parameter \"p\" from facet component"
    },
    {
        "msg": "remove paging when there are no results",
        "diff": "diff --git a/pages/search.js b/pages/search.js @@ -128,7 +128,7 @@ class SearchPage extends React.Component {\n<Count count={count} />\n<Results results={results} />\n- <Paging count={count} query={query} />\n+ {count > 0 && <Paging count={count} query={query} />}\n</div>\n<Facets groups={groups} open={showFacets} onClose={this.closeFacets} />\n",
        "date": "10.11.2017 14:33:10",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Add conditional rendering for Paging component based on count value"
    },
    {
        "msg": "remove useless return",
        "diff": "diff --git a/components/catalog/harvests/index.js b/components/catalog/harvests/index.js @@ -4,8 +4,7 @@ import { translate } from 'react-i18next'\nimport Table from './table'\n-const Harvests = ({ catalog, harvests, t }) => {\n- return (\n+const Harvests = ({ catalog, harvests, t }) => (\n<section>\n<div>\n<Table catalog={catalog} harvests={harvests} />\n@@ -23,7 +22,6 @@ const Harvests = ({ catalog, harvests, t }) => {\n`}</style>\n</section>\n)\n-}\nHarvests.propTypes = {\ncatalog: PropTypes.shape({\n",
        "date": "14.11.2017 15:23:41",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor Harvests component to remove unnecessary return statement"
    },
    {
        "msg": "remove fixed height on stat blocks in mobile catalog",
        "diff": "diff --git a/components/catalog/statistics.js b/components/catalog/statistics.js @@ -104,6 +104,10 @@ const Statistics = ({ metrics, t }) => {\nwidth: calc(100% - 1.2em);\n}\n+ @media (max-width: 551px) {\n+ height: auto;\n+ }\n+\ndiv {\ndisplay: flex;\n}\n",
        "date": "14.11.2017 22:18:47",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Add responsive styling for smaller screens in Statistics component"
    },
    {
        "msg": "remove uneven box padding",
        "diff": "diff --git a/components/box.js b/components/box.js @@ -11,7 +11,7 @@ const Box = ({ children }) => (\ndiv {\nbackground-color: $white;\nbox-shadow: 1px 1px 5px rgba(0, 0, 0, 0.3);\n- padding: 1.6em 2em 3em;\n+ padding: 1.6em 2em;\nborder-radius: 2px;\n@media (max-width: 551px) {\n",
        "date": "17.11.2017 13:04:38",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor padding in Box component"
    },
    {
        "msg": "remove duplicates from thumbnails",
        "diff": "diff --git a/components/dataset/thumbnails.js b/components/dataset/thumbnails.js import React from 'react'\nimport PropTypes from 'prop-types'\n+import { uniqBy } from 'lodash'\nimport { GEODATA_API_URL } from '@env'\n@@ -30,14 +31,16 @@ class Thumbnails extends React.Component {\nconst { recordId, thumbnails } = this.props\nconst { selected } = this.state\n+ const thumbs = uniqBy(thumbnails, 'originalUrlHash')\n+\nreturn (\n<div>\n<div className='thumbnail'>\n<img src={`${GEODATA_API_URL}/records/${recordId}/thumbnails/${selected.originalUrlHash}`} alt='' />\n</div>\n- {thumbnails.length > 1 && (\n+ {thumbs.length > 1 && (\n<div className='list'>\n- {thumbnails.map(thumbnail => (\n+ {thumbs.map(thumbnail => (\n<img\nkey={thumbnail.originalUrlHash}\nsrc={`${GEODATA_API_URL}/records/${recordId}/thumbnails/${thumbnail.originalUrlHash}`}\n",
        "date": "22.11.2017 21:38:26",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor thumbnails component to remove duplicate images and improve performance"
    },
    {
        "msg": "remove right column when empty",
        "diff": "diff --git a/pages/dataset.js b/pages/dataset.js @@ -83,6 +83,8 @@ class DatasetPage extends React.Component {\nconst { dataset: { recordId, metadata, dataset, organizations }, datagouvPublication, t } = this.props\nconst { datagouvDatasetPromise } = this.state\n+ const hasThumbnails = metadata.thumbnails && metadata.thumbnails.length > 0\n+\nreturn (\n<Page>\n<Meta title={metadata.title} />\n@@ -120,8 +122,9 @@ class DatasetPage extends React.Component {\n<Downloads distributions={dataset.distributions} />\n</Box>\n</div>\n+ {(hasThumbnails || metadata.spatialExtent) && (\n<div className='right'>\n- {metadata.thumbnails && metadata.thumbnails.length > 0 && (\n+ {hasThumbnails && (\n<Box title={t('blocks.thumbnails')}>\n<Thumbnails recordId={recordId} thumbnails={metadata.thumbnails} />\n</Box>\n@@ -136,6 +139,7 @@ class DatasetPage extends React.Component {\n</Box>\n)}\n</div>\n+ )}\n</div>\n</Container>\n</Content>\n",
        "date": "24.11.2017 20:08:06",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Add conditional rendering for thumbnails and spatial extent in DatasetPage component"
    },
    {
        "msg": "remove duplicates from contacts",
        "diff": "diff --git a/components/contact.js b/components/contact.js @@ -18,7 +18,7 @@ const Contact = ({ contact, t }) => (\n</div>\n{contact.address && (\n- <div>\n+ <div className='address'>\n{contact.address[0]} {contact.town} - {contact.postalCode} {contact.country}\n</div>\n)}\n@@ -50,7 +50,10 @@ const Contact = ({ contact, t }) => (\n.name {\nfont-weight: bold;\n- margin-bottom: 0.6em;\n+ }\n+\n+ .address {\n+ margin-top: 0.5em;\n}\n.contact {\n",
        "date": "27.11.2017 16:45:11",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Style changes in Contact component: added margin-top to address class and removed margin-bottom from name class."
    },
    {
        "msg": "remove no-scroll when unmounting search page",
        "diff": "diff --git a/pages/search.js b/pages/search.js @@ -59,6 +59,10 @@ class SearchPage extends React.Component {\nshowFacets: false\n}\n+ componentWillUnmount() {\n+ document.body.classList.remove('no-xs-scroll')\n+ }\n+\ncomponentWillReceiveProps() {\nthis.setState(state => ({\nshowFacets: false\n",
        "date": "29.11.2017 13:58:17",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Remove 'no-xs-scroll' class from body on component unmount"
    },
    {
        "msg": "remove no-scroll class",
        "diff": "diff --git a/components/page/index.js b/components/page/index.js @@ -38,17 +38,11 @@ export const Page = ({ children }) => (\n}\n}\n- body {\n- &.no-scroll {\n- overflow: hidden;\n- }\n-\n- &.no-xs-scroll {\n+ body.no-xs-scroll {\n@media (max-width: 960px) {\noverflow: hidden;\n}\n}\n- }\n#nprogress {\npointer-events: none;\n",
        "date": "02.12.2017 23:42:59",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unnecessary body styles and update media query for xs screens."
    },
    {
        "msg": "remove useless alt attribute",
        "diff": "diff --git a/components/page/header/index.js b/components/page/header/index.js @@ -69,7 +69,7 @@ class Header extends React.Component {\n) : (\n<Link href='/publication'>\n<a>\n- <img alt='avatar' className='avatar' src={user.avatar_thumbnail} />\n+ <img alt='' className='avatar' src={user.avatar_thumbnail} />\n{user.first_name} {user.last_name}\n</a>\n</Link>\n",
        "date": "03.12.2017 23:03:07",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Update avatar alt text in header component"
    },
    {
        "msg": "remove resize on textarea",
        "diff": "diff --git a/components/dataset/discussions/form.js b/components/dataset/discussions/form.js @@ -132,6 +132,7 @@ class DiscussionForm extends React.Component {\nwidth: 100%;\nborder: 1px solid $lightgrey;\nheight: 53px;\n+ resize: none;\n}\nbutton {\n",
        "date": "04.12.2017 23:17:55",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Add 'resize: none' to discussion form textarea styling"
    },
    {
        "msg": "remove useless clearSession method",
        "diff": "diff --git a/components/page/header/index.js b/components/page/header/index.js @@ -34,12 +34,6 @@ class Header extends React.Component {\nt: PropTypes.func.isRequired\n}\n- clearSession = e => {\n- const { session } = this.props\n-\n- session.clear()\n- }\n-\nrender() {\nconst { router, session, t, i18n: { language } } = this.props\n@@ -82,7 +76,7 @@ class Header extends React.Component {\n</li>\n{session && session.user && (\n<li>\n- <a href={logoutUrl} onClick={this.clearSession}>\n+ <a href={logoutUrl} onClick={session.clear}>\n<span>{t('header.logout')}</span>\n</a>\n</li>\n",
        "date": "06.12.2017 14:18:08",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor clearSession method in Header component"
    },
    {
        "msg": "remove useless stuff from Piwik",
        "diff": "diff --git a/components/piwik.js b/components/piwik.js import React from 'react'\nimport PropTypes from 'prop-types'\nimport Head from 'next/head'\n-import { withRouter } from 'next/router'\nimport { PIWIK_URL, PIWIK_SITE_ID } from '@env'\n@@ -14,10 +13,8 @@ class Piwik extends React.Component {\nconst { title } = this.props\nif (window.Piwik) {\n- const tracker = window.Piwik.getAsyncTracker()\n+ const tracker = window.Piwik.getTracker(`${PIWIK_URL}/piwik.php`, PIWIK_SITE_ID)\n- tracker.setTrackerUrl(`${PIWIK_URL}/piwik.php`)\n- tracker.setSiteId(PIWIK_SITE_ID)\ntracker.trackPageView(title)\n}\n}\n@@ -35,4 +32,4 @@ class Piwik extends React.Component {\n}\n}\n-export default withRouter(Piwik)\n+export default Piwik\n",
        "date": "07.12.2017 03:07:34",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor Piwik component to use getTracker method instead of getAsyncTracker"
    },
    {
        "msg": "remove top margin from dataset result",
        "diff": "diff --git a/components/search/result/index.js b/components/search/result/index.js @@ -74,7 +74,7 @@ const Result = ({ result: { recordId, metadata }, i18n, t }) => (\nh3 {\nflex-grow: 1;\n- margin-bottom: 0.8rem;\n+ margin: 0 0 0.8rem;\n}\n}\n",
        "date": "09.12.2017 15:19:53",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor margin-bottom style in search result component"
    },
    {
        "msg": "remove useless flyto option",
        "diff": "diff --git a/components/centered-map/index.js b/components/centered-map/index.js @@ -85,7 +85,6 @@ class CenteredMap extends React.Component {\n<ErrorWrapper message={t('errors.map')}>\n<Map\nstyle={mapStyle} /* eslint-disable-line react/style-prop-object */\n- flyToOptions={{speed: 0.8}}\ncontainerStyle={{\nheight: '100%',\nwidth: '100%'\n",
        "date": "25.04.2018 11:10:42",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Remove flyToOptions speed in CenteredMap component"
    },
    {
        "msg": "remove useless head from table component",
        "diff": "diff --git a/components/dataset/downloads/preview-table.js b/components/dataset/downloads/preview-table.js import React from 'react'\nimport PropTypes from 'prop-types'\n-import Head from 'next/head'\nimport Table from 'react-table'\nimport {translate} from 'react-i18next'\n@@ -40,11 +39,9 @@ const PreviewTable = ({data, t}) => {\nofText={t('preview.paging.of')}\n/>\n- <Head>\n{/* eslint-disable react/no-danger */}\n<style dangerouslySetInnerHTML={{__html: tableStyle}} />\n{/* eslint-enable react/no-danger */}\n- </Head>\n<style jsx>{`\ndiv {\ndisplay: flex;\n",
        "date": "30.04.2018 18:22:33",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unnecessary Head component and inline styling in PreviewTable component"
    },
    {
        "msg": "remove useless state props",
        "diff": "diff --git a/pages/embed/preview.js b/pages/embed/preview.js @@ -52,10 +52,7 @@ class PreviewPage extends React.Component {\ndata: null,\nerror: null,\nloading: {\n- state: 'initializing',\n- download: {\n- bytes: 0\n- }\n+ state: 'initializing'\n}\n}\n",
        "date": "01.05.2018 16:20:34",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unnecessary download bytes initialization in PreviewPage component"
    },
    {
        "msg": "remove withFetch from dataset/producer component",
        "diff": "diff --git a/components/dataset/producer.js b/components/dataset/producer.js import React from 'react'\nimport PropTypes from 'prop-types'\n-import withFetch from '../hoc/with-fetch'\n-\n-const Producer = ({name, logo_thumbnail: logo}) => (\n+const Producer = ({producer}) => {\n+ return (\n<div>\n<div className='wrapper'>\n- <img src={logo} alt='' />\n+ <img src={producer.logo_thumbnail} alt='' />\n</div>\n- <h4>{name}</h4>\n+ <h4>{producer.name}</h4>\n<style jsx>{`\n.wrapper {\n@@ -33,10 +32,13 @@ const Producer = ({name, logo_thumbnail: logo}) => (\n`}</style>\n</div>\n)\n+}\nProducer.propTypes = {\n+ producer: PropTypes.shape({\nname: PropTypes.string.isRequired,\nlogo_thumbnail: PropTypes.string.isRequired\n+ }).isRequired\n}\n-export default withFetch(data => data.organization)(Producer)\n+export default Producer\n",
        "date": "21.11.2018 11:24:37",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor Producer component to use destructured props and PropTypes for better readability and maintainability."
    },
    {
        "msg": "remove publication block in services",
        "diff": "diff --git a/pages/dataset.js b/pages/dataset.js @@ -40,6 +40,7 @@ class DatasetPage extends React.Component {\nmetadata: PropTypes.shape({\nid: PropTypes.string.isRequired,\ntitle: PropTypes.string.isRequired,\n+ type: PropTypes.string.isRequired,\nthumbnails: PropTypes.arrayOf(PropTypes.shape({\noriginalUrlHash: PropTypes.string.isRequired\n})),\n@@ -139,6 +140,7 @@ class DatasetPage extends React.Component {\n</Box>\n)}\n+ {metadata.type !== 'service' && (\n<Box title={t('blocks.datagouv')}>\n<Datagouv\nlicense={metadata.license}\n@@ -147,6 +149,7 @@ class DatasetPage extends React.Component {\npublication={datagouvPublication}\n/>\n</Box>\n+ )}\n{contacts.length > 0 && (\n<Box title={t('blocks.contacts')}>\n",
        "date": "06.12.2018 13:14:24",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Add type validation and conditionally render Datagouv component based on metadata type"
    },
    {
        "msg": "remove unused links proptype",
        "diff": "diff --git a/pages/dataset.js b/pages/dataset.js @@ -46,7 +46,6 @@ class DatasetPage extends React.Component {\n})),\nspatialExtent: PropTypes.object,\ncontacts: PropTypes.array.isRequired,\n- links: PropTypes.array.isRequired,\ncredits: PropTypes.string\n}).isRequired,\n",
        "date": "06.12.2018 13:17:45",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Remove links prop from DatasetPage componentPropTypes"
    },
    {
        "msg": "remove cid from catalog page search",
        "diff": "diff --git a/components/search-input.js b/components/search-input.js @@ -55,9 +55,11 @@ class SearchInput extends React.PureComponent {\nconst {router, i18n, defaultQuery} = this.props\nconst {value} = this.state\n+ const currentQuery = router.pathname === '/search' ? router.query : {}\n+\nconst query = {\n...defaultQuery,\n- ...router.query,\n+ ...currentQuery,\nq: value\n}\n",
        "date": "14.01.2019 18:08:32",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor search input component to use current query object from router when pathname is '/search'"
    },
    {
        "msg": "remove deprecated lifecycle method",
        "diff": "diff --git a/pages/search.js b/pages/search.js @@ -40,7 +40,11 @@ class SearchPage extends React.Component {\n}),\nrouter: PropTypes.shape({\n- query: PropTypes.object.isRequired\n+ query: PropTypes.object.isRequired,\n+ events: PropTypes.shape({\n+ on: PropTypes.func.isRequired,\n+ off: PropTypes.func.isRequired\n+ }).isRequired\n}).isRequired,\nt: PropTypes.func.isRequired,\n@@ -72,7 +76,17 @@ class SearchPage extends React.Component {\nshowFacets: false\n}\n- UNSAFE_componentWillReceiveProps() {\n+ componentDidMount() {\n+ const {router} = this.props\n+ router.events.on('routeChangeStart', this.onRouteChangeStart)\n+ }\n+\n+ componentWillUnmount() {\n+ const {router} = this.props\n+ router.events.off('routeChangeStart', this.onRouteChangeStart)\n+ }\n+\n+ onRouteChangeStart = () => {\nthis.setState({\nshowFacets: false\n})\n",
        "date": "17.01.2019 16:33:10",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Add event listeners for route changes in SearchPage component"
    },
    {
        "msg": "remove deprecated lifecycle in search input",
        "diff": "diff --git a/components/search-input.js b/components/search-input.js @@ -39,16 +39,6 @@ class SearchInput extends React.PureComponent {\n}\n}\n- UNSAFE_componentWillReceiveProps({router}) {\n- const {value} = this.state\n-\n- if (router.query.q && router.query.q !== value) {\n- this.setState({\n- value: router.query.q\n- })\n- }\n- }\n-\nonSubmit = event => {\nevent.preventDefault()\n@@ -76,8 +66,6 @@ class SearchInput extends React.PureComponent {\n}\nonChange = event => {\n- event.preventDefault()\n-\nthis.setState({\nvalue: event.target.value\n})\n",
        "date": "17.01.2019 16:36:32",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Remove UNSAFE_componentWillReceiveProps and preventDefault in onChange event"
    },
    {
        "msg": "remove elastic switch",
        "diff": "diff --git a/pages/search.js b/pages/search.js @@ -63,7 +63,6 @@ class SearchPage extends React.Component {\nreturn {\nresult: await _get(`${GEODATA_API_URL}/records?${stringify({\n- __elastic: 1,\nq: query.q,\nlimit: 20,\noffset: (page - 1) * 20,\n",
        "date": "17.01.2019 16:43:02",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "remove",
        "chatgpt_zeroshot": "Remove __elastic parameter from search query in SearchPage"
    },
    {
        "msg": "remove dialog title, to make more consisten.",
        "diff": "diff --git a/MaterialSkin/HTML/material/js/queue-page.js b/MaterialSkin/HTML/material/js/queue-page.js @@ -64,10 +64,8 @@ var lmsQueue = Vue.component(\"LmsQueue\", {\n<div>\n<v-dialog v-model=\"dialog.show\" persistent max-width=\"500px\">\n<v-card>\n- <v-card-title v-if=\"dialog.title\">\n- <span class=\"headline\">{{dialog.title}}</span>\n- </v-card-title>\n<v-card-text>\n+ <span v-if=\"dialog.title\">{{dialog.title}}</span>\n<v-container grid-list-md>\n<v-layout wrap>\n<v-flex xs12>\n@@ -155,7 +153,7 @@ var lmsQueue = Vue.component(\"LmsQueue\", {\nif (PQ_SAVE_ACTION.id===id) {\nthis.dialog={show: true, title: \"Save play queue\", hint: \"Name\", ok: \"Save\", value: undefined };\n} else if (PQ_CLEAR_ACTION.id===id) {\n- this.$confirm(\"Remove all tracks from queue'?\",\n+ this.$confirm(\"Remove all tracks from queue?\",\n{buttonTrueText: 'Clear', buttonFalseText: 'Cancel'}).then(res => {\nif (res) {\nbus.$emit('playerCommand', [\"playlist\", \"clear\"]);\n",
        "date": "09.10.2018 17:20:37",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor dialog title rendering and fix typo in confirmation message"
    },
    {
        "msg": "remove unsed filter",
        "diff": "diff --git a/MaterialSkin/HTML/material/js/main.js b/MaterialSkin/HTML/material/js/main.js @@ -242,11 +242,6 @@ var app = new Vue({\n}\n}\n},\n- filters: {\n- i18n: function (value) {\n- return i18n(value);\n- }\n- },\nstore,\nrouter,\nlmsServer\n",
        "date": "18.10.2018 21:56:37",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Remove i18n filter from Vue component"
    },
    {
        "msg": "remove stray character!",
        "diff": "diff --git a/MaterialSkin/HTML/material/js/queue-page.js b/MaterialSkin/HTML/material/js/queue-page.js @@ -200,7 +200,7 @@ var lmsQueue = Vue.component(\"LmsQueue\", {\ndocument.documentElement.scrollTop=0;\n// In case we missed the initial status update, ask for one now - so that we get queue quicker\nbus.$emit('refreshStatus');\n- });s\n+ });\n},\nmethods: {\ninitItems() {\n",
        "date": "20.10.2018 09:23:50",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Fix typo in queue-page.js file"
    },
    {
        "msg": "remove divider - as with it and the navbar below, the whole bar looks like one big button (which it is not)",
        "diff": "diff --git a/MaterialSkin/HTML/material/js/nowplaying-page.js b/MaterialSkin/HTML/material/js/nowplaying-page.js @@ -20,7 +20,6 @@ var lmsNowPlaying = Vue.component(\"LmsNowPlaying\", {\n</template>\n</v-tabs>\n<v-card>\n- <v-divider></v-divider>\n<v-card-actions>\n<v-spacer></v-spacer>\n<v-btn flat @click=\"info.show = false\">{{trans.close}}</v-btn>\n",
        "date": "22.10.2018 23:14:58",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unnecessary v-divider in nowplaying-page.js"
    },
    {
        "msg": "remove info placeholders",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/nowplaying-page.js b/MaterialSkin/HTML/material/html/js/nowplaying-page.js @@ -86,7 +86,7 @@ var lmsNowPlaying = Vue.component(\"LmsNowPlaying\", {\nplaylist: { shuffle:0, repeat: 0 },\n},\ninfo: { installed: false, show: false, tab:0,\n- tabs: [ { title:undefined, text: \"Wibble\" }, { title:undefined, text: \"Wobble\" }, { title:undefined, text: \"abc\" } ] },\n+ tabs: [ { title:undefined, text:undefined }, { title:undefined, text:undefined }, { title:undefined, text:undefined } ] },\nmenu: { show: false, x:0, y:0, text: undefined },\ntrans: { close: undefined }\n};\n",
        "date": "25.10.2018 18:12:36",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor nowplaying-page.js to remove hardcoded text values in tabs."
    },
    {
        "msg": "remove icons - so that difference between SlimBrowse and other is reduced",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-resp.js b/MaterialSkin/HTML/material/html/js/browse-resp.js @@ -21,7 +21,7 @@ function parseBrowseResp(data, parent, artistImages, idStart) {\ncommand: [\"albums\"],\nparams: [\"artist_id:\"+ i.contributor_id, \"tags:jly\", \"sort:\"+ARTIST_ALBUM_SORT_PLACEHOLDER],\nimage: artistImages ? lmsServerAddress+\"/imageproxy/mai/artist/\" + i.contributor_id + \"/image_100x100_o\" : undefined,\n- icon: artistImages ? undefined : \"person\",\n+ //icon: artistImages ? undefined : \"person\",\nmenuActions: [PLAY_ACTION, INSERT_ACTION, ADD_ACTION, ADD_RANDOM_ALBUM_ACTION, DIVIDER, ADD_TO_FAV_ACTION],\ntype: \"group\",\nfavIcon: artistImages ? \"imageproxy/mai/artist/\"+i.contributor_id+\"/image.png\" : undefined\n@@ -297,7 +297,7 @@ function parseBrowseResp(data, parent, artistImages, idStart) {\ntitle: i.name ? i.name : i.title,\ncommand: [i.cmd, \"items\"],\nimage: resolveImage(i.icon, i.image),\n- icon: \"search\",\n+ //icon: \"search\",\nparams: [\"want_url:1\", \"search:\"+TERM_PLACEHOLDER],\ntype: \"xmlsearch\",\nid: parent.id+i.cmd,\n@@ -322,7 +322,7 @@ function parseBrowseResp(data, parent, artistImages, idStart) {\ntitle: i.name ? i.name : i.title,\ncommand: [i.cmd, \"items\"],\nimage: resolveImage(i.icon, i.image),\n- icon: \"search\",\n+ //icon: \"search\",\nparams: [\"want_url:1\", \"search:\"+TERM_PLACEHOLDER],\ntype: \"xmlsearch\",\nid: parent.id+i.cmd,\n@@ -349,7 +349,7 @@ function parseBrowseResp(data, parent, artistImages, idStart) {\ntitle: i.name ? i.name : i.title,\ncommand: [i.cmd ? i.cmd : parent.command[0], \"items\"],\nimage: resolveImage(i.icon, i.image),\n- icon: \"search\",\n+ //icon: \"search\",\nparams: [\"want_url:1\", \"item_id:\"+i.id, \"search:\"+TERM_PLACEHOLDER],\ntype: \"xmlsearch\", // Hack, so that we don't think this is library search...\nid: parent.url+i.cmd+i.id,\n@@ -360,7 +360,7 @@ function parseBrowseResp(data, parent, artistImages, idStart) {\ntitle: i.name ? i.name : i.title,\ncommand: parent.command,\nimage: resolveImage(i.icon, i.image),\n- icon: \"folder\"==i.type || \"url\"==i.type ? \"folder\" : \"chevron_right\",\n+ //icon: \"folder\"==i.type || \"url\"==i.type ? \"folder\" : \"chevron_right\",\nparams: [\"item_id:\"+i.id, \"want_url:1\"],\ntype: \"group\",\nurl: i.url,\n@@ -384,7 +384,7 @@ function parseBrowseResp(data, parent, artistImages, idStart) {\ntitle: i.name ? i.name : i.title,\nurl: i.url,\nimage: resolveImage(i.icon, i.image),\n- icon: i.url && (i.url.startsWith(\"http:\") || i.url.startsWith(\"https:\")) ? \"wifi_tethering\" : \"music_note\",\n+ //icon: i.url && (i.url.startsWith(\"http:\") || i.url.startsWith(\"https:\")) ? \"wifi_tethering\" : \"music_note\",\ntype: \"track\",\nmenuActions: \"favorites\"===parent.type\n? topLevelFavourites\n",
        "date": "29.10.2018 17:47:58",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Comment out icon changes in browse-resp.js"
    },
    {
        "msg": "remove uneccessary bottom-nav styling - seems to mess up in Firefox when back button is used.",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/css/style.css b/MaterialSkin/HTML/material/html/css/style.css @@ -266,10 +266,6 @@ a {\nmargin-top: 2px !important;\n}\n-.lms-footer .router-link-exact-active .btn {\n- opacity: 1 !important;\n-}\n-\n.shuffle-albums {\nborder: 1px solid;\nborder-radius: 50%;\n",
        "date": "02.11.2018 19:57:43",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Remove opacity styling from footer buttons and update album shuffle border styling."
    },
    {
        "msg": "remove comments about SlimBrowse mode - these are not used",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-page.js b/MaterialSkin/HTML/material/html/js/browse-page.js @@ -242,9 +242,6 @@ var lmsBrowse = Vue.component(\"LmsBrowse\", {\n{ header: i18n(\"My Music\"), id: TOP_ID_PREFIX+\"mmh\" },\n{\ntitle: this.separateArtists ? i18n(\"All Artists\") : i18n(\"Artists\"),\n- // SlimBrowse method - disabled for now\n- //command: [\"browselibrary\", \"items\"],\n- //params: [\"menu:1\", \"mode:artists\"],\ncommand: [\"artists\"],\nparams: [],\nicon: \"group\",\n@@ -253,9 +250,6 @@ var lmsBrowse = Vue.component(\"LmsBrowse\", {\n},\n{\ntitle: i18n(\"Albums\"),\n- // SlimBrowse method - disabled for now\n- //command: [\"browselibrary\", \"items\"],\n- //params: [\"menu:1\", \"mode:albums\", \"sort:\"+ALBUM_SORT_PLACEHOLDER],\ncommand: [\"albums\"],\nparams: [\"tags:jlya\", \"sort:\"+ALBUM_SORT_PLACEHOLDER],\nicon: \"album\",\n@@ -264,9 +258,6 @@ var lmsBrowse = Vue.component(\"LmsBrowse\", {\n},\n{\ntitle: i18n(\"Genres\"),\n- // SlimBrowse method - disabled for now\n- //command: [\"browselibrary\", \"items\"],\n- //params: [\"menu:1\", \"mode:genres\"],\ncommand: [\"genres\"],\nparams: [],\nicon: \"label\",\n@@ -275,9 +266,6 @@ var lmsBrowse = Vue.component(\"LmsBrowse\", {\n},\n{\ntitle: i18n(\"Playlists\"),\n- // SlimBrowse method - disabled for now\n- //command: [\"browselibrary\", \"items\"],\n- //params: [\"menu:1\", \"mode:playlists\"],\ncommand: [\"playlists\"],\nparams: [],\nicon: \"list\",\n@@ -290,9 +278,6 @@ var lmsBrowse = Vue.component(\"LmsBrowse\", {\nthis.top.splice(2, 0,\n{\ntitle: i18n(\"Album Artists\"),\n- // SlimBrowse method - disabled for now\n- //command: [\"browselibrary\", \"items\"],\n- //params: [\"menu:1\", \"mode:artists\", \"role_id:ALBUMARTIST\"],\ncommand: [\"artists\"],\nparams: [\"role_id:ALBUMARTIST\"],\nicon: \"group\",\n@@ -312,9 +297,6 @@ var lmsBrowse = Vue.component(\"LmsBrowse\", {\nthis.other = [\n{\ntitle: i18n(\"Compilations\"),\n- // SlimBrowse method - TODO\n- //command: [\"albums\"],\n- //params: [???]\ncommand: [\"albums\"],\nparams: [\"compilation:1\", \"tags:jlya\", \"sort:\"+ALBUM_SORT_PLACEHOLDER],\nicon: \"album\",\n@@ -331,9 +313,6 @@ var lmsBrowse = Vue.component(\"LmsBrowse\", {\n},\n{\ntitle: i18n(\"Years\"),\n- // SlimBrowse method - disabled for now\n- //command: [\"browselibrary\", \"items\"],\n- //params: [\"menu:1\", \"mode:years\"],\ncommand: [\"years\"],\nparams: [],\nicon: \"date_range\",\n@@ -342,9 +321,6 @@ var lmsBrowse = Vue.component(\"LmsBrowse\", {\n},\n{\ntitle: i18n(\"New Music\"),\n- // SlimBrowse method - disabled for now\n- //command: [\"browselibrary\", \"items\"],\n- //params: [\"menu:1\", \"mode:albums\", \"sort:new\"],\ncommand: [\"albums\"],\nparams: [\"tags:jlya\", \"sort:new\"],\nicon: \"new_releases\",\n@@ -913,9 +889,6 @@ var lmsBrowse = Vue.component(\"LmsBrowse\", {\naddExtraItems(list, addMore) {\nlist.push({\ntitle: i18n(\"Search\"),\n- // SlimBrowse method - TODO\n- // command: [],\n- // params: [],\ncommand: [\"search\"],\nparams: [\"tags:jlyAdt\", \"extended:1\", \"term:\"+TERM_PLACEHOLDER],\nicon: \"search\",\n@@ -935,9 +908,6 @@ var lmsBrowse = Vue.component(\"LmsBrowse\", {\ntitle: i18n(\"Radio\"),\ncommand: [\"radios\"],\nparams: [\"menu:radio\"],\n- // Non-SlimBrowse\n- //command: [\"radios\"],\n- //params: [\"want_url:1\"],\nicon: \"radio\",\ntype: \"group\",\nid: TOP_ID_PREFIX+\"ra\"\n@@ -946,9 +916,6 @@ var lmsBrowse = Vue.component(\"LmsBrowse\", {\ntitle: i18n(\"Favorites\"),\ncommand: [\"favaddExtraItemsorites\", \"items\"],\nparams: [\"menu:favorites\", \"menu:1\"],\n- // Non-SlimBrowse\n- //command: [\"favorites\", \"items\"],\n- //params: [\"want_url:1\"],\nicon: \"favorite\",\ntype: \"favorites\",\napp: \"favorites\",\n@@ -959,9 +926,6 @@ var lmsBrowse = Vue.component(\"LmsBrowse\", {\ntitle: i18n(\"Apps\"),\ncommand: [\"myapps\", \"items\"],\nparams: [\"menu:1\"],\n- // Non-SlimBrowse\n- //command: [\"apps\"],\n- //params: [\"want_url:1\"],\nicon: \"apps\",\ntype: \"group\",\nid: TOP_APPS_ID\n@@ -1085,9 +1049,6 @@ var lmsBrowse = Vue.component(\"LmsBrowse\", {\nfor (var i = data.result._p2.length; i-- > 0; ) {\nvar isAlbums = \"albums\"==data.result._p2[i].feed;\nvar item = { title: data.result._p2[i].name,\n- // SlimBrowse method - disabled for now\n- //command: [\"browselibrary\", \"items\"],\n- //params: [\"menu:1\", \"mode:\"+data.result._p2[i].feed],\ncommand: [data.result._p2[i].feed],\nparams: [],\nid: TOP_ID_PREFIX+\"ebm-\"+data.result._p2[i].id,\n",
        "date": "05.11.2018 16:52:43",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Disable SlimBrowse method for browsing library items."
    },
    {
        "msg": "remove TOP_XXX_ID constants that are only used once",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-page.js b/MaterialSkin/HTML/material/html/js/browse-page.js @@ -21,16 +21,10 @@ const TERM_PLACEHOLDER = \"__TAGGEDINPUT__\";\nconst ALBUM_SORT_PLACEHOLDER = \"__ALBUM_SORT__\";\nconst ARTIST_ALBUM_SORT_PLACEHOLDER = \"__ARTIST_ALBUM_SORT__\";\nconst TOP_ID_PREFIX = \"top:/\";\n-const TOP_ARTISTS_ID = TOP_ID_PREFIX+\"ar\";\n-const TOP_ALBUM_ARTISTS_ID = TOP_ID_PREFIX+\"aar\";\n-const TOP_ALBUMS_ID = TOP_ID_PREFIX+\"al\";\nconst TOP_MORE_ID = TOP_ID_PREFIX+\"more\";\nconst TOP_RANDOM_ALBUMS_ID = TOP_ID_PREFIX+\"rnda\";\nconst TOP_RANDOM_MIX_ID = TOP_ID_PREFIX+\"rndm\";\nconst TOP_NEW_MUSIC_ID = TOP_ID_PREFIX+\"new\";\n-const TOP_SEARCH_ID = TOP_ID_PREFIX+\"search\";\n-const TOP_FAV_ID = TOP_ID_PREFIX+\"fav\";\n-const TOP_PLAYLISTS_ID = TOP_ID_PREFIX+\"pl\";\nconst TOP_APPS_ID = TOP_ID_PREFIX+\"apps\";\nvar lmsBrowse = Vue.component(\"LmsBrowse\", {\n@@ -246,7 +240,7 @@ var lmsBrowse = Vue.component(\"LmsBrowse\", {\nparams: [],\nicon: \"group\",\ntype: \"group\",\n- id: TOP_ARTISTS_ID,\n+ id: TOP_ID_PREFIX+\"ar\",\n},\n{\ntitle: i18n(\"Albums\"),\n@@ -254,7 +248,7 @@ var lmsBrowse = Vue.component(\"LmsBrowse\", {\nparams: [\"tags:jlya\", \"sort:\"+ALBUM_SORT_PLACEHOLDER],\nicon: \"album\",\ntype: \"group\",\n- id: TOP_ALBUMS_ID\n+ id: TOP_ID_PREFIX+\"al\n},\n{\ntitle: i18n(\"Genres\"),\n@@ -270,7 +264,7 @@ var lmsBrowse = Vue.component(\"LmsBrowse\", {\nparams: [],\nicon: \"list\",\ntype: \"group\",\n- id: TOP_PLAYLISTS_ID\n+ id: TOP_ID_PREFIX+\"pl\"\n}\n];\nthis.addExtraItems(this.top, true);\n@@ -282,7 +276,7 @@ var lmsBrowse = Vue.component(\"LmsBrowse\", {\nparams: [\"role_id:ALBUMARTIST\"],\nicon: \"group\",\ntype: \"group\",\n- id: TOP_ALBUM_ARTISTS_ID\n+ id: TOP_ID_PREFIX+\"aar\"\n});\n}\n@@ -612,8 +606,7 @@ var lmsBrowse = Vue.component(\"LmsBrowse\", {\nthis.fetchItems(this.buildCommand(item, act), item);\n} else {\nvar command = this.buildCommand(item, act);\n- if (command.command.length<1) {\n- // Non slim-browse command\n+ if (command.command.length<1) { // Non slim-browse command\nif (INSERT_ACTION.cmd==act) {\nact=\"insert\";\n}\n@@ -863,7 +856,7 @@ var lmsBrowse = Vue.component(\"LmsBrowse\", {\n} else if (mode==\"vaalbums\") {\nmode=\"albums\";\np.push(\"compilation:1\");\n- } else if (mode!=\"artists\" && mode!=\"albums\" && mode!=\"years\" && mode!=\"genres\") {\n+ } else if (mode!=\"artists\" && mode!=\"albums\" && mode!=\"years\" && mode!=\"genres\" && mode!=\"tracks\") {\ncanReplace = false;\nreturn;\n}\n@@ -893,7 +886,7 @@ var lmsBrowse = Vue.component(\"LmsBrowse\", {\nparams: [\"tags:jlyAdt\", \"extended:1\", \"term:\"+TERM_PLACEHOLDER],\nicon: \"search\",\ntype: \"search\",\n- id: TOP_SEARCH_ID\n+ id: TOP_ID_PREFIX+\"search\"\n});\nif (addMore) {\nlist.push({\n@@ -919,7 +912,7 @@ var lmsBrowse = Vue.component(\"LmsBrowse\", {\nicon: \"favorite\",\ntype: \"favorites\",\napp: \"favorites\",\n- id: TOP_FAV_ID,\n+ id: TOP_ID_PREFIX+\"fav\",\nisFavFolder: true\n});\nlist.push({\n",
        "date": "05.11.2018 16:53:12",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor browse-page.js to use TOP_ID_PREFIX for all top IDs"
    },
    {
        "msg": "remove dummy text",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/nowplaying-page.js b/MaterialSkin/HTML/material/html/js/nowplaying-page.js @@ -24,11 +24,11 @@ var lmsNowPlaying = Vue.component(\"lms-now-playing\", {\n<img :src=\"cover\" class=\"np-image\" @click=\"infoPlugin ? info.show=!info.show : undefined\" v-bind:class=\"{'cursor' : infoPlugin}\"></img>\n<div>\n<p class=\"np-text ellipsis\" v-if=\"playerStatus.current.title\">{{playerStatus.current.title}}</p>\n- <p class=\"np-text\" v-else>&nbsp;Title</p>\n+ <p class=\"np-text\" v-else>&nbsp;</p>\n<p class=\"np-subtext ellipsis\" v-if=\"playerStatus.current.artist && playerStatus.current.album\">{{playerStatus.current.artist}} - {{playerStatus.current.album}}</p>\n<p class=\"np-subtext ellipsis\" v-else-if=\"playerStatus.current.artist\">{{playerStatus.current.artist}}</p>\n<p class=\"np-subtext ellipsis\" v-else-if=\"playerStatus.current.album\">{{playerStatus.current.album}}</p>\n- <p class=\"np-subtext\" v-else>&nbsp;Artist - Album</p>\n+ <p class=\"np-subtext\" v-else>&nbsp;</p>\n<p class=\"np-subtext np-time\">{{formattedTime}}</p>\n<v-slider id=\"pos-slider\" class=\"np-slider\" :value='playerStatus.current.time' :max='playerStatus.current.duration' @click.native=\"sliderChanged($event)\"></v-slider>\n</div>\n",
        "date": "12.11.2018 23:29:55",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor nowplaying-page.js to remove default text for title and artist-album when not available."
    },
    {
        "msg": "remove incorrect flex",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/nowplaying-page.js b/MaterialSkin/HTML/material/html/js/nowplaying-page.js @@ -18,7 +18,7 @@ var lmsNowPlaying = Vue.component(\"lms-now-playing\", {\n<v-btn flat icon large v-else @click=\"doAction(['play'])\" class=\"np-playpause\"><v-icon x-large>play_circle_outline</v-icon></v-btn>\n</v-flex>\n<v-flex xs4>\n- <v-flex xs6><v-btn flat icon @click=\"doAction(['playlist', 'index', '+1'])\"><v-icon large>skip_next</v-icon></v-btn></v-flex>\n+ <v-btn flat icon @click=\"doAction(['playlist', 'index', '+1'])\"><v-icon large>skip_next</v-icon></v-btn>\n</v-flex>\n</v-layout>\n<img :src=\"cover\" class=\"np-image\" @click=\"infoPlugin && playerStatus.current.artist ? info.show=!info.show : undefined\" v-bind:class=\"{'cursor' : infoPlugin}\"></img>\n",
        "date": "20.11.2018 20:03:51",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Remove redundant v-flex element in nowplaying-page.js"
    },
    {
        "msg": "remove any sizing before using cover as backdrop",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-page.js b/MaterialSkin/HTML/material/html/js/browse-page.js @@ -1573,6 +1573,14 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\n},\nsetBgndCover() {\nvar url = this.current && this.current.image && !this.current.image.startsWith(\"/plugins/\") ? this.current.image : undefined;\n+\n+ if (url) {\n+ if (url.endsWith(LMS_LIST_IMAGE_SIZE+\".png\")) {\n+ url = url.replace(LMS_LIST_IMAGE_SIZE+\".png\", \".png\");\n+ } else if (url.endsWith(LMS_GRID_IMAGE_SIZE+\".png\")) {\n+ url = url.replace(LMS_GRID_IMAGE_SIZE+\".png\", \".png\");\n+ }\n+ }\nsetBgndCover(this.scrollElement, url, this.$store.state.darkUi);\n}\n},\n",
        "date": "19.12.2018 19:34:13",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor setBgndCover function to handle different image sizes in browse-page.js"
    },
    {
        "msg": "remove libraries are not added to server menus, they are placed under other",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-page.js b/MaterialSkin/HTML/material/html/js/browse-page.js @@ -1699,14 +1699,6 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\nreturn;\n}\n});\n- if (undefined!=this.serverTop && this.serverTop.length>0) {\n- this.serverTop.forEach(i => {\n- if (i.id == TOP_REMOTE_ID) {\n- i.disabled = !this.remoteLibraries;\n- return;\n- }\n- });\n- }\n}\n}\n});\n",
        "date": "30.12.2018 13:38:36",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unnecessary code for disabling remote libraries in browse page."
    },
    {
        "msg": "remove x/y prefix for item_id - why was this added????",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-resp.js b/MaterialSkin/HTML/material/html/js/browse-resp.js @@ -374,9 +374,9 @@ function parseBrowseResp(data, parent, options, idStart) {\ni.menuActions.push(options.pinned.has(i.id) ? UNPIN_ACTION : PIN_ACTION);\n} else if (!isFavorites) { // move/rename on favs needs ids of a.b.c (created below)\nif (i.params && i.params.item_id) {\n- i.id = \"item_id:x\"+i.params.item_id;\n+ i.id = \"item_id:\"+i.params.item_id;\n} else if (i.actions && i.actions.go && i.actions.go.params && i.actions.go.params.item_id) {\n- i.id = \"item_id:y\"+i.actions.go.params.item_id;\n+ i.id = \"item_id:\"+i.actions.go.params.item_id;\n}\n}\n",
        "date": "02.02.2019 18:25:58",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Fix id format in browse response parsing"
    },
    {
        "msg": "remove 'No Album' hack, it messes up paging. Need to find real reason for this album!",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-resp.js b/MaterialSkin/HTML/material/html/js/browse-resp.js @@ -479,11 +479,6 @@ function parseBrowseResp(data, parent, options, idStart) {\n}\ndata.result.albums_loop.forEach(i => {\n- // Bug on my system? There is a 'No Album' entry with no tracks!\n- if (undefined!==i.year && 0==i.year && i.artist && \"No Album\"===i.album && \"Various Artists\"===i.artist) {\n- data.result.count--;\n- return;\n- }\nvar title = i.album;\nif (i.year && i.year>0) {\ntitle+=\" (\" + i.year + \")\";\n",
        "date": "03.02.2019 16:06:46",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unnecessary check for 'No Album' entry with no tracks in parseBrowseResp function"
    },
    {
        "msg": "remove note, no longer applicable",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-resp.js b/MaterialSkin/HTML/material/html/js/browse-resp.js const MORE_COMMANDS = new Set([\"item_add\", \"item_insert\", \"itemplay\", \"item_fav\"]);\nfunction parseBrowseResp(data, parent, options, idStart, cacheKey) {\n- // NOTE: If add key to resp, then update addToCache in utils.js\nvar resp = {items: [], baseActions:[], useGrid: false, total: 0, useScroller: false, jumplist:[] };\ntry {\n",
        "date": "02.04.2019 16:49:32",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unnecessary comment in parseBrowseResp function"
    },
    {
        "msg": "remove cometd.onTransportException handler",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/server.js b/MaterialSkin/HTML/material/html/js/server.js @@ -132,9 +132,6 @@ var lmsServer = Vue.component('lms-server', {\n{data:{response:'/'+this.cometd.getClientId()+'/slim/serverstatus', request:['', ['serverstatus', 0, 100, 'subscribe:60']]}});\n}\n});\n- this.cometd.onTransportException = (_cometd, failure, oldTransport, newTransport) => {\n- console.log(\"FAIL\");\n- };\n},\nhandleCometDMessage(msg) {\nif (!msg.channel || !msg.data) {\n",
        "date": "06.04.2019 08:20:37",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Remove onTransportException method from server.js"
    },
    {
        "msg": "remove stray semi-colons",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/css/style.css b/MaterialSkin/HTML/material/html/css/style.css @@ -201,7 +201,7 @@ a {\nwidth:130px !important;\n}\n- .image-grid-text {;\n+ .image-grid-text {\nwidth:118px;\n}\n@@ -231,7 +231,7 @@ a {\nwidth:115px !important;\n}\n- .image-grid-text {;\n+ .image-grid-text {\nwidth:102px;\n}\n",
        "date": "15.04.2019 19:49:12",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Fix image grid text width in style.css"
    },
    {
        "msg": "remove spurious 's'",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/manage-players.js b/MaterialSkin/HTML/material/html/js/manage-players.js @@ -190,7 +190,7 @@ Vue.component('lms-manage-players', {\n}\n},\nclose() {\n- this.show=false;s\n+ this.show=false;\n},\ni18n(str) {\nif (this.show) {\n",
        "date": "19.04.2019 17:11:30",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Fix typo in close method in manage-players.js"
    },
    {
        "msg": "remove table spacing",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/css/style.css b/MaterialSkin/HTML/material/html/css/style.css @@ -86,6 +86,10 @@ a {\nmargin-right:8px !important;\n}\n+.lms-image-grid table {\n+ border-spacing:0px !important;\n+}\n+\n.lms-image-grid table td .v-card {\nbackground-color:rgba(0,0,0,0) !important\n}\n@@ -111,7 +115,7 @@ a {\n.image-grid-item {\npadding:0px;\n- margin:0px 6px 0px 2px; /* t, r, b, l */\n+ margin:0px 4px 0px 4px; /* t, r, b, l */\nbackground-color:rgba(0,0,0,0) !important;\ncursor:pointer;\n}\n",
        "date": "15.05.2019 16:25:31",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Update styling for image grid table in CSS"
    },
    {
        "msg": "remove double id setting",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-page.js b/MaterialSkin/HTML/material/html/js/browse-page.js @@ -471,7 +471,7 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\n}\n}.bind(this));\nbus.$on('searchLib', function(command, params, term) {\n- this.fetchItems({command: command, params: params}, {cancache:false, id:\"<>\", title:term, id:\"search\"==command[0] ? TOP_SEARCH_ID : \"search:\"+command[0]});\n+ this.fetchItems({command: command, params: params}, {cancache:false, title:term, id:\"search\"==command[0] ? TOP_SEARCH_ID : \"search:\"+command[0]});\n}.bind(this));\n},\nmethods: {\n",
        "date": "25.05.2019 12:47:31",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Remove duplicate id key in fetchItems function call"
    },
    {
        "msg": "remove string()",
        "diff": "diff --git a/MaterialSkin/Plugin.pm b/MaterialSkin/Plugin.pm @@ -111,7 +111,7 @@ sub _cliCommand {\nparams => [ $id, ['connect', Slim::Utils::Network::serverAddr()] ]\n});\n- main::INFOLOG && $log->is_info && $log->info(string('Connect player ${id} from ${serverurl} to this server'));\n+ main::INFOLOG && $log->is_info && $log->info('Connect player ${id} from ${serverurl} to this server');\n$http->post( $serverurl . 'jsonrpc.js', $postdata);\n$request->setStatusDone();\nreturn;\n@@ -167,7 +167,7 @@ sub _cliCommand {\n}\nsub _connect_done {\n- main::INFOLOG && $log->is_info && $log->info(string('Connect response recieved player'));\n+ main::INFOLOG && $log->is_info && $log->info('Connect response recieved player');\n# curl 'http://localhost:9000/jsonrpc.js' --data-binary '{\"id\":1,\"method\":\"slim.request\",\"params\":[\"aa:aa:b5:38:e2:d7\",[\"disconnect\",\"192.168.1.16\"]]}'\nmy $http = shift;\nmy $server = $http->params('server');\n@@ -182,7 +182,7 @@ sub _connect_done {\nmy $id = $params[0];\nmy $buddy = Slim::Player::Client::getClient($id);\nif ($buddy) {\n- main::INFOLOG && $log->is_info && $log->info(string('Disconnect player ${id} from ${server}'));\n+ main::INFOLOG && $log->is_info && $log->info('Disconnect player ' . $id . ' from ' . $server);\n$buddy->execute([\"disconnect\", $server]);\n}\n}\n",
        "date": "11.07.2019 16:55:15",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor log messages in MaterialSkin/Plugin.pm"
    },
    {
        "msg": "remove some more spaces from CSS",
        "diff": "diff --git a/mkrel.py b/mkrel.py @@ -145,7 +145,7 @@ def minifyCss():\ncssStr+=line.replace(\"\\n\", \"\").replace(\" {\", \"{\")\nwhile (\" \" in cssStr):\ncssStr=cssStr.replace(\" \", \" \")\n- cssStr=cssStr.replace(\"} \", \"}\").replace(\"{ \", \"{\").replace(\"; \", \";\");\n+ cssStr=cssStr.replace(\"} \", \"}\").replace(\"{ \", \"{\").replace(\"; \", \";\").replace(\": \", \":\").replace(\" :\", \":\").replace(\" !\", \"!\");\nwhile True:\nstart = cssStr.find(\"/*\")\nif start<0:\n",
        "date": "11.08.2019 09:55:22",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Fix minifyCss function to properly handle spaces and colons in CSS strings"
    },
    {
        "msg": "remove card padding - so that dialogs are smaller",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/css/style.css b/MaterialSkin/HTML/material/html/css/style.css @@ -1005,6 +1005,10 @@ div.v-subheader {\nfont-size:17px !important;\n}\n+.v-card__text {\n+ padding:0!important;\n+}\n+\n.dialog-section-header {\nfont-size:17px !important;\nfont-weight:600 !important;\n",
        "date": "08.09.2019 11:18:35",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Update padding for v-card__text and dialog-section-header styling"
    },
    {
        "msg": "remove arrow from player menu",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/toolbar.js b/MaterialSkin/HTML/material/html/js/toolbar.js @@ -70,7 +70,7 @@ Vue.component('lms-toolbar', {\n<v-toolbar-title slot=\"activator\">\n<div class=\"maintoolbar-title ellipsis\" v-bind:class=\"{'dimmed': !playerStatus.ison}\">\n<v-icon v-if=\"playerStatus.sleepTime\" class=\"player-icon-pad\">hotel</v-icon>\n- <v-icon v-if=\"playerStatus.synced\" class=\"player-icon-pad\">link</v-icon>{{player.name}} <v-icon>arrow_drop_down</v-icon></div>\n+ <v-icon v-if=\"playerStatus.synced\" class=\"player-icon-pad\">link</v-icon>{{player.name}}</div>\n<div v-if=\"!desktop\" class=\"maintoolbar-subtitle subtext ellipsis\" v-bind:class=\"{'dimmed' : !playerStatus.ison}\">{{undefined===songInfo ? trans.nothingplaying : (!desktop && isNowPlayingPage && (!infoPlugin || !infoOpen)) ? playlist.count+playlist.duration : songInfo}}</div>\n</v-toolbar-title>\n",
        "date": "10.09.2019 16:21:27",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Remove arrow_drop_down icon from player name in toolbar"
    },
    {
        "msg": "remove material version from under server - its listed under plugins",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/information.js b/MaterialSkin/HTML/material/html/js/information.js @@ -115,7 +115,6 @@ Vue.component('lms-information-dialog', {\nvar inf = JSON.parse(data.result.info);\nif (inf && inf.server) {\nthis.server=inf.server;\n- this.server.push({ label: i18n('Material Skin'), text:\"\"+LMS_MATERIAL_REVISION});\n}\n}\n});\n",
        "date": "23.09.2019 16:29:22",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unnecessary server push in information.js"
    },
    {
        "msg": "remove v-if on iframe, as it causes an aborted fetch. Just check in modify function if this is player or not.",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/iframe-dialog.js b/MaterialSkin/HTML/material/html/js/iframe-dialog.js * MIT license.\n*/\n-function hideClassicSkinElems() {\n+function hideClassicSkinElems(isPlayer) {\n+ if (!isPlayer) {\n+ return;\n+ }\nvar iframe = document.getElementById(\"classicSkinIframe\");\nif (iframe) {\nvar cssLink = iframe.contentDocument.createElement(\"link\");\n@@ -28,8 +31,7 @@ Vue.component('lms-iframe-dialog', {\n</v-toolbar>\n</v-card-title>\n<v-card-text class=\"embedded-page\">\n- <iframe v-if=\"isPlayer\" id=\"classicSkinIframe\" v-on:load=\"hideClassicSkinElems()\" :src=\"src\" frameborder=\"0\"></iframe>\n- <iframe v-else :src=\"src\" frameborder=\"0\"></iframe>\n+ <iframe id=\"classicSkinIframe\" v-on:load=\"hideClassicSkinElems(isPlayer)\" :src=\"src\" frameborder=\"0\"></iframe>\n</v-card-text>\n</v-card>\n</v-dialog>\n",
        "date": "02.10.2019 16:07:27",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Add isPlayer parameter to hideClassicSkinElems function"
    },
    {
        "msg": "remove some testing leftover...",
        "diff": "diff --git a/MaterialSkin/HTML/material/standardheader.html b/MaterialSkin/HTML/material/standardheader.html -<title>[% IF pagetitle %][% pagetitle | html -%][% ELSE %][% \"SQUEEZEBOX_SERVER\" | string %][% END -%]asdf[% skinVersion %]</title>\n+<title>[% IF pagetitle %][% pagetitle | html -%][% ELSE %][% \"SQUEEZEBOX_SERVER\" | string %][% END -%]</title>\n<link rel=\"shortcut icon\" href=\"[% webroot %]favicon.ico\" type=\"image/x-icon\"/>\n<link rel=\"icon\" href=\"[% webroot %]favicon.ico\" type=\"image/x-icon\"/>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=[% LOCALE %]\"/>\n",
        "date": "13.10.2019 15:40:31",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unnecessary text and update meta tag in standardheader.html"
    },
    {
        "msg": "remove check for 110 chars, as fix is in MAI",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/nowplaying-page.js b/MaterialSkin/HTML/material/html/js/nowplaying-page.js @@ -817,7 +817,7 @@ var lmsNowPlaying = Vue.component(\"lms-now-playing\", {\nlmsCommand(\"\", command).then(({data}) => {\nif (data && data.result && (data.result.biography || data.result.error)) {\nthis.info.tabs[BIO_TAB].text=data.result.biography ? replaceNewLines(data.result.biography) : data.result.error;\n- this.info.tabs[BIO_TAB].isMsg=undefined==data.result.biography || data.result.biography.length<110;\n+ this.info.tabs[BIO_TAB].isMsg=undefined==data.result.biography;\n}\n}).catch(error => {\nthis.info.tabs[BIO_TAB].text=i18n(\"Failed to retreive information.\");\n@@ -865,7 +865,7 @@ var lmsNowPlaying = Vue.component(\"lms-now-playing\", {\nlmsCommand(\"\", command).then(({data}) => {\nif (data && data.result && (data.result.albumreview || data.result.error)) {\nthis.info.tabs[REVIEW_TAB].text=data.result.albumreview ? replaceNewLines(data.result.albumreview) : data.result.error;\n- this.info.tabs[REVIEW_TAB].isMsg=undefined==data.result.albumreview || data.result.albumreview.length<110;\n+ this.info.tabs[REVIEW_TAB].isMsg=undefined==data.result.albumreview;\n}\n}).catch(error => {\nthis.info.tabs[REVIEW_TAB].text=i18n(\"Failed to retreive information.\");\n",
        "date": "29.10.2019 12:03:03",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor code to remove unnecessary length check in nowplaying-page.js"
    },
    {
        "msg": "remove need for utils.js and vue.js when deciding which layout to use",
        "diff": "diff --git a/MaterialSkin/HTML/material/index.html b/MaterialSkin/HTML/material/index.html <link href=\"html/images/icon-ios.png?r=[% material_revision %]\" rel=\"apple-touch-icon\" sizes=\"128x128\">\n</head>\n<body>\n- <script src=\"html/lib/vue.min.js?r=2.5.17\"></script>\n- <script src=\"html/js/utils.js?r=[% material_revision %]\"></script>\n<script>\n- var layout = getLocalStorageVal(\"layout\", \"auto\");\n+ var layout = window.localStorage.getItem(\"lms-material::layout\");\nif (layout != \"desktop\" && layout != \"mobile\") {\n- layout = IS_MOBILE ? \"mobile\" : \"desktop\";\n+ layout = window.innerWidth<600 || /Android|webOS|iPhone|iPad|BlackBerry|Windows Phone|Opera Mini|IEMobile|Mobile/i.test(navigator.userAgent) ? \"mobile\" : \"desktop\";\n}\nvar query = window.location.href.indexOf('?');\nvar queryString = query > 0 ? window.location.href.substring(window.location.href.indexOf('?')) : \"\";\n",
        "date": "11.12.2019 12:05:28",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor layout logic and update localStorage usage in index.html"
    },
    {
        "msg": "remove logging, and require with to be 50% more than height for landscape",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/utils.js b/MaterialSkin/HTML/material/html/js/utils.js @@ -426,8 +426,7 @@ function parseQueryParams() {\n}\nfunction isLandscape() {\n-console.log(window.innerWidth, window.innerHeight, window.innerHeight*1.4, window.innerWidth > (window.innerHeight*1.4));\n- return window.innerWidth > (window.innerHeight*1.4);\n+ return window.innerWidth >= (window.innerHeight*1.5);\n}\nfunction incrementVolume() {\n",
        "date": "26.01.2020 21:15:53",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor isLandscape function to use a more accurate calculation for landscape orientation."
    },
    {
        "msg": "remove any background shadow on bottom toolbar when switch",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/nowplaying-page.js b/MaterialSkin/HTML/material/html/js/nowplaying-page.js @@ -959,8 +959,12 @@ var lmsNowPlaying = Vue.component(\"lms-now-playing\", {\nsetLocalStorageVal(\"showTotal\", this.showTotal);\n},\nsetBgndCover(force) {\n- if (this.page && (!this.$store.state.desktopLayout || this.largeView || force)) {\n- setBgndCover(this.page, (!this.$store.state.desktopLayout || this.largeView) && this.$store.state.nowPlayingBackdrop && this.coverUrl!=LMS_BLANK_COVER ? this.coverUrl : undefined);\n+ if (this.page && (!this.$store.state.desktopLayout || this.largeView)) {\n+ setBgndCover(this.page, this.$store.state.nowPlayingBackdrop && this.coverUrl!=LMS_BLANK_COVER ? this.coverUrl : undefined);\n+ } else if (this.page && force && this.$store.state.desktopLayout && !this.largeView) {\n+ // Switched from mobile to desktop, and bottom bar should not have cover\n+ this.page.style.backgroundImage = 'none';\n+ this.page.style.boxShadow = 'none';\n}\n},\nplayPauseButton(showSleepMenu) {\n",
        "date": "11.02.2020 16:04:59",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor setBgndCover function in nowplaying-page.js"
    },
    {
        "msg": "remove comma from date",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/screensaver.js b/MaterialSkin/HTML/material/html/js/screensaver.js @@ -73,7 +73,7 @@ Vue.component('lms-screensaver', {\n},\nupdateDateAndTime() {\nvar date = new Date();\n- this.date = date.toLocaleDateString(undefined, { weekday: 'short', month: 'short', day: 'numeric', year: undefined });\n+ this.date = date.toLocaleDateString(undefined, { weekday: 'short', month: 'short', day: 'numeric', year: undefined }).replace(\", \", \" \");\nthis.time = date.toLocaleTimeString(undefined, { hour: 'numeric', minute: 'numeric' });\nif (undefined!==this.updateTimer) {\n",
        "date": "12.02.2020 16:02:28",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Fix date formatting in screensaver.js"
    },
    {
        "msg": "remove stray </script>",
        "diff": "diff --git a/MaterialSkin/HTML/material/index.html b/MaterialSkin/HTML/material/index.html print(\" <script src=\\\"html/js/screensaver.js?r=$version\\\"></script>\\n\");\nprint(\" <script src=\\\"html/js/i18n.js?r=$version\\\"></script>\\n\");\nprint(\" <script src=\\\"html/js/store.js?r=$version\\\"></script>\\n\");\n- print(\" <script src=\\\"html/js/main.js?r=$version\\\"></script>\\n\");\n+ print(\" <script src=\\\"html/js/main.js?r=$version\\\"></script>\");\n[% END %]\n<!--JS end-->\n- </script>\n</body>\n</html>\n",
        "date": "12.02.2020 18:47:58",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unnecessary closing script tag in index.html"
    },
    {
        "msg": "remove shadows from emblems, match size of select buttons, and slightly adjsut position.",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/css/style.css b/MaterialSkin/HTML/material/html/css/style.css @@ -349,23 +349,22 @@ div.v-subheader {\n.image-grid-select-btn, .image-grid-select-btn:hover {\nposition:absolute;\ntop:2px !important;\n- left:6px !important;\n+ left:4px !important;\n}\n.image-grid-item .emblem {\nposition:absolute;\ntop:2px !important;\n- right:8px !important;\n- width:28px !important;\n- height:28px !important;\n+ right:4px !important;\n+ width:32px !important;\n+ height:32px !important;\nborder-radius:50% !important;\n- padding:2px;\n- box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n+ padding:3px;\n}\n.image-grid-item .emblem img {\n- width:24px !important;\n- height:24px !important;\n+ width:26px !important;\n+ height:26px !important;\n}\n.lms-list-sub .emblem, .lms-list-jump .emblem {\n",
        "date": "27.02.2020 16:41:59",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Adjust position and size of image grid select button and emblem in style.css"
    },
    {
        "msg": "remove testing code! Ooops...",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/toolbar.js b/MaterialSkin/HTML/material/html/js/toolbar.js @@ -650,7 +650,7 @@ Vue.component('lms-toolbar', {\nreturn this.$store.state.visibleMenus.size>0\n},\nupdatesAvailable() {\n- return true || this.$store.state.updatesAvailable.size>0\n+ return this.$store.state.updatesAvailable.size>0\n},\nkeyboardControl() {\nreturn this.$store.state.keyboardControl && !IS_MOBILE\n",
        "date": "13.03.2020 18:21:28",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unnecessary 'true ||' condition in updatesAvailable method"
    },
    {
        "msg": "remove diactrics when creating jumplists.",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-resp.js b/MaterialSkin/HTML/material/html/js/browse-resp.js @@ -12,6 +12,16 @@ function itemText(i) {\nreturn i.title ? i.title : i.name ? i.name : i.caption ? i.caption : i.credits ? i.credits : undefined;\n}\n+function removeDiactrics(key) {\n+ if (undefined!=key && key.length==1) {\n+ var code = key.charCodeAt(0);\n+ if (code>127) { // Non-ASCII...\n+ return key.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n+ }\n+ }\n+ return key;\n+}\n+\nfunction parseBrowseResp(data, parent, options, cacheKey) {\n// NOTE: If add key to resp, then update addToCache in utils.js\nvar resp = {items: [], baseActions:[], canUseGrid: false, jumplist:[] };\n@@ -19,7 +29,6 @@ function parseBrowseResp(data, parent, options, cacheKey) {\ntry {\nif (data && data.result) {\nlogJsonMessage(\"RESP\", data);\n- var textKeys = new Set();\nif (data.result.item_loop) { // SlimBrowse response\nvar playAction = false;\nvar addAction = false;\n@@ -359,10 +368,9 @@ function parseBrowseResp(data, parent, options, cacheKey) {\ni.section = parent ? parent.section : undefined;\n- var key = i.textkey;\n- if (undefined!=key && (resp.jumplist.length==0 || (resp.jumplist[resp.jumplist.length-1].key!=key && !textKeys.has(key)))) {\n+ var key = removeDiactrics(i.textkey);\n+ if (undefined!=key && (resp.jumplist.length==0 || resp.jumplist[resp.jumplist.length-1].key!=key)) {\nresp.jumplist.push({key: key, index: resp.items.length});\n- textKeys.add(key);\n}\nif (isFavorites) {\ni.draggable = true;\n@@ -458,10 +466,9 @@ function parseBrowseResp(data, parent, options, cacheKey) {\nresp.canUseGrid = lmsOptions.infoPlugin && lmsOptions.artistImages;\nfor (var idx=0, loop=data.result.artists_loop, loopLen=loop.length; idx<loopLen; ++idx) {\nvar i = loop[idx];\n- var key = i.textkey;\n- if (undefined!=key && (resp.jumplist.length==0 || (resp.jumplist[resp.jumplist.length-1].key!=key && !textKeys.has(key)))) {\n+ var key = removeDiactrics(i.textkey);\n+ if (undefined!=key && (resp.jumplist.length==0 || resp.jumplist[resp.jumplist.length-1].key!=key)) {\nresp.jumplist.push({key: key, index: resp.items.length});\n- textKeys.add(key);\n}\nvar artist = {\nid: \"artist_id:\"+i.id,\n@@ -515,10 +522,9 @@ function parseBrowseResp(data, parent, options, cacheKey) {\nif (i.year && i.year>0) {\ntitle+=\" (\" + i.year + \")\";\n}\n- var key = jumpListYear ? (\"\"+i.year) : i.textkey;\n- if (undefined!=key && (resp.jumplist.length==0 || (resp.jumplist[resp.jumplist.length-1].key!=key && !textKeys.has(key)))) {\n+ var key = jumpListYear ? (\"\"+i.year) : removeDiactrics(i.textkey);\n+ if (undefined!=key && (resp.jumplist.length==0 || resp.jumplist[resp.jumplist.length-1].key!=key)) {\nresp.jumplist.push({key: key, index: resp.items.length});\n- textKeys.add(key);\n}\nvar album = {\n@@ -627,10 +633,9 @@ function parseBrowseResp(data, parent, options, cacheKey) {\n} else if (data.result.genres_loop) {\nfor (var idx=0, loop=data.result.genres_loop, loopLen=loop.length; idx<loopLen; ++idx) {\nvar i = loop[idx];\n- var key = i.textkey;\n- if (undefined!=key && (resp.jumplist.length==0 || (resp.jumplist[resp.jumplist.length-1].key!=key && !textKeys.has(key)))) {\n+ var key = removeDiactrics(i.textkey);\n+ if (undefined!=key && (resp.jumplist.length==0 || resp.jumplist[resp.jumplist.length-1].key!=key)) {\nresp.jumplist.push({key: key, index: resp.items.length});\n- textKeys.add(key);\n}\nresp.items.push({\nid: \"genre_id:\"+i.id,\n@@ -645,11 +650,10 @@ function parseBrowseResp(data, parent, options, cacheKey) {\n} else if (data.result.playlists_loop) {\nfor (var idx=0, loop=data.result.playlists_loop, loopLen=loop.length; idx<loopLen; ++idx) {\nvar i = loop[idx];\n- var key = i.textkey;\n+ var key = removeDiactrics(i.textkey);\nvar isRemote = 1 == parseInt(i.remote);\n- if (undefined!=key && (resp.jumplist.length==0 || (resp.jumplist[resp.jumplist.length-1].key!=key && !textKeys.has(key)))) {\n+ if (undefined!=key && (resp.jumplist.length==0 || resp.jumplist[resp.jumplist.length-1].key!=key)) {\nresp.jumplist.push({key: key, index: resp.items.length});\n- textKeys.add(key);\n}\nresp.items.push({\nid: \"playlist_id:\"+i.id,\n@@ -714,9 +718,8 @@ function parseBrowseResp(data, parent, options, cacheKey) {\nfor (var idx=0, loop=data.result.years_loop, loopLen=loop.length; idx<loopLen; ++idx) {\nvar i = loop[idx];\nvar key = i.textkey;\n- if (undefined!=key && (resp.jumplist.length==0 || (resp.jumplist[resp.jumplist.length-1].key!=key && !textKeys.has(key)))) {\n+ if (undefined!=key && (resp.jumplist.length==0 || resp.jumplist[resp.jumplist.length-1].key!=key)) {\nresp.jumplist.push({key: key, index: resp.items.length});\n- textKeys.add(key);\n}\nresp.items.push({\nid: \"year:\"+i.year,\n",
        "date": "05.05.2020 14:27:48",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor textkey handling in browse-resp.js"
    },
    {
        "msg": "remove padding in other players list",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/manage-players.js b/MaterialSkin/HTML/material/html/js/manage-players.js @@ -128,7 +128,7 @@ Vue.component('lms-manage-players', {\n<div v-for=\"(player, index) in otherPlayers\" :key=\"player.id\" style=\"width:100%\">\n<v-flex xs12 v-if=\"0==index || player.server!=otherPlayers[index-1].server\" v-bind:class=\"{'pmgr-grp-title':players.length>0,'pmgr-title':0==players.length}\" class=\"ellipsis\">{{player.server}}</v-flex>\n- <v-flex xs12>\n+ <v-flex xs12 style=\"padding:0px;\">\n<v-list style=\"padding:0px;\">\n<v-list-tile @click=\"movePlayer(player)\">\n<v-list-tile-content>\n",
        "date": "22.05.2020 08:22:00",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Add padding style to v-flex element in manage-players.js"
    },
    {
        "msg": "remove unrequired playerIcon call",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/server.js b/MaterialSkin/HTML/material/html/js/server.js @@ -398,7 +398,6 @@ var lmsServer = Vue.component('lms-server', {\nfor (var idx=0, len=data.players_loop.length; idx<len; ++idx) {\nvar i = data.players_loop[idx];\nif (1==parseInt(i.connected)) { // Only list/use connected players...\n- var icon = playerIcon(i);\nplayers.push({ id: i.playerid,\nname: i.name,\ncanpoweroff: 1==parseInt(i.canpoweroff),\n",
        "date": "23.05.2020 08:37:17",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unnecessary code for listing connected players only"
    },
    {
        "msg": "remove existing keys before adding new",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/icon-mapping.js b/MaterialSkin/HTML/material/html/js/icon-mapping.js @@ -16,6 +16,7 @@ function getMiscJson(item, name, obj) {\ntry {\nlet data = JSON.parse(cfg);\nif (undefined!=data) {\n+ for (var x in item) if (item.hasOwnProperty(x)) delete item[x];\nfor (let [key, value] of Object.entries(data)) {\nitem[key]=value;\n}\n@@ -26,6 +27,7 @@ function getMiscJson(item, name, obj) {\nif (item['material-version']!=LMS_MATERIAL_REVISION) {\naxios.get(\"html/misc/\"+name+\".json?r=\" + LMS_MATERIAL_REVISION).then(function (resp) {\nlet data = eval(resp.data);\n+ for (var x in item) if (item.hasOwnProperty(x)) delete item[x];\ndata['material-version']=LMS_MATERIAL_REVISION;\nfor (let [key, value] of Object.entries(data)) {\nitem[key]=value;\n",
        "date": "25.05.2020 11:08:29",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor icon-mapping.js to delete existing properties before adding new ones"
    },
    {
        "msg": "remove blank line at end of details",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/nowplaying-page.js b/MaterialSkin/HTML/material/html/js/nowplaying-page.js @@ -220,7 +220,7 @@ var lmsNowPlaying = Vue.component(\"lms-now-playing\", {\n<div>\n<b class=\"np-title\">{{playerStatus.current.title ? playerStatus.current.title : \"\"}}</b><br/>\n<obj class=\"subtext\">{{playerStatus.current.artistAndComposer ? playerStatus.current.artistAndComposer : \"\"}}</obj><br/>\n- <obj class=\"subtext\">{{playerStatus.current.album ? playerStatus.current.album : playerStatus.current.remote_title && playerStatus.current.remote_title!=playerStatus.current.title ? playerStatus.current.remote_title : \"\"}}</obj><br/><br/>\n+ <obj class=\"subtext\">{{playerStatus.current.album ? playerStatus.current.album : playerStatus.current.remote_title && playerStatus.current.remote_title!=playerStatus.current.title ? playerStatus.current.remote_title : \"\"}}</obj><br/>\n</div>\n</div>\n</div>\n",
        "date": "27.05.2020 11:19:54",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Remove extra line break in nowplaying-page.js"
    },
    {
        "msg": "remove unused 'threeLines'",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/nowplaying-page.js b/MaterialSkin/HTML/material/html/js/nowplaying-page.js @@ -315,8 +315,7 @@ var lmsNowPlaying = Vue.component(\"lms-now-playing\", {\ndisablePrev:true,\ndisableNext:true,\ndstm:false,\n- infoZoom:10,\n- threeLines:false\n+ infoZoom:10\n};\n},\nmounted() {\n@@ -393,8 +392,6 @@ var lmsNowPlaying = Vue.component(\"lms-now-playing\", {\nvar playStateChanged = false;\nvar trackChanged = false;\n- this.threeLines = playerStatus.current.remote_title && (\"\"+playerStatus.current.id)[0]=='-';\n-\n// Have other items changed\nif (playerStatus.isplaying!=this.playerStatus.isplaying) {\nthis.playerStatus.isplaying = playerStatus.isplaying;\n",
        "date": "29.08.2020 08:31:10",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unnecessary code related to 'threeLines' in nowplaying-page.js"
    },
    {
        "msg": "remove menu from cached My Music",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-page.js b/MaterialSkin/HTML/material/html/js/browse-page.js @@ -2363,6 +2363,8 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\nthis.top[i].params.push(\"menu:1\");\n} else if (this.top[i].id==TOP_RADIO_ID) {\nthis.top[i].icon=undefined; this.top[i].svg=\"radio-tower\";\n+ } else if (this.top[i].id==TOP_MYMUSIC_ID) {\n+ this.top[i].menu=undefined;\n}\n}\nfor (var i=0, len=this.top.length; i<len; ++i) {\n",
        "date": "08.09.2020 18:28:14",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "\"Remove menu from My Music section in browse page\""
    },
    {
        "msg": "remove all BBC Sounds mappings",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/misc/icon-map.json b/MaterialSkin/HTML/material/html/misc/icon-map.json \"PLUGIN_SYNCHRONIZER_NAME\":{\"icon\":\"sync\"},\n\"MUSICSOURCE\":{\"svg\":\"music\"},\n\"/BBCSounds.png\":{\"svg\":\"bbc-sounds\"},\n- \"/TimesRadio.png\":{\"svg\":\"times-radio\"},\n- \"/BBCSoundsAllEpisodes.png\":{\"icon\":\"dynamic_feed\"},\n- \"/BBCSoundsBookmark.png\":{\"icon\":\"add\"},\n- \"/BBCSoundsBrowse.png\":{\"icon\":\"library_books\"},\n- \"/BBCSoundsContinue.png\":{\"icon\":\"subscriptions\"},\n- \"/BBCSoundsLatest.png\":{\"icon\":\"update\"},\n- \"/BBCSoundsMusic.png\":{\"svg\":\"music\"},\n- \"/BBCSoundsMySounds.png\":{\"icon\":\"recent_actors\"},\n- \"/BBCSoundsPlay.png\":{\"icon\":\"play_arrow\"},\n- \"/BBCSoundsSearch.png\":{\"icon\":\"search\"},\n- \"/BBCSoundsSpeech.png\":{\"icon\":\"format_quote\"},\n- \"/BBCSoundsStations.png\":{\"svg\":\"radio-tower\"},\n- \"/BBCSoundsSubscribe.png\":{\"icon\":\"rss_feed\"},\n- \"/BBCSoundsSynopsis.png\":{\"icon\":\"view_headline\"},\n- \"/BBCSoundsTracks.png\":{\"icon\":\"album\"}\n+ \"/TimesRadio.png\":{\"svg\":\"times-radio\"}\n},\n\"indexOf\":{\n\"www.jazzfm.com\":{\"svg\":\"saxophone\"},\n",
        "date": "29.01.2021 17:03:19",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Remove BBC Sounds icons and add Times Radio icon in icon-map.json"
    },
    {
        "msg": "remove testing hack!",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-functions.js b/MaterialSkin/HTML/material/html/js/browse-functions.js @@ -175,7 +175,7 @@ function browseHandleListResponse(view, item, command, resp, prevPage) {\nview.currentActions.items.push({title:/*!i81n*/'wimp'==loop[i] ? 'Tidal' : capitalize(loop[i]),\nweight:10, svg:emblem ? emblem.name : undefined, id:loop[i], isService:true});\n}\n- } else { // if (undefined!=view.$store.state.ratingsPlugin && view.items.length>1) {\n+ } else if (undefined!=view.$store.state.ratingsPlugin && view.items.length>1) {\nview.currentActions.items.push({albumRating:true, title:i18n(\"Set rating for all tracks\"), icon:\"stars\", weight:99});\n}\nview.currentActions.items.sort(function(a, b) { return a.weight!=b.weight ? a.weight<b.weight ? -1 : 1 : titleSort(a, b) });\n",
        "date": "11.03.2021 18:34:06",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor browseHandleListResponse function to include conditional check for ratingsPlugin and items length."
    },
    {
        "msg": "remove stray bracket!",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/nowplaying-functions.js b/MaterialSkin/HTML/material/html/js/nowplaying-functions.js @@ -464,7 +464,7 @@ function nowplayingFetchArtistInfo(view) {\nlmsCommand(\"\", [\"musicartistinfo\", \"biography\", \"artist_id:\"+ids[i].trim(), \"html:1\"], view.info.tabs[ARTIST_TAB].reqId).then(({data}) => {\nlogJsonMessage(\"RESP\", data);\nif (data && view.isCurrent(data, ARTIST_TAB)) {\n- if (data.result && data.result.biograph)) {\n+ if (data.result && data.result.biograph) {\nif (data.result.artist) {\nview.info.tabs[ARTIST_TAB].found = true;\nif (view.info.tabs[ARTIST_TAB].first) {\n",
        "date": "05.05.2021 21:20:48",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Fix typo in nowplayingFetchArtistInfo function"
    },
    {
        "msg": "remove log line",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/track-sources.js b/MaterialSkin/HTML/material/html/js/track-sources.js @@ -13,7 +13,6 @@ function initTrackSources() {\nfunction getTrackSource(track) {\nif (undefined!=track.url) {\n- console.log(track.url);\nif (track.url.startsWith(\"file:\") && !track.url.startsWith(\"tmp:\")) {\nreturn i18n(\"Local\");\n}\n",
        "date": "09.05.2021 09:26:13",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Remove console.log statement in getTrackSource function"
    },
    {
        "msg": "remove any unmatched keys",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/customactions.js b/MaterialSkin/HTML/material/html/js/customactions.js @@ -56,6 +56,8 @@ function performCustomAction(obj, action, player, item) {\n}\n}\n+const ACTION_KEYS = ['ID', 'NAME', 'ARTISTID', 'ARTISTNAME', 'ALBUMID', 'ALBUMNAME', 'TRACKID', 'TRACKNAME', 'TRACKNUM', 'DISC', 'GENREID', 'GENRENAME', 'YEAR', 'COMPOSER'];\n+\nfunction doReplacements(string, player, item) {\nlet val = ''+string;\nif (undefined!=player) {\n@@ -100,6 +102,9 @@ function doReplacements(string, player, item) {\nif (undefined!=item.album_id) {\nval=val.replace(\"$ALBUMNAME\", item.album);\n}\n+ if (undefined!=item.composer) {\n+ val=val.replace(\"$COMPOSER\", item.composer);\n+ }\nif (undefined!=item.title) {\nif (undefined!=item.id) {\nlet id = ''+item.id;\n@@ -116,9 +121,9 @@ function doReplacements(string, player, item) {\nval=val.replace(\"$TRACKNAME\", item.title);\n}\n}\n- if (undefined!=item.composer) {\n- val=val.replace(\"$COMPOSER\", item.composer);\n}\n+ for (var i=0, len=ACTION_KEYS.length; i<len; ++i) {\n+ val = val.replace(\"+$\"+ACTION_KEYS[i], \"\").replace(\"$\"+ACTION_KEYS[i]+\"+\", \"\").replace(\"$\"+ACTION_KEYS[i], \"\");\n}\nreturn val;\n}\n",
        "date": "18.05.2021 20:27:09",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Add new ACTION_KEYS constant and update doReplacements function to handle dynamic replacements."
    },
    {
        "msg": "remove attempt to override alert - seems alert is called before this :(",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/iframe-dialog.js b/MaterialSkin/HTML/material/html/js/iframe-dialog.js @@ -231,20 +231,6 @@ function hideClassicSkinElems(page, textCol) {\n}\nvar iframe = document.getElementById(\"embeddedIframe\");\nif (iframe) {\n- iframe.contentWindow.alert = function(msg) {\n- var statusarea = iframeInfo.content.getElementById('statusarea');\n- console.log('STATUS', statusarea);\n- if (undefined!=statusarea && undefined!=statusarea.innerText) {\n- console.log('MSG', msg);\n- console.log('SA', statusarea.innerText);\n- if (msg==statusarea.innerText) {\n- return;\n- }\n- }\n- console.log('show');\n- bus.$emit('showMessage', msg);\n- }\n-\niframe.contentDocument.bus = bus;\nvar content = iframe.contentDocument;\niframeInfo.content = content;\n",
        "date": "24.06.2021 22:39:07",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Remove custom alert function from iframe-dialog.js"
    },
    {
        "msg": "remove mistakenly added notification code",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/server.js b/MaterialSkin/HTML/material/html/js/server.js @@ -277,9 +277,6 @@ var lmsServer = Vue.component('lms-server', {\nthis.cometd.subscribe('/slim/subscribe',\nfunction(res) { },\n{data:{response:'/'+this.cometd.getClientId()+'/slim/serverprefs', request:[['prefset']]}});\n- this.cometd.subscribe('/slim/subscribe',\n- function(res) { },\n- {data:{response:'/'+this.cometd.getClientId()+'/slim/material-skin', request:['material-skin', ['notification']]}});\nthis.updateFavorites();\n}\n});\n@@ -300,8 +297,6 @@ var lmsServer = Vue.component('lms-server', {\nthis.handlePlayerPrefs(msg.channel.split('/').pop(), msg.data);\n} else if (msg.channel.endsWith('/slim/serverprefs')) {\nthis.handleServerPrefs(msg.data);\n- } else if (msg.channel.endsWith('/slim/material-skin')) {\n- console.log(\"MSK\", JSON.stringify(msg));\n} else {\nlogCometdDebug(\"ERROR: Unexpected channel:\"+msg.channel);\n}\n",
        "date": "16.08.2021 22:35:44",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Remove material-skin subscription from server.js"
    },
    {
        "msg": "remove logging, and trim IDs",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/iframe-dialog.js b/MaterialSkin/HTML/material/html/js/iframe-dialog.js @@ -200,8 +200,7 @@ function hideSections(doc) {\nlet hidden = false;\nfor (let s=0, len=sections.length; s<len; ++s) {\n- let elem = doc.getElementById(sections[s]);\n- console.log(sections[s]);\n+ let elem = doc.getElementById(sections[s].trim());\nif (undefined!=elem && hideSection(elem)) {\nhidden = true;\n}\n",
        "date": "15.09.2021 22:32:53",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Fix issue with trimming section IDs before getting element by ID"
    },
    {
        "msg": "remove some shortcurt information when in party mode.",
        "diff": "diff --git a/ChangeLog b/ChangeLog +3.0.3\n+-----\n+1. Remove some shortcurt information when in party mode.\n+\n3.0.2\n-----\n1. Fix toggling of power when power button replaces player icon.\n",
        "date": "08.12.2022 21:37:12",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Remove shortcut information in party mode and fix power toggling issue."
    },
    {
        "msg": "remove unsed functions",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/utils.js b/MaterialSkin/HTML/material/html/js/utils.js @@ -1207,44 +1207,6 @@ function copyTextToClipboard(text) {\n}\n}\n-function copyImageToClipboard(url) {\n- console.log('create img');\n- var img=document.createElement('img');\n- img.src=url;\n- document.body.appendChild(img);\n- /*\n- var r = document.createRange();\n- r.setStartBefore(img);\n- r.setEndAfter(img);\n- r.selectNode(img);\n- var sel = window.getSelection();\n- sel.addRange(r);*/\n- //img.select();\n- const range = document.createRange();\n- range.selectNodeContents(img);\n- const sel = window.getSelection();\n- sel.removeAllRanges();\n- sel.addRange(range);\n- //img.setSelectionRange(0, img.value.length);\n- try {\n- console.log('copy');\n- document.execCommand('copy');\n- } catch (err) {\n- } finally {\n- document.body.removeChild(img);\n- }\n-}\n-\n-function copyElementToClipboard(element) {\n- window.getSelection().removeAllRanges();\n- let range = document.createRange();\n- range.selectNode(typeof element === 'string' ? document.getElementById(elementName) : element);\n- window.getSelection().addRange(range);\n- console.log(\"COPY\");v\n- document.execCommand('copy');\n- window.getSelection().removeAllRanges();\n- }\n-\nfunction getTouchPos(ev) {\nif (undefined==ev) {\nreturn undefined;\n",
        "date": "10.01.2023 21:51:59",
        "repo": "cdrummond/lms-material",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unnecessary functions for copying image and element to clipboard"
    },
    {
        "msg": "remove ignoreError since Sentry now ignores `TransitionAborted` errors caused by regular redirects.",
        "diff": "diff --git a/app/services/raven.js b/app/services/raven.js @@ -16,18 +16,6 @@ export default RavenLogger.extend({\nreturn this._super(...arguments);\n},\n- ignoreError(error) {\n- // Ember 2.X seems to not catch `TransitionAborted` errors caused by\n- // regular redirects. We don't want these errors to show up in Sentry\n- // so we have to filter them ourselves.\n- //\n- // Once this issue https://github.com/emberjs/ember.js/issues/12505 is\n- // resolved we can remove this code.\n- //\n- // Last checked 9/28/2016\n- return error.name === 'TransitionAborted';\n- },\n-\ncallRaven(/* methodName, ...optional */) {\nreturn this._super(...arguments);\n}\n",
        "date": "23.03.2017 21:11:27",
        "repo": "code-corps/code-corps-ember",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unnecessary error filtering in RavenLogger"
    },
    {
        "msg": "remove prebuilt-phantom",
        "diff": "diff --git a/circle.yml b/circle.yml @@ -18,7 +18,6 @@ dependencies:\n- /home/ubuntu/nvm/versions/node/v6.9.4/lib/node_modules\noverride:\n- yarn global add bower\n- - yarn global add phantomjs-prebuilt\n- yarn add node-sass\n- yarn install\n- bower install\n",
        "date": "14.04.2017 15:01:32",
        "repo": "code-corps/code-corps-ember",
        "type": "remove",
        "chatgpt_zeroshot": "Remove phantomjs-prebuilt from global dependencies and add node-sass to project dependencies"
    },
    {
        "msg": "remove MODEL_FACTORY_INJECTIONS",
        "diff": "diff --git a/app/app.js b/app/app.js @@ -5,8 +5,6 @@ import config from './config/environment';\nconst { Application } = Ember;\n-Ember.MODEL_FACTORY_INJECTIONS = true;\n-\nconst App = Application.extend({\nmodulePrefix: config.modulePrefix,\npodModulePrefix: config.podModulePrefix,\n",
        "date": "10.09.2017 15:51:50",
        "repo": "code-corps/code-corps-ember",
        "type": "remove",
        "chatgpt_zeroshot": "Remove MODEL_FACTORY_INJECTIONS setting from app.js"
    },
    {
        "msg": "remove unused ember-deferred-content addon",
        "diff": "diff --git a/package.json b/package.json \"ember-composable-helpers\": \"2.1.0\",\n\"ember-concurrency\": \"^0.8.1\",\n\"ember-data\": \"~2.18.0\",\n- \"ember-deferred-content\": \"0.2.0\",\n\"ember-disable-proxy-controllers\": \"^1.0.1\",\n\"ember-dragula\": \"1.9.3\",\n\"ember-exam\": \"1.0.0\",\n",
        "date": "19.01.2018 17:22:15",
        "repo": "code-corps/code-corps-ember",
        "type": "remove",
        "chatgpt_zeroshot": "Remove ember-deferred-content from package.json"
    },
    {
        "msg": "remove root url on s/w for testing",
        "diff": "diff --git a/ember-cli-build.js b/ember-cli-build.js @@ -40,11 +40,6 @@ module.exports = function(defaults) {\n]\n};\n- if (app.env === 'production' && prepend !== '') {\n- app.options['ember-service-worker'] = {\n- rootUrl: `${prepend}/`\n- }\n- }\nif (!process.env.EMBER_CLI_FASTBOOT) {\napp.import(app.bowerDirectory + '/jquery-scrollparent/jquery.scrollparent.js');\n",
        "date": "28.03.2017 21:26:35",
        "repo": "ember-learn/ember-api-docs",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unnecessary code for production environment in ember-cli-build.js"
    },
    {
        "msg": "remove powered-by from static assets",
        "diff": "diff --git a/bin/ember-fastboot b/bin/ember-fastboot @@ -38,6 +38,7 @@ const app = httpServer.app;\napp.use(express.static(distPath, {\nsetHeaders(res, path, stat) {\nres.setHeader('Cache-Control', 'public, max-age=365000000, immutable');\n+ res.removeHeader('X-Powered-By');\n}\n}));\n",
        "date": "28.07.2017 21:23:47",
        "repo": "ember-learn/ember-api-docs",
        "type": "remove",
        "chatgpt_zeroshot": "Remove X-Powered-By header in ember-fastboot bin"
    },
    {
        "msg": "remove unnecessary check in hash to query",
        "diff": "diff --git a/lib/hash-to-query/index.js b/lib/hash-to-query/index.js @@ -15,9 +15,6 @@ module.exports = {\nvar hash = window.location.hash;\nif (hash && hash.length > 1) {\nvar pathName = window.location.pathname;\n- if (pathName.indexOf('/methods/') === -1 &&\n- pathName.indexOf('/properties/') === -1 &&\n- pathName.indexOf('/events/') === -1) {\nvar type = hash.slice(1, hash.indexOf('_'));\nvar name = hash.slice(hash.indexOf('_') + 1, hash.length);\nvar anchor = '?anchor=' +\n@@ -27,7 +24,6 @@ module.exports = {\ntype;\nwindow.location.href = window.location.origin + pathName + anchor;\n}\n- }\n</script>\n`\n}\n",
        "date": "25.10.2017 02:16:06",
        "repo": "ember-learn/ember-api-docs",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor hash-to-query logic and remove unnecessary conditionals"
    },
    {
        "msg": "remove redundant uniq call",
        "diff": "diff --git a/app/components/api-index-filter.js b/app/components/api-index-filter.js import { computed } from '@ember/object';\nimport Component from '@ember/component';\n-import uniq from 'npm:lodash.uniq';\nimport sortBy from 'npm:lodash.sortby';\nconst filterDataComputedParams = 'filterData.{showInherited,showProtected,showPrivate,showDeprecated}';\n@@ -38,8 +37,8 @@ export default Component.extend({\nitems = items.filter(item => item.deprecated !== true);\n}\n- let sortedUniqueItems = uniq(sortBy(items, 'name'), true, (item => item.name));\n- return this.filterMultipleInheritance(sortedUniqueItems);\n+ let sortedItems = sortBy(items, (item => item.name));\n+ return this.filterMultipleInheritance(sortedItems);\n},\nfilteredData: computed('filteredMethods', 'filteredProperties', 'filteredEvents', function() {\n",
        "date": "18.12.2017 02:19:40",
        "repo": "ember-learn/ember-api-docs",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor sorting logic in api-index-filter component"
    },
    {
        "msg": "remove deploy to heroku section",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -23,12 +23,3 @@ install:\nscript:\n- yarn test\n-\n-deploy:\n- provider: heroku\n- buildpack: https://codon-buildpacks.s3.amazonaws.com/buildpacks/hone/emberjs.tgz\n- app:\n- master: ember-api-docs-staging\n- production: ember-api-docs\n- api_key:\n- secure: Gkx9aZ9FrLnuWuaedWCND8Wg7PoYeFO4kIzuIjXp8b3MJTGpUszSGqC6nMBNqpzsACKdDXERPwsRoXTDLgKPCjngpnc67BedJfZJ2X7ruu1SsjNjs0GuWZ3EX0ppw6vgCWvcL2dkn6cs7w9AzYdUsi4l4zMoSTHYXG1VxFXR7TqVJ3Aw/Cx7UoOrrB0eZw1DhoPqfnLjwZ6sl6K7ol4a5413MYcMTIZq3ZzwdnfQF8iBC1uQT6TkDP640pZdLvt3fKTmoG/3WgFuw9Ijy+IjDzJbiVIaOcYrhc2Sev1PDy1EKybZ/xYbqFkSUk7ehCzPCLJwKVrpW+8b3bqNZXXq7XhbLGrK7yQnTEu49KepkAxOMUPOdnEd0Iy4nbDtCkBI19BfJKcP5rqYL/p//Qv/iXO1zzuBWevRZFF7thk+vgXljpSmPEBlKFjsMiUV3E6HIqZIw4n5GNkq8BuRHq2EjLp+IVHl5KFDvnwL+D9zv0Aigq5bYmGH7tyLQ4bTIa1EfZSSWHCu+g6+X/7tCaeoncjTT0gJgYGJgYhQ/LD5GmVCLvSwCXcY5q7rS5lHRDP6FuKzvyScGCjJixo6PA1NN32xIfUVA8cj6VdIHatqSZ0dpfm9sHHnE3gwJ2F3yw3Bdl5ZtV0uNDubrA0Q+RiqzMxHyW9kUl3BWBhmCXlKg1M=\n",
        "date": "12.02.2018 10:32:15",
        "repo": "ember-learn/ember-api-docs",
        "type": "remove",
        "chatgpt_zeroshot": "Remove deploy configuration from .travis.yml"
    },
    {
        "msg": "remove code examples from meta description",
        "diff": "diff --git a/tests/unit/utils/create-excerpt-test.js b/tests/unit/utils/create-excerpt-test.js @@ -7,7 +7,9 @@ const testString = \"<html><head></head><body><p><code>HashLocation</code> implem\ntest('it works', function(assert) {\nlet result = createExcerpt(testString);\n- assert.ok(result.includes('/\\n') === false, 'does not include line breaks');\n+ assert.ok(result.includes('/\\n') === false, 'does not include tabs');\n+ assert.ok(result.includes('<table') === false, 'does not include table code example');\n+ assert.ok(result.includes('/\\t') === false, 'does not include line breaks');\nassert.ok(result.length <= 300, 'length is maximum 300 characters');\n});\n",
        "date": "27.06.2018 13:16:47",
        "repo": "ember-learn/ember-api-docs",
        "type": "remove",
        "chatgpt_zeroshot": "Update createExcerpt test to check for tabs and table code examples"
    },
    {
        "msg": "remove og image",
        "diff": "diff --git a/app/templates/head.hbs b/app/templates/head.hbs <link rel=\"dns-prefetch\" href=\"{{model.cdnDomain}}\">\n<meta property=\"og:title\" content={{model.title}}>\n-<meta property=\"og:image\" content=\"assets/images/ember-logo.png\">\n-<meta property=\"og:image:width\" content=\"1200\">\n-<meta property=\"og:image:height\" content=\"1016\">\n{{#if model.description}}\n<meta name=\"description\" content={{model.description}}>\n",
        "date": "27.06.2018 13:31:43",
        "repo": "ember-learn/ember-api-docs",
        "type": "remove",
        "chatgpt_zeroshot": "Remove og:image meta tags from head.hbs template"
    },
    {
        "msg": "remove test for open graph tag that was removed",
        "diff": "diff --git a/tests/acceptance/open-graph-tags-test.js b/tests/acceptance/open-graph-tags-test.js @@ -19,14 +19,3 @@ test('assigns title property', function (assert) {\nconst title = findOpenGraphContent('title');\nassert.equal(title, 'Container - 1.0 - Ember API Documentation');\n});\n-\n-test('assigns image property and width/height', function (assert) {\n- const image = findOpenGraphContent('image');\n- assert.equal(image, 'assets/images/ember-logo.png');\n-\n- const imageWidth = findOpenGraphContent('image:width');\n- assert.equal(imageWidth, '1200');\n-\n- const imageHeight = findOpenGraphContent('image:height');\n- assert.equal(imageHeight, '1016');\n-});\n",
        "date": "02.10.2018 00:00:10",
        "repo": "ember-learn/ember-api-docs",
        "type": "remove",
        "chatgpt_zeroshot": "Remove image property and width/height test in open-graph-tags-test"
    },
    {
        "msg": "remove console msgs",
        "diff": "diff --git a/bin/ember-fastboot b/bin/ember-fastboot @@ -57,7 +57,6 @@ app.use(\n/** We rewrite the 307 location header into a relativeURL so that our special setup is handled */\napp.use(function(req, res, next) {\n- console.log(req.headers['x-forwarded-host'], req.headers.host);\nconst originalSendFn = res.send;\n",
        "date": "28.03.2019 21:36:43",
        "repo": "ember-learn/ember-api-docs",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor handling of 307 location header in Ember Fastboot"
    },
    {
        "msg": "remove line from deprecation workflow",
        "diff": "diff --git a/config/deprecation-workflow.js b/config/deprecation-workflow.js @@ -2,7 +2,6 @@ self.deprecationWorkflow = self.deprecationWorkflow || {};\nself.deprecationWorkflow.config = {\nworkflow: [\n{ handler: \"silence\", matchId: \"transition-state\" },\n- { handler: \"throw\", matchId: \"deprecate-router-events\" },\n- { handler: \"throw\", matchId: \"ember-native-dom-helpers-click\" }\n+ { handler: \"throw\", matchId: \"deprecate-router-events\" }\n]\n};\n",
        "date": "29.03.2020 09:32:20",
        "repo": "ember-learn/ember-api-docs",
        "type": "remove",
        "chatgpt_zeroshot": "Remove deprecated handler for \"ember-native-dom-helpers-click\" in deprecation workflow."
    },
    {
        "msg": "remove the defunct \"How to import and use packages\" section",
        "diff": "diff --git a/app/templates/project-version/index.hbs b/app/templates/project-version/index.hbs <li>{{#link-to 'project-version.classes.class' 'Route'}}Route{{/link-to}} - used to define individual routes, including the {{#link-to 'project-version.classes.class.methods.method' 'Route' 'model' (query-params anchor='model')}}model{{/link-to}} hook for loading data</li>\n<li>{{#link-to 'project-version.classes.class' 'Service'}}Service{{/link-to}} - an Ember object that lives for the duration of the application, and can be made available in different parts of your application</li>\n</ul>\n- <h2>How to import and use packages</h2>\n- <p>\n- Ember has a modern ECMAScript 2015 (also known as ES2015 or ES6) modules API. Each major class and its supporting functions live in a dedicated module, which you can import like this:\n- </p>\n- {{newPackageImportSyntax}}\n- <p>\n- When working with older Ember codebases, you may see a different set of imports. Before the Ember JavaScript Modules API design, developers had to import the entire Ember framework as a single package. That package was an object which contained <em>all</em> the Ember classes and functions, so you will see code that pulls the classes or functions off that object, like this:\n- </p>\n- {{oldPackageImportSyntax}}\n- <p>\n- For new apps, you should always prefer the the JavaScript Modules API, and old apps should migrate to it over time: it allows the building of smaller packages based on chunks of functionality and importing only parts of the Ember framework that are needed.\n- </p>\n- <p>\n- The most up-to-date and complete mappings between the previous API and the new JavaScript Modules API can be found at the <a href='https://github.com/ember-cli/ember-rfc176-data'>ember-rfc176-data</a> repository. <a href='https://github.com/tomdale/ember-modules-codemod'>Codemod tooling</a> is also available to help migrate existing Ember projects to the new JavaScript Modules API syntax.\n- </p>\n<h2>Useful links</h2>\n<ul>\n<li>\n",
        "date": "16.10.2020 10:52:06",
        "repo": "ember-learn/ember-api-docs",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor package import syntax and provide guidance on using modern ECMAScript 2015 modules API."
    },
    {
        "msg": "remove args from the chain to pass tests",
        "diff": "diff --git a/app/components/class-field-description.js b/app/components/class-field-description.js @@ -7,8 +7,8 @@ export default class ClassFieldDescription extends Component {\nget hasImportExample() {\nreturn this.legacyModuleMappings.hasFunctionMapping(\n- this.args.field.name,\n- this.args.field.class\n+ this.field.name,\n+ this.field.class\n);\n}\n",
        "date": "05.11.2021 11:39:40",
        "repo": "ember-learn/ember-api-docs",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor field and class references in ClassFieldDescription component"
    },
    {
        "msg": "remove bad fallback for `a` value",
        "diff": "diff --git a/app/components/ember-anchor.js b/app/components/ember-anchor.js @@ -7,7 +7,7 @@ export default class EmberAnchor extends AnchorComponent {\n// This overrides Ember Anchor to support scrolling within a fixed position element\n_scrollToElemPosition() {\nlet qp = this.anchorQueryParam;\n- let qpVal = this.a ?? this.controller[qp];\n+ let qpVal = this.a;\nlet elem = document.querySelector(`[data-${qp}=\"${qpVal}\"]`);\nif (elem && elem.offsetHeight) {\n",
        "date": "08.11.2021 17:38:52",
        "repo": "ember-learn/ember-api-docs",
        "type": "remove",
        "chatgpt_zeroshot": "Fix anchorQueryParam value assignment in EmberAnchor component"
    },
    {
        "msg": "remove unnecessary init",
        "diff": "diff --git a/app/components/search-input/dropdown.js b/app/components/search-input/dropdown.js @@ -6,7 +6,6 @@ import {\nimport { get } from '@ember/object';\nimport Component from '@ember/component';\nimport { A } from '@ember/array';\n-import { tracked } from '@glimmer/tracking';\n@tagName('span')\n@classNames('ds-dropdown-menu', 'ds-with-1')\n@@ -17,13 +16,6 @@ export default class Dropdown extends Component {\nisVisible = false;\n- @tracked results;\n-\n- constructor() {\n- super(...arguments);\n- this.results = A();\n- }\n-\n// show\n// Massage data to make it easier for displaying on the template\n// Returned object:\n",
        "date": "08.11.2021 01:45:32",
        "repo": "ember-learn/ember-api-docs",
        "type": "remove",
        "chatgpt_zeroshot": "Remove @tracked decorator and constructor initialization of results in Dropdown component"
    },
    {
        "msg": "remove buffers `noAssert` argument Support for the `noAssert` argument dropped in the upcoming Node.js v.10. This removes the argument to make sure everything works as it should. Refs:",
        "diff": "diff --git a/lib/types/time-uuid.js b/lib/types/time-uuid.js @@ -171,9 +171,9 @@ function writeTime(buffer, time, ticks) {\n.multiply(Long.fromNumber(10000))\n.add(Long.fromNumber(ticks));\nconst timeHigh = val.getHighBitsUnsigned();\n- buffer.writeUInt32BE(val.getLowBitsUnsigned(), 0, true);\n- buffer.writeUInt16BE(timeHigh & 0xffff, 4, true);\n- buffer.writeUInt16BE(timeHigh >>> 16 & 0xffff, 6, true);\n+ buffer.writeUInt32BE(val.getLowBitsUnsigned(), 0);\n+ buffer.writeUInt16BE(timeHigh & 0xffff, 4);\n+ buffer.writeUInt16BE(timeHigh >>> 16 & 0xffff, 6);\n}\n/**\n",
        "date": "12.03.2018 09:50:34",
        "repo": "datastax/nodejs-driver",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor time-uuid.js writeTime function to improve code readability"
    },
    {
        "msg": "remove rules instead of commenting",
        "diff": "diff --git a/sass/patterns/_homepage.scss b/sass/patterns/_homepage.scss .searchfield-wrapper {\nmargin: 4px 5px 5px 0;\n}\n-\n- /*\n- .buttonset {\n- > *:not(.searchfield-wrapper) {\n- margin-top: 6px;\n- }\n- }\n-\n- .more {\n- > * {\n- margin-top: 6px;\n- }\n- }\n- */\n}\n[class^=\"btn\"] {\n",
        "date": "13.01.2017 10:42:08",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unnecessary styles from homepage.scss"
    },
    {
        "msg": "remove stray tag",
        "diff": "diff --git a/views/controls/dropdown.html b/views/controls/dropdown.html <div class=\"row\">\n<div class=\"twelve columns\">\n- <a class=\"hyperlink\" href=\"#\">More Information Hyperlink</a><br><br><br><br>\n<div class=\"field\">\n<label for=\"states\" class=\"label\">States</label>\n",
        "date": "17.01.2017 12:32:31",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unnecessary hyperlinks and spacing in dropdown.html"
    },
    {
        "msg": "remove some unused code in Tabs Component",
        "diff": "diff --git a/js/tabs.js b/js/tabs.js // the overflow area of the tablist container <UL>.\nisTabOverflowed: function(li) {\nreturn li[0].getBoundingClientRect().top > this.tablist[0].getBoundingClientRect().top;\n- /*\n- if (!li || li.length === 0) {\n- return true;\n- }\n-\n- var tab = li[0],\n- tablist = this.tablist[0],\n- tabOffset = tab.offsetTop,\n- tablistOffset = tablist.offsetTop,\n- tablistHeight = window.getComputedStyle(tablist, null).getPropertyValue('height');\n-\n- if (tablist.scrollTop > 0) {\n- tablist.scrollTop = 0;\n- }\n-\n- return tabOffset - tablistOffset >= tablistHeight;\n- */\n},\nfindLastVisibleTab: function() {\n",
        "date": "18.01.2017 14:48:25",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor isTabOverflowed function in tabs.js"
    },
    {
        "msg": "remove some more references to jQuery height/width in favor of straight-up calls to element height/width properties. Removed some unnecessary adjustments to width/height in _focusBar()_ method",
        "diff": "diff --git a/js/tabs.js b/js/tabs.js activate: function(href) {\nvar self = this,\na, targetTab, targetPanel, oldTab, oldPanel,\n- selectedStateTarget;\n+ selectedStateTarget,\n+ activeStateTarget;\nif (self.isURL(href)) {\nreturn this.callSource(href, true);\nif (targetTab.is('.tab')) {\nselectedStateTarget = targetTab;\n+ activeStateTarget = targetTab;\n}\n- var ddMenu = targetTab.parents('.popupmenu');\n+ var ddMenu = targetTab.parents('.popupmenu'),\n+ ddTab;\n+\nif (ddMenu.length) {\n- var tab = ddMenu.data('trigger');\n- if (tab.length) {\n- selectedStateTarget = tab;\n+ ddTab = ddMenu.data('trigger');\n+ if (ddTab.length) {\n+ selectedStateTarget = ddTab;\n+ activeStateTarget = ddTab;\n}\n}\n- var activeStateTarget = targetTab;\n- if (this.isTabOverflowed(targetTab)) {\n+ if (this.isTabOverflowed(activeStateTarget)) {\nactiveStateTarget = this.moreButton;\nselectedStateTarget = this.moreButton;\n}\n// Remove overflowed tabs\nsizeableTabs.removeAttr('style').each(function() {\nvar t = $(this);\n-\nif (self.isTabOverflowed(t)) {\nsizeableTabs = sizeableTabs.not(t);\n}\n// Math: +101 is the padding of the <ul class=\"tab-list\"> element\nif (!sizeableTabs.length) {\nvisibleTabSize = (tabContainerW - appTriggerSize + 101);\n- this.moreButton.width(visibleTabSize);\n+ this.moreButton[0].style.width = visibleTabSize + 'px';\nreturn;\n}\nvisibleTabSize = defaultTabSize;\n}\n- sizeableTabs.width(visibleTabSize);\n+ for (var i = 0; i < sizeableTabs.length; i++) {\n+ sizeableTabs[i].style.width = visibleTabSize + 'px';\n+ }\n+\nthis.adjustSpilloverNumber();\n},\nreturn;\n}\n+ var targetClassName = target[0].className,\n+ isTab = Soho.DOM.classNameHas(targetClassName, 'tab'),\n+ isDismissible = Soho.DOM.classNameHas(targetClassName, 'dismissible'),\n+ isDropdown = Soho.DOM.classNameHas(targetClassName, 'has-popupmenu');\n+\ntargetStyle = window.getComputedStyle(target[0], null);\npaddingLeft = parseInt(targetStyle.getPropertyValue('padding-left'), 10) || 0;\npaddingRight = parseInt(targetStyle.getPropertyValue('padding-right'), 10) || 0;\n- width = target.innerWidth();\n+ width = parseInt(targetStyle.getPropertyValue('width')) || 0;\n- if (target.is('.tab')) {\n+ if (isTab) {\nanchorStyle = window.getComputedStyle(target.children('a')[0]);\npaddingLeft += parseInt(anchorStyle.getPropertyValue('padding-left'), 10) || 0;\npaddingRight += parseInt(anchorStyle.getPropertyValue('padding-right'), 10) || 0;\n- width = target.width();\n- // Dirty hack for first/last tab types, and Firefox.\n- if (target.is(':first-child, :last-child')) {\n- width = width - 1;\n- }\n- if ($('html').hasClass('is-firefox')) {\n- width = width - 1;\n+ /*\n+ if (isDropdown &&) {\n+ width += 10;\n}\n+ */\n+\n+ /*\n+ if (isDismissible) {\n+ paddingRight -= 10;\n}\n- if (target.is('.dismissible.tab') || target.is('.has-popupmenu.tab')) {\n- paddingRight -= target.is('.has-popupmenu.tab') ? 0 : 10;\n- width += 10;\n+ */\n+\n}\nvar left = Locale.isRTL() ?\nclearTimeout(self.animationTimeout);\nthis.animatedBar.addClass('visible');\n-\nfunction animationTimeout(cb) {\nself.animatedBar[0].style.left = left + 'px';\nself.animatedBar[0].style.width = width + 'px';\n",
        "date": "24.01.2017 16:03:31",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor tab activation logic and adjust tab width calculation in tabs.js"
    },
    {
        "msg": "remove static (N Results) string in lookup code",
        "diff": "diff --git a/js/lookup.js b/js/lookup.js self.modal = $('body').data('modal');\nif (!this.settings.title) {\n- self.modal.element.find('.modal-title').append(' <span class=\"datagrid-result-count\">(N Results)</span>');\n+ self.modal.element.find('.modal-title').append(' <span class=\"datagrid-result-count\"></span>');\n}\n// Wait until search field available\n",
        "date": "02.02.2017 14:49:01",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove result count from modal title in lookup.js"
    },
    {
        "msg": "remove display: none from tabs added via api; protecting against undefined content",
        "diff": "diff --git a/js/tabs.js b/js/tabs.js // If a jQuery-wrapped element is provided, actually append the element.\n// If content is text/string, simply inline it.\n- var markup = $('<div id=\"'+ tabId +'\" class=\"tab-panel\" role=\"tabpanel\" style=\"display: none;\"></div>');\n+ var markup = $('<div id=\"'+ tabId +'\" class=\"tab-panel\" role=\"tabpanel\"></div>');\nif (content instanceof $) {\nmarkup.append(content);\n} else {\n- markup[0].innerHTML = content;\n+ markup[0].innerHTML = content || '';\n}\nif (doInsert === true) {\n",
        "date": "15.02.2017 15:09:38",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor tab panel creation to handle text content inline or as a jQuery-wrapped element"
    },
    {
        "msg": "remove more sp copy pasta",
        "diff": "diff --git a/js/stepprocess.js b/js/stepprocess.js * @param {object} [options.stepFolder=\".js-step-folder\"] - jQuery selector for the step folder elements\n* @param {object} [options.btnPrev=\".js-step-link-prev\"] - jQuery selector for the previous step button\n* @param {object} [options.btnNext=\".js-step-link-next\"] - jQuery selector for the next step button\n- * @param {object} [options.btnNext=\".js-step-container-scroll\"] - jQuery selector for the sidebar scrolling\n- * @param {object} [options.btnNext=\".js-step-list-scroll\"] - jQuery selector for the step panel scrolling\n* @param {function(event, args)|Promise} [options.beforeSelectStep=null] - A callback (function or promise) that gives\n* args.stepLink (the step link element) and args.isStepping (whether we are prev/next'ing or not)\n*/\n",
        "date": "21.02.2017 09:45:50",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unnecessary jQuery selectors for sidebar and step panel scrolling in stepprocess.js"
    },
    {
        "msg": "remove a stray setting of the initial value of masked fields that was causing change events not to fire.",
        "diff": "diff --git a/js/mask.js b/js/mask.js key = e.which,\ntypedChar = $.actualChar(e);\n- // set the original value if it doesn't exist.\n- if (!self.initValue) {\n- self.initValue = self.element.val();\n- }\n-\n// Remove modifiers on \"keyup\"\nif (eventType === 'keyup') {\nif (key === 8) {\n",
        "date": "22.02.2017 13:57:11",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unnecessary code and update keyup event handling in mask.js"
    },
    {
        "msg": "remove 4.2.6 from change log",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md -## 4.2.6\n-Release Date: 2017-03-31 (Tentative)\n-\n-### Download Build Assets:\n-Build Server: http://bamboo.infor.com/browse/SOHO-DOC\n-Npm: http://npm.infor.com\n-\n-### Demo Site\n-http://usmvvwdev53:425/controls\n-\n-### Key New Features\n-\n-### Improvements\n-\n-### Bug Fixes\n-\n-### Breaking Changes\n-\n-### Ui Changes\n-\n-### Tips\n-\n-### Other\n-\n-\n## 4.2.5\nRelease Date: 2017-02-23\n",
        "date": "24.02.2017 13:46:46",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove outdated information and update version number to 4.2.6"
    },
    {
        "msg": "remove ID by mistake",
        "diff": "diff --git a/views/tests/toolbarsearchfield/destroy.html b/views/tests/toolbarsearchfield/destroy.html <input class=\"searchfield\" placeholder=\"keyword\" id=\"regular-toolbar-searchfield\" name=\"regular-toolbar-searchfield\" />\n</div>\n- <button type=\"button\" class=\"btn\" type=\"button\" id=\"destroy\">Destroy</button>\n+ <button type=\"button\" class=\"btn\" id=\"destroy\">Destroy</button>\n</div>\n</div>\n",
        "date": "17.03.2017 08:25:15",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove duplicate \"type\" attribute in destroy button in toolbarsearchfield view"
    },
    {
        "msg": "remove Dup column",
        "diff": "diff --git a/views/tests/datagrid/datagrid-source-format.html b/views/tests/datagrid/datagrid-source-format.html columns.push({ id: 'activity', name: 'Activity', field: 'activity', editor: Editors.Input, filterType: 'text'});\ncolumns.push({ id: 'quantity', name: 'Quantity', field: 'quantity', editor: Editors.Input, filterType: 'text'});\ncolumns.push({ id: 'orderDate', name: 'Order Date', field: 'orderDate', formatter: Formatters.Date, editor: Editors.Date, filterType: 'date' , sourceFormat: 'yyyyMMdd', dateFormat: 'yyyy-MM-dd'});\n- columns.push({ id: 'orderDate2', name: 'Order Date2', field: 'orderDate', formatter: Formatters.Date, editor: Editors.Date, filterType: 'date' , sourceFormat: 'yyyyMMdd', dateFormat: 'dd-MM-yyyy'});\ncolumns.push({ id: 'status', name: 'Status', field: 'status', formatter: Formatters.Text, editor: Editors.Input, filterType: 'text' });\n//Init and get the api for the grid\n",
        "date": "03.04.2017 13:14:51",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove orderDate2 column from datagrid-source-format.html"
    },
    {
        "msg": "remove temp placeholder for orgStyle with cell editor Datagrid",
        "diff": "diff --git a/js/datagrid.js b/js/datagrid.js @@ -625,15 +625,8 @@ window.Editors = {\n};\nthis.destroy = function () {\n- var self = this,\n- orgStyle = container.attr('data-org-style');\n-\n- if (orgStyle !== 'false') {\n- container.attr('style', orgStyle).removeAttr('data-org-style');\n- } else {\n- container.removeAttr('style data-org-style');\n- }\n-\n+ var self = this;\n+ container.removeAttr('style');\napi.quickEditMode = false;\nself.input.off('hide.editor keydown.editor');\nsetTimeout(function() {\n@@ -5085,11 +5078,7 @@ $.fn.datagrid = function(options) {\n}\nif (isEditor) {\n- var orgStyle = cellNode.attr('style') || false;\n- cellNode.attr('data-org-style', orgStyle).css({\n- 'position': 'static',\n- 'height': cellNode.outerHeight()\n- });\n+ cellNode.css({'position': 'static', 'height': cellNode.outerHeight()});\n}\n//Editor.init\n",
        "date": "03.04.2017 15:28:26",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor destroy method and editor initialization in datagrid.js"
    },
    {
        "msg": "remove upper case from example",
        "diff": "diff --git a/views/controls/modal.html b/views/controls/modal.html <!-- \"Context\" Example -->\n<div id=\"modal-mask\" style=\"display: none;\">\n<div class=\"field\">\n- <label for=\"upper\">Upper Case</label>\n- <input id=\"upper\" name=\"upper\" style=\"text-transform: uppercase\" />\n+ <label for=\"title\">Title</label>\n+ <input type=\"text\" id=\"title\" name=\"title\" />\n</div>\n<div class=\"field\">\n",
        "date": "04.04.2017 14:37:50",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor modal.html to change input field from upper case to title."
    },
    {
        "msg": "remove unused setting",
        "diff": "diff --git a/js/dropdown.js b/js/dropdown.js showSelectAll: false, // If true, on Multiselect dropdowns, will show an additional option at the top of the list labeled \"select all\".\nsource: undefined, //A function that can do an ajax call.\nsourceArguments: {}, // If a source method is defined, this flexible object can be passed into the source method, and augmented with parameters specific to the implementation.\n- dontManageOptions: false, //Option used in Angular as angular will mange the options add.\nreloadSourceOnOpen: false, // If set to true, will always perform an ajax call whenever the list is opened. If false, the first AJAX call's results are cached.\nempty: false, //Initialize Empty Value\ndelay: 300 //Typing Buffer Delay\n",
        "date": "03.05.2017 09:02:23",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove dontManageOptions option and add empty and delay options in dropdown.js"
    },
    {
        "msg": "remove non required change",
        "diff": "diff --git a/js/datagrid.js b/js/datagrid.js @@ -1956,7 +1956,7 @@ $.fn.datagrid = function(options) {\n//just the button\nbreak;\ncase 'date':\n- filterMarkup += '<input ' + (col.filterDisabled ? ' disabled' : '') + ' type=\"text\" class=\"datepicker\" ' + (col.dateFormat ? 'data-options=\"{dateFormat: ' + col.dateFormat + '}\"' : '') + ' id=\"'+ filterId +'\"/>';\n+ filterMarkup += '<input ' + (col.filterDisabled ? ' disabled' : '') + ' type=\"text\" class=\"datepicker\" id=\"'+ filterId +'\"/>';\nbreak;\ncase 'decimal':\nfilterMarkup += '<input ' + (col.filterDisabled ? ' disabled' : '') + ' type=\"text\" id=\"'+ filterId +'\" data-mask-mode=\"number\" data-mask=\"'+ (col.mask ? col.mask : '####.00') + '\">';\n",
        "date": "26.06.2017 11:10:46",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unnecessary data-options attribute from date filter input"
    },
    {
        "msg": "remove jQuery Import",
        "diff": "diff --git a/test2/unit/locale/common.js b/test2/unit/locale/common.js @@ -8,9 +8,6 @@ define([\ndocument = jsdom('<!DOCTYPE html><html id=\"html\"><head></head><body></body></html>'); // jshint ignore:line\nwindow = document.defaultView; // jshint ignore:line\n- //Load Jquery from node packages\n- $ = jQuery = require('jquery'); // jshint ignore:line\n-\n//Load the Locale.js we are testing\nrequire('../../../js/locale.js');\nLocale = window.Locale; // jshint ignore:line\n@@ -315,13 +312,6 @@ define([\n// Test date only different format\nexpect(Locale.parseDate('05-10-2015', 'dd-MM-yyyy').getTime()).to.equal(new Date(2015, 09, 5, 0, 0, 0).getTime());\n- // Test full UTC\n- //$('#date-field').data('datepicker').setValue('2015-05-10T00:00:00');\n- // Test full UTC around midday\n- //$('#date-field-2').data('datepicker').setValue('2015-05-10T12:00:00');\n- // Test full UTC with Date object\n- //$('#date-field-3').data('datepicker').setValue(new Date('2015-05-10T00:00:00'));\n-\n},\n'be able to return time format': function(){\n",
        "date": "26.06.2017 10:15:10",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unnecessary jQuery code and commented out test cases"
    },
    {
        "msg": "remove some extra commented code",
        "diff": "diff --git a/components/listbuilder/test-on-selected.html b/components/listbuilder/test-on-selected.html @@ -121,17 +121,17 @@ $('body').one('initialized', function () {\n// Make selected after every one second (1000 milliseconds) ================\n// Select first item\nsetTimeout(function() {\n- // api.select('first');\n+ api.select('first');\n}, 1000);\n// Select last item\nsetTimeout(function() {\n- // api.select('last');\n+ api.select('last');\n}, 2000);\n// Select third item (zero based index)\nsetTimeout(function() {\n- // api.select(2);\n+ api.select(2);\n}, 3000);\n});\n",
        "date": "11.07.2017 14:02:46",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Fix selecting items in listbuilder test-on-selected.html"
    },
    {
        "msg": "remove `touchInterceptor()` method for Accordion header tap handling.",
        "diff": "diff --git a/components/accordion/accordion.js b/components/accordion/accordion.js */\nhandleEvents: function() {\nvar self = this,\n- headerWhereMouseDown = null,\n- linkFollowedByTouch = null;\n+ headerWhereMouseDown = null;\n// Returns \"Header\", \"Anchor\", or \"Expander\" based on the element's tag\nfunction getElementType(element) {\nreturn elementType;\n}\n- // Intercepts a 'touchend' event in order to either prevent a link from being followed,\n- // or allows it to continue.\n- function touchendInterceptor(e, element) {\n- linkFollowedByTouch = true;\n- var type = getElementType(element),\n- result = self['handle' + type + 'Click'](e, element);\n-\n- if (!result) {\n- e.preventDefault();\n- }\n- return result;\n- }\n-\n// Intercepts a 'click' event in order to either prevent a link from being followed,\n// or allows it to continue.\nfunction clickInterceptor(e, element) {\nvar type = getElementType(element);\n- if (linkFollowedByTouch) {\n- linkFollowedByTouch = null;\n- return false;\n- }\nreturn self['handle' + type + 'Click'](e, element);\n}\n- this.headers.on('touchend.accordion', function(e) {\n- return touchendInterceptor(e, $(this));\n- }).on('click.accordion', function(e) {\n+ this.headers.on('click.accordion', function(e) {\nreturn clickInterceptor(e, $(this));\n}).on('focusin.accordion', function(e) {\nvar target = $(e.target);\nheaderWhereMouseDown = null;\n});\n- this.anchors.on('touchend.accordion', function(e) {\n- return touchendInterceptor(e, $(this));\n- }).on('click.accordion', function(e) {\n+ this.anchors.on('click.accordion', function(e) {\nreturn clickInterceptor(e, $(this));\n});\nthis.headers.children('[class^=\"btn\"]')\n- .on('touchend.accordion', function(e) {\n- return touchendInterceptor(e, $(this));\n- })\n.on('click.accordion', function(e) {\nreturn clickInterceptor(e, $(this));\n}).on('keydown.accordion', function(e) {\n",
        "date": "12.07.2017 16:36:42",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor event handling in accordion component"
    },
    {
        "msg": "remove unused code from application menu.",
        "diff": "diff --git a/components/applicationmenu/applicationmenu.js b/components/applicationmenu/applicationmenu.js * Detects a change in breakpoint size that can cause the Application Menu's state to change.\n*/\ntestWidth: function() {\n- /*\n- if (this.isLargerThanBreakpoint()) {\n- this.menu.addClass('show-shadow');\n- if (this.userClosed || !this.settings.openOnLarge || this.menu.hasClass('is-open') || this.isAnimating === true) {\n- return;\n- }\n-\n- this.openMenu(true);\n- return;\n- }\n-\n- this.menu.addClass('show-shadow');\n- if (!this.element.find(document.activeElement).length && this.menu.is('.is-open') && this.isAnimating === false) {\n- this.closeMenu();\n- }\n- */\n-\nif (this.isOpen()) {\nif (Soho.breakpoints.isAbove(this.settings.breakpoint)) {\nreturn;\n",
        "date": "13.07.2017 11:37:12",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor application menu breakpoint size detection and state change logic"
    },
    {
        "msg": "remove `js/*.js` path from jshint cmd arguments",
        "diff": "diff --git a/package.json b/package.json \"scripts\": {\n\"start\": \"node server.js\",\n\"stop\": \"./bin/stop.sh\",\n- \"jshint\": \"jshint gruntfile.js app.js js/*.js components/**/*.js\",\n+ \"jshint\": \"jshint gruntfile.js app.js components/**/*.js\",\n\"eslint\": \"eslint src\",\n\"build\": \"grunt\",\n\"install-test-deps\": \"npm install selenium-standalone@latest && npm run install-drivers\",\n",
        "date": "25.07.2017 15:42:22",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor jshint script in package.json to exclude unnecessary files."
    },
    {
        "msg": "remove some unwanted comments",
        "diff": "diff --git a/components/datagrid/_datagrid.scss b/components/datagrid/_datagrid.scss @@ -662,16 +662,6 @@ $datagrid-short-row-height: 23px;\n}\n}\n- // a.row-btn {\n- // // scss-lint:disable ImportantRule\n- // top: -3px;\n- // // scss-lint:disable ImportantRule\n- //\n- // .icon {\n- // margin: 0;\n- // }\n- // }\n-\n&.datagrid-trigger-cell {\n.icon {\nheight: 16px;\n",
        "date": "28.07.2017 13:42:07",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove commented out code for row button styling in datagrid."
    },
    {
        "msg": "remove extra link",
        "diff": "diff --git a/components/colorpicker/colorpicker.md b/components/colorpicker/colorpicker.md 2. Select the label not the Hex [View Example]( ../components/colorpicker/example-show-label)\n4. Test States [View Test]( ../components/colorpicker/test-states)\n5. Test it works on a Modal [View Test]( ../components/colorpicker/test-modal)\n-6. Test it works on a Modal [View Test]( ../components/colorpicker/test-modal)\n{{api-details}}\n",
        "date": "14.08.2017 10:15:18",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Fix duplicate test for colorpicker on Modal"
    },
    {
        "msg": "remove missing line",
        "diff": "diff --git a/components/datagrid/datagrid.js b/components/datagrid/datagrid.js @@ -3695,7 +3695,7 @@ $.fn.datagrid = function(options) {\nif (this.canUseLocalStorage()) {\nlocalStorage[this.uniqueId('columns')] = JSON.stringify(this.settings.columns);\n}\n- //this.setTreeDepth();\n+\n},\n// Omit events and save to local storage for supported settings\n",
        "date": "11.09.2017 13:55:51",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unnecessary code in datagrid.js"
    },
    {
        "msg": "remove some conflict code",
        "diff": "diff --git a/components/form/example-forms.html b/components/form/example-forms.html <div class=\"compound-field\">\n<div class=\"field\">\n-<<<<<<< Updated upstream\n- <label for=\"example-mulitcolumn-first\">First Name <span class=\"audible\">Required</span></label>\n- <input type=\"text\" id=\"example-mulitcolumn-first\" name=\"first-name\" data-validate=\"required\">\n-=======\n<label for=\"example-mulitcolumn-first\" class=\"required\">First Name</label>\n<input type=\"text\" id=\"example-mulitcolumn-first\" name=\"first-name\" aria-required=\"true\" data-validate=\"required\">\n->>>>>>> Stashed changes\n</div>\n<div class=\"field\">\n",
        "date": "18.09.2017 13:33:46",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor form label for First Name to include aria-required attribute"
    },
    {
        "msg": "remove some unwanted commented Splitter",
        "diff": "diff --git a/components/splitter/splitter.js b/components/splitter/splitter.js side: 'left', // or right\nresize: 'immediate',\ncontainment: null, //document or parent\n- save: false\n+ save: true\n},\nsettings = $.extend({}, defaults, options);\nif (this.isSplitterRightSide) {\nvar thisPrev = thisSide.prev();\n- // this.leftSide = thisSide.prev().is('.main') ? thisSide.prev() : thisSide;\n- // w = thisSide.parent().outerWidth() - w;\nif (thisPrev.is('.main')) {\nthis.leftSide = thisPrev;\nw = thisSide.parent().outerWidth() - w;\n.next().addClass('flex-grow-shrink is-right-side')\n.parent().addClass('splitter-container');\n- // splitter.addClass('splitter-right');\n-\nif (s.collapseButton) {\nvar savedOffset = 0;\nvar $splitterButton = $('<button type=\"button\" class=\"splitter-btn\" id=\"splitter-collapse-btn\" title=\"Collapse\"><svg class=\"icon\" focusable=\"false\" aria-hidden=\"true\" role=\"presentation\"><use xlink:href=\"#icon-double-chevron\"></use></svg></button>');\n",
        "date": "25.09.2017 15:19:02",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Update save option to true and remove unnecessary code in splitter.js"
    },
    {
        "msg": "remove getElementById",
        "diff": "diff --git a/components/contextualactionpanel/contextualactionpanel.js b/components/contextualactionpanel/contextualactionpanel.js Soho.utils.fixSVGIcons(self.panel);\n}).on('click.contextualactionpanel', function() {\nif (self.ctrlPressed) {\n- document.getElementById(\"toolbar-example-searchfield\").select();\n+ var searchfield = self.toolbar.find('.searchfield');\n+ if (searchfield.length) {\n+ searchfield[0].select();\n+ }\nself.ctrlPressed = false;\n}\n}).on('keydown.contextualactionpanel', function(event) {\n",
        "date": "05.10.2017 13:19:27",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor contextualactionpanel.js to use jQuery for selecting searchfield."
    },
    {
        "msg": "remove onTouchClick",
        "diff": "diff --git a/components/pager/pager.js b/components/pager/pager.js });\n//Attach button click and touch\n- this.pagerBar.onTouchClick('pager', 'a').on('click.pager', 'a', function (e) {\n- // this.pagerBar.onclick(function(e) {\n+ this.pagerBar.on('click.pager', 'a', function (e) {\nvar li = $(this).parent();\ne.preventDefault();\n",
        "date": "26.10.2017 12:42:55",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor pagerBar click event handling in pager.js"
    },
    {
        "msg": "remove some unwanted comments with Modal",
        "diff": "diff --git a/components/modal/modal.js b/components/modal/modal.js $(document).on('keyup.modal', function (e) {\nvar keyCode = e.which || e.keyCode;\nif (keyCode === 27) {\n- // setTimeout(function () {\nvar modals = $('.modal.is-visible');\nif (modals.length > 1) {\nmodals.not(':last').on('beforeclose.modal', function () {\n} else {\nself.close();\n}\n- // }, 0);\n- e.stopPropagation();\n}\n});\n",
        "date": "14.11.2017 17:32:27",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove commented out code and unnecessary setTimeout function in modal.js"
    },
    {
        "msg": "remove stray padding that was causing Short-Field dropdowns",
        "diff": "diff --git a/components/dropdown/_dropdown.scss b/components/dropdown/_dropdown.scss @@ -655,8 +655,6 @@ div.dropdown-xs,\n}\nli {\n- padding-right: 21px;\n-\n> a {\nline-height: 25px;\n}\n@@ -916,9 +914,6 @@ html[dir='rtl'] {\n}\nli {\n- padding-left: 21px;\n- padding-right: 4px;\n-\n.listoption-icon {\nleft: auto;\nmargin-left: -5px;\n",
        "date": "30.11.2017 11:34:24",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove padding-right and padding-left from li elements in dropdown styling"
    },
    {
        "msg": "remove some unwanted comments with Timepicker",
        "diff": "diff --git a/components/timepicker/timepicker.js b/components/timepicker/timepicker.js parts[0] = '' + parseInt(parts[0], 10);\n}\ntimeparts.hours = self.hourText(parts[0]);\n- // timeparts.hours = parts[0];\n// Handle Minutes\nif (parts[1]) {\n",
        "date": "04.12.2017 14:17:57",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor timepicker.js to handle hours and minutes separately"
    },
    {
        "msg": "remove the method responsible for autocomplete misalignment in chrome",
        "diff": "diff --git a/components/autocomplete/autocomplete.js b/components/autocomplete/autocomplete.js handleListResults: function(term, items, filterResult) {\nvar self = this;\n- function autocompletePlaceCallback(placementObj) {\n- // Nudge the autocomplete to the right by 1px in Chrome\n- if (Soho.env.browser.name === 'chrome') {\n- placementObj.setCoordinate('x', placementObj.x + 1);\n- }\n- return placementObj;\n- }\n-\nvar popupOpts = {\nmenuId: 'autocomplete-list',\nariaListbox: true,\nautoFocus: false,\nreturnFocus: false,\nplacementOpts: {\n- callback: autocompletePlaceCallback,\nparent: this.element\n}\n};\n",
        "date": "14.12.2017 12:27:48",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor autocomplete.js to remove unnecessary autocompletePlaceCallback function and update popupOpts placementOpts accordingly"
    },
    {
        "msg": "remove setting of 'l-right-align' class since there is already a css class that handles text alignment",
        "diff": "diff --git a/components/datagrid/datagrid.js b/components/datagrid/datagrid.js @@ -569,10 +569,6 @@ window.Editors = {\n.appendTo(container);\n}\n- if (column.align) {\n- this.input.addClass('l-'+ column.align +'-text');\n- }\n-\nif (column.maxLength) {\nthis.input.attr('maxlength', column.maxLength);\n}\n",
        "date": "14.12.2017 14:24:01",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove alignment styling from datagrid input fields"
    },
    {
        "msg": "remove unwanted comments with Autocomplete and Search field",
        "diff": "diff --git a/components/autocomplete/_autocomplete.scss b/components/autocomplete/_autocomplete.scss border-radius: 0 0 3px 3px;\nborder-top: 1px solid $dropdown-menu-separator-color;\nbox-shadow: $dropdown-box-shadow, $autocomplete-box-shadow;\n- // box-shadow: $focus-box-shadow;\n- // box-shadow: $dropdown-box-shadow, $focus-box-shadow;\nline-height: 30px;\nmargin-top: -1px;\noverflow: auto;\n",
        "date": "18.12.2017 16:39:28",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor box-shadow styles in autocomplete component"
    },
    {
        "msg": "remove setting of tooltip placement in datagrid js",
        "diff": "diff --git a/components/datagrid/datagrid.js b/components/datagrid/datagrid.js @@ -4128,7 +4128,7 @@ $.fn.datagrid = function(options) {\nvar self = this;\n// Implement Tooltip on cells with title attribute\n- this.tableBody.find('td[title]').tooltip({placement: 'left', offset: {left: -5, top: 0}});\n+ this.tableBody.find('td[title]').tooltip();\nthis.tableBody.find('a[title]').tooltip();\n// Implement Tooltip on cells with ellipsis\n",
        "date": "26.12.2017 07:50:46",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor tooltip implementation in datagrid.js"
    },
    {
        "msg": "remove unneeded packages",
        "diff": "diff --git a/package.json b/package.json \"eslint:log\": \"eslint -c .eslintrc.js components -o eslint.log\",\n\"eslint:error-only\": \"eslint -c .eslintrc.js --quiet components\",\n\"build\": \"rollup -c\",\n+ \"rollup\": \"rollup\",\n\"install-test-deps\": \"npm install selenium-standalone@latest && npm run install-drivers\",\n\"install-drivers\": \"selenium-standalone install --config=./build/configs/selenium-standalone-install.js\",\n\"selenium\": \"selenium-standalone start\",\n\"grunt-sass\": \"^2.0.0\",\n\"grunt-shell\": \"^2.1.0\",\n\"grunt-strip-code\": \"^1.0.4\",\n+ \"html-loader\": \"^0.5.5\",\n\"intern\": \"^3.4.6\",\n+ \"jasmine-core\": \"^2.9.0\",\n\"jsdom\": \"^9.9.1\",\n\"jshint\": \"^2.9.2\",\n\"karma\": \"^2.0.0\",\n\"karma-webpack\": \"^2.0.9\",\n\"load-grunt-tasks\": \"^3.5.2\",\n\"mmm\": \"^0.2.2\",\n- \"mocha\": \"^3.2.0\",\n\"moment\": \"^2.19.2\",\n\"node-pandoc\": \"^0.3.0\",\n\"pandoc\": \"^0.2.0\",\n",
        "date": "18.01.2018 14:44:25",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Add rollup and html-loader, update jasmine-core and remove mocha"
    },
    {
        "msg": "remove line padding on events parameter test",
        "diff": "diff --git a/components/dropdown/test/unit/dropdown-updates-events.spec.js b/components/dropdown/test/unit/dropdown-updates-events.spec.js @@ -77,7 +77,6 @@ describe('Dropdown updates, events', () => {\n});\nit('Should update set settings via parameters', () => {\n-\nconst settings = {\ncloseOnSelect: true,\ncssClass: null,\n",
        "date": "15.02.2018 09:55:49",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unnecessary code in dropdown-updates-events.spec.js"
    },
    {
        "msg": "remove UglifyJS warnings from output",
        "diff": "diff --git a/package.json b/package.json \"eslint:log\": \"eslint -c .eslintrc.js components -o eslint.log\",\n\"eslint:error-only\": \"eslint -c .eslintrc.js --quiet components\",\n\"build\": \"rollup -c\",\n- \"minify\": \"uglifyjs --compress --mangle --warn --output 'dist/js/sohoxi.min.js' -- dist/js/sohoxi.js\",\n+ \"minify\": \"uglifyjs --compress --mangle --output 'dist/js/sohoxi.min.js' -- dist/js/sohoxi.js\",\n\"install-globals\": \"npm install -g pandoc-bin grunt-cli documentation rollup\",\n\"watch\": \"grunt watch\",\n\"grunt\": \"grunt\",\n",
        "date": "28.02.2018 11:51:14",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Update minify script in package.json to remove unnecessary warning flag."
    },
    {
        "msg": "remove unwanted comments with Datagid",
        "diff": "diff --git a/components/datagrid/datagrid.js b/components/datagrid/datagrid.js @@ -1997,8 +1997,6 @@ Datagrid.prototype = {\nreturn;\n}\n- // const container = this.tableBody;\n- // this.element.children().not('[data-arrange-exclude=\"true\"]')\nthis.tableBody.children().filter(function () {\nreturn $(this).find('.datagrid-reorder-icon').length < 1;\n}).attr('data-arrange-exclude', true);\n",
        "date": "20.03.2018 14:06:20",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unnecessary code for data arrangement exclusion in Datagrid."
    },
    {
        "msg": "remove dependency on an empty `defaultMenuItems` property on toolbars for drawing the More Actions menu",
        "diff": "diff --git a/components/toolbar/toolbar.js b/components/toolbar/toolbar.js @@ -1316,7 +1316,7 @@ Toolbar.prototype = {\nconst hiddenOverflowItems = overflowItems.not('.hidden');\nlet method = 'removeClass';\n- if (this.hasDefaultMenuItems || hiddenOverflowItems.length > 0) {\n+ if (hiddenOverflowItems.length > 0) {\nmethod = 'addClass';\n}\n",
        "date": "28.03.2018 12:22:35",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor toolbar.js to only add class if there are hidden overflow items"
    },
    {
        "msg": "remove unwanted comments with Datagrid",
        "diff": "diff --git a/components/datagrid/datagrid.js b/components/datagrid/datagrid.js @@ -1494,7 +1494,6 @@ Datagrid.prototype = {\nif (columnDef.filterType === 'date' || columnDef.filterType === 'time') {\nif (columnDef.filterType === 'date' && typeof rowValue === 'string') {\nrowValue = columnDef.formatter(false, false, rowValue, columnDef, true);\n- // rowValue = window.Formatters.Date(false, false, rowValue, columnDef, true);\n}\nconst getValues = (rValue, cValue) => {\ncValue = Locale.parseDate(cValue, conditions[i].format);\n",
        "date": "29.03.2018 11:23:18",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor date filtering logic in Datagrid"
    },
    {
        "msg": "remove unused resize events from ToolbarFlex",
        "diff": "diff --git a/components/toolbar-flex/toolbar-flex.js b/components/toolbar-flex/toolbar-flex.js @@ -82,7 +82,6 @@ ToolbarFlex.prototype = {\n* @returns {void}\n*/\nhandleEvents() {\n- $('body').on(`resize.${COMPONENT_NAME}`, () => this.handleResize);\nthis.element.addEventListener('keydown', this.handleKeydown.bind(this));\nthis.element.addEventListener('keyup', this.handleKeyup.bind(this));\nthis.element.addEventListener('click', this.handleClick.bind(this));\n@@ -472,7 +471,6 @@ ToolbarFlex.prototype = {\n* @returns {void}\n*/\nteardown() {\n- $('body').off(`resize.${COMPONENT_NAME}`);\nthis.element.removeEventListener('keydown', this.handleKeydown.bind(this));\nthis.element.removeEventListener('up', this.handleKeyup.bind(this));\nthis.element.removeEventListener('click', this.handleClick.bind(this));\n",
        "date": "10.04.2018 17:10:00",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove resize event listener from toolbar-flex component"
    },
    {
        "msg": "remove last color for symmetry.",
        "diff": "diff --git a/components/colorpicker/colorpicker.js b/components/colorpicker/colorpicker.js @@ -114,8 +114,7 @@ const COLORPICKER_DEFAULTS = {\n{ label: 'Azure', number: '05', value: '4EA0D1' },\n{ label: 'Azure', number: '04', value: '69B5DD' },\n{ label: 'Azure', number: '03', value: '8DC9E6' },\n- { label: 'Azure', number: '02', value: 'ADD8EB' },\n- { label: 'Azure', number: '01', value: 'CBEBF4' }\n+ { label: 'Azure', number: '02', value: 'ADD8EB' }\n],\nplaceIn: null, // null|'editor'\nshowLabel: false,\n",
        "date": "16.04.2018 12:53:17",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove redundant color option in colorpicker.js"
    },
    {
        "msg": "remove old test tasks",
        "diff": "diff --git a/Makefile b/Makefile -MOCHA_OPTS = --check-leaks\n-REPORTER = spec\n-\n# Container Name\nSOHO_CONTAINER = hl_sohoxi\n.PHONY: test\n-test:\n- @node test-runner.js\n-\n-test-accessibility:\n- @node test-runner.js accessibility\n-\n-test-autocomplete:\n- @node test-runner.js autocomplete\n-\n-test-button:\n- @node test-runner.js button\n-\n-test-busyindicator:\n- @node test-runner.js busyindicator\n-\n-test-charts:\n- @node test-runner.js charts\n-\n-test-checkbox:\n- @node test-runner.js checkbox\n-\n-test-dropdown:\n- @node test-runner.js dropdown\n-\n-test-tmpl:\n- @node test-runner.js tmpl\n-\n-test-locale:\n- @node test-runner.js locale\n-\n-test-mask:\n- @node test-runner.js mask\n-\n-test-multiselect:\n- @node test-runner.js multiselect\n-\n-test-form:\n- @node test-runner.js form\n-\n-test-colorpicker:\n- @node test-runner.js colorpicker\n-\n-test-timepicker:\n- @node test-runner.js timepicker\n-\n-test-datepicker:\n- @node test-runner.js datepicker\n-\n-test-spinbox:\n- @node test-runner.js spinbox\n-\n-test-slider:\n- @node test-runner.js slider\n-\n-test-radio:\n- @node test-runner.js radio\n-\n-test-message:\n- @node test-runner.js message\n-\n-test-toast:\n- @node test-runner.js toast\n-\n-test-toolbar:\n- @node test-runner.js toolbar\n-\n-test-searchfield:\n- @node test-runner.js searchfield\n-\n-test-tabs:\n- @node test-runner.js tabs\n-\npull :\ndocker-compose pull\n@@ -107,7 +32,3 @@ tail :\nwatch :\ndocker exec -ti $(SOHO_CONTAINER) /bin/bash -c \"cd /controls && grunt watch\"\n@echo \"[Info] ctrl-c to stop grunt watch\"\n-\n-unit-tests :\n- docker exec -ti $(SOHO_CONTAINER) /bin/bash -c \"./node_modules/.bin/intern-client config=test/intern.local.unit\"\n- @echo \"[Info] Running unit-tests...\"\n",
        "date": "20.04.2018 09:02:23",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove test commands and update Makefile configuration"
    },
    {
        "msg": "remove codecov for now",
        "diff": "diff --git a/test/karma.conf.js b/test/karma.conf.js @@ -15,8 +15,7 @@ module.exports = function (config) {\n'node_modules'\n],\npreprocessors: {\n- '**/components/*/!(.spec|.jquery).js': ['webpack', 'sourcemap', 'coverage'],\n- '**/tests/components/*/*.spec.js': ['webpack', 'sourcemap'],\n+ '**/components/*/*.js': ['webpack', 'sourcemap'],\n},\nwebpack: {\nmodule: {\n@@ -44,14 +43,14 @@ module.exports = function (config) {\nstats: 'errors-only'\n},\nreporters: ['mocha', 'coverage'],\n- coverageReporter: {\n- dir: 'coverage',\n- reporters: [\n- { type: 'lcov', subdir: '.' },\n- { type: 'text-summary' },\n- { type: 'json' }\n- ]\n- },\n+ // coverageReporter: {\n+ // dir: 'coverage',\n+ // reporters: [\n+ // { type: 'lcov', subdir: '.' },\n+ // { type: 'text-summary' },\n+ // { type: 'json' }\n+ // ]\n+ // },\nport: 9876,\ncolors: true,\nbrowsers: ['ChromeHeadlessNoSandbox'],\n",
        "date": "24.04.2018 12:17:39",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor karma.conf.js to simplify preprocessor configuration and comment out coverageReporter settings."
    },
    {
        "msg": "remove duplicated command",
        "diff": "diff --git a/package.json b/package.json \"report:coverage\": \"codecov\",\n\"webdriver\": \"webdriver-manager update --standalone false --gecko false --quiet\",\n\"webdriver:update\": \"webdriver-manager update\",\n- \"pree2e\": \"npm run webdriver && (npm run start & sleep 10)\",\n\"publish-dev\": \"grunt publish && npm publish publish --tag dev --force\",\n\"publish-nightly\": \"grunt publish && npm publish publish --tag nightly\",\n\"publish-prod\": \"grunt publish && npm publish publish --force\",\n",
        "date": "24.04.2018 13:04:33",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove pree2e script from package.json"
    },
    {
        "msg": "remove another duplicated command",
        "diff": "diff --git a/package.json b/package.json \"postlocal:functional\": \"npm run stop && exit 0\",\n\"prebrowserstack:functional\": \"npm run webdriver && (npm run start & sleep 10)\",\n\"browserstack:functional\": \"protractor test/protractor.browserstack.conf.js || npm run stop\",\n- \"postbrowserstack:functional\": \"npm run stop && exit 0\",\n\"report:coverage\": \"codecov\",\n\"webdriver\": \"webdriver-manager update --standalone false --gecko false --quiet\",\n\"webdriver:update\": \"webdriver-manager update\",\n",
        "date": "24.04.2018 13:04:44",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove postbrowserstack:functional script from package.json"
    },
    {
        "msg": "remove all `console.[log?]`s from `app.js`",
        "diff": "diff --git a/app/app.js b/app/app.js @@ -107,12 +107,12 @@ function is(type, filePath) {\n};\nif (!type) {\n- console.warn(`No type defined. Using the default type of \"${defaultType}\".`);\n+ logger('alert', `No type defined. Using the default type of \"${defaultType}\".`);\ntype = defaultType;\n}\nif (!mappings[type]) {\n- console.error(`Provided type \"${type}\" is not in the list of valid types.`);\n+ logger('alert', `Provided type \"${type}\" is not in the list of valid types.`);\nreturn false;\n}\n@@ -127,7 +127,7 @@ function is(type, filePath) {\ntry {\nreturn fs.statSync(targetPath)[methodName]();\n} catch (e) {\n- console.info(`File Path \"${targetPath}\" is not a ${type}.`);\n+ logger('info', `File Path \"${targetPath}\" is not a ${type}.`);\nreturn false;\n}\n}\n",
        "date": "26.04.2018 12:36:07",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor logging messages in is function"
    },
    {
        "msg": "remove test version",
        "diff": "diff --git a/publish/package.json b/publish/package.json {\n\"name\": \"ids-enterprise\",\n\"slug\": \"ids-enterprise\",\n- \"version\": \"4.6.0-alpha.4\",\n+ \"version\": \"4.6.0\",\n\"description\": \"Infor Design System (IDS) Enterprise Components for the web\",\n\"repository\": {\n\"type\": \"git\",\n",
        "date": "09.05.2018 10:06:32",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Update version to 4.6.0"
    },
    {
        "msg": "remove extraneous \"data\" import -- soho-7803",
        "diff": "diff --git a/app/app.js b/app/app.js @@ -72,7 +72,6 @@ app.use(require('./src/js/middleware/error-handler')(app));\nconst generalRoute = require('./src/js/routes/general');\nconst sendGeneratedDocPage = require('./src/js/routes/docs');\n-const dataRoute = require('./src/js/routes/data');\n// ======================================\n// Main Routing and Param Handling\n",
        "date": "11.05.2018 14:07:37",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove dataRoute from app.js"
    },
    {
        "msg": "remove extraneous call to data routes in `app.js` -- soho-7803",
        "diff": "diff --git a/app/app.js b/app/app.js -/* eslint-disable */\n+/* eslint-disable no-underscore-dangle */\nconst csp = require('express-csp');\nconst express = require('express');\nconst extend = require('extend'); // equivalent of $.extend()\n-const fs = require('fs');\nconst mmm = require('mmm');\nconst path = require('path');\n-\nconst getJSONFile = require('./src/js/get-json-file');\n-const logger = require('../scripts/logger');\nconst app = express();\nconst BASE_PATH = process.env.BASEPATH || '/';\n@@ -67,6 +64,7 @@ app.use(require('./src/js/middleware/basepath-handler')(app));\napp.use(require('./src/js/middleware/global-data-handler')(app));\napp.use(require('./src/js/middleware/response-throttler')(app));\napp.use(require('./src/js/middleware/csp-handler')(app));\n+\napp.use(router);\napp.use(require('./src/js/middleware/error-handler')(app));\n@@ -82,7 +80,7 @@ router.get('/', (req, res, next) => {\n});\nrouter.get('/index', (req, res, next) => {\n- let opts = {\n+ const opts = {\npath: path.resolve(__dirname, 'docs', 'index.html')\n};\nsendGeneratedDocPage(opts, req, res, next);\n@@ -97,8 +95,9 @@ router.get('/kitchen-sink', (req, res, next) => {\n// Collection of Performance Tests Pages\n// =========================================\nrouter.get('/performance-tests', (req, res, next) => {\n- let performanceOpts = { subtitle: 'Performance Tests' },\n- opts = extend({}, res.opts, performanceOpts);\n+ const opts = extend({}, res.opts, {\n+ subtitle: 'Performance Tests'\n+ });\nres.render('performance-tests/index.html', opts);\nnext();\n",
        "date": "11.05.2018 14:29:50",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor code to use const instead of let for variable declarations and update eslint configuration to allow no-underscore-dangle."
    },
    {
        "msg": "remove script that never gets called",
        "diff": "diff --git a/package.json b/package.json \"e2e:ci\": \"npm run e2e:ci:pre && protractor test/protractor.ci.conf.js || npm run stop\",\n\"webdriver\": \"webdriver-manager update --standalone false --gecko false --quiet\",\n\"webdriver:update\": \"webdriver-manager update\",\n- \"prepublishOnly\": \"npx grunt publish publish\",\n\"publish-dev\": \"npx grunt publish && npm publish publish/ --tag dev\",\n\"publish-nightly\": \"npx grunt publish && npm publish publish/ --tag nightly\",\n\"publish-prod\": \"npx grunt publish && npm publish publish/\",\n",
        "date": "15.05.2018 19:10:56",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove prepublishOnly script and add publish scripts for dev, nightly, and prod environments"
    },
    {
        "msg": "remove old documentation",
        "diff": "diff --git a/README.md b/README.md @@ -96,8 +96,6 @@ Note: There may be a cost involved to using this with Infor's amazon s3 account\n* Clone the repo using `git`: `git clone https://github.com/infor-design/enterprise.git`\n* `cd` into the repo directory\n-* Then `npm install` to install node packages. On macOS you may need `sudo npm install` as some packages require elevated permissions\n-* Then `npm run install-globals` to install some global packages we use\n### Running the app\n",
        "date": "21.05.2018 18:38:23",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove npm install and npm run install-globals from README"
    },
    {
        "msg": "remove vertical scrolling from inside of Horizontal tabs lists -- soho-8034",
        "diff": "diff --git a/src/components/tabs/_tabs.scss b/src/components/tabs/_tabs.scss .tab-list-container {\ndisplay: inline-block;\noverflow-x: auto; // facilitates scrolling of the tabset\n+ overflow-y: hidden; // prevents vertical scrolling\nposition: relative;\nwidth: calc(100% - 51px);\n}\n",
        "date": "29.05.2018 10:27:13",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Prevent vertical scrolling in tab list container"
    },
    {
        "msg": "remove un needed fix",
        "diff": "diff --git a/src/components/applicationmenu/_applicationmenu.scss b/src/components/applicationmenu/_applicationmenu.scss }\n}\n- &.has-searchfield .accordion {\n- margin-bottom: calc(-2rem - 76px);\n- }\n-\n.searchfield-wrapper {\nbackground-color: $accordion-inverse-pane-bg-color;\nmargin-bottom: 0;\n",
        "date": "06.06.2018 13:13:05",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove margin-bottom from accordion when searchfield is present"
    },
    {
        "msg": "remove focusing from autocomplete tests",
        "diff": "diff --git a/test/components/autocomplete/autocomplete-select.func-spec.js b/test/components/autocomplete/autocomplete-select.func-spec.js @@ -29,7 +29,7 @@ let autocompleteLabelEl;\nlet autocompleteAPI;\nlet svgEl;\n-fdescribe('Autocomplete API (select)', () => {\n+describe('Autocomplete API (select)', () => {\nbeforeEach(() => {\nautocompleteInputEl = null;\nautocompleteAPI = null;\n",
        "date": "07.06.2018 12:00:03",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove fdescribe in autocomplete-select.func-spec.js"
    },
    {
        "msg": "remove unncessary npx as release-it is per user global machine",
        "diff": "diff --git a/package.json b/package.json \"zip-dist\": \"npx grunt zip-dist\",\n\"documentation\": \"node ./scripts/deploy-documentation.js\",\n\"publish-aws\": \"AWS_PROFILE=sohoxi directory-to-s3 -d publish infor-devops-core-soho-us-east-1/sohoxi/4.4.0 -v\",\n- \"release\": \"npx release-it minor\",\n+ \"release\": \"release-it minor\",\n\"prepublishOnly\": \"npm run build\",\n\"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n},\n",
        "date": "07.06.2018 15:46:45",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove npx from release-it command in package.json"
    },
    {
        "msg": "remove IE Check",
        "diff": "diff --git a/app/src/js/middleware/option-handler.js b/app/src/js/middleware/option-handler.js @@ -63,9 +63,7 @@ module.exports = function (app, defaults) {\n}\n// Disable live reload for IE\n- const ua = req.headers['user-agent'];\n- const isIE = /Windows NT/.test(ua) && (/Trident/.test(ua) || /Edge/.test(ua));\n- if (isIE && req.hostname === '10.0.2.2') {\n+ if (req.hostname === '10.0.2.2') {\nres.opts.enableLiveReloadVM = true;\nres.opts.enableLiveReload = false;\n}\n",
        "date": "11.06.2018 13:33:49",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "\"Disable live reload for IE on all hostnames\""
    },
    {
        "msg": "remove change as was on another PR",
        "diff": "diff --git a/test/components/autocomplete/autocomplete-select.func-spec.js b/test/components/autocomplete/autocomplete-select.func-spec.js @@ -52,7 +52,7 @@ describe('Autocomplete API (select)', () => {\nautocompleteInputEl.parentNode.removeChild(autocompleteInputEl);\n});\n- it('returns an object with index, label and value about an item that was programmatically selected', () => {\n+ it('returns an object with metadata about an item that was programmatically selected', () => {\nautocompleteAPI.openList('new', statesData);\nconst autocompleteListEl = document.querySelector('#autocomplete-list');\nconst resultItems = autocompleteListEl.querySelectorAll('li');\n@@ -64,7 +64,7 @@ describe('Autocomplete API (select)', () => {\nexpect(selectedItem.value).toEqual('NJ'); // Should be retrieved from `data-value`\n});\n- it('returns an object with index, value and addedValue about an item that was programmatically selected', () => {\n+ it('returns an object with metadata about an item that was programmatically selected', () => {\nautocompleteAPI.openList('new', statesExtraData);\nconst autocompleteListEl = document.querySelector('#autocomplete-list');\nconst resultItems = autocompleteListEl.querySelectorAll('li');\n",
        "date": "12.06.2018 10:40:55",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor metadata retrieval for programmatically selected items in autocomplete API"
    },
    {
        "msg": "remove extra file extension",
        "diff": "diff --git a/app/views/components/datagrid/test-export-without-datagrid.html b/app/views/components/datagrid/test-export-without-datagrid.html var url = '{{basepath}}api/tasks';\n$.getJSON(url, function(res) {\n- Soho.excel.exportToExcel('MyExport.xls', 'Worksheet1', res);\n- // Soho.excel.exportToCsv('MyExport.xls', res);\n+ Soho.excel.exportToExcel('MyExport', 'Worksheet1', res);\n+ // Soho.excel.exportToCsv('MyExport', res);\n});\n});\n",
        "date": "14.06.2018 15:05:53",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor export file name in datagrid component"
    },
    {
        "msg": "remove unneeded case",
        "diff": "diff --git a/src/components/tabs/tabs.js b/src/components/tabs/tabs.js @@ -2251,10 +2251,6 @@ Tabs.prototype = {\n}\n// do nothing if it's just a string of text.\nbreak;\n- case 'object':\n- // jQuery object or HTML Element\n- sourceString = $(sourceString).clone();\n- break;\ndefault:\nbreak;\n}\n",
        "date": "12.06.2018 13:13:48",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unnecessary code for cloning jQuery object or HTML Element in tabs.js"
    },
    {
        "msg": "remove clone of element",
        "diff": "diff --git a/src/components/tabs/tabs.js b/src/components/tabs/tabs.js @@ -2247,7 +2247,7 @@ Tabs.prototype = {\n// Text Content or a Selector.\nif (hasId !== null) {\nconst obj = $(sourceString);\n- sourceString = obj.length ? $(sourceString).clone() : sourceString;\n+ sourceString = obj.length ? obj : sourceString;\n}\n// do nothing if it's just a string of text.\nbreak;\n",
        "date": "15.06.2018 16:34:29",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor sourceString cloning logic in Tabs component"
    },
    {
        "msg": "remove unneeded hasSquareFocusState check",
        "diff": "diff --git a/src/components/tabs/tabs.js b/src/components/tabs/tabs.js @@ -407,9 +407,7 @@ Tabs.prototype = {\nthis.setOverflow();\n- if (this.hasSquareFocusState()) {\nthis.positionFocusState(selectedAnchor);\n- }\nif (this.hasAnimatedBar()) {\nthis.animatedBar.addClass('no-transition');\n@@ -443,16 +441,10 @@ Tabs.prototype = {\nauxilaryButtonLocation = this.tablist;\n}\n- // Square Focus State\n- if (this.hasSquareFocusState()) {\nthis.focusState = this.element.find('.tab-focus-indicator');\nif (!this.focusState.length) {\nthis.focusState = $('<div class=\"tab-focus-indicator\" role=\"presentation\"></div>').insertBefore(this.tablist);\n}\n- } else if (this.focusState && this.focusState.length) {\n- this.focusState.off().remove();\n- this.focusState = undefined;\n- }\n// Animated Bar\nif (this.hasAnimatedBar()) {\n@@ -660,9 +652,7 @@ Tabs.prototype = {\nreturn false;\n}\n- if (self.hasSquareFocusState()) {\nself.positionFocusState(a);\n- }\nif (self.hasAnimatedBar()) {\nself.focusBar(popupLi);\n@@ -869,9 +859,7 @@ Tabs.prototype = {\n}\nthis.changeHash(href);\n- if (this.hasSquareFocusState()) {\nthis.focusState.removeClass('is-visible');\n- }\na.focus();\n@@ -968,10 +956,8 @@ Tabs.prototype = {\n$.removeData(this.moreButton[0], 'focused-by-click');\n- if (this.hasSquareFocusState()) {\nthis.focusState.removeClass('is-visible');\nthis.positionFocusState(this.moreButton, focusedByKeyboard);\n- }\n},\n/**\n@@ -1157,10 +1143,8 @@ Tabs.prototype = {\nthis.scrollTabList(focusStateTarget);\n}\n- if (self.hasSquareFocusState()) {\nself.positionFocusState(focusStateTarget, true);\n}\n- }\nreturn true;\n},\n@@ -1593,14 +1577,6 @@ Tabs.prototype = {\nreturn !this.isModuleTabs() && !this.isVerticalTabs();\n},\n- /**\n- * Determines whether or not this tabset's tab list should display a square focus state on a tab.\n- * @returns {boolean} whether or not the square focus state should display.\n- */\n- hasSquareFocusState() {\n- return true;\n- },\n-\n/**\n* Determines whether or not this tabset currently has a \"More Tabs\" spillover button.\n* @returns {boolean} whether or not the \"More Tabs\" button is currently displayed.\n@@ -1937,11 +1913,12 @@ Tabs.prototype = {\n// Update the currently-selected tab\nself.updateAria(a);\noldTab.add(self.moreButton).removeClass('is-selected');\n-\n+ if (targetTab[0]) {\nif (targetTab[0].classList.contains('tab')) {\nselectedStateTarget = targetTab;\nactiveStateTarget = targetTab;\n}\n+ }\nconst ddMenu = targetTab.parents('.popupmenu');\nlet ddTab;\n@@ -1960,7 +1937,9 @@ Tabs.prototype = {\n}\nself.focusBar(activeStateTarget);\n+ if (selectedStateTarget) {\nselectedStateTarget.addClass('is-selected');\n+ }\n// Fires a resize on any invoked child toolbars inside the tab panel.\n// Needed to fix issues with Toolbar alignment, since we can't properly detect\n@@ -3158,9 +3137,7 @@ Tabs.prototype = {\nself.moreButton.addClass('popup-is-open');\nself.popupmenu = self.moreButton.data('popupmenu');\n- if (self.hasSquareFocusState()) {\nself.positionFocusState(self.moreButton);\n- }\nfunction closeMenu() {\n$(this).off('close.tabs selected.tabs');\n@@ -3507,9 +3484,7 @@ Tabs.prototype = {\n* @returns {void}\n*/\nhideFocusState() {\n- if (this.hasSquareFocusState()) {\nthis.focusState.removeClass('is-visible');\n- }\n},\n/**\n@@ -3519,10 +3494,6 @@ Tabs.prototype = {\n* @returns {void}\n*/\npositionFocusState(target, unhide) {\n- if (!this.hasSquareFocusState()) {\n- return;\n- }\n-\nconst self = this;\n// TODO: Recheck this and improve\n@@ -3661,10 +3632,7 @@ Tabs.prototype = {\nconst self = this;\nconst focusableItems = self.tablist;\n- if (this.hasSquareFocusState() &&\n- focusableItems.find('.is-focused').length === 0 &&\n- !self.moreButton.hasClass('is-focused') &&\n- !self.moreButton.hasClass('popup-is-open')) {\n+ if (focusableItems.find('.is-focused').length === 0 && !self.moreButton.hasClass('is-focused') && !self.moreButton.hasClass('popup-is-open')) {\nself.focusState.removeClass('is-visible');\n}\n@@ -3923,10 +3891,8 @@ Tabs.prototype = {\nthis.tablistContainer.off('mousewheel.tabs');\n}\n- if (this.hasSquareFocusState()) {\nthis.focusState.remove();\nthis.focusState = undefined;\n- }\nif (this.hasAnimatedBar()) {\nthis.animatedBar.remove();\n",
        "date": "07.06.2018 10:35:23",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove square focus state functionality from tabs component"
    },
    {
        "msg": "remove stale element references in Searchfield e2e tests -- soho-7580",
        "diff": "diff --git a/test/components/searchfield/searchfield.e2e-spec.js b/test/components/searchfield/searchfield.e2e-spec.js @@ -84,17 +84,11 @@ describe('Searchfield full-text category tests', () => {\n});\nit('Can select a category from the list', async () => {\n- let searchfieldCategoryButtonEl = await element(by.css('[aria-controls=\"popupmenu-2\"]'));\n- await searchfieldCategoryButtonEl.click();\n-\n- const targetCategory = await element(by.id('clothing-single'));\n- await targetCategory.click();\n-\n- searchfieldCategoryButtonEl = await element(by.css('[aria-controls=\"popupmenu-2\"]'));\n- await browser.driver\n- .wait(protractor.ExpectedConditions.presenceOf(searchfieldCategoryButtonEl), config.waitFor);\n+ const categoryButtonSelector = '[aria-controls=\"popupmenu-2\"]';\n+ await element(by.css(categoryButtonSelector)).click();\n+ await element(by.id('clothing-single')).click();\n- expect(searchfieldCategoryButtonEl.getText()).toEqual('Clothing');\n+ expect(await element(by.css(categoryButtonSelector)).getText()).toEqual('Clothing');\n});\n});\n",
        "date": "20.06.2018 08:43:08",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor category selection in searchfield.e2e-spec.js"
    },
    {
        "msg": "remove setTimeout from colorpicker tests to prevent race conditions -- soho-8078",
        "diff": "diff --git a/test/components/colorpicker/colorpicker.func-spec.js b/test/components/colorpicker/colorpicker.func-spec.js @@ -43,33 +43,17 @@ describe('ColorPicker Methods', () => {\nexpect(colorpickerEl.parentNode.style.width).toEqual('400px');\n});\n- it('Should get the current hex value', (done) => {\n- colorpickerObj.toggleList();\n-\n- setTimeout(() => {\n- expect(colorpickerObj.isPickerOpen).toBeTruthy();\n- expect(document.body.querySelector('.colorpicker.is-open')).toBeTruthy();\n- const anchor = document.body.querySelector('#colorpicker-menu li a');\n- anchor.click();\n+ it('Should get the current hex value', () => {\n+ colorpickerObj.setColor('#1a1a1a');\nexpect(colorpickerObj.getHexValue()).toEqual('#1A1A1A');\n- done();\n- }, 300);\n});\n- it('Should get the current label value', (done) => {\n+ it('Should get the current label value', () => {\ncolorpickerObj.settings.showLabel = true;\n- colorpickerObj.toggleList();\n-\n- setTimeout(() => {\n- expect(colorpickerObj.isPickerOpen).toBeTruthy();\n- expect(document.body.querySelector('.colorpicker.is-open')).toBeTruthy();\n- const anchor = document.body.querySelector('#colorpicker-menu li a');\n- anchor.click();\n+ colorpickerObj.setColor('#1a1a1a');\nexpect(colorpickerObj.getLabelValue()).toEqual('Slate10');\n- done();\n- }, 300);\n});\nit('Should set the color/label on the field', () => {\n",
        "date": "22.06.2018 11:34:50",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor colorpicker func-spec.js to simplify hex and label value retrieval."
    },
    {
        "msg": "remove redunded 'closing' item in PR template",
        "diff": "diff --git a/.github/PULL_REQUEST_TEMPLATE.md b/.github/PULL_REQUEST_TEMPLATE.md **Explain the _details_ for making this change. What existing problem does the pull request solve?**\n-\n-<!-- Example: When \"Adding a function to do X\", explain why it is necessary to have a way to do X. -->\n+<!--\n+Example: When \"Adding a function to do X\",\n+explain why it is necessary to have a way to do X.\n+-->\n**Related github/jira issue (required)**:\n-\n-<!-- Provide a link to the related issue to this Pull Request.-->\n+<!--\n+Provide a link to the related issue(s) to this Pull Request;\n+auto-closing github issues if necessary (example: \"Closes #100\")\n+-->\n**Steps necessary to review your pull request (required)**:\n<!--\n@@ -14,8 +18,4 @@ Include:\n- test scenarios\n-->\n-\n-**Closing issues**\n-<!-- Please add `closes #XXXX` in your comment to auto-close the issue that your PR fixes (if such). -->\n-\n<!-- After submitting your PR, please check back to make sure tests pass on Travis. -->\n",
        "date": "22.06.2018 13:35:53",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor pull request template and update guidelines"
    },
    {
        "msg": "remove unneeded assignment; display Travis build number on BrowserStack dashboard",
        "diff": "diff --git a/test/protractor.ci.bs.conf.js b/test/protractor.ci.bs.conf.js @@ -12,11 +12,10 @@ const getSpecs = (listSpec) => {\n};\nconst theme = process.env.ENTERPRISE_THEME || 'light'\n-let browserstackBuildID = `${theme} theme: ci:bs e2e ${Date.now()}`;\n+let browserstackBuildID = `${Date.now()} : ${theme} theme: ci:bs e2e`;\nif (process.env.TRAVIS_BUILD_NUMBER) {\n- browserstackBuildID = process.env.TRAVIS_BUILD_NUMBER;\n- browserstackBuildID = `${theme} theme: ci:bs e2e ${process.env.TRAVIS_BUILD_NUMBER}`;\n+ browserstackBuildID = `Travis Build No. ${process.env.TRAVIS_BUILD_NUMBER} : ${theme} theme: ci:bs e2e`;\n}\nexports.config = {\n",
        "date": "28.06.2018 10:58:27",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor browserstackBuildID to include Travis Build Number and theme in Protractor configuration."
    },
    {
        "msg": "remove invalid links",
        "diff": "diff --git a/docs/CHANGELOG.md b/docs/CHANGELOG.md ## v4.8.0\n- [Npm Package](https://www.npmjs.com/package/ids-enterprise)\n-- [IDS NG (Angular) Change Log](https://github.com/infor-design/enterprise-ng/blob/master/docs/CHANGELOG.md)\n+- [IDS Enterprise Angular Change Log](https://github.com/infor-design/enterprise-ng/blob/master/docs/CHANGELOG.md)\n### v4.8.0 Features\n- [Full Jira Release Notes](https://bit.ly/2HyT3zF)\n- [Npm Package](https://www.npmjs.com/package/ids-enterprise)\n-- [Angular Components Change Log](https://github.com/infor-design/enterprise-ng/blob/master/CHANGELOG.md)\n+- [IDS Enterprise Angular Change Log](https://github.com/infor-design/enterprise-ng/blob/master/docs/CHANGELOG.md)\n### v4.7.0 Features\n- [Full Jira Release Notes](https://bit.ly/2jodbem)\n- [Npm Package](http://npm.infor.com)\n-- [Angular Components Change Log](https://github.com/infor-design/enterprise-ng/blob/master/CHANGELOG.md)\n-- [Example Site](http://usalvlhlpool1.infor.com/4.6.0/components/)\n+- [IDS Enterprise Angular Change Log](https://github.com/infor-design/enterprise-ng/blob/master/docs/CHANGELOG.md)\n### v4.6.0 Key New Features\n## v4.5.0\n-[Full Jira Release Notes](https://bit.ly/2GlnGJ1)\\\n-[Npm Package](http://npm.infor.com)\\\n-[Angular Components Change Log](https://github.com/infor-design/enterprise-ng/blob/master/CHANGELOG.md)\\\n-[Example Site](http://usalvlhlpool1.infor.com/4.5.0/components/)\n-\n### v4.5.0 Key New Features\n-- `[Font]` Experimental new font added from IDS as explained [here](http://bit.ly/2p2sjjZ)\n+- `[Font]` Experimental new font added from IDS as explained\n- `[Datagrid]` Added support for pasting from excel\n- `[Datagrid]` Added option to specify which column stretches\n",
        "date": "03.07.2018 12:56:50",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Update Angular components change log link in CHANGELOG.md"
    },
    {
        "msg": "remove extra attribute",
        "diff": "diff --git a/app/views/components/datagrid/test-wide-grid-expandable-row-with-form-buttons.html b/app/views/components/datagrid/test-wide-grid-expandable-row-with-form-buttons.html <div class=\"row\">\n<div class=\"twelve columns\">\n- <form class=\"test-form\" data-validate-on=\"submit\" data-validate-on=\"submit\">\n+ <form class=\"test-form\" data-validate-on=\"submit\">\n<div class=\"row\">\n<div class=\"one-half column\">\n<div class=\"content\">\n",
        "date": "10.07.2018 16:13:11",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove duplicate attribute in form element in test-wide-grid-expandable-row-with-form-buttons.html"
    },
    {
        "msg": "remove link in md",
        "diff": "diff --git a/src/components/validation/readme.md b/src/components/validation/readme.md @@ -5,8 +5,6 @@ demo:\npages:\n- name: Main Validation Examples\nslug: example-index\n- - name: Disabled Form\n- slug: example-form-disabled\n- name: Multiple Validation Errors on a Field\nslug: example-multiple-errors\n- name: Legacy Short Fields\n",
        "date": "11.07.2018 11:42:28",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove disabled form example from validation readme"
    },
    {
        "msg": "remove this as it is on master",
        "diff": "diff --git a/test/components/dropdown/dropdown.e2e-spec.js b/test/components/dropdown/dropdown.e2e-spec.js @@ -156,7 +156,6 @@ describe('Dropdown example-index tests', () => {\n// First key press causes the menu to close\nawait dropdownSearchEl.sendKeys(protractor.Key.TAB);\n- await browser.driver.sleep(config.sleep);\n// Second key press causes the focus to shift away\nawait element(by.css('div[aria-controls=\"dropdown-list\"]')).sendKeys(protractor.Key.TAB);\n",
        "date": "26.07.2018 13:05:59",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unnecessary sleep in dropdown.e2e-spec.js"
    },
    {
        "msg": "remove unneeded download, and installation of latest Chrome on lint",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -6,8 +6,8 @@ dist: trusty\nnode_js:\n- \"10\"\nbefore_install:\n- - wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb\n- - sudo dpkg -i google-chrome*.deb\n+ - if [ $TEST_SUITE != lint ]; then wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb; fi\n+ - if [ $TEST_SUITE != lint ]; then sudo dpkg -i google-chrome*.deb; fi\ncache:\ndirectories:\n- node_modules\n",
        "date": "01.08.2018 16:58:30",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor installation of Google Chrome in Travis CI to only run when not running lint tests"
    },
    {
        "msg": "remove es6 template logic from hierarchy.js. Added a function to close the popupmenu if expand/collapse is toggled while it is still open.",
        "diff": "diff --git a/src/components/hierarchy/hierarchy.js b/src/components/hierarchy/hierarchy.js @@ -27,7 +27,6 @@ const COMPONENT_NAME = 'hierarchy';\n* @param {boolean} [settings.paging=false] If true show pagination.\n* @param {boolean} [settings.renderSubLevel=false] If true elements with no children will be rendered detached\n* @param {object} [settings.emptyMessage = { title: 'No Data', info: , icon: 'icon-empty-no-data' }]\n-* @param {boolean} [settings.es6Template] If true create template using es6 template literals\n* An empty message will be displayed when there is no chart data. This accepts an object of the form\n* `emptyMessage: {\n* title: 'No Data Available',\n@@ -49,7 +48,6 @@ const HIERARCHY_DEFAULTS = {\nbeforeExpand: null,\npaging: false,\nrenderSubLevel: false,\n- es6Template: null,\nrootClass: 'hierarchy',\nemptyMessage: { title: (Locale ? Locale.translate('NoData') : 'No Data Available'), info: '', icon: 'icon-empty-no-data' }\n};\n@@ -443,6 +441,19 @@ Hierarchy.prototype = {\nthis.updateState(node, false, null, 'add');\n},\n+ /**\n+ * Closes popupmenu\n+ * @private\n+ * @param node leaf containing btn-actions\n+ */\n+ closePopupMenu(node) {\n+ const actionButton = node.find('.btn-actions');\n+\n+ if (actionButton.length !== 0) {\n+ actionButton.data('popupmenu').close();\n+ }\n+ },\n+\n/**\n* Expand the nodes until nodeId is displayed on the page.\n* @private\n@@ -455,6 +466,14 @@ Hierarchy.prototype = {\nconst s = this.settings;\nconst node = domObject.leaf;\nlet nodeTopLevel = node.next();\n+ const actionButton = node.find('.btn-actions');\n+\n+ // close popupmenu if open\n+ this.closePopupMenu(node);\n+\n+ if (actionButton.length !== 0) {\n+ actionButton.data('popupmenu').close();\n+ }\nnodeTopLevel.animateOpen();\n/**\n@@ -490,6 +509,9 @@ Hierarchy.prototype = {\nconst node = domObject.leaf;\nlet nodeTopLevel = node.next();\n+ // close popupmenu if open\n+ this.closePopupMenu(node);\n+\nnodeTopLevel.animateClosed().on('animateclosedcomplete', () => {\n/**\n* Fires when leaf collapsed.\n@@ -676,13 +698,7 @@ Hierarchy.prototype = {\n* @returns {string} compiled template as HTML string\n*/\ngetTemplate(data) {\n- let template;\n-\n- if (this.settings.es6Template === null) {\n- template = Tmpl.compile(`{{#dataset}}${$(`#${this.settings.templateId}`).html()}{{/dataset}}`, { dataset: data });\n- } else if (this.settings.es6Template !== null) {\n- return this.settings.es6Template(data);\n- }\n+ const template = Tmpl.compile(`{{#dataset}}${$(`#${this.settings.templateId}`).html()}{{/dataset}}`, { dataset: data });\n// Init popupmenu after rendered in DOM\nsetTimeout(() => {\n",
        "date": "09.08.2018 11:05:08",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor hierarchy.js: Removed es6Template option, added closePopupMenu method, and optimized getTemplate function."
    },
    {
        "msg": "remove unnecessary console log",
        "diff": "diff --git a/src/components/charts/charts.js b/src/components/charts/charts.js @@ -256,8 +256,7 @@ charts.showTooltip = function (x, y, content, arrow) {\n*/\ncharts.addLegend = function (series, chartType, settings, container) {\nlet i;\n- console.log('series', series);\n- console.log('-->', series[0].data.legendAbbrName);\n+\nif (series.length === 0) {\nreturn;\n}\n@@ -283,8 +282,6 @@ charts.addLegend = function (series, chartType, settings, container) {\nwidth += 55;\nconst widthPercent = width / $(container).width() * 100;\n- console.log('innerwidth', innerWidth);\n-\nfor (i = 0; i < series.length; i++) {\nif (!series[i].name) {\ncontinue; // eslint-disable-line\n",
        "date": "24.08.2018 10:16:36",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove console.log statements and unnecessary code in addLegend function"
    },
    {
        "msg": "remove `fit()`",
        "diff": "diff --git a/test/components/dropdown/dropdown.e2e-spec.js b/test/components/dropdown/dropdown.e2e-spec.js @@ -180,7 +180,7 @@ describe('Dropdown example-index tests', () => {\nexpect(await element(by.css('div[aria-controls=\"dropdown-list\"]'))).not.toContain('is-open');\n});\n- fit('Should not allow the escape key to re-open a closed menu', async () => { //eslint-disable-line\n+ it('Should not allow the escape key to re-open a closed menu', async () => { //eslint-disable-line\nconst dropdownEl = await element(by.css('div[aria-controls=\"dropdown-list\"]'));\nawait browser.driver\n",
        "date": "12.09.2018 17:00:28",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Fix escape key behavior in dropdown menu"
    },
    {
        "msg": "remove old formatted value",
        "diff": "diff --git a/src/components/datagrid/datagrid.js b/src/components/datagrid/datagrid.js @@ -5275,7 +5275,6 @@ Datagrid.prototype = {\nvalue = value.toLowerCase();\n// Strip any html markup that might be in the formatted value\n- //value = value.replace(/(<([^>]+)>)|(&lt;([^>]+)&gt;)/ig, '');\nvalue = value.replace(/(<([^>]+)>)|(amp;)|(&lt;([^>]+)&gt;)/ig, '');\nreturn value.indexOf(filterExpr.value) > -1;\n",
        "date": "21.09.2018 23:09:38",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove html markup from formatted value in datagrid"
    },
    {
        "msg": "remove extraneous rules",
        "diff": "diff --git a/src/components/searchfield/_searchfield-toolbar.scss b/src/components/searchfield/_searchfield-toolbar.scss @@ -702,27 +702,6 @@ $toolbarsearchfield-category-empty-width: 51px;\n}\n}\n}\n-\n- .header,\n- .masthead {\n- .toolbar-searchfield-wrapper.non-collapsible {\n- .searchfield {\n- background-color: rgba($searchfield-moduletabs-bg-color, 0.5);\n- border-bottom-color: rgba($searchfield-moduletabs-border-color, 0.7);\n- }\n- }\n- }\n-\n- .module-tabs {\n- .toolbar-searchfield-wrapper.non-collapsible {\n- // reset all the styling for the searchfield to correctly appear open.\n- .searchfield {\n- background-color: rgba($searchfield-header-bg-color, 0.5);\n- border-bottom-color: rgba($searchfield-header-border-color, 0.7);\n- }\n- }\n- }\n-\n}\nhtml[dir='rtl'] {\n",
        "date": "10.10.2018 14:03:44",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unnecessary styling for toolbar searchfield wrapper."
    },
    {
        "msg": "remove Tabs e2e tests focused on events in favor of functional tests",
        "diff": "diff --git a/test/components/tabs/tabs.e2e-spec.js b/test/components/tabs/tabs.e2e-spec.js @@ -485,36 +485,3 @@ describe('Tabs ajax as href tests', () => {\nexpect(await element(by.id('ajaxified-tabs-tab-2')).getAttribute('innerHTML')).not.toBe('');\n});\n});\n-\n-describe('Tabs click example-activated-event tests', () => {\n- beforeEach(async () => {\n- await utils.setPage('/components/tabs/example-activated-event');\n- const tabsContainerEl = await element(by.id('tabs'));\n- await browser.driver\n- .wait(protractor.ExpectedConditions.presenceOf(tabsContainerEl), config.waitsFor);\n- });\n-\n- it('Should not have errors', async () => {\n- await utils.checkForErrors();\n- });\n-\n- it('Should be able to call activate and beforeActivate in tabs', async () => { //eslint-disable-line\n- const opportunitiesEl = await element.all(by.css('.tab-list li')).get(2);\n-\n- await browser.actions().mouseMove(opportunitiesEl).perform();\n- await browser.actions().click(opportunitiesEl).perform();\n- await opportunitiesEl.click();\n-\n- const beforeActivateEl = await element.all(by.css('.toast-title')).get(0);\n- await browser.driver\n- .wait(protractor.ExpectedConditions.presenceOf(beforeActivateEl), config.waitsFor);\n-\n- expect(await beforeActivateEl.getText()).toContain('beforeActivate');\n-\n- const activateEl = await element.all(by.css('.toast-title')).get(1);\n- await browser.driver\n- .wait(protractor.ExpectedConditions.presenceOf(activateEl), config.waitsFor);\n-\n- expect(await activateEl.getText()).toContain('activated');\n- });\n-});\n",
        "date": "24.10.2018 12:28:24",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor tabs.e2e-spec.js by removing redundant test cases"
    },
    {
        "msg": "remove `debugger`s",
        "diff": "diff --git a/app/src/js/custom-route-options.js b/app/src/js/custom-route-options.js @@ -59,8 +59,6 @@ module.exports = function customRouteOptions(req, res) {\n// RenderLoop\nif (url.match(/renderloop\\/example-delayed-start/)) {\n- debugger;\n-\nSohoConfig.renderLoop = {};\nSohoConfig.renderLoop.noAutoStart = true;\n}\n@@ -78,7 +76,6 @@ module.exports = function customRouteOptions(req, res) {\n// If there have been properties added to SohoConfig,\n// stringify and pass it to the view options\nif (Object.keys(SohoConfig).length) {\n- debugger;\ncustomOpts.SohoConfig = JSON.stringify(SohoConfig);\n}\n",
        "date": "25.10.2018 12:17:15",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove debugger statements and clean up code in customRouteOptions"
    },
    {
        "msg": "remove a test that wont run on chrome headless ref",
        "diff": "diff --git a/test/components/tabs/tabs-events.func-spec.js b/test/components/tabs/tabs-events.func-spec.js @@ -8,7 +8,7 @@ let tabsPanelEl;\nlet svgEl;\nlet tabsObj;\n-describe('Tabs API', () => {\n+fdescribe('Tabs API', () => { //eslint-disable-line\nbeforeEach(() => {\ntabsEl = null;\ntabsPanelEl = null;\n@@ -46,16 +46,6 @@ describe('Tabs API', () => {\nexpect(spyEvent).toHaveBeenTriggered();\n});\n- it('Should trigger \"afteractivated\" event', (done) => {\n- const spyEvent = spyOnEvent('#tabs-normal', 'afteractivated');\n- tabsObj.activate('#tabs-normal-notes');\n-\n- setTimeout(() => {\n- expect(spyEvent).toHaveBeenTriggered();\n- done();\n- }, 301);\n- });\n-\nit('Should trigger \"hash-change\" event', () => {\ntabsObj.settings.changeTabOnHashChange = true;\nconst spyEvent = spyOnEvent('#tabs-normal', 'hash-change');\n",
        "date": "31.10.2018 14:39:58",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Update Tabs API tests to focus on specific test cases"
    },
    {
        "msg": "remove a fit",
        "diff": "diff --git a/test/components/datagrid/datagrid.e2e-spec.js b/test/components/datagrid/datagrid.e2e-spec.js @@ -247,7 +247,7 @@ describe('Datagrid paging (client side) tests', () => {\nexpect(await element(by.css('tbody tr:nth-child(10) td:nth-child(2) span')).getText()).toEqual('9');\n});\n- fit('Should be able to move to specific page', async () => { //eslint-disable-line\n+ it('Should be able to move to specific page', async () => {\nexpect(await element(by.css('tbody tr:nth-child(1) td:nth-child(2) span')).getText()).toEqual('0');\nexpect(await element(by.css('tbody tr:nth-child(10) td:nth-child(2) span')).getText()).toEqual('9');\n",
        "date": "06.11.2018 11:04:01",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor test to remove eslint-disable-line"
    },
    {
        "msg": "remove new name options",
        "diff": "diff --git a/app/views/components/bar/test-axis-formatter.html b/app/views/components/bar/test-axis-formatter.html @@ -18,23 +18,23 @@ $('body').on('initialized', function () {\nvar dataset = [{\ndata: [\n// {'name': 'Lee Hogan', 'value': 1101061117},\n- {'name': 'Dan Barret', 'abbrName': 'Dan Barret', 'shortName': 'Dan Barret', 'value': 1105272},\n- {'name': 'Ed Martinez', 'abbrName': 'Ed Martinez', 'shortName': 'Ed Martinez', 'value': 773456},\n- {'name': 'Linda Walsh', 'abbrName': 'Linda Walsh', 'shortName': 'Linda Walsh', 'value': 752648},\n- {'name': 'Cathy Hughes', 'abbrName': 'Cathy Hughes', 'shortName': 'Cathy Hughes', 'value': 274582},\n- {'name': 'Kim Lee', 'abbrName': 'Kim Lee', 'shortName': 'Kim Lee', 'value': 143623},\n- {'name': 'Derek Murray', 'abbrName': 'Derek Murray', 'shortName': 'Derek Murray', 'value': 91783},\n- {'name': 'Manuel Fuentes', 'abbrName': 'Manuel Fuentes', 'shortName': 'Manuel Fuentes', 'value': 79700},\n- {'name': 'Georgine Ekels', 'abbrName': 'Georgine Ekels', 'shortName': 'Georgine Ekels', 'value': 79594},\n- {'name': 'Hans Stichler', 'abbrName': 'Hans Stichler', 'shortName': 'Hans Stichler', 'value': 68719},\n- {'name': 'Rajeev Mitra', 'abbrName': 'Rajeev Mitra', 'shortName': 'Rajeev Mitra', 'value': 41814},\n- {'name': 'Jean Grant', 'abbrName': 'Jean Grant', 'shortName': 'Jean Grant', 'value': 14153},\n- {'name': 'Agnes Kumer', 'abbrName': 'Agnes Kumer', 'shortName': 'Agnes Kumer', 'value': 11612},\n- {'name': 'Administrator', 'abbrName': 'Administrator', 'shortName': 'Administrator', 'value': 10330},\n- {'name': 'Brian McNulty', 'abbrName': 'Brian McNulty', 'shortName': 'Brian McNulty', 'value': 3812},\n- {'name': 'Ken Dryden', 'abbrName': 'Ken Dryden', 'shortName': 'Ken Dryden', 'value': 0},\n- {'name': 'Lou Pizzutti', 'abbrName': 'Lou Pizzutti', 'shortName': 'Lou Pizzutti', 'value': 0},\n- {'name': 'John Smith', 'abbrName': 'John Smith', 'shortName': 'John Smith', 'value': 0}\n+ {'name': 'Dan Barret', 'value': 1105272},\n+ {'name': 'Ed Martinez', 'value': 773456},\n+ {'name': 'Linda Walsh', 'value': 752648},\n+ {'name': 'Cathy Hughes', 'value': 274582},\n+ {'name': 'Kim Lee', 'value': 143623},\n+ {'name': 'Derek Murray', 'value': 91783},\n+ {'name': 'Manuel Fuentes', 'value': 79700},\n+ {'name': 'Georgine Ekels', 'value': 79594},\n+ {'name': 'Hans Stichler', 'value': 68719},\n+ {'name': 'Rajeev Mitra', 'value': 41814},\n+ {'name': 'Jean Grant', 'value': 14153},\n+ {'name': 'Agnes Kumer', 'value': 11612},\n+ {'name': 'Administrator', 'value': 10330},\n+ {'name': 'Brian McNulty', 'value': 3812},\n+ {'name': 'Ken Dryden', 'value': 0},\n+ {'name': 'Lou Pizzutti', 'value': 0},\n+ {'name': 'John Smith', 'value': 0}\n],\nname: 'Sales by Employee'\n}];\n",
        "date": "15.11.2018 22:46:33",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor dataset in test-axis-formatter.html to remove unnecessary properties"
    },
    {
        "msg": "remove `is-open` class when shrinking non-collapsible searchfields",
        "diff": "diff --git a/src/components/searchfield/searchfield.js b/src/components/searchfield/searchfield.js @@ -429,6 +429,17 @@ SearchField.prototype = {\nreturn this;\n},\n+ /**\n+ * Simpler version of `adjustOnBreakpoint` for non-collapsible Toolbar Flex searchfields\n+ */\n+ simpleAdjustOnBreakpoint() {\n+ if (this.shouldBeFullWidth()) {\n+ this.wrapper[0].classList.remove('is-open');\n+ return;\n+ }\n+ this.wrapper[0].classList.add('is-open');\n+ },\n+\n/**\n* Makes necessary adjustments to the DOM surrounding the Searchfield element to accommodate\n* breakpoint changes.\n@@ -763,6 +774,11 @@ SearchField.prototype = {\nself.adjustOnBreakpoint();\n});\nself.adjustOnBreakpoint();\n+ } else {\n+ $('body').on(`resize.${this.id}`, () => {\n+ self.simpleAdjustOnBreakpoint();\n+ });\n+ self.simpleAdjustOnBreakpoint();\n}\nif (this.collapseButton && this.collapseButton.length) {\n",
        "date": "15.11.2018 12:26:57",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Simplify adjustOnBreakpoint method for non-collapsible Toolbar Flex searchfields"
    },
    {
        "msg": "remove popstate event",
        "diff": "diff --git a/src/components/modal/modal.js b/src/components/modal/modal.js @@ -87,14 +87,6 @@ Modal.prototype = {\nself.isCancelled = false;\n- if (window.history && window.history.pushState) {\n- $(window).off('popstate.modal');\n-\n- $(window).on('popstate.modal', () => {\n- self.destroy();\n- });\n- }\n-\n// ensure is appended to body for new dom tree\nif (this.settings.content) {\nthis.settings.trigger = this.settings.content instanceof jQuery ? this.settings.trigger : 'immediate';\n@@ -914,8 +906,6 @@ Modal.prototype = {\nself.element.closest('.modal-page-container').remove();\n$.removeData(self.element[0], 'modal');\n-\n- $(window).off('popstate.modal');\n}\nif (!this.isOpen()) {\n",
        "date": "26.11.2018 18:31:24",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove popstate event listener on modal destroy"
    },
    {
        "msg": "remove unused var in event handler",
        "diff": "diff --git a/src/components/searchfield/searchfield.js b/src/components/searchfield/searchfield.js @@ -856,7 +856,7 @@ SearchField.prototype = {\n// Override the 'click' listener created by Autocomplete (which overrides the\n// default Popupmenu method) to act differntly when the More Results link is activated.\n- self.element.on(`listopen.${this.id}`, (e, items) => {\n+ self.element.on(`listopen.${this.id}`, () => {\nconst list = $('#autocomplete-list');\n// Visual indicator class\n",
        "date": "27.11.2018 12:35:52",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor click listener in SearchField component"
    },
    {
        "msg": "remove ApprovaOS change from comments",
        "diff": "diff --git a/src/components/tree/tree.js b/src/components/tree/tree.js @@ -140,7 +140,7 @@ Tree.prototype = {\n* @param {object} a an anchor tag reference wrapped in a jQuery object.\n* @returns {void}\n*/\n- //ApprovaOS Change - Added parameter checkox and icon to show check box and icon on demand for particular node\n+ // Added parameters - To show check box and icon on demand for particular node\ndecorateNode(a, icon, hideCheckbox) {\na = this.isjQuery(a) ? a : $(a);\nlet parentCount = 0;\n@@ -200,8 +200,7 @@ Tree.prototype = {\na[0].textContent = '';\nif (a.children('svg.icon-tree').length === 0) {\n- //old code: a.prepend($.createIcon({ icon: 'tree-node', classes: ['icon-tree'] }));\n- //ApprovaOS Change - removed icon of node\n+ // Show provided icon if any, if empty string provided then show empty icon otherwise show document icon.\nif (icon || icon === '') {\na[0].insertAdjacentHTML('afterbegin', $.createIcon({ icon: icon, classes: ['icon-tree'] }));\n} else {\n@@ -214,9 +213,7 @@ Tree.prototype = {\n}\n// Inject checkbox\n-\n- //Old code - if (this.isMultiselect && !this.settings.hideCheckboxes) {\n- //ApprovaOS Change - Show check box for particular node on demand\n+ // Show check box for particular node on demand\nif (this.isMultiselect && (!this.settings.hideCheckboxes || hideCheckbox === false)) {\na[0].insertAdjacentHTML('beforeend', '<span class=\"tree-checkbox\"></span>');\n}\n@@ -654,8 +651,8 @@ Tree.prototype = {\nself.selectNodeFinish(node, focus, e);\n}\n} else { // No Callback specified\n- //ApprovaOS Change - if tree is multiselect commented because do not select node on expand node\n- //self.selectNodeFinish(node, focus, e);\n+ // Commented because if tree is multiselect, do not select node on collapse node\n+ // self.selectNodeFinish(node, focus, e)\n}\nself.setTreeIcon(node.closest('.folder').removeClass('is-open').end().find('svg.icon-tree'), s.folderIconClosed);\n@@ -695,8 +692,8 @@ Tree.prototype = {\nself.selectNodeFinish(node, focus, e);\n}\n} else { // No Callback specified\n- //ApprovaOS Change - if tree is multiselect commented because do not select node on expand node\n- //self.selectNodeFinish(node, focus, e);\n+ // Commented because if tree is multiselect, do not select node on expand node\n+ // self.selectNodeFinish(node, focus, e)\n}\nconst nodeData = node.data('jsonData');\n@@ -1295,7 +1292,7 @@ Tree.prototype = {\nelem = this.findById(node.parent);\n}\n- //ApprovaOS Change - Update dataset after added node before or after.\n+ // Update dataset after inserting node before or after other node.\nif (location instanceof jQuery && location.is('li')) {\nvar updatedNode = this.findById($(location[0].parentNode.parentNode).find('a')[0].id);\nvar index = updatedNode.children.findIndex(function (element) {\n@@ -1547,7 +1544,7 @@ Tree.prototype = {\n* @returns {object} li added\n*/\n- //ApprovaOS Change - parameter added to add node before or after the node\n+ // Parameter added - to add node before or after the node\naddNode(nodeData, location, isBeforeOrAfter) {\nconst badgeAttr = typeof nodeData.badge === 'object' ? JSON.stringify(nodeData.badge) : nodeData.badge;\n@@ -1565,7 +1562,7 @@ Tree.prototype = {\na.setAttribute('data-alert-icon', nodeData.alertIcon);\n}\n- //Start ApprovaOS Change - added for dropdown\n+ // Insert dropdown - Start\nif (nodeData.type === 'dropdown') {\nvar selectedOptionText;\na.attr({\n@@ -1602,7 +1599,7 @@ Tree.prototype = {\n}\n}\n}\n- //End ApprovaOS Change - added for dropdown\n+ // Insert dropdown - End\nif (nodeData.text) {\na.textContent = nodeData.text;\n@@ -1630,7 +1627,7 @@ Tree.prototype = {\nfound = true;\n}\n- //ApprovaOS Change - added node in between the node\n+ // Insert node in between the node\nif (location instanceof jQuery && isBeforeOrAfter === 'before') {\nli.insertBefore(location);\nfound = true;\n@@ -1639,7 +1636,6 @@ Tree.prototype = {\nfound = true;\n}\n- //ApprovaOS Change -\nif (location instanceof jQuery &&\n(!nodeData.parent || !found) && !(nodeData.parent instanceof jQuery)\n&& !(isBeforeOrAfter === 'before' || isBeforeOrAfter === 'after')) {\n@@ -1683,7 +1679,7 @@ Tree.prototype = {\n}\na = $(a);\n- //ApprovaOS Change - Added parameter to show or hide checkbox according to node.\n+ // Added parameter to show or hide checkbox according to node.\nthis.decorateNode(a, nodeData.icon, nodeData.hideCheckbox);\nif (nodeData.selected) {\n",
        "date": "07.12.2018 13:39:04",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor node decoration and selection logic in Tree component"
    },
    {
        "msg": "remove `fit()` from test suite",
        "diff": "diff --git a/test/components/datagrid/datagrid.e2e-spec.js b/test/components/datagrid/datagrid.e2e-spec.js @@ -153,7 +153,7 @@ describe('Datagrid mixed selection tests', () => {\n});\n});\n-fdescribe('Datagrid Lookup Editor', () => {\n+describe('Datagrid Lookup Editor', () => {\nbeforeEach(async () => {\nawait utils.setPage('/components/datagrid/test-editable-lookup-mask');\n",
        "date": "13.12.2018 15:34:18",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Fix typo in describe block for Datagrid Lookup Editor test suite"
    },
    {
        "msg": "remove unused code/bad comments",
        "diff": "diff --git a/app/src/js/custom-route-options.js b/app/src/js/custom-route-options.js @@ -40,17 +40,10 @@ module.exports = function customRouteOptions(req, res) {\n// Distribution (AMD)\nif (url.match(/tests\\/distribution/)) {\ncustomOpts.amd = true;\n- customOpts.layout = 'layout-nofrills'; // No layout for this one on purpose.\n+ customOpts.layout = 'layout-nofrills';\ncustomOpts.subtitle = 'AMD Tests';\n}\n- /*\n- // Header\n- if (url.match(/components\\/header/)) {\n- customOpts.layout = 'components/header/layout';\n- }\n- */\n-\n// Placement Logic\nif (url.match(/place\\/test-container-is-body/)) {\ncustomOpts.layout = 'components/place/layout-body';\n",
        "date": "17.12.2018 16:09:15",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor customRouteOptions to remove unnecessary comments and update layout for AMD Tests."
    },
    {
        "msg": "remove an unused/wrong rule",
        "diff": "diff --git a/src/components/cards/_cards.scss b/src/components/cards/_cards.scss .card-content {\nheight: auto;\nmin-height: auto;\n- overflow: none;\n}\n}\n.widget-content,\n.card-content {\nmin-width: 0;\n- overflow: none;\nwidth: auto;\n}\n}\n",
        "date": "11.01.2019 14:02:35",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Fix overflow issue in card and widget content styling"
    },
    {
        "msg": "remove extra string in logging for doc script",
        "diff": "diff --git a/scripts/deploy-documentation.js b/scripts/deploy-documentation.js @@ -551,7 +551,7 @@ function writeHtmlFile(hbsTemplate, componentName) {\nif (err) {\nreject(err);\n} else {\n- swlog.logTaskAction('Created', `${dest.replace(process.cwd(), '')}.html`);\n+ swlog.logTaskAction('Created', `${dest.replace(process.cwd(), '')}`);\nresolve();\n}\n});\n",
        "date": "15.01.2019 15:37:28",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove file extension from log message in deploy-documentation script"
    },
    {
        "msg": "remove arrow function in test page",
        "diff": "diff --git a/app/views/components/popupmenu/test-multiple-context-menu-destroy.html b/app/views/components/popupmenu/test-multiple-context-menu-destroy.html const contextMenuApi2 = contextMenu2.data('popupmenu');\n// This emulates an *ngIf on the first field, where it's presence is toggled.\n- $('#popdown-destroy').click(() => {\n+ $('#popdown-destroy').click(function(){\n// turn off events\ncontextMenu.off();\n",
        "date": "22.01.2019 13:48:38",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor click event handler to use function expression instead of arrow function"
    },
    {
        "msg": "remove console log from icons route",
        "diff": "diff --git a/app/src/js/routes/custom-icons.js b/app/src/js/routes/custom-icons.js @@ -44,7 +44,6 @@ const template = handlebars.compile(hbsTemplate);\n* @param {String} url - The route request\n*/\nmodule.exports = url => {\n- console.log(url);\nconst fileName = path.basename(url, '.html');\nconst iconSet = pageMap[fileName];\nconst meta = JSON.parse(fs.readFileSync(`node_modules/ids-identity/dist/theme-soho/icons/${iconSet}/metadata.json`, 'utf-8').toString());\n",
        "date": "05.02.2019 12:59:07",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove console.log statement from custom-icons.js"
    },
    {
        "msg": "remove CSS to position editor icons",
        "diff": "diff --git a/src/components/editor/_editor.scss b/src/components/editor/_editor.scss }\n.html-icon {\n- margin-left: -32px;\n+ margin-left: -18px;\nwidth: 85px;\n}\n&[data-element='strike'] {\nmargin-right: 8px;\n-\n- svg {\n- height: 22px;\n- width: 15px;\n- }\n}\n&[data-element='foreColor'] {\n",
        "date": "06.02.2019 13:17:43",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Adjust margin-left in .html-icon and remove unnecessary styles for strike element."
    },
    {
        "msg": "remove parseDate in favor of mutating conditional.",
        "diff": "diff --git a/src/components/datagrid/datagrid.editors.js b/src/components/datagrid/datagrid.editors.js @@ -486,7 +486,10 @@ const editors = {\n};\nthis.val = function (v) {\n- v = Locale.parseDate(v);\n+ if (v === '0000' ||v === '000000' || v === '00000000') {\n+ // Means no date in some applications\n+ v = '';\n+ }\nif (v) {\n// Note that the value should be formatted from the formatter.\nthis.input.val(v);\n",
        "date": "07.02.2019 16:06:22",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Fix date parsing issue in datagrid editors"
    },
    {
        "msg": "remove unused function. [skip travis]",
        "diff": "diff --git a/src/components/accordion/accordion.js b/src/components/accordion/accordion.js @@ -1493,24 +1493,6 @@ Accordion.prototype = {\nreturn this;\n},\n-\n- /**\n- * Check for tooltip type spantooltip or component\n- * @private\n- * @returns {boolean} True if is spantooltip\n- */\n- isSpantooltip() {\n- debugger\n- let isSpantooltipType = false;\n- if (self.tooltip) {\n- const tooltipJQ = this.tooltip instanceof jQuery ? this.tooltip : $(this.tooltip);\n- if (tooltipJQ.data('gridtooltip')) {\n- isSpantooltipType = true;\n- }\n- }\n- return isSpantooltipType;\n- },\n-\n/**\n* Hide the visible tooltip.\n* @private\n",
        "date": "14.02.2019 14:25:25",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove isSpantooltip method from Accordion component"
    },
    {
        "msg": "remove stray bits causing test errors",
        "diff": "diff --git a/test/components/hierarchy/hierarchy.func-spec.js b/test/components/hierarchy/hierarchy.func-spec.js @@ -40,8 +40,6 @@ describe('hierarchy API', () => {\ncleanup(['.svg-icons', '#hierarchyChartTemplate', '#hierarchy', '#hierarchyInit', '.hierarchy']);\nhierarchyAPI.destroy();\n- svgEl.parentNode.removeChild(svgEl);\n- hierarchyEl.parentNode.removeChild(hierarchyEl);\n});\nit('Can be invoked', () => {\n",
        "date": "20.02.2019 16:42:27",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove unnecessary DOM element removal in hierarchy API cleanup"
    },
    {
        "msg": "remove sleep, check for trigger",
        "diff": "diff --git a/test/components/lookup/lookup.e2e-spec.js b/test/components/lookup/lookup.e2e-spec.js @@ -166,14 +166,14 @@ describe('Lookup (multiselect)', () => {\n});\n});\n-describe('Lookup paging tests', () => {\n+fdescribe('Lookup paging tests', () => {\nbeforeEach(async () => {\nawait utils.setPage('/components/lookup/example-paging');\n+ await browser.driver.wait(protractor.ExpectedConditions.presenceOf(element(by.css('.trigger'))), config.waitsFor);\n});\nit('should have a pager component', async () => {\nawait element(by.css('.trigger')).click();\n- await browser.driver.sleep(config.sleep);\nawait browser.driver.wait(protractor.ExpectedConditions.presenceOf(element(by.css('.pager-toolbar'))), config.waitsFor);\nexpect(await element(by.className('pager-toolbar')).isPresent()).toBeTruthy();\n@@ -181,7 +181,6 @@ describe('Lookup paging tests', () => {\nit('should have a search and actions', async () => {\nawait element(by.css('.trigger')).click();\n- await browser.driver.sleep(config.sleep);\nawait browser.driver.wait(protractor.ExpectedConditions.presenceOf(element(by.css('.searchfield'))), config.waitsFor);\nawait browser.driver.wait(protractor.ExpectedConditions.presenceOf(element(by.css('.btn-actions'))), config.waitsFor);\n@@ -192,7 +191,6 @@ describe('Lookup paging tests', () => {\nit('should have an enabled next page button', async () => {\nawait element(by.css('.trigger')).click();\n- await browser.driver.sleep(config.sleep);\nawait browser.driver.wait(protractor.ExpectedConditions.presenceOf(element(by.css('.pager-next'))), config.waitsFor);\nexpect(await element(by.css('.pager-next')).isEnabled()).toBe(true);\n@@ -200,7 +198,6 @@ describe('Lookup paging tests', () => {\nit('should be able to go the next page', async () => {\nawait element(by.css('.trigger')).click();\n- await browser.driver.sleep(config.sleep);\nawait browser.driver.wait(protractor.ExpectedConditions.presenceOf(element(by.css('.pager-next'))), config.waitsFor);\nawait element(by.css('.pager-next')).click();\n",
        "date": "22.02.2019 11:19:45",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Update Lookup paging tests to focus on specific tests and improve test reliability."
    },
    {
        "msg": "remove 'npx' from release cmds",
        "diff": "diff --git a/package.json b/package.json \"zip-dist\": \"npx grunt zip-dist\",\n\"documentation\": \"node ./scripts/deploy-documentation.js\",\n\"publish-aws\": \"AWS_PROFILE=sohoxi directory-to-s3 -d dist infor-devops-core-soho-us-east-1/sohoxi/4.12.0 -v\",\n- \"release:beta\": \"npx release-it minor --preRelease=beta --no-github.release\",\n- \"release:rc\": \"npx release-it --preRelease=rc --no-github.release\",\n- \"release:final\": \"npx release-it\",\n+ \"release:beta\": \"release-it minor --preRelease=beta --no-github.release\",\n+ \"release:rc\": \"release-it --preRelease=rc --no-github.release\",\n+ \"release:final\": \"release-it\",\n\"test\": \"npm run mdlint && npm run eslint && npm run stylelint && npm run functional:ci && npm run e2e:ci\"\n},\n\"dependencies\": {\n",
        "date": "22.02.2019 14:54:29",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor release scripts in package.json"
    },
    {
        "msg": "remove tooltip from pagesize selector",
        "diff": "diff --git a/src/components/pager/pager.js b/src/components/pager/pager.js @@ -1014,13 +1014,6 @@ Pager.prototype = {\n};\npageSizeButton.popupmenu(popupOpts);\n-\n- // Show additional context on the condensed version.\n- if (this.showSmallPageSizeSelector) {\n- pageSizeButton.tooltip({\n- content: translatedText\n- });\n- }\n}\n$(this.pageSizeSelectorButton).on('selected.pager', (e, args) => {\n@@ -1422,11 +1415,6 @@ Pager.prototype = {\nif (this.pageSizeSelectorButton) {\n$(this.pageSizeSelectorButton).off(`selected.${COMPONENT_NAME}`);\n$(this.pageSizeSelectorButton).data('popupmenu').destroy();\n-\n- const tooltipAPI = $(this.pageSizeSelectorButton).data('tooltip');\n- if (tooltipAPI) {\n- tooltipAPI.destroy();\n- }\n}\nthis.pagerBar[0].innerHTML = '';\n",
        "date": "27.02.2019 09:51:43",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove tooltip functionality for small page size selector in pager component"
    },
    {
        "msg": "remove tests with fit",
        "diff": "diff --git a/test/components/locale/locale.func-spec.js b/test/components/locale/locale.func-spec.js @@ -934,7 +934,7 @@ describe('Locale API', () => {\nexpect(Locale.parseDate('22-03-2000 20:11 Eastern-standaardtijd', { pattern: 'dd-MM-yyyy HH:mm zzzz' }).getTime()).toEqual(new Date(2000, 2, 22, 20, 11).getTime());\n});\n- fit('Should be able to display dates into another timezone', () => { //eslint-disable-line\n+ it('Should be able to display dates into another timezone', () => {\nLocale.set('en-US');\nexpect(Locale.dateToTimeZone(new Date(2018, 2, 26), 'Australia/Brisbane')).toEqual('3/26/2018, 2:00:00 PM');\n@@ -947,7 +947,7 @@ describe('Locale API', () => {\nexpect(Locale.dateToTimeZone(new Date(2018, 2, 26), 'America/New_York')).toEqual('26-3-2018 00:00:00');\n});\n- fit('Should be able to display dates into another timezone including short timezone name', () => { //eslint-disable-line\n+ it('Should be able to display dates into another timezone including short timezone name', () => {\nLocale.set('en-US');\nexpect(Locale.dateToTimeZone(new Date(2018, 2, 26), 'Australia/Brisbane', 'short')).toEqual('3/26/2018, 2:00:00 PM GMT+10');\n@@ -960,7 +960,7 @@ describe('Locale API', () => {\nexpect(Locale.dateToTimeZone(new Date(2018, 2, 26), 'America/New_York', 'short')).toEqual('26-3-2018 00:00:00 GMT-4');\n});\n- fit('Should be able to display dates into another timezone including long timezone name', () => { //eslint-disable-line\n+ it('Should be able to display dates into another timezone including long timezone name', () => {\nLocale.set('en-US');\nexpect(Locale.dateToTimeZone(new Date(2018, 2, 26), 'Australia/Brisbane', 'long')).toEqual('3/26/2018, 2:00:00 PM Australian Eastern Standard Time');\n",
        "date": "05.03.2019 14:16:22",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor date display functionality for different timezones"
    },
    {
        "msg": "remove fix from compositeform.js",
        "diff": "diff --git a/src/components/compositeform/compositeform.js b/src/components/compositeform/compositeform.js @@ -81,8 +81,6 @@ CompositeForm.prototype = {\n// Check size and append class, if necessary\nthis.checkResponsive();\n- this.applyIE11Fix();\n-\nreturn this;\n},\n@@ -105,8 +103,6 @@ CompositeForm.prototype = {\nfunction changeExpanderText() {\nconst isExpanded = self.expandableAreaAPI.isExpanded();\nself.setExpanderText(self.settings[isExpanded ? 'expandedText' : 'collapsedText']);\n-\n- self.applyIE11Fix();\n}\nif (this.hasSummary) {\n@@ -164,23 +160,6 @@ CompositeForm.prototype = {\nreturn this.element[0].classList.contains('on-side');\n},\n- /**\n- * Determines if browser is IE11 and applies min-height fix for overflow\n- * @returns {void}\n- */\n- applyIE11Fix() {\n- const isIE11 = $('html').hasClass('ie11');\n- const expandableElementArea = $('.expandable-area');\n- const isElementExpanded = expandableElementArea.hasClass('is-expanded');\n- if (isIE11 && isElementExpanded) {\n- setTimeout(function () {\n- expandableElementArea.css('min-height', $('.expandable-pane').outerHeight(true) + $('.expandable-footer').outerHeight(true));\n- }, 300); // equal to transition time\n- } else if (isIE11 && !isElementExpanded) {\n- expandableElementArea.css('min-height', 'auto');\n- }\n- },\n-\n/**\n* Re-invokes the Composite Form\n* @returns {object} The component API for chaining.\n",
        "date": "15.03.2019 13:14:44",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove IE11 fix from CompositeForm component"
    },
    {
        "msg": "remove empty line before declaration. Add empty line before rule.",
        "diff": "diff --git a/src/components/searchfield/_searchfield-toolbar.scss b/src/components/searchfield/_searchfield-toolbar.scss @@ -47,8 +47,8 @@ $toolbarsearchfield-category-empty-width: 51px;\n}\n&.has-go-button {\n-\ntext-align: right;\n+\n.searchfield {\nborder-bottom-right-radius: 0;\nborder-top-right-radius: 0;\n",
        "date": "25.03.2019 15:03:02",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Fix alignment of searchfield toolbar and add border radius to searchfield."
    },
    {
        "msg": "remove the addition of markup if no toolbar's detected",
        "diff": "diff --git a/src/components/header/header.js b/src/components/header/header.js @@ -117,14 +117,9 @@ Header.prototype = {\n*/\nbuild() {\nlet isFlex = false;\n- let elem = this.element.find('.toolbar, .flex-toolbar');\n+ const elem = this.element.find('.toolbar, .flex-toolbar');\nif (!elem.length) {\n- // Build a simple toolbar, if applicable\n- let type = 'toolbar';\n- if (this.settings.useFlexToolbar) {\n- type = 'flex-toolbar';\n- }\n- elem = $(`<div class=\"${type}\"></div>`).prependTo(this.element);\n+ return this;\n}\nif (elem.is('.toolbar-flex')) {\nisFlex = true;\n",
        "date": "28.03.2019 11:07:54",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor build method in Header component to use const for elem variable and simplify toolbar creation logic"
    },
    {
        "msg": "remove audible span from lookup label",
        "diff": "diff --git a/src/components/lookup/lookup.js b/src/components/lookup/lookup.js @@ -172,10 +172,6 @@ Lookup.prototype = {\naddAria() {\nconst self = this;\nself.label = self.isInlineLabel ? self.inlineLabelText : $(`label[for=\"${self.element.attr('id')}\"]`);\n-\n- if (self.label) {\n- self.label.append(`<span class=\"audible\">${Locale.translate('UseEnter')}</span>`);\n- }\n},\n/**\n@@ -811,10 +807,6 @@ Lookup.prototype = {\nthis.icon.remove();\nthis.element.unwrap();\n-\n- if (this.label && this.label != null) {\n- this.label.find('.audible').remove();\n- }\n}\n};\n",
        "date": "11.04.2019 09:38:15",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Remove audible span from lookup label"
    },
    {
        "msg": "remove the fit so all tests can run now",
        "diff": "diff --git a/test/components/applicationmenu/applicationmenu.e2e-spec.js b/test/components/applicationmenu/applicationmenu.e2e-spec.js @@ -148,7 +148,7 @@ describe('Applicationmenu Personalization tests', () => {\n});\nif (utils.isChrome() && utils.isCI()) {\n- fit('Should not visual regress on personalize', async () => {\n+ it('Should not visual regress on personalize', async () => {\nconst windowSize = await browser.driver.manage().window().getSize();\nawait browser.driver.manage().window().setSize(1280, 724);\nconst section = await element(by.css('body.no-scroll'));\n",
        "date": "15.04.2019 09:47:41",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Refactor personalize test to remove focus on Chrome CI."
    },
    {
        "msg": "remove delay in moreButton test",
        "diff": "diff --git a/test/components/tabs/tabs-api.func-spec.js b/test/components/tabs/tabs-api.func-spec.js @@ -58,9 +58,7 @@ describe('Tabs API', () => {\ntabsEl.style.width = '400px';\n$('body').triggerHandler('resize');\n- setTimeout(() => {\nexpect(tabsObj.hasMoreButton()).toBeTruthy();\n- }, 300);\n});\nit('Should not be in responsive mode', () => {\n",
        "date": "22.04.2019 14:51:09",
        "repo": "infor-design/enterprise",
        "type": "remove",
        "chatgpt_zeroshot": "Fix tabs API test for responsive mode detection"
    },
    {
        "msg": "update README on new code distribution",
        "diff": "diff --git a/README.md b/README.md @@ -13,43 +13,28 @@ With Zeppelin, you can build distributed applications, protocols and organizatio\n## Getting Started\nZeppelin integrates with [Truffle](https://github.com/ConsenSys/truffle), an Ethereum development environment. Please install Truffle and initialize your project with `truffle init`.\n+\n```sh\n-npm install -g truffle\n+npm install -g truffle@beta\nmkdir myproject && cd myproject\ntruffle init\n```\nTo install the Zeppelin library, run:\n```sh\n-npm i zeppelin-solidity\n-```\n-\n-After that, you'll get all the library's contracts in the `contracts/zeppelin` folder. You can use the contracts in the library like so:\n-\n-```js\n-import \"./zeppelin/Ownable.sol\";\n-\n-contract MyContract is Ownable {\n- ...\n-}\n+truffle install zeppelin\n```\n-> NOTE: The current distribution channel is npm, which is not ideal. [We're looking into providing a better tool for code distribution](https://github.com/OpenZeppelin/zeppelin-solidity/issues/13), and ideas are welcome.\n-\n-#### Truffle Beta Support\n-We also support Truffle Beta npm integration. If you're using Truffle Beta, the contracts in `node_modules` will be enough, so feel free to delete the copies at your `contracts` folder. If you're using Truffle Beta, you can use Zeppelin contracts like so:\n+After that, you'll get all the library's contracts in the `installed_contracts` folder. You can use the contracts in the library like so:\n```js\n-import \"zeppelin-solidity/contracts/Ownable.sol\";\n+import 'zeppelin/ownership/Ownable.sol';\ncontract MyContract is Ownable {\n...\n}\n```\n-For more info see [the Truffle Beta package management tutorial](http://truffleframework.com/tutorials/package-management).\n-\n-\n## Security\nZeppelin is meant to provide secure, tested and community-audited code, but please use common sense when doing anything that deals with real money! We take no responsibility for your implementation decisions and any security problem you might experience.\n",
        "date": "09.03.2017 18:02:41",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "update",
        "chatgpt_zeroshot": "Update Truffle installation command and Zeppelin library installation command"
    },
    {
        "msg": "update reference to Ownable contract.",
        "diff": "diff --git a/docs/source/getting-started.rst b/docs/source/getting-started.rst @@ -13,7 +13,7 @@ To install the Zeppelin library, run::\nAfter that, you'll get all the library's contracts in the contracts/zeppelin folder. You can use the contracts in the library like so::\n- import \"./zeppelin/Ownable.sol\";\n+ import \"zeppelin-solidty/contracts/Ownable.sol\";\ncontract MyContract is Ownable {\n...\n",
        "date": "11.07.2017 10:32:16",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "update",
        "chatgpt_zeroshot": "Update import path for Ownable.sol in getting-started.rst"
    },
    {
        "msg": "update balance syntax for solidity 0.4.23",
        "diff": "diff --git a/contracts/ownership/HasNoEther.sol b/contracts/ownership/HasNoEther.sol @@ -36,6 +36,6 @@ contract HasNoEther is Ownable {\n* @dev Transfer all Ether held by the contract to the owner.\n*/\nfunction reclaimEther() external onlyOwner {\n- owner.transfer(this.balance);\n+ owner.transfer(address(this).balance);\n}\n}\n",
        "date": "31.05.2018 07:10:08",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "update",
        "chatgpt_zeroshot": "Fix transfer of Ether in reclaimEther function"
    },
    {
        "msg": "update documentation Uppercasing function name for ERC02 basic token",
        "diff": "diff --git a/contracts/token/ERC20/BasicToken.sol b/contracts/token/ERC20/BasicToken.sol @@ -17,14 +17,14 @@ contract BasicToken is ERC20Basic {\nuint256 totalSupply_;\n/**\n- * @dev total number of tokens in existence\n+ * @dev Total number of tokens in existence\n*/\nfunction totalSupply() public view returns (uint256) {\nreturn totalSupply_;\n}\n/**\n- * @dev transfer token for a specified address\n+ * @dev Transfer token for a specified address\n* @param _to The address to transfer to.\n* @param _value The amount to be transferred.\n*/\n",
        "date": "09.06.2018 01:30:48",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "update",
        "chatgpt_zeroshot": "Refactor comments for clarity and consistency"
    },
    {
        "msg": "update the typo in Readme",
        "diff": "diff --git a/README.md b/README.md @@ -80,7 +80,7 @@ The following provides visibility into how OpenZeppelin's contracts are organize\n- **introspection** - An interface that can be used to make a contract comply with the ERC-165 standard as well as a contract that implements ERC-165 using a lookup table.\n- **lifecycle** - A collection of base contracts used to manage the existence and behavior of your contracts and their funds.\n- **math** - Libraries with safety checks on operations that throw on errors.\n-- **mocks** - A collection of abstract contracts that are primarily used for unit testing. They also serve as good usage examples and demonstrate how to combine contracts with inheritence when developing your own custom applciations.\n+- **mocks** - A collection of abstract contracts that are primarily used for unit testing. They also serve as good usage examples and demonstrate how to combine contracts with inheritence when developing your own custom applications.\n- **ownership** - A collection of smart contracts that can be used to manage contract and token ownership\n- **payment** - A collection of smart contracts that can be used to manage payments through escrow arrangements, withdrawals, and claims. Includes support for both single payees and multiple payees.\n- **proposals** - A collection of smart contracts that reflect community Ethereum Improvement Proposals (EIPs). These contracts are under development and standardization. They are not recommended for production, but they are useful for experimentation with pending EIP standards. Go [here](https://github.com/OpenZeppelin/openzeppelin-solidity/wiki/ERC-Process) for more information.\n",
        "date": "02.08.2018 21:07:58",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "update",
        "chatgpt_zeroshot": "Fix typo in README.md - \"applciations\" should be \"applications\""
    },
    {
        "msg": "update changelog to reflect 0.5 support.",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md ## 2.1.0 (unreleased)\n### New features:\n+ * Now targeting the 0.5.x line of Solidity compilers. For 0.4.24 support, use version 2.0 of OpenZeppelin.\n* `WhitelistCrowdsale`: a crowdsale where only whitelisted accounts (`WhitelistedRole`) can purchase tokens. Adding or removing accounts from the whitelist is done by whitelisters (`WhitelisterRole`). Similar to the pre-2.0 `WhitelistedCrowdsale`. ([#1525](https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1525))\n* `RefundablePostDeliveryCrowdsale`: replacement for `RefundableCrowdsale` (deprecated, see below) where tokens are only granted once the crowdsale ends (if it meets its goal). ([#1543](https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1543))\n* `PausableCrowdsale`: allows for pausers (`PauserRole`) to pause token purchases. Other crowdsale operations (e.g. withdrawals and refunds, if applicable) are not affected. ([#832](https://github.com/OpenZeppelin/openzeppelin-solidity/pull/832))\n",
        "date": "27.12.2018 16:24:38",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "update",
        "chatgpt_zeroshot": "Add new features targeting Solidity 0.5.x compilers, including WhitelistCrowdsale, RefundablePostDeliveryCrowdsale, and PausableCrowdsale."
    },
    {
        "msg": "update links in documentation setup description",
        "diff": "diff --git a/DOCUMENTATION.md b/DOCUMENTATION.md @@ -6,10 +6,10 @@ All of the content for the site is in this repository. The guides are in the\nthe source code. If you want to help improve the content, this is the\nrepository you should be contributing to.\n-[`solidity-docgen`](https://github.com/OpenZeppelin/solidity-docgen/tree/next) is the\n+[`solidity-docgen`](https://github.com/OpenZeppelin/solidity-docgen) is the\nprogram that extracts the API Reference from source code.\n-The [`openzeppelin-docsite`](https://github.com/OpenZeppelin/openzeppelin-docsite/tree/next)\n+The [`openzeppelin-docsite`](https://github.com/OpenZeppelin/openzeppelin-docsite)\nrepository hosts the configuration for Docusaurus, the static site generator\nthat we use.\n",
        "date": "24.04.2019 19:18:42",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "update",
        "chatgpt_zeroshot": "Update links in DOCUMENTATION.md"
    },
    {
        "msg": "update openzeppelin-docsite to fix windows issues (part 2)",
        "diff": "diff --git a/package-lock.json b/package-lock.json }\n},\n\"caniuse-db\": {\n- \"version\": \"1.0.30000966\",\n- \"resolved\": \"https://registry.npmjs.org/caniuse-db/-/caniuse-db-1.0.30000966.tgz\",\n- \"integrity\": \"sha512-PDXDry9EACH5Ld4s1JZMKR9BOnhO5qX/2Saqq9SeQhOSJbauFDwUzSefVyDuXN3trnR9MOicR9apPKcb1sihEA==\",\n+ \"version\": \"1.0.30000967\",\n+ \"resolved\": \"https://registry.npmjs.org/caniuse-db/-/caniuse-db-1.0.30000967.tgz\",\n+ \"integrity\": \"sha512-70gk6cLSD5rItxnZ7WUxyCpM9LAjEb1tVzlENQfXQXZS/IiGnfAC6u32G5cZFlDBKjNPBIta/QSx5CZLZepxRA==\",\n\"dev\": true\n},\n\"caniuse-lite\": {\n- \"version\": \"1.0.30000966\",\n- \"resolved\": \"https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30000966.tgz\",\n- \"integrity\": \"sha512-qqLQ/uYrpZmFhPY96VuBkMEo8NhVFBZ9y/Bh+KnvGzGJ5I8hvpIaWlF2pw5gqe4PLAL+ZjsPgMOvoXSpX21Keg==\",\n+ \"version\": \"1.0.30000967\",\n+ \"resolved\": \"https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30000967.tgz\",\n+ \"integrity\": \"sha512-rUBIbap+VJfxTzrM4akJ00lkvVb5/n5v3EGXfWzSH5zT8aJmGzjA8HWhJ4U6kCpzxozUSnB+yvAYDRPY6mRpgQ==\",\n\"dev\": true\n},\n\"caseless\": {\n\"dev\": true\n},\n\"node-releases\": {\n- \"version\": \"1.1.17\",\n- \"resolved\": \"https://registry.npmjs.org/node-releases/-/node-releases-1.1.17.tgz\",\n- \"integrity\": \"sha512-/SCjetyta1m7YXLgtACZGDYJdCSIBAWorDWkGCGZlydP2Ll7J48l7j/JxNYZ+xsgSPbWfdulVS/aY+GdjUsQ7Q==\",\n+ \"version\": \"1.1.18\",\n+ \"resolved\": \"https://registry.npmjs.org/node-releases/-/node-releases-1.1.18.tgz\",\n+ \"integrity\": \"sha512-/mnVgm6u/8OwlIsoyRXtTI0RfQcxZoAZbdwyXap0EeWwcOpDDymyCHM2/aR9XKmHXrvizHoPAOs0pcbiJ6RUaA==\",\n\"dev\": true,\n\"requires\": {\n\"semver\": \"^5.3.0\"\n}\n},\n\"openzeppelin-docsite\": {\n- \"version\": \"github:OpenZeppelin/openzeppelin-docsite#a21e2688298f6f612d69212973a7e56bc1455f57\",\n+ \"version\": \"github:OpenZeppelin/openzeppelin-docsite#1a4c169fb660f61f805e5d23b33184efe4b8155a\",\n\"from\": \"github:OpenZeppelin/openzeppelin-docsite\",\n\"dev\": true,\n\"requires\": {\n",
        "date": "07.05.2019 18:44:29",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "update",
        "chatgpt_zeroshot": "Update package versions for caniuse-db, caniuse-lite, and node-releases."
    },
    {
        "msg": "update note about gsn being under development",
        "diff": "diff --git a/docs/modules/ROOT/pages/gsn.adoc b/docs/modules/ROOT/pages/gsn.adoc @@ -7,7 +7,7 @@ Here you'll learn all about the Gas Station Network (GSN) and how to write contr\nIf you're already up to speed with the workings of the GSN, feel free to skip to <<Receiving a relayed call>>, where we'll go over how to use the OpenZeppelin Contracts to easily write a GSNRecipient contract. Otherwise, strap in!\n-WARNING: This feature is under development, and will be released in the next version of `@openzeppelin/contracts`.\n+NOTE: This feature is being released in the next version of `@openzeppelin/contracts`, available right now through `npm install @openzeppelin/contracts@next`.\n== Sending gas-less transactions\n",
        "date": "15.08.2019 19:09:30",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "update",
        "chatgpt_zeroshot": "Update GSN feature availability message in documentation"
    },
    {
        "msg": "update cp key of projectVersions",
        "diff": "diff --git a/app/controllers/project-version.js b/app/controllers/project-version.js @@ -69,7 +69,7 @@ export default Controller.extend(FilterParams, {\nreturn project.hasMany('projectVersions').ids();\n}),\n- projectVersions: computed('model', function() {\n+ projectVersions: computed('model.project.projectVersions.[]', function() {\nconst projectVersions = this.get('model.project.projectVersions');\nlet versions = projectVersions.toArray().sort(function(a, b) {\nconst a_ver = _.last(a.get('id').split(\"-\"));\n",
        "date": "21.03.2017 08:32:18",
        "repo": "ember-learn/ember-api-docs",
        "type": "update",
        "chatgpt_zeroshot": "Refactor projectVersions computed property to properly observe changes in projectVersions array."
    },
    {
        "msg": "update error in config",
        "diff": "diff --git a/ember-cli-build.js b/ember-cli-build.js @@ -37,11 +37,11 @@ module.exports = function(defaults) {\npatterns: [\n`${app.env.API_HOST}/json-docs-1/(.+)`,\n`${app.env.API_HOST}/rev-index/(.+)`\n- ],\n+ ]\n};\nif (app.env === 'production') {\n- app.options['ember-cli-service-worker'] = {\n+ app.options['ember-service-worker'] = {\nrootUrl: '/api-new/'\n}\n}\n",
        "date": "27.03.2017 17:32:24",
        "repo": "ember-learn/ember-api-docs",
        "type": "update",
        "chatgpt_zeroshot": "Refactor service worker configuration in ember-cli-build.js"
    },
    {
        "msg": "update the staging url making this change to trigger a heroku deploy",
        "diff": "diff --git a/README.md b/README.md @@ -11,4 +11,4 @@ To run a11y tests, run `test_a11y=yes ember serve`\n## Staging Environment\n-Latest changes from master can be seen on https://ember-api-docs-staging.herokuapp.com/\n+Latest changes from master can be seen on https://ember-api-docs-staging-herokuapp-com.global.ssl.fastly.net\n",
        "date": "29.03.2017 12:49:39",
        "repo": "ember-learn/ember-api-docs",
        "type": "update",
        "chatgpt_zeroshot": "Update staging environment URL to use Fastly CDN"
    },
    {
        "msg": "update anchor only",
        "diff": "diff --git a/lib/hash-to-query/index.js b/lib/hash-to-query/index.js @@ -22,7 +22,8 @@ module.exports = {\n'&show=inherited,protected,private,deprecated' +\n'&type=' +\ntype;\n- window.location.href = window.location.origin + pathName + anchor;\n+ window.location.hash = '';\n+ window.location.search = anchor;\n}\n</script>\n`\n",
        "date": "25.10.2017 02:52:51",
        "repo": "ember-learn/ember-api-docs",
        "type": "update",
        "chatgpt_zeroshot": "Clear hash and set search parameters in hash-to-query module"
    },
    {
        "msg": "update npm in CI",
        "diff": "diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml @@ -29,6 +29,8 @@ jobs:\ncache: 'npm'\nnode-version: ${{ env.NODE_VERSION }}\n+ - run: npm i -g npm@9\n+\n- name: Install dependencies\nrun: npm ci\n@@ -50,6 +52,8 @@ jobs:\ncache: 'npm'\nnode-version: ${{ env.NODE_VERSION }}\n+ - run: npm i -g npm@9\n+\n- name: Install dependencies\nrun: npm ci\n",
        "date": "22.11.2022 15:39:24",
        "repo": "ember-learn/ember-api-docs",
        "type": "update",
        "chatgpt_zeroshot": "Update npm version to 9 in CI workflow"
    },
    {
        "msg": "update connection pooling docs The connection pooling docs are using incorrect syntax for property assignment, `=` has been replaced with `:`.",
        "diff": "diff --git a/doc/features/connection-pooling/README.md b/doc/features/connection-pooling/README.md @@ -27,8 +27,8 @@ const options = {\ncontactPoints: ['1.2.3.4'],\npooling: {\ncoreConnectionsPerHost: {\n- [distance.local] = 2,\n- [distance.remote] = 1\n+ [distance.local]: 2,\n+ [distance.remote]: 1\n}\n}\n};\n",
        "date": "30.10.2017 16:25:01",
        "repo": "datastax/nodejs-driver",
        "type": "update",
        "chatgpt_zeroshot": "Fix syntax error in connection pooling options object"
    },
    {
        "msg": "update drag rearrange logic for tree nodes",
        "diff": "diff --git a/js/tree.js b/js/tree.js clone, interval, doDrag;\nself.targetArrow = self.element.prev('.tree-drag-target-arrow');\n+ self.linkSelector = 'a:not(.is-dragging-clone, .is-disabled)';\nif (!self.targetArrow.length) {\n$('<div class=\"tree-drag-target-arrow\"></div>').insertBefore(self.element);\nif (!self.loading) {\nclearInterval(interval);\n- $('a:not(.is-dragging-clone, .is-disabled)', self.element).each(function(i) {\n+ $(self.linkSelector, self.element).each(function() {\nvar a = $(this);\n// Don't drag with folder icon, save for toggle nodes\na.on('mousedown.tree', function(e) {\ne.preventDefault();\n- doDrag = $(e.target).is('.icon') ? !a.parent().is('.folder') : true;\n+ doDrag = (e.which === 3) ? false : // 3 - Right mouse button clicked\n+ ($(e.target).is('.icon') ? !a.parent().is('.folder') : true);\n})\n// Invoke drag\n// Drag start =======================================\n.on('dragstart.tree', function (e, pos, thisClone) {\nif (!thisClone || !doDrag) {\n+ a.removeClass('is-dragging');\n+ if (thisClone) {\n+ thisClone.remove();\n+ }\nreturn;\n}\nclone = thisClone;\nself.sortable = {\nstartNode: a,\n- startIndex: i,\n+ // Do not use index from each loop, get updated index on drag start\n+ startIndex: $(self.linkSelector, self.element).index(a),\n+ startUl: a.closest('ul'),\nstartWidth: a.outerWidth()\n};\n}\n// Down\nelse if (self.sortable.overDirection === 'down') {\n+ if (end.is('.is-open')) {\n+ $('ul:first', end).prepend(start);\n+ }\n+ else {\nstart.insertAfter(end);\n}\n+ }\n// Sync dataset and ui\nself.syncDataset(self.element);\nvar self = this,\ntreeRec = self.element[0].getBoundingClientRect(),\nextra = 20,\n- exMargin, isParentsStartNode, isFolder, isBeforeStart, isAfterSttart,\n- li, a, links, rec, i, l, left, top, direction, doAction,\n+ exMargin, isParentsStartNode, isBeforeStart, isAfterSttart,\n+ li, a, ul, links, rec, i, l, left, top, direction, doAction,\n// Icons used while moving\nicons = {\ndisabled: 'icon-cancel',\n- over: 'icon-add',\n+ over: 'icon-open-folder',\nlist: 'icon-minus'\n},\npos.left > (treeRec.left - extra - self.sortable.startWidth) &&\npos.left < (treeRec.left + treeRec.height + extra)) {\n- links = $('a:not(.is-dragging-clone, .is-disabled)', self.element);\n+ links = $(self.linkSelector, self.element);\nextra = 2;\nfor (i = 0, l = links.length; i < l; i++) {\nli = a.parent();\nleft = rec.left;\n- isFolder = li.is('.folder');\n+ ul = a.closest('ul');\nexMargin = parseInt(li.css('margin-top'), 10) > 0 ? 2 : 0;\n- isBeforeStart = ((i-1) === self.sortable.startIndex);\n- isAfterSttart = ((i+1) === self.sortable.startIndex);\n+ isBeforeStart = ((i-1) === self.sortable.startIndex && ul.is(self.sortable.startUl));\n+ isAfterSttart = ((i+1) === self.sortable.startIndex && ul.is(self.sortable.startUl));\n// Apply actions\ndoAction = function() {\nif (!isBeforeStart && pos.top < rec.top) {\ndirection = 'up';\n}\n- else if (!isAfterSttart && !isFolder && pos.top > rec.top + (extra * 2)) {\n+ else if (!isAfterSttart && pos.top > rec.top + (extra * 2)) {\ndirection = 'down';\n}\nelse {\n",
        "date": "04.01.2017 14:09:36",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Refactor drag functionality and improve link selection in tree.js"
    },
    {
        "msg": "update toolbar menu button options test case with click messages to show bug with disabled click events",
        "diff": "diff --git a/views/tests/toolbar/toolbar-menu-button-options.html b/views/tests/toolbar/toolbar-menu-button-options.html element.removeClass('hidden');\n}\n});\n+\n+ // Add click event messages to test if disabled states are properly suppressing this click function\n+ $('#button-1, #button-2, #button-3, #test-menu li > a').on('click', function () {\n+ var label = $(this).text();\n+ $('body').toast({ title: 'Click Event', message: 'Click function for ' + label });\n+ });\n</script>\n",
        "date": "27.01.2017 10:32:20",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Add click event messages to test disabled states suppression in toolbar menu buttons."
    },
    {
        "msg": "update sample so that next newly inserted step would be selected on next.",
        "diff": "diff --git a/views/patterns/step-process-markup.html b/views/patterns/step-process-markup.html </div>\n<ul class=\"tree js-step-list-scroll\" data-init=\"false\" id=\"step-list\">\n- <li class=\"js-step\">\n+ <li class=\"js-step is-selected\">\n<a class=\"js-step-link\" href=\"#profile\">\n<svg class=\"step-alert icon-empty-circle icon\" focusable=\"false\" aria-hidden=\"true\" role=\"presentation\">\n<use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-empty-circle\"></use>\n<ul class=\"js-step-folder folder\">\n</ul>\n</li>\n- <li class=\"js-step is-selected\">\n+ <li class=\"js-step\">\n<a class=\"js-step-link\" href=\"#summary\">\n<svg class=\"step-alert icon-empty-circle icon\" focusable=\"false\" aria-hidden=\"true\" role=\"presentation\">\n<use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-empty-circle\"></use>\n<div class=\"main no-scroll\" role=\"main\">\n- <div class=\"toolbar toolbar-custom toolbar-collapsible\" data-init=\"false\">\n+ <div class=\"toolbar toolbar-custom toolbar-collapsible\">\n<div class=\"title\">\n<button class=\"btn-icon btn-toggle-steps js-toggle-sidebar\" type=\"button\">\n<svg class=\"icon\" focusable=\"false\" aria-hidden=\"true\" role=\"presentation\">\n</svg>\n</button>\n<div class=\"dual-title\">\n+ Preferences\n+ <small>Page X of XX</small>\n</div>\n</div>\n<div class=\"buttonset phone-hidden\">\n// simulate ajax call\nsetTimeout(function()\n{\n-\n+ var stepLinkToSelect;\n// check to see if first panel is vetoable\nif ($('#vetocheckbox1').is(\":checked\"))\n{\nvar panelId = panel.attr(\"id\");\n$('<div id=\"global\" class=\"js-step-panel\"><h2>Global</h2><p>This is Global Step</p></div>\"').insertAfter(panel);\nvar step = $(\"[href='#\" + panelId + \"']\").parent();\n- $('<li class=\"js-step\"><a class=\"js-step-link\" href=\"#global\" role=\"stepitem\"><svg class=\"step-alert icon-empty-circle icon\" focusable=\"false\" aria-hidden=\"true\" role=\"presentation\"><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-empty-circle\"></use></svg><span class=\"tree-text\">Global - step 4</span></a></li>').insertAfter(step);\n+ stepLinkToSelect = $('<li class=\"js-step\"><a class=\"js-step-link\" href=\"#global\" role=\"stepitem\"><svg class=\"step-alert icon-empty-circle icon\" focusable=\"false\" aria-hidden=\"true\" role=\"presentation\"><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-empty-circle\"></use></svg><span class=\"tree-text\">Global - step 4</span></a></li>').insertAfter(step);\n}\nelse\nif (stepId == \"information\" && instertSubStep)\nmarkup += '<li class=\"js-step\"><a class=\"js-step-link\" href=\"#information-2\" role=\"stepitem\"><svg class=\"step-alert icon-empty-circle icon\" focusable=\"false\" aria-hidden=\"true\" role=\"presentation\"><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-empty-circle\"></use></svg><span class=\"tree-text\">Family - step 7-2</span/a></li>';\n$(markup).appendTo(substeps); //.insertAfter(step);\n+ stepLinkToSelect = $('.js-step-link[href=\"#information-1\"]');\n+\nvar panel = $(\".step-container\");\n$('<div id=\"information-2\" class=\"js-step-panel\"><h2>Global</h2><p>This is Information SubStep2</p></div>\"').insertAfter(panel);\n// $(e).attr(\"data-alert-icon\", \"confirm\");\n}\n+\n+ if (stepLinkToSelect)\n+ {\n+ deferred.resolve(true, stepLinkToSelect);\n+ } else\n+ {\ndeferred.resolve(true);\n+ }\n},100);\nreturn deferred.promise();\n",
        "date": "16.02.2017 09:32:28",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Refactor step selection logic and add stepLinkToSelect variable for improved performance."
    },
    {
        "msg": "update svg patterns size for larger size",
        "diff": "diff --git a/views/controls/svg-patterns.html b/views/controls/svg-patterns.html <div class=\"svg-patterns\">\n- <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"500\" height=\"500\">\n+ <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"1500\" height=\"1500\">\n<defs>\n<!-- Hatch -->\n<rect width=\"1\" height=\"7\" transform=\"translate(0,0)\" fill=\"white\"></rect>\n</pattern>\n<mask id=\"hatch\">\n- <rect x=\"0\" y=\"0\" width=\"500\" height=\"500\" fill=\"url(#pt-hatch)\"></rect>\n+ <rect x=\"0\" y=\"0\" width=\"1500\" height=\"1500\" fill=\"url(#pt-hatch)\"></rect>\n</mask>\n<!-- Double Hatch -->\n<rect width=\"1\" height=\"9\" transform=\"translate(3,0)\" fill=\"white\"></rect>\n</pattern>\n<mask id=\"doublehatch\">\n- <rect x=\"0\" y=\"0\" width=\"500\" height=\"500\" fill=\"url(#pt-doublehatch)\"></rect>\n+ <rect x=\"0\" y=\"0\" width=\"1500\" height=\"1500\" fill=\"url(#pt-doublehatch)\"></rect>\n</mask>\n<!-- Cross Hatch -->\n<path d=\"M0 0L10 10ZM10 0L0 10Z\" stroke-width=\"1\" stroke=\"white\"></path>\n</pattern>\n<mask id=\"crosshatch\">\n- <rect x=\"0\" y=\"0\" width=\"500\" height=\"500\" fill=\"url(#pt-crosshatch)\"></rect>\n+ <rect x=\"0\" y=\"0\" width=\"1500\" height=\"1500\" fill=\"url(#pt-crosshatch)\"></rect>\n</mask>\n<!-- Stitch -->\n<rect width=\"6\" height=\"1\" transform=\"translate(0,2)\" fill=\"white\"></rect>\n</pattern>\n<mask id=\"stitch\">\n- <rect x=\"0\" y=\"0\" width=\"500\" height=\"500\" fill=\"url(#pt-stitch)\"></rect>\n+ <rect x=\"0\" y=\"0\" width=\"1500\" height=\"1500\" fill=\"url(#pt-stitch)\"></rect>\n</mask>\n<!-- Dots -->\n<rect x=\"2\" y=\"2\" width=\"2\" height=\"2\" fill=\"white\"></rect>\n</pattern>\n<mask id=\"dots\">\n- <rect x=\"0\" y=\"0\" width=\"500\" height=\"500\" fill=\"url(#pt-dots)\"></rect>\n+ <rect x=\"0\" y=\"0\" width=\"1500\" height=\"1500\" fill=\"url(#pt-dots)\"></rect>\n</mask>\n<!-- Squares -->\n<rect x=\"1\" y=\"1\" width=\"3\" height=\"3\" fill=\"white\"></rect>\n</pattern>\n<mask id=\"squares\">\n- <rect x=\"0\" y=\"0\" width=\"500\" height=\"500\" fill=\"url(#pt-squares)\"></rect>\n+ <rect x=\"0\" y=\"0\" width=\"1500\" height=\"1500\" fill=\"url(#pt-squares)\"></rect>\n</mask>\n<!-- Xs -->\n<line x1=\"16\" y1=\"9\" x2=\"9\" y2=\"16\" stroke-width=\"1\" stroke=\"white\"></line>\n</pattern>\n<mask id=\"xs\">\n- <rect x=\"0\" y=\"0\" width=\"500\" height=\"500\" fill=\"url(#pt-xs)\"></rect>\n+ <rect x=\"0\" y=\"0\" width=\"1500\" height=\"1500\" fill=\"url(#pt-xs)\"></rect>\n</mask>\n<!-- Triangles -->\n<polygon points=\"6,6 10,6 6,10\" fill=\"white\"></polygon>\n</pattern>\n<mask id=\"triangles\">\n- <rect x=\"0\" y=\"0\" width=\"500\" height=\"500\" fill=\"url(#pt-triangles)\"></rect>\n+ <rect x=\"0\" y=\"0\" width=\"1500\" height=\"1500\" fill=\"url(#pt-triangles)\"></rect>\n</mask>\n</defs>\n",
        "date": "16.02.2017 14:16:53",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Increase SVG pattern size to 1500x1500 and update mask dimensions accordingly"
    },
    {
        "msg": "update code to cached some variables",
        "diff": "diff --git a/js/dropdown.js b/js/dropdown.js // Actual DropDown Code\nDropdown.prototype = {\ninit: function() {\n- var orgId = this.element.attr('id');\n+ var orgId = this.element.attr('id'),\n+ html = $('html');\n- this.isIe10 = $('html').is('.ie10');\n- this.isIe11 = $('html').is('.ie11');\n+ this.isIe10 = html.is('.ie10');\n+ this.isIe11 = html.is('.ie11');\nthis.inlineLabel = this.element.closest('label');\nthis.inlineLabelText = this.inlineLabel.find('.label-text');\n",
        "date": "22.02.2017 16:13:09",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Refactor Dropdown prototype initialization code to improve readability and performance."
    },
    {
        "msg": "update example page for rich text editor with editable Datagrid",
        "diff": "diff --git a/views/tests/datagrid/datagrid-editable-editor.html b/views/tests/datagrid/datagrid-editable-editor.html //Define Columns for the Grid.\ncolumns.push({ id: 'productDesc', resizable: false, name: 'Product Desc', sortable: false, field: 'productName', formatter: Formatters.Hyperlink, width: 200});\n- columns.push({ id: 'comment', name: 'Comment', field: 'comment', formatter: Formatters.Editor, editor: Editors.Editor, width: '60%', contentTooltip: '{content}'});\n- // columns.push({ id: 'comment', name: 'Comment', field: 'comment', formatter: Formatters.Editor, editor: Editors.Editor, width: '60%', singleline: true, tooltip: '{{value}}'});\n+ columns.push({ id: 'comment', name: 'Comment', field: 'comment', formatter: Formatters.Editor, editor: Editors.Editor, width: '60%', contentTooltip: true });\ncolumns.push({ id: 'productId', name: 'Product Id', field: 'productId', width: 160 });\n//Init and get the api for the grid\n",
        "date": "23.03.2017 10:59:38",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Refactor datagrid-editable-editor.html to update comment field tooltip styling."
    },
    {
        "msg": "update sample to more closely match what we do in landmark with this pattern",
        "diff": "diff --git a/views/examples/landmark/list-with-detail-sections.html b/views/examples/landmark/list-with-detail-sections.html <div class=\"page-container\">\n<section class=\"pane top no-scroll\">\n- <div class=\"toolbar\" role=\"toolbar\">\n- <div class=\"title\">My Assets</div>\n- <div class=\"buttonset\">\n- <button id=\"activate-selected-row\" type=\"button\" class=\"btn\">\n- <span>Activate Selected Row</span>\n- </button>\n- <button id=\"deactivate-activated-row\" type=\"button\" class=\"btn\">\n- <span>Deactivate Activated Row</span>\n- </button>\n- </div>\n- <div class=\"more\">\n- <button class=\"btn-actions\" type=\"button\">\n- <svg class=\"icon\" focusable=\"false\" aria-hidden=\"true\" role=\"presentation\">\n- <use xlink:href=\"#icon-more\"></use>\n- </svg>\n- <span class=\"audible\">More Actions</span>\n- </button>\n- <ul class=\"popupmenu\">\n- <li><a href=\"#\">Option One</a></li>\n- <li><a href=\"#\">Option Two</a></li>\n- <li><a href=\"#\">Option Three</a></li>\n- <li class=\"separator single-selectable-section\"></li>\n- <li class=\"heading\">Row Height</li>\n- <li class=\"is-selectable\"><a data-option=\"row-short\" href=\"#\">Short</a></li>\n- <li class=\"is-selectable\"><a data-option=\"row-medium\" href=\"#\">Medium</a></li>\n- <li class=\"is-selectable is-checked\"><a data-option=\"row-normal\" href=\"#\">Normal</a></li>\n- </ul>\n- </div>\n- </div>\n<div class=\"contextual-toolbar toolbar is-hidden\">\n<div class=\"title selection-count\">0 Selected</div>\ncolumns: columnsDetail,\neditable: false,\nresultsText: res[selectedId].id,\n+ paging: true,\n+ pagesize: 10,\ntoolbar: {results: true, actions: true, rowHeight: true, title: 'Detail for '}\n}).data('datagrid');\n});\n",
        "date": "13.04.2017 12:46:49",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Refactor toolbar in list-with-detail-sections.html and add paging functionality."
    },
    {
        "msg": "update example page with negative percentage value",
        "diff": "diff --git a/views/tests/datagrid/datagrid-format-percent.html b/views/tests/datagrid/datagrid-format-percent.html columns = [];\n// Some Sample Data\n+ data.push({ value: '-0.122' });\ndata.push({ value: '0.122' });\ndata.push({ value: '0.125' });\ndata.push({ value: '0.35' });\n//Define Columns for the Grid.\ncolumns.push({ id: 'percent1', name: 'Value', field: 'value', width: 150, filterType: 'text', filterDisabled: true });\n- columns.push({ id: 'percent2', name: 'Integer', field: 'value', align: 'right', formatter: Formatters.Integer, numberFormat: {style: \"percent\"}, editor: Editors.Input, mask: '####', maskMode: 'number', filterType: 'percent'});\n+ columns.push({ id: 'percent2', name: 'Integer', field: 'value', align: 'right', formatter: Formatters.Integer, numberFormat: {style: \"percent\"}, editor: Editors.Input, mask: '-####', maskMode: 'number', filterType: 'percent'});\n- columns.push({ id: 'percent3', name: 'Decimal', field: 'value', align: 'right', formatter: Formatters.Decimal, numberFormat: {style: \"percent\", minimumFractionDigits: 1}, editor: Editors.Input, mask: '####.00', maskMode: 'number', filterType: 'percent'});\n+ columns.push({ id: 'percent3', name: 'Decimal', field: 'value', align: 'right', formatter: Formatters.Decimal, numberFormat: {style: \"percent\", minimumFractionDigits: 1}, editor: Editors.Input, mask: '-####.00', maskMode: 'number', filterType: 'percent'});\n//Init and get the api for the grid\n",
        "date": "11.05.2017 10:19:19",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Update mask for percent columns in datagrid-format-percent.html"
    },
    {
        "msg": "update CHANGELOG.md with information about New Tabs and updated Tab component behaviors.",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md @@ -11,6 +11,7 @@ http://usalvlhlpool1.infor.com/4.3.0-rc/controls\n### Key New Features\n- Hijri (Umm Al Qura) - Arabic Calendar Support\n+- \"New Tabs\" - New Visual Design and functionality for In-Page and Header Tabs\n### Improvements\n- Datagrid - Added am option (allowOneExpanded) to only show one expandable row at a time. It is now the default.\n@@ -24,6 +25,7 @@ http://usalvlhlpool1.infor.com/4.3.0-rc/controls\n- Multiselect - Added ability to move selected items to the top of the entire list or to the top of groups when the list is opened.\n- Locale - Added new set of translated strings for 37 languages / 49 locales\n- Toggle Button - New official toggle button, can change icon or state to \"pressed\"\n+- Vertical Tabs - New setting 'verticalResponsive' allows a Vertical Tabset to become an instance of \"header tabs\" when viewed at the phone breakpoint.\n### Bug Fixes\n- Datagrid - Fixed column alignment issue on reload with hidden columns\n@@ -37,6 +39,7 @@ http://usalvlhlpool1.infor.com/4.3.0-rc/controls\n- Multiselect - `moveSelectedToTop` has been deprecated in favor of `moveSelected`, which is now a text string instead of a boolean. This defaults to `\"all\"` on Multiselect but can be defined as `\"group\"` or `\"none\"` as well.\n- Removed Search Results Page as it was an example for the site\n- Sign In Page was changed to not copy to invisible fields. Update your markup accordingly. (wont break but may need a look)\n+- Tabs (Header/Module/Vertical) - it's now necessary to define the `containerElement` setting either through Javascript or via a `data-options` attribute if the element that contains tab panels cannot be directly adjacent to the `.tab-container` element. Existing tab markup that places tab panels inside of the `.tab-container` element must be changed to contain the panels outside of this element.\n### Behavior Changes\n- Pie - The Chart now sorts slices in the order of the dataset (was on size from biggest to smallest before).\n@@ -44,6 +47,8 @@ http://usalvlhlpool1.infor.com/4.3.0-rc/controls\n- Editor - Removed 'bold','italic','underline', 'anchor', 'quote' options from HTML editor.\n- Datagrid - Made a new option enableTooltips which defaults to false. You know need to enable this to have the tooltips anyplace in the datagrid. This has a significant performance especially for Ellipsis columns, so should only be used if you are sure or your datagrid is not huge.\n- Datagrid - Added option sizeColumnsEqually which defaults to false. If set all the columns will get an equal size. (this used to do it automatically for the first 8 columns)\n+- Tabs - In-Page/Header tabs will allow the list of tabs to scroll left/right if using a device with touch capabilities.\n+- Tabs - The \"Spillover Menu\" for In-Page/Header tabs is now a full list of all available tabs. This menu has been redesigned to be more touch/responsive friendly.\n### Ui Changes\n- Added heart and heart-filled icons\n",
        "date": "14.06.2017 11:41:02",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Add new visual design and functionality for \"New Tabs\" and improve touch capabilities for In-Page/Header tabs."
    },
    {
        "msg": "update Tabs' absolute positioning test to accommodate changes made for",
        "diff": "diff --git a/views/tests/tabs/absolute-position-tabs-and-panels.html b/views/tests/tabs/absolute-position-tabs-and-panels.html <div class=\"row\">\n<div class=\"six columns\">\n- <h2>Absolutely positioned tabs and contents</h2>\n- <p><a class=\"hyperlink\" href=\"http://jira/browse/SOHO-5734\" target=\"_blank\">Related JIRA Ticket</a>.</p>\n+ <h2>Tabs Test: Absolute-Positioned Tabs and Contents</h2>\n+ <p>\n+ <a class=\"hyperlink\" href=\"http://jira/browse/SOHO-5734\" target=\"_blank\">Original JIRA Ticket</a>.<br />\n+ <a class=\"hyperlink\" href=\"http://jira/browse/SOHO-6148\" target=\"_blank\">New Tabs Update</a> - Breaking changes in v4.3.0 caused this test to change.\n+ </p>\n+ <p>\n+ Drag the handle to change the size of the tabset.<br />\n+ Drag the tabset around to adjust its position on the screen.\n+ </p>\n+\n+ </div>\n</div>\n+\n+<div class=\"row\">\n+ <div class=\"six columns\">\n+\n+ <div class=\"field\">\n+ <label for=\"container-width\">Container Width</label>\n+ <input id=\"container-width\" name=\"container-width\" class=\"slider\" type=\"range\" min=\"20\" max=\"100\" value=\"40\" />\n</div>\n-<style>\n- #tabs-common {\n+ </div>\n+</div>\n+\n+<style id=\"absolute-tabs-style-rules\">\n+ /**\n+ * NOTE: Absolute-Positioned tabs is not handled directly by Soho.\n+ * Below is some example CSS that demonstrates how this _could_ be implemented.\n+ */\n+ #absolute-tabs-outer-wrapper {\nposition: absolute;\n- height: 400px;\n- width: 400px;\n- top: 100px;\nleft: 100px;\n+ top: 220px;\n+ height: 400px;\n+\n+ border: 5px dotted #d8d8d8;\n+ cursor: pointer;\n+ }\n+\n+ #absolute-tabs-position-reset {\n+ background-color: white;\n+ cursor: default;\n+ height: 100%;\n+ position: relative;\n}\n+\n.tab-panel {\n- position: absolute;\nheight: 100%;\nwidth: 100%;\n+ padding: 10px;\n+ position: relative;\n}\n</style>\n<div class=\"row\">\n<div class=\"twelve columns\">\n- <div id=\"tabs-common\" class=\"tab-container\">\n+ <div id=\"absolute-tabs-outer-wrapper\">\n+ <div id=\"absolute-tabs-position-reset\">\n+\n+ <div id=\"tabs-common\" class=\"tab-container alternate\">\n<ul class=\"tab-list\">\n- <li><a href=\"#tab1\">Overview</a></li>\n- <li><a href=\"#tab2\">Items</a></li>\n+ <li><a href=\"#tab-overview\">Overview</a></li>\n+ <li><a href=\"#tab-items\">Items</a></li>\n+ <li><a href=\"#tab-settings\">Settings</a></li>\n</ul>\n- <div id=\"tab1\">\n- <input style=\"position:absolute;top:5px;width:200px;\" />\n</div>\n- <div id=\"tab2\">\n- <h3 style=\"position:absolute;top:5px;\">Tab 2 Contents</h3>\n- <p style=\"position:absolute;top:40px;\">Bricks-and-clicks? Evolve ubiquitous matrix B2B 24/365 vertical 24/365 platforms standards-compliant global leverage dynamic 24/365 intuitive ROI seamless rss-capable. Cutting-edge grow morph web services leverage; ROI, unleash reinvent innovative podcasts citizen-media networking.<p>\n+ <div class=\"tab-panel-container\">\n+ <div id=\"tab-overview\">\n+ <h3 style=\"position:absolute;top:10px;\">Overview</h3>\n+ <input type=\"text\" style=\"position:absolute;top:45px;width:200px;\" />\n+ </div>\n+ <div id=\"tab-items\">\n+ <h3 style=\"position:absolute;top:10px;\">Items</h3>\n+ <p style=\"position:absolute;top:45px;\">Bricks-and-clicks? Evolve ubiquitous matrix B2B 24/365 vertical 24/365 platforms standards-compliant global leverage dynamic 24/365 intuitive ROI seamless rss-capable. Cutting-edge grow morph web services leverage; ROI, unleash reinvent innovative podcasts citizen-media networking.<p>\n</div>\n+ <div id=\"tab-settings\">\n+ <h3 style=\"position:absolute;top:10px;\">Settings</h3>\n+ <p style=\"position:absolute;top:45px;\">Bricks-and-clicks? Evolve ubiquitous matrix B2B 24/365 vertical 24/365 platforms standards-compliant global leverage dynamic 24/365 intuitive ROI seamless rss-capable. Cutting-edge grow morph web services leverage; ROI, unleash reinvent innovative podcasts citizen-media networking.<p>\n</div>\n</div>\n+\n+ </div><!-- end #absolute-tabs-position-reset -->\n+ </div><!-- end #absolute-tabs-outer-wrapper -->\n+\n+ </div>\n</div>\n+\n+<script type=\"text/javascript\">\n+ var TEST_TABSET = $('#absolute-tabs-outer-wrapper'),\n+ WIDTH_CONTROL = $('#container-width'),\n+ WIDTH_CONTROL_API;\n+\n+ function setWidth(val) {\n+ var val = WIDTH_CONTROL_API.value();\n+\n+ TEST_TABSET.css('width', val[0] + '%');\n+ $('body').triggerHandler('resize');\n+ }\n+\n+ $('body').on('initialized', function() {\n+ TEST_TABSET.drag();\n+ WIDTH_CONTROL_API = WIDTH_CONTROL.data('slider');\n+\n+ // Change the width of the tabset whenever the slider is adjusted.\n+ WIDTH_CONTROL.on('change.test', setWidth);\n+\n+ // Set everything intially\n+ setWidth();\n+ });\n+</script>\n",
        "date": "15.06.2017 11:05:51",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Refactor tabs test for absolute positioning and add new tab functionality"
    },
    {
        "msg": "update code to delete some unwanted comments with Listbuilder",
        "diff": "diff --git a/views/tests/listbuilder/listbuilder-on-updated.html b/views/tests/listbuilder/listbuilder-on-updated.html @@ -113,25 +113,6 @@ $('body').one('initialized', function () {\nconsole.log('updated: ', args);\n});\n- // // Get api\n- // var api = elem.data('listbuilder');\n- //\n- // // Make selected after every one second (1000 milliseconds) ================\n- // // Select first item\n- // setTimeout(function() {\n- // api.select('first');\n- // }, 1000);\n- //\n- // // Select last item\n- // setTimeout(function() {\n- // api.select('last');\n- // }, 2000);\n- //\n- // // Select third item (zero based index)\n- // setTimeout(function() {\n- // api.select(2);\n- // }, 3000);\n-\n});\n});\n</script>\n",
        "date": "05.07.2017 12:06:17",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Remove commented out code for selecting items in listbuilder-on-updated.html"
    },
    {
        "msg": "update screen to prevent the zoom on tap with Toolbar Searchfield",
        "diff": "diff --git a/components/toolbarsearchfield/toolbarsearchfield.js b/components/toolbarsearchfield/toolbarsearchfield.js * Event Handler for dealing with global (document) level clicks.\n*/\nhandleOutsideClick: function() {\n- if (Soho.env.os.name === 'ios') {\n- $('head').triggerHandler('disable-zoom');\n- }\n-\nif (this.hasFocus()) {\nreturn;\n}\nself.isExpanded = false;\n+ if (Soho.env.os.name === 'ios') {\n+ $('head').triggerHandler('enable-zoom');\n+ }\n+\n// TODO: Make this process more solid, without FOUC/jumpiness and better focus handling (EPC)\n// See http://jira/browse/SOHO-6347\nself.inputWrapper.one($.fn.transitionEndName(), function() {\nself.toolbarParent.triggerHandler('recalculate-buttons');\n- if (Soho.env.os.name === 'ios') {\n- $('head').triggerHandler('enable-zoom');\n- }\n});\n}\n$(document).off(this.outsideEventStr);\nthis.toolbarParent.off('navigate.toolbarsearchfield');\n+ this.element.off('blur.toolbarsearchfield');\nif (this.xButton && this.xButton.length) {\nthis.xButton.remove();\nself.adjustOnBreakpoint();\n});\n+ if (Soho.env.os.name === 'ios') {\n+ this.element.on('blur.toolbarsearchfield', function() {\n+ $('head').triggerHandler('disable-zoom');\n+ });\n+ }\n+\nreturn this;\n}\n};\n",
        "date": "26.07.2017 13:03:04",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Fix zoom behavior on iOS devices and improve focus handling in toolbar search field."
    },
    {
        "msg": "update example page for indeterminate paging with Datagrid",
        "diff": "diff --git a/components/datagrid/example-paging-indeterminate.html b/components/datagrid/example-paging-indeterminate.html //Load a specific page and set the page - simulating a page state\n//Then we call load data with that.\n- if (req.type === 'initial') {\n- //req.activePage = 2;\n- return; //Or can ignore and call loadData\n- }\n+ // if (req.type === 'initial') {\n+ // //req.activePage = 2;\n+ // return; //Or can ignore and call loadData\n+ // }\nvar url = '{{basepath}}api/compressors?pageNum='+ req.activePage +'&pageSize='+ req.pagesize;\ntoolbar: {title: 'Data Grid Header Title', results: true, dateFilter: false ,keywordFilter: true, advancedFilter: true, actions: true, views: true, rowHeight: true}\n});\n- // Option 2: Bi-Pass Source Function\n- var url = '{{basepath}}api/compressors?pageNum='+ 2 +'&pageSize='+ pageSize;\n- $.getJSON(url, function(res) {\n- var pageInfo = {total: res.total, activePage: 2, pagesize: pageSize, firstPage: false, lastPage: false};\n- grid.data('datagrid').loadData(res.data, pageInfo);\n- });\n+ // // Option 2: Bi-Pass Source Function\n+ // var url = '{{basepath}}api/compressors?pageNum='+ 2 +'&pageSize='+ pageSize;\n+ // $.getJSON(url, function(res) {\n+ // var pageInfo = {total: res.total, activePage: 2, pagesize: pageSize, firstPage: false, lastPage: false};\n+ // grid.data('datagrid').loadData(res.data, pageInfo);\n+ // });\n});\n</script>\n",
        "date": "27.07.2017 10:57:54",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Refactor code to remove unnecessary if statement and commented out code. Update data grid toolbar options and remove unused code for bi-pass source function."
    },
    {
        "msg": "update comments in code to appears in the help file with advanced file upload control",
        "diff": "diff --git a/components/fileupload-advanced/fileupload-advanced.js b/components/fileupload-advanced/fileupload-advanced.js * @param {Boolean} maxFilesInProcess &nbsp;-&nbsp; Max number of files can be uploaded\n* @param {Boolean} maxFileSize &nbsp;-&nbsp; Max file size in bytes, -1 for unlimited\n* @param {Boolean} fileName &nbsp;-&nbsp; Variable name to read from server\n+ * @param {Boolean} isDisabled &nbsp;-&nbsp; Make control disabled\n+ * @param {Boolean} isBrowse &nbsp;-&nbsp; Add way to browse files to upload\n+ * @param {Function} send &nbsp;-&nbsp; Method for send file to upload\n*\n*/\nfunction FileUploadAdvanced(element) {\n",
        "date": "08.08.2017 13:33:47",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Add new features to FileUploadAdvanced component"
    },
    {
        "msg": "update example page to show validation error for date time field with Datepicker",
        "diff": "diff --git a/components/datepicker/example-index.html b/components/datepicker/example-index.html <div class=\"field\">\n<label for=\"start-time\" class=\"label \" >Time and Date</label>\n- <input id=\"start-time\" name=\"start-time\" type=\"text\" class=\"datepicker input-md\" data-options=\"{'dateFormat': 'dd/MM/yyyy', 'timeFormat': 'hh:mm:ss a', 'showTime': 'true', 'customValidation': 'true'}\" />\n+ <input id=\"start-time\" name=\"start-time\" type=\"text\" class=\"datepicker input-md\" data-options=\"{'dateFormat': 'dd/MM/yyyy', 'timeFormat': 'hh:mm:ss a', 'showTime': 'true'}\" />\n</div>\n</div>\n",
        "date": "14.09.2017 12:27:11",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Remove customValidation option from datepicker input configuration"
    },
    {
        "msg": "update message text",
        "diff": "diff --git a/components/validation/test-alert-types.html b/components/validation/test-alert-types.html check: function (value) {\nreturn (value !== '');\n},\n- message: 'This value is allowed to be empty',\n+ message: 'Random information about this field',\ntype: 'info'\n};\n",
        "date": "27.09.2017 11:11:28",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Update validation message for empty value in test-alert-types.html"
    },
    {
        "msg": "update position of error icon",
        "diff": "diff --git a/components/tabs/_tabs.scss b/components/tabs/_tabs.scss &.has-popupmenu {\n.icon {\nheight: 16px;\n- margin: 0 0 0 -10px;\n+ margin: 0 0 0 -5px;\nwidth: 32px;\n+ position: static;\n}\n.icon-error {\n",
        "date": "28.09.2017 14:00:40",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Adjust icon margin and position in tabs component"
    },
    {
        "msg": "update local string description for Swaplist",
        "diff": "diff --git a/components/locale/cultures/en-US.js b/components/locale/cultures/en-US.js messages: {\n'AboutText': {id: 'AboutText', value: 'Copyright &copy; {0} Infor. All rights reserved. The word and design marks set forth herein are trademarks and/or registered trademarks of Infor and/or its affiliates and subsidiaries. All rights reserved. All other trademarks listed herein are the property of their respective owners'},\n'Actions': {id: 'Actions', value: 'Actions', comment: 'Tooltip text for the action button with additional in context actions'},\n- 'AdditionalItems': {id: 'AdditionalItems', value: 'Additional Items', comment: 'Title used in swaplist'},\n+ 'AdditionalItems': {id: 'AdditionalItems', value: 'Additional Items', comment: 'Button tooltip used in a list of movable items'},\n'Add': {id: 'Add', value: 'Add', comment: 'Add'},\n'AddNewTab': {id: 'AddNewTab', value: 'Add New Tab', comment: 'Attached to a button that adds new tabs'},\n'AdvancedFilter': {id: 'AdvancedFilter', value: 'Create Advanced Filter', comment: 'In a data grid active an advanced filtering feature'},\n'Amethyst': {id: 'Amethyst', value: 'Amethyst', comment: 'Color in our color pallette'},\n'Apply': {id: 'Apply', value: 'Apply', comment: 'Text in a button to apply an action'},\n'Attach': {id: 'Attach', value: 'Attach', comment: 'Attach'},\n- 'Available': {id: 'Available', value: 'Available', comment: 'Title used in swaplist'},\n+ 'Available': {id: 'Available', value: 'Available', comment: 'Button tooltip used in a list of movable items'},\n'Azure': {id: 'Azure', value: 'Azure', comment: 'Color in our color pallette'},\n'BackgroundColor': {id: 'BackgroundColor', value: 'Background color', comment: 'add or edit text background color in the editor'},\n'Between': {id: 'Between', value: 'Between', comment: 'Between in icons for filtering'},\n'Month': {id: 'Month', value: 'Month', comment: 'As in a date month'},\n'More': {id: 'More', value: 'More...', comment: 'Text Indicating More Buttons or form content'},\n'MoreActions': {id: 'MoreActions', value: 'More Actions', comment: 'Text on the More Actions button indictating hidden functions'},\n- 'MoveToLeft': {id: 'MoveToLeft', value: 'Move to left', comment: 'Title use in swaplist'},\n- 'MoveToRight': {id: 'MoveToRight', value: 'Move to right', comment: 'Title use in swaplist'},\n+ 'MoveToLeft': {id: 'MoveToLeft', value: 'Move to left', comment: 'Button tooltip used in a list of movable items'},\n+ 'MoveToRight': {id: 'MoveToRight', value: 'Move to right', comment: 'Button tooltip used in a list of movable items'},\n'MsgDirty': {id: 'MsgDirty', value: ', Modified', comment: 'for modified form fields'},\n'NewDocument': {id: 'NewDocument', value: 'New Document', comment: 'New Document tooltip'},\n'NewItem': {id: 'NewItem', value: 'New item', comment: 'New item in listbuilder'},\n",
        "date": "02.10.2017 15:29:42",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Update tooltips for 'AdditionalItems', 'Available', 'MoveToLeft', and 'MoveToRight' in en-US.js culture file"
    },
    {
        "msg": "update some typo in test example page with Field-options",
        "diff": "diff --git a/components/field-options/example-index.html b/components/field-options/example-index.html <div class=\"one-half column\">\n<div class=\"field\">\n- <label for=\"item-desc\">Test Field</label>\n+ <label for=\"item-desc\">Text Field</label>\n<input type=\"text\" class=\"field-options\" aria-required=\"true\" name=\"item-desc\">\n<button class=\"btn-actions btn-tertiary btn-menu\" type=\"button\">\n",
        "date": "02.11.2017 11:48:31",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Update field label from \"Test Field\" to \"Text Field\" in example-index.html"
    },
    {
        "msg": "update code to follow jshint rules",
        "diff": "diff --git a/components/tree/tree.js b/components/tree/tree.js }\n}\n- var badgeStyle = \"\";\n+ var badgeStyle = '';\nif (/info|good|error|alert|pending/i.test(badgeData.type)) {\nbadge.elem.addClass(badgeData.type);\n} else if (badgeData.type && badgeData.type.charAt(0) === '#' && badgeData.type.length === 7) {\n- badgeStyle = \"background-color: \" + badgeData.type + \" !important;\";\n+ badgeStyle = 'background-color: ' + badgeData.type + ' !important;';\n}\n- if (typeof badgeData.backColor !== 'undefined') {\n- badgeStyle = \"background-color: \" + badgeData.backColor + \" !important;\";\n+ if (badgeData.backColor) {\n+ badgeStyle = 'background-color: ' + badgeData.backColor + ' !important;';\n}\n- if (typeof badgeData.foreColor !== 'undefined') {\n- badgeStyle += \"color: \" + badgeData.foreColor + \" !important;\";\n+ if (badgeData.foreColor) {\n+ badgeStyle += 'color: ' + badgeData.foreColor + ' !important;';\n}\n- badge.elem.attr(\"style\", badgeStyle);\n+ badge.elem.attr('style', badgeStyle);\nif (badge.elem.text() !== '') {\na.append(badge.elem);\n",
        "date": "10.11.2017 15:06:51",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Refactor badgeStyle variable to use single quotes and update attribute assignment to use single quotes as well."
    },
    {
        "msg": "update naming of variables to be more descriptive",
        "diff": "diff --git a/components/menubutton/test-splitbutton-sort.html b/components/menubutton/test-splitbutton-sort.html // Split Button with Icon and Label\n// ------------------------------------------------\n(function() {\n- var $splitButtonSortAction = $('#split-button-sort-icon-action');\n- var $splitButtonSortLabelAction = $('#split-button-sort-icon-label-action');\n- var $splitButtonSortMenuTrigger = $('#split-button-sort-icon-label-menu-trigger');\n- var isAscending = true;\n- var isAscending2 = true;\n-\n- // Action Button fires the action\n- $splitButtonSortAction.on('click', function (e) {\n- isAscending = !isAscending;\n- $(this).find('use').attr('xlink:href', isAscending ? '#icon-sort-up' : '#icon-sort-down');\n+ var splitButtonSortAction = $('#split-button-sort-icon-action');\n+ var splitButtonSortLabelAction = $('#split-button-sort-icon-label-action');\n+ var splitButtonSortMenuTrigger = $('#split-button-sort-icon-label-menu-trigger');\n+ var isButtonSortAscending = true; // Icon state for sort icon without label\n+ var isButtonSortLabelAscending = true; // Icon state for sort icon with label\n+ debugger;\n+ // Action Button fires the action - icon without label\n+ splitButtonSortAction.on('click', function (e) {\n+ isButtonSortAscending = !isButtonSortAscending;\n+ $(this).find('use').attr('xlink:href', isButtonSortAscending ? '#icon-sort-up' : '#icon-sort-down');\n});\n- $splitButtonSortLabelAction.on('click', function (e) {\n- isAscending2 = !isAscending2;\n- $(this).find('use').attr('xlink:href', isAscending2 ? '#icon-sort-up' : '#icon-sort-down');\n+ // Action Button fires the action - icon with label\n+ splitButtonSortLabelAction.on('click', function (e) {\n+ isButtonSortLabelAscending = !isButtonSortLabelAscending;\n+ $(this).find('use').attr('xlink:href', isButtonSortLabelAscending ? '#icon-sort-up' : '#icon-sort-down');\n});\n// MenuButton selection changes the default action\n- $splitButtonSortMenuTrigger.on('selected', function (e, args) {\n+ splitButtonSortMenuTrigger.on('selected', function (e, args) {\nsetTimeout(function() {\nalert(args.text() + ' selected');\n}, 50);\n",
        "date": "15.12.2017 17:43:57",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Refactor split button sort functionality to use separate variables for icon states with and without labels."
    },
    {
        "msg": "update chart js to enable highlighting of revenue bars via legend",
        "diff": "diff --git a/components/charts/charts.js b/components/charts/charts.js @@ -73,10 +73,11 @@ window.Chart = function(container) {\n}\nelse if (s.type === 'column-positive-negative') {\nif (!elem.option || (elem.option && elem.option === 'target')) {\n- return;\n- }\n+ selector = s.svg.select('.target-bar');\n+ } else {\nselector = s.svg.select('.bar.'+ elem.option);\n}\n+ }\nelse if (['Column', 'HorizontalBar'].indexOf(s.chartType) !== -1) {\n// Grouped or singlular\nif (s.isGrouped || s.isSingular) {\n@@ -2670,20 +2671,30 @@ window.Chart = function(container) {\n// Click\n.on('click', function (d, i) {\nvar selector, isTargetBar = this && d3.select(this).classed('target-bar');\n- if (isTargetBar) {\n- selector = svg.select('.bar.series-'+ i);\n- selector.on('click').call(selector.node(), selector.datum(), i);\n- return;\n- }\nvar isSelected = this && d3.select(this).classed('is-selected'),\nthisGroupId = parseInt(d3.select(this.parentNode).attr('data-group-id'), 10);\n+ // Set isSelected to false if even 1 bar is selected\n+ if(isTargetBar) {\n+ var allBars = d3.selectAll('.bar')[0];\n+ var len = allBars.length;\n+ for(var i = 0; i < len; i++) {\n+ var bar = allBars[i];\n+\n+ if(d3.select(bar).classed('is-selected')) {\n+ isSelected = false;\n+ break;\n+ }\n+ }\n+ }\n+\ncharts.setSelectedElement({\ntask: (isSelected ? 'unselected' : 'selected'),\ncontainer: container,\nselector: this,\nisTrigger: !isSelected,\n+ isTargetBar: isTargetBar,\ntriggerGroup: isGrouped,\nd: d,\ni: i\n@@ -4339,6 +4350,7 @@ window.Chart = function(container) {\nticksY = svg.selectAll('.axis.y .tick'),\npnPositiveText = svg.selectAll('.bartext.positive, .target-bartext.positive'),\npnNegativeText = svg.selectAll('.bartext.negative, .target-bartext.negative'),\n+ pnTargetText = svg.selectAll('.target-bartext.positive, .target-bartext.negative'),\nthisGroup = d3.select(o.selector.parentNode),\nthisGroupId = parseInt((thisGroup.node() ? thisGroup.attr('data-group-id') : 0), 10),\ntriggerData = [],\n@@ -4364,11 +4376,17 @@ window.Chart = function(container) {\n// By legends only\nif (s.isByLegends && !isTypePie) {\nif (isPositiveNegative) {\n+ if(o.isTargetBar) {\n+ s.svg.selectAll('.target-bar').classed('is-selected', true).style('opacity', 1);\n+\n+ pnTargetText.style('font-weight', 'bolder');\n+ } else {\ns.svg.selectAll(isPositive ?\n'.bar.positive, .target-bar.positive': '.bar.negative, .target-bar.negative')\n.classed('is-selected', true).style('opacity', 1);\n(isPositive ? pnPositiveText : pnNegativeText).style('font-weight', 'bolder');\n+ }\nsvg.selectAll('.bar').each(function(d, i) {\nvar bar = d3.select(this);\n",
        "date": "02.01.2018 21:14:43",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Refactor chart selection logic and styling for target bars"
    },
    {
        "msg": "update variable names and types",
        "diff": "diff --git a/components/datagrid/datagrid.js b/components/datagrid/datagrid.js @@ -2854,13 +2854,18 @@ Datagrid.prototype = {\nconst cell = $(this);\nconst text = cell.text();\nconst inner = cell.children('.datagrid-cell-wrapper');\n+ const element = $(inner[0]);\n+ const clonedEl = element.clone().css({ display: 'inline', width: 'auto', visibility: 'hidden' }).appendTo('body');\n- if (cell[0] && inner[0] && (inner[0].offsetWidth) < inner[0].scrollWidth && cell.data('tooltip')) {\n+ if (cell[0] && inner[0] && clonedEl.width() > element.width() - 30 && cell.data('tooltip')) {\nconst w = inner.width();\ncell.data('tooltip').settings.maxWidth = w;\n+\n+ clonedEl.remove();\nreturn text;\n}\n+ clonedEl.remove();\nreturn '';\n}\n});\n",
        "date": "15.02.2018 16:21:43",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Refactor tooltip logic in datagrid.js"
    },
    {
        "msg": "update type of beforeShow property",
        "diff": "diff --git a/components/modal/modal.js b/components/modal/modal.js @@ -18,7 +18,7 @@ const COMPONENT_NAME = 'modal';\n* @property {string} id Optionally tag a dialog with an id.\n* @property {number} frameHeight Optional extra height to add.\n* @property {number} frameWidth Optional extra width to add.\n-* @property {callback} beforeShow Optional callback for before show\n+* @property {function} beforeShow Optional callback for before show\n*/\nconst MODAL_DEFAULTS = {\ntrigger: 'click',\n",
        "date": "15.03.2018 07:41:12",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Update beforeShow property type to function in modal.js"
    },
    {
        "msg": "update docjs-comments for locale",
        "diff": "diff --git a/components/locale/locale.js b/components/locale/locale.js @@ -12,9 +12,11 @@ if (typeof window.SohoConfig === 'object' && typeof window.SohoConfig.culturesPa\n* Data From: http://www.unicode.org/repos/cldr-aux/json/22.1/main/\n* For Docs See: http://ibm.co/1nXyNxp\n* @class Locale\n-* @property {string} currentLocale The Currently Set Locale\n-* @property {object} cultures Contains all currently-stored cultures.\n-* @property {string} culturesPath the web-server's path to culture files.\n+* @constructor\n+*\n+* @param {string} currentLocale The Currently Set Locale\n+* @param {object} cultures Contains all currently-stored cultures.\n+* @param {string} culturesPath the web-server's path to culture files.\n*/\nconst Locale = { // eslint-disable-line\n@@ -104,7 +106,7 @@ const Locale = { // eslint-disable-line\n/**\n* Set the currently used locale.\n* @param {string} locale The locale to fetch and set.\n- * @returns {jQuery.Deferred} which is resolved once the locale culture is retrieved and set\n+ * @returns {jquery.deferred} which is resolved once the locale culture is retrieved and set\n*/\nset(locale) {\nconst self = this;\n@@ -321,7 +323,7 @@ const Locale = { // eslint-disable-line\n/**\n* Check if the date is valid using the current locale to do so.\n- * @param {Date} date The date to show in the current locale.\n+ * @param {date} date The date to show in the current locale.\n* @returns {boolean} whether or not the date is valid.\n*/\nisValidDate(date) {\n@@ -341,7 +343,7 @@ const Locale = { // eslint-disable-line\n* @param {string} dateFormat The source format fx yyyy-MM-dd\n* @param {boolean} isStrict If true missing date parts will be considered\n* invalid. If false the current month/day.\n- * @returns {Date|undefined} updated date object, or nothing\n+ * @returns {date|undefined} updated date object, or nothing\n*/\nparseDate(dateString, dateFormat, isStrict) {\nconst thisLocaleCalendar = this.calendar();\n@@ -704,9 +706,9 @@ const Locale = { // eslint-disable-line\n* Format a decimal with thousands and padding in the current locale.\n* http://mzl.la/1MUOEWm\n* @param {number} number The source number.\n- * @param {boolean} options Additional options.style can be decimal, currency, percent\n- * and integer options.percentSign, options.minusSign, options.decimal,\n- * options.group options.minimumFractionDigits (0), options.maximumFractionDigits (3)\n+ * @param {object} options Additional options.style can be decimal, currency,\n+ percent and integer options.percentSign, options.minusSign, options.decimal,\n+ options.group options.minimumFractionDigits (0), options.maximumFractionDigits (3)\n* @returns {string} the formatted number.\n*/\nformatNumber(number, options) {\n@@ -873,8 +875,8 @@ const Locale = { // eslint-disable-line\n/**\n* Overridable culture messages\n* @param {string} key The key to search for on the string.\n- * @param {boolean} [showAsUndefined] causes a translated phrase to be \"undefined\"\n- * instead of defaulting to the default locale's version of the string.\n+ * @param {boolean} [showAsUndefined] causes a translated phrase to be\n+ instead of defaulting to the default locale's version of the string.\n* @returns {string|undefined} a translated string, or nothing, depending on configuration\n*/\ntranslate(key, showAsUndefined) {\n",
        "date": "15.03.2018 12:54:48",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Refactor Locale constructor and method parameters"
    },
    {
        "msg": "update naming of len2 variable",
        "diff": "diff --git a/components/datagrid/datagrid.js b/components/datagrid/datagrid.js @@ -1617,7 +1617,7 @@ Datagrid.prototype = {\nlet i;\nlet ii;\nlet len;\n- let len2;\n+ let dataSetLen;\nif (this.settings.treeGrid) {\ndataset = this.settings.treeDepth;\n@@ -1628,7 +1628,7 @@ Datagrid.prototype = {\n} else if (this.settings.groupable) {\nfor (i = 0, len = this.settings.dataset.length; i < len; i++) {\nlet isGroupFiltered = true;\n- for (ii = 0, len2 = this.settings.dataset[i].values.length; ii < len2; ii++) {\n+ for (ii = 0, dataSetLen = this.settings.dataset[i].values.length; ii < dataSetLen; ii++) {\nisFiltered = !checkRow(this.settings.dataset[i].values[ii]);\nthis.settings.dataset[i].values[ii].isFiltered = isFiltered;\n",
        "date": "21.03.2018 11:20:17",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Refactor variable name len2 to dataSetLen in datagrid.js"
    },
    {
        "msg": "update usage of beforeShow callback",
        "diff": "diff --git a/components/modal/modal.js b/components/modal/modal.js @@ -82,7 +82,7 @@ Modal.prototype = {\n}\n// ensure is appended to body for new dom tree\n- if (this.settings.content || this.settings.beforeShow) {\n+ if (this.settings.content) {\nthis.settings.trigger = this.settings.content instanceof jQuery ? this.settings.trigger : 'immediate';\nthis.appendContent();\nsetTimeout(() => {\n@@ -91,6 +91,13 @@ Modal.prototype = {\nreturn;\n}\n+ if (this.settings.beforeShow) {\n+ this.settings.trigger = this.settings.content instanceof jQuery ? this.settings.trigger : 'immediate';\n+ this.appendContent();\n+ this.callSource();\n+ return;\n+ }\n+\nself.addButtons(this.settings.buttons);\nthis.element.appendTo('body');\nthis.element[0].style.display = 'none';\n@@ -129,7 +136,19 @@ Modal.prototype = {\n}\nif (this.settings.beforeShow) {\n- this.element.find('.modal-body').append($('<div class=\"field\"><div id=\"modal-busyindicator\" class=\"busy card\"></div></div>'));\n+ // this.element.find('.modal-body').append($('<div class=\"field\"><div id=\"modal-busyindicator\" class=\"busy card\"></div></div>'));\n+ $('body').append($('<div class=\"overlay busy\">' +\n+ '</div>' +\n+ '<div class=\"busy-indicator-container blocked-ui\" aria-live=\"polite\" role=\"status\">' +\n+ '<div class=\"busy-indicator active\">' +\n+ '<div class=\"bar one\"></div>' +\n+ '<div class=\"bar two\"></div>' +\n+ '<div class=\"bar three\"></div>' +\n+ '<div class=\"bar four\"></div>' +\n+ '<div class=\"bar five\"></div>' +\n+ '</div>' +\n+ '<span>Loading...</span>' +\n+ '</div>'));\n}\nif (!isAppended) {\n@@ -151,6 +170,7 @@ Modal.prototype = {\nutils.fixSVGIcons(this.element);\nif (this.settings.beforeShow) {\n+ // Change to full screen\nconst busyIndEl = $('#modal-busyindicator');\nbusyIndEl.busyindicator({}).data('busyindicator');\nbusyIndEl.trigger('start.busyindicator');\n@@ -365,6 +385,8 @@ Modal.prototype = {\nreturn false;\n}\n+ self.open(true);\n+\n$('#modal-busyindicator').trigger('complete.busyindicator');\nif (!(content instanceof jQuery)) {\n@@ -381,11 +403,11 @@ Modal.prototype = {\nconst callBackOpts = {};\nthis.settings.beforeShow(response, callBackOpts);\n- self.open(true);\n},\n/**\n* Open the modal via the api.\n+ * @param {boolean} ajaxReturn ajaxReturn boolean\n* @returns {void}\n*/\nopen(ajaxReturn) {\n",
        "date": "27.03.2018 19:12:10",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Refactor modal.js to handle beforeShow settings and add loading indicator."
    },
    {
        "msg": "update css selector for period dropdown with Timepicker",
        "diff": "diff --git a/components/timepicker/_timepicker.scss b/components/timepicker/_timepicker.scss .dropdown {\nwidth: 60px;\n- &[aria-label=\"[TimePeriod]\"] {\n+ &.period {\n+ + .dropdown-wrapper .dropdown {\nwidth: 63px;\n}\n+ }\n+ .icon {\nheight: 31px;\n",
        "date": "27.03.2018 11:09:14",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Update timepicker dropdown width and icon height."
    },
    {
        "msg": "update pub notes",
        "diff": "diff --git a/PUBLISH.md b/PUBLISH.md @@ -47,43 +47,43 @@ git checkout master\n* Generate Release Notes http://bit.ly/2w6X8Xw\n## Git Operations\n-* Edit version in package.json and publish package.json (from 4.4.0-rc to 4.4.0 as an example)\n+* Edit version in package.json and publish package.json (from 4.5.0-rc to 4.5.0 as an example)\n* Push a PR\n* Check for Last PR's http://git.infor.com/projects/SOHO/repos/angular-components/pull-requests and http://git.infor.com/projects/SOHO/repos/controls/pull-requests and make sure all merged\n-* Merge 4.4.0-rc (the rc branch) back onto the 4.4.x (masterish branch) - Using a PR or Git Merge\n-* Git Tag the release from the 4.4.x branch\n+* Merge 4.5.0-rc (the rc branch) back onto the 4.5.x (masterish branch) - Using a PR\n+* Git Tag the release from the 4.5.x branch\n```bash\n- git tag 4.4.4\n+ git tag 4.5.0\ngit push origin --tags\n```\n-* Make the new branch off 4.4.x for the new version (4.5.0-rc)\n- * In git http://git.infor.com/projects/SOHO/repos/controls/settings set the 4.5.0-rc branch as the default\n+* Make the new branch off 4.5.x for the new version (4.6.0-rc)\n+ * In git http://git.infor.com/projects/SOHO/repos/controls/settings set the 4.6.0-rc branch as the default\n* set branch permissions\n-* Delete the 4.4.0-rc branch and all feature/bug fix branches http://git.infor.com/projects/SOHO/repos/controls/branches\n+* Delete the 4.5.0-rc branch and all feature/bug fix branches http://git.infor.com/projects/SOHO/repos/controls/branches\n## Build Operations\n* Change the v-Next build http://bamboo.infor.com/chain/admin/config/editChainDetails.action?buildKey=SOHO-NEXT\n- * change the name to Angular 4.5.0-RC (Version Next)\n+ * change the name to Angular 4.6.0-RC (Version Next)\n* change the repo it points to\n- * checkout 4.5.0-rc and bump the versions in package.json and publish/package.json\n+ * checkout 4.6.0-rc and bump the versions in package.json and publish/package.json\n* Change the current build http://bamboo.infor.com/build/admin/edit/editBuildTasks.action?buildKey=SOHO-R43X-JOB1\n* change the versions in the build config\n- * Label the build release-440 for example http://bamboo.infor.com/browse/label/release-440\n+ * Label the build release-450 for example http://bamboo.infor.com/browse/label/release-440\n## Update version in @infor/sohoxi-angular\n* Repeat Git Operations on ssh://git@git.infor.com:7999/soho/angular-components.git\n* Edit version in package.json and publish package.json (2) places\n* Check for Last PR's http://git.infor.com/projects/SOHO/repos/angular-components/pull-requests and merge\n-* Merge 4.5.0-rc (the rc branch) back onto the 4.4.x (masterish branch) - Using a PR or Git Merge\n-* Git Tag the release from the 4.4.x branch\n+* Merge 4.5.0-rc (the rc branch) back onto the 4.5.x (masterish branch) - Using a PR or Git Merge\n+* Git Tag the release from the 4.5.x branch\n```bash\n- git tag 4.4.0\n+ git tag 4.5.0\ngit push origin --tags\n```\n-* Make the new branch off 4.4.x for the new version (4.5.0-rc)\n- * In git http://git.infor.com/projects/SOHO/repos/controls/settings set the 4.5.0-rc branch as the default\n+* Make the new branch off 4.5.x for the new version (4.6.0-rc)\n+ * In git http://git.infor.com/projects/SOHO/repos/controls/settings set the 4.6.0-rc branch as the default\n* set branch permissions\n-* Delete the 4.4.0-rc branch and all feature/bug fix branches http://git.infor.com/projects/SOHO/repos/controls/branches\n+* Delete the 4.5.0-rc branch and all feature/bug fix branches http://git.infor.com/projects/SOHO/repos/controls/branches\n* Update the build to the next release\n@@ -99,8 +99,8 @@ npm info @infor/sohoxi dist-tags\n```\n* Test New and old links for example:\n-http://usalvlhlpool1.infor.com/4.4.0/components/\n-http://usalvlhlpool1.infor.com/4.5.0-rc/components/\n+http://usalvlhlpool1.infor.com/4.5.0/components/\n+http://usalvlhlpool1.infor.com/4.6.0-rc/components/\nYou may have to run this for new sites\n",
        "date": "30.03.2018 08:22:19",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Update version to 4.5.0 and 4.6.0-rc, merge branches, and update build configurations"
    },
    {
        "msg": "update sitemap to close infor-design/design-system#134",
        "diff": "diff --git a/docs/sitemap.yml b/docs/sitemap.yml @@ -17,14 +17,10 @@ sections:\npages:\n- name: Elements\npages:\n- - name: About\n- slug: about\n- name: Accordion\nslug: accordion\n- name: Alerts\nslug: alerts\n- - name: Application Menu\n- slug: applicationmenu\n- name: Autocomplete\nslug: autocomplete\n- name: Badges\n@@ -41,10 +37,6 @@ sections:\nslug: circlepager\n- name: Color Picker\nslug: colorpicker\n- - name: Contextual Action Panel\n- slug: contextualactionpanel\n- - name: Context Menu\n- slug: contextmenu\n- name: Counts\nslug: counts\n- name: Datepicker\n@@ -53,44 +45,22 @@ sections:\nslug: dropdown\n- name: Editor (RichText)\nslug: editor\n- - name: Empty Messages\n- slug: emptymessage\n- - name: Expandable Area\n- slug: expandablearea\n- name: Favorites\nslug: favorites\n- - name: Fieldset\n- slug: fieldset\n- name: Field Filter\nslug: field-filter\n- - name: Field Options\n- slug: field-options\n- name: File Upload\nslug: fileupload\n- name: File Upload (Advanced)\nslug: fileupload-advanced\n- - name: Form Functionality\n- slug: form\n- - name: Header\n- slug: header\n- - name: Hierarchy (Org Chart)\n- slug: hierarchy\n- - name: HomePage\n- slug: homepage\n- name: Hyperlinks\nslug: hyperlinks\n- name: Input (Text)\nslug: input\n- name: List Builder\nslug: listbuilder\n- - name: List Filter\n- slug: listfilter\n- - name: Lookup\n- slug: lookup\n- name: Menubutton\nslug: menubutton\n- - name: Message\n- slug: message\n- name: Modal\nslug: modal\n- name: Multiselect\n@@ -113,8 +83,6 @@ sections:\nslug: slider\n- name: Spinbox\nslug: spinbox\n- - name: Step Process\n- slug: stepprocess\n- name: Swaplist\nslug: swaplist\n- name: Switch\n@@ -141,10 +109,6 @@ sections:\nslug: toolbarsearchfield\n- name: Tooltip\nslug: tooltip\n- - name: Tree\n- slug: tree\n- - name: Wizard\n- slug: wizard\n- name: Blocks\npages:\n- name: Data Tiles\n@@ -153,6 +117,8 @@ sections:\nslug: datagrid\n- name: Data List\nslug: listview\n+ - name: Header\n+ slug: header\n- name: Toolbar\nslug: toolbar\n- name: Utilities\n@@ -183,6 +149,18 @@ sections:\nslug: validation\n- name: Zoom\nslug: zoom\n+- name: Patterns\n+ pages:\n+ - name: About\n+ slug: about\n+ - name: Application Menu\n+ slug: applicationmenu\n+ - name: Contextual Action Panel\n+ slug: contextualactionpanel\n+ - name: Signin\n+ slug: signin\n+ - name: Step Process\n+ slug: stepprocess\n- name: Charts\npages:\n- name: Getting Start with Charts\n@@ -227,19 +205,43 @@ sections:\npages:\n- name: Block Grid\nslug: blockgrid\n+ - name: Context Menu\n+ slug: contextmenu\n- name: Compositform\nslug: compositeform\n+ - name: Empty Messages\n+ slug: emptymessage\n+ - name: Expandable Area\n+ slug: expandablearea\n+ - name: Fieldset\n+ slug: fieldset\n+ - name: Field Options\n+ slug: field-options\n+ - name: Form Functionality\n+ slug: form\n+ - name: Hierarchy (Org Chart)\n+ slug: hierarchy\n+ - name: HomePage\n+ slug: homepage\n- name: Images\nslug: images\n+ - name: List Filter\n+ slug: listfilter\n+ - name: Lookup\n+ slug: lookup\n- name: Masthead\nslug: masthead\n+ - name: Message\n+ slug: message\n- name: Process Indicator\nslug: processindicator\n- name: Radios\nslug: radios\n- - name: Signin\n- slug: signin\n- name: Tabs-multi\nslug: tabs-multi\n- name: Textarea\nslug: textarea\n+ - name: Tree\n+ slug: tree\n+ - name: Wizard\n+ slug: wizard\n",
        "date": "02.05.2018 18:01:01",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Refactor sitemap.yml to reorganize page sections and add new Patterns section with relevant pages."
    },
    {
        "msg": "update readme toc",
        "diff": "diff --git a/README.md b/README.md @@ -17,7 +17,7 @@ Infor Design System's Enterprise component library is a framework-independent UI\nFor guidelines on when and where to use the components see the [design.infor.com](http://design.infor.com).\n-<details><summary>**Table of Contents**</summary>\n+<details><summary><b>Table of Contents</b></summary>\n<p>\n* [Key Features](#key-features)\n@@ -96,16 +96,15 @@ Note: There may be a cost involved to using this with Infor's amazon s3 account\n## Running the Development Project\n-### Manual Install\n+### Install pre-requisites\n-* (Windows) Install Python `>= v2.5.0 & < 3.0.0` from [python.org/downloads](https://www.python.org/downloads/)\n* Install `node` for following the [directions for your OS](http://nodejs.org/)\n-* Install [`grunt`](http://gruntjs.com/) by running the command `npm install -g grunt-cli`\n-* On Windows you should run `git config core.autocrlf false`\n+* On Windows, you'll need to [install Python](https://www.python.org/downloads/). Make sure the version is at least `2.5.0` but not Python 3.\n+* Also on Windows, you should run `git config core.autocrlf false`\n-### Get The Code\n+### Clone the repo\n-* Clone the repo: `git clone https://github.com/infor-design/enterprise.git`\n+* Clone the repo using `git`: `git clone https://github.com/infor-design/enterprise.git`\n* `cd` into the repo directory\n* Then `npm install` to install node packages. On macOS you may need `sudo npm install` as some packages require elevated permissions\n* Then `npm run install-globals` to install some global packages we use\n@@ -125,7 +124,6 @@ Note that at this point any changes you make will cause SASS to recompile and th\nFunctional tests are the primary way we test the codebase. To run the tests, run `npm run functional:local`.\n-\n### Editor Plugins\nThis project uses `eslint` and `editorconfig`. You may want to add the following plugins to your editor to help comply with our coding standards: `eslint` for [Atom](https://github.com/AtomLinter/linter-eslint) and [VS Code](https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint), as well as `editorconfig` for [Atom](https://github.com/sindresorhus/atom-editorconfig#readme) and [VS Code](https://github.com/editorconfig/editorconfig-vscode)\n",
        "date": "03.05.2018 12:49:33",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Refactor README.md for improved readability and clarity"
    },
    {
        "msg": "update info",
        "diff": "diff --git a/README.md b/README.md @@ -17,7 +17,8 @@ Infor Design System's Enterprise component library is a framework-independent UI\nFor guidelines on when and where to use the components see the [design.infor.com](http://design.infor.com).\n-<details><summary><b>Table of Contents</b></summary>\n+<details>\n+<summary><b>Table of Contents</b></summary>\n<p>\n* [Key Features](#key-features)\n@@ -33,7 +34,6 @@ For guidelines on when and where to use the components see the [design.infor.com\n+ [Editor Plugins](#editor-plugins)\n* [Documentation](#documentation)\n* [Contacting Us and Updates](#contacting-us-and-updates)\n-\n</p>\n</details>\n@@ -57,7 +57,7 @@ We support the latest release and the release previous to the latest (R-1) for b\n## Getting the code into your project\n-### `npm`\n+### npmjs\nThis node module is hosted on a private repo [npm.infor.com](http://npm.infor.com:4873). To be able to install it in your project you need to tell npm on your system to fetch packages with the `@infor` scope from the correct registry.\n",
        "date": "03.05.2018 13:53:16",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Update README.md with changes to Table of Contents and npm instructions"
    },
    {
        "msg": "update isPrintable function, Added validation to keyup and keypress events to disable typing when max limit is reached",
        "diff": "diff --git a/src/components/textarea/textarea.js b/src/components/textarea/textarea.js @@ -97,15 +97,37 @@ Textarea.prototype = {\n* Checks a keycode value and determines if it belongs to a printable character.\n* @private\n* @param {number} keycode - a number representing an ASCII keycode value\n+ * @param {boolean} shiftKey - a boolean set to true if shift key is being pressed\n* @returns {boolean} Returns true if the key is a printable one.\n*/\n- isPrintable(keycode) {\n- const valid =\n- (keycode > 47 && keycode < 58) || // number keys\n+ isPrintable(keycode, shiftKey) {\n+ // (keycode > 47 && keycode < 58) || // number keys\n+ // (keycode > 64 && keycode < 91) || // letter keys\n+ // (keycode > 95 && keycode < 112) || // numpad keys\n+ // (keycode > 185 && keycode < 193) || // ;=,-./` (in order)\n+ // (keycode > 218 && keycode < 223); // [\\]' (in order)\n+\n+ let valid = false;\n+\n+ if (shiftKey) {\n+ valid =\n(keycode > 64 && keycode < 91) || // letter keys\n- (keycode > 95 && keycode < 112) || // numpad keys\n- (keycode > 185 && keycode < 193) || // ;=,-./` (in order)\n- (keycode > 218 && keycode < 223); // [\\]' (in order)\n+ (keycode >= 33 && keycode <= 38) ||\n+ (keycode >= 40 && keycode <= 43) ||\n+ (keycode === 126 || keycode === 58 || keycode === 60) ||\n+ (keycode >= 123 && keycode <= 125) ||\n+ (keycode === 94 || keycode === 95) ||\n+ (keycode >= 62 && keycode <= 64);\n+ } else {\n+ valid =\n+ keycode === 13 || // enter key\n+ (keycode >= 48 && keycode <= 57) || // number keys\n+ (keycode >= 97 && keycode <= 122) || // letter keys\n+ (keycode === 59 || keycode === 61 ||\n+ (keycode >= 44 && keycode <= 47) || keycode === 96) || // ;=,-./` (in order)\n+ (keycode >= 91 && keycode <= 93) || keycode === 39; // [\\]' (in order)\n+ }\n+\nreturn valid;\n},\n@@ -189,7 +211,7 @@ Textarea.prototype = {\nLocale.translate('CharactersLeft'))).replace('{0}', remaining.toString());\nif (self.counter) {\n- if (length === max) {\n+ if (length >= max) {\ntext = (self.settings.charMaxText ? self.settings.charMaxText.replace('{0}', max) : Locale.translate('CharactersMax') + max);\nself.counter.text(text);\nself.counter.removeClass('almost-empty');\n@@ -203,7 +225,7 @@ Textarea.prototype = {\n}\n}\n- if (self.printarea) {\n+ if (self.printarea && length < max) {\nself.printarea.text(self.element.val());\n}\n},\n@@ -276,11 +298,23 @@ Textarea.prototype = {\nconst self = this;\nthis.element.on('keyup.textarea', (e) => {\n+ const value = self.element.val();\n+ const isExtraLinebreaks = self.isChrome || self.isSafari;\n+ const length = value.length + (isExtraLinebreaks ? self.countLinebreaks(value) : 0);\n+ const max = parseInt(self.element.attr('maxlength'), 10);\n+\nself.updateCounter();\n+ if (length >= max) {\n+ e.preventDefault();\n+ return false;\n+ }\n+\nif (self.settings.autoGrow) {\nself.handleResize(self, e);\n}\n+\n+ return true;\n}).on('focus.textarea', () => {\nif (self.counter) {\nself.counter.addClass('focus');\n@@ -288,15 +322,17 @@ Textarea.prototype = {\n}).on('updated.dropdown', () => {\nself.updated();\n}).on('keypress.textarea', function (e) {\n- const length = self.element.val().length;\n- const max = self.element.attr('maxlength');\n+ const value = self.element.val();\n+ const isExtraLinebreaks = self.isChrome || self.isSafari;\n+ const length = value.length + (isExtraLinebreaks ? self.countLinebreaks(value) : 0);\n+ const max = parseInt(self.element.attr('maxlength'), 10);\nif ([97, 99, 118, 120].indexOf(e.which) > -1 && (e.metaKey || e.ctrlKey)) {\nself.updateCounter();\nreturn;\n}\n- if (!self.isPrintable(e.which)) {\n+ if (!self.isPrintable(e.which, e.shiftKey)) {\nreturn;\n}\n",
        "date": "21.05.2018 18:49:56",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Refactor isPrintable function to include shiftKey parameter and update key validation logic. Fix character count validation in Textarea component. Fix keypress event handling in Textarea component."
    },
    {
        "msg": "update select and deselect functions to prevent toggling of already selected items",
        "diff": "diff --git a/src/components/listview/listview.js b/src/components/listview/listview.js @@ -722,8 +722,65 @@ ListView.prototype = {\nif (typeof li === 'number') {\nli = $(this.element.children()[0]).children().eq(li);\n}\n+\n+ const self = this;\nif (li.is('.is-selected')) {\n- this.select(li);\n+ this.selectedItems = [];\n+ li.removeClass('is-selected hide-selected-color');\n+\n+ li.attr('aria-selected', false);\n+ li.find('.listview-selection-checkbox input').prop('checked', false);\n+\n+ li.parent().find('.is-selected').each(function (i) {\n+ self.selectedItems[i] = $(this);\n+ });\n+\n+ /**\n+ * Fires when a item is deselected.\n+ *\n+ * @event deselected\n+ * @memberof ListView\n+ * @property {object} event - The jquery event object\n+ * @property {object} selected items and item info\n+ */\n+ this.element.triggerHandler('deselected', { selectedItems: this.selectedItems, elem: li });\n+ }\n+\n+ let parent = this.element.closest('.card, .widget');\n+ if (!parent.length) {\n+ parent = this.element.parent();\n+ }\n+\n+ const toolbar = parent.find('.listview-toolbar, .contextual-toolbar');\n+ const toolbarControl = toolbar.data('toolbar');\n+\n+ if (self.selectedItems.length > 0) {\n+ if (toolbarControl) {\n+ toolbarControl.toggleMoreMenu();\n+ }\n+ // Order of operations: set up event, change display prop, animate, toggle menu.\n+ // Menu toggle takes place after the animation starts\n+ toolbar.one('animateopencomplete', () => {\n+ self.element.addClass('is-toolbar-open');\n+ toolbar.trigger('recalculate-buttons').removeClass('is-hidden');\n+ });\n+ if (toolbar[0]) {\n+ toolbar[0].style.display = 'block';\n+ }\n+ // toolbar.animateOpen({distance: 52});\n+ toolbar.animateOpen({ distance: 40 });\n+\n+ let title = toolbar.find('.title, .selection-count');\n+ if (!title || !title.length) {\n+ title = $('<div class=\"title selection-count\"></div>');\n+ toolbar.prepend(title);\n+ }\n+ title.text(`${self.selectedItems.length} ${Locale ? Locale.translate('Selected') : 'Selected'}`);\n+ } else {\n+ toolbar.addClass('is-hidden').one('animateclosedcomplete', function (e) {\n+ e.stopPropagation();\n+ this.style.display = 'none';\n+ }).animateClosed();\n}\n},\n@@ -747,7 +804,7 @@ ListView.prototype = {\nlet isChecked = false;\nconst isMixed = self.settings.selectable === 'mixed';\n- self.selectedItems = [];\n+ // self.selectedItems = [];\nif (typeof li === 'number') {\nli = $(this.element.children()[0]).children().eq(li);\n}\n@@ -764,17 +821,7 @@ ListView.prototype = {\nreturn;\n}\n- // Select\n- if (this.settings.selectable !== 'multiple' && this.settings.selectable !== 'mixed') {\n- li.parent().children().removeAttr('aria-selected');\n- li.parent().find('.is-selected').removeClass('is-selected');\n- self.selectedItems[0] = $(this);\n- }\n-\n- if (isChecked) {\n- self.selectedItems = [];\n- li.removeClass('is-selected hide-selected-color');\n- } else if (this.settings.selectable) {\n+ if (!isChecked) {\nli.addClass(`is-selected${isMixed ? ' hide-selected-color' : ''}`);\nself.lastSelectedItem = li.index();// Rember index to use shift key\n}\n@@ -783,8 +830,8 @@ ListView.prototype = {\nself.selectedItems[i] = $(this);\n});\n- li.attr('aria-selected', !isChecked);\n- li.find('.listview-selection-checkbox input').prop('checked', !isChecked);\n+ li.attr('aria-selected', true);\n+ li.find('.listview-selection-checkbox input').prop('checked', true);\nif (!noTrigger) {\nconst triggerStr = isChecked ? 'unselected' : 'selected';\n@@ -797,18 +844,6 @@ ListView.prototype = {\n* @property {object} selected items and item info\n*/\nthis.element.triggerHandler(triggerStr, { selectedItems: this.selectedItems, elem: li });\n-\n- if (triggerStr === 'unselected') {\n- /**\n- * Fires when a item is deselected.\n- *\n- * @event deselected\n- * @memberof ListView\n- * @property {object} event - The jquery event object\n- * @property {object} selected items and item info\n- */\n- this.element.triggerHandler('deselected', { selectedItems: this.selectedItems, elem: li });\n- }\n}\nlet parent = this.element.closest('.card, .widget');\n@@ -1148,9 +1183,12 @@ ListView.prototype = {\nif (isMultiple && e.shiftKey) {\nself.selectItemsBetweenIndexes([self.lastSelectedItem, item.index()]);\ne.preventDefault();\n+ } else if (item.hasClass('is-selected')) {\n+ self.deselect(item);\n} else {\nself.select(item);\n}\n+\nitem.focus();\n}\n",
        "date": "23.05.2018 15:34:29",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Refactor item deselection logic and toolbar display in ListView component"
    },
    {
        "msg": "update some comments",
        "diff": "diff --git a/docs/TESTING.md b/docs/TESTING.md @@ -99,7 +99,9 @@ For test isolation, please see [Debugging Test Tips](#debugging-tests-tips)\n## Working With Visual Regression Tests\n-- Create a e2e2 test similar to the following...\n+Currently On-Hold until running ci is figured out see: [SOHO-7464](https://jira.infor.com/browse/SOHO-7464)\n+\n+- Create a e2e test similar to the following...\n```javascript\nif (utils.isChrome()) {\n",
        "date": "15.06.2018 08:45:56",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "On-Hold: Visual regression tests pending until CI issue resolved (SOHO-7464)"
    },
    {
        "msg": "update dropdown updates events func spec js file",
        "diff": "diff --git a/test/components/dropdown/dropdown-updates-events.func-spec.js b/test/components/dropdown/dropdown-updates-events.func-spec.js @@ -43,7 +43,8 @@ describe('Dropdown updates, events', () => {\nshowEmptyGroupHeaders: false,\nshowSelectAll: false,\nsourceArguments: {},\n- onKeyDown: null\n+ onKeyDown: null,\n+ clearable: false\n};\nexpect(dropdownObj.settings).toEqual(settings);\n@@ -65,7 +66,8 @@ describe('Dropdown updates, events', () => {\nshowEmptyGroupHeaders: false,\nshowSelectAll: false,\nsourceArguments: {},\n- onKeyDown: null\n+ onKeyDown: null,\n+ clearable: false\n};\ndropdownObj.updated();\n@@ -91,7 +93,8 @@ describe('Dropdown updates, events', () => {\nshowEmptyGroupHeaders: false,\nshowSelectAll: false,\nsourceArguments: {},\n- onKeyDown: null\n+ onKeyDown: null,\n+ clearable: false\n};\ndropdownObj.updated(settings);\n",
        "date": "28.06.2018 11:10:32",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Add clearable option to dropdown settings"
    },
    {
        "msg": "update Landmark team info",
        "diff": "diff --git a/docs/TEAMS.md b/docs/TEAMS.md @@ -41,7 +41,8 @@ This is a list of Infor teams and contributors using the Enterprise controls rep\n|Infor SCE Administration Console | Using some widget styling and Charts | James Wang, George Matthews | `4.x` |\n| Infor Supplier Exchange | Replacing Fat client Java Swing UI | John Sipher | `4.x` |\n| IPA | Using D3 component example and some controls | Christopher Fried, Keith Knud | `4.x` |\n-| Landmark | Jetty Server Servlet, Angular Shared repo | Phillip Patton, Andrew Lipensky | `4.x` |\n+| Landmark | (incl GHR and CSF) jQuery/HTML5, Angular Shared repo | Phillip Patton, Andrew Lipetzky | `3.3`, `3.5`, `4x` |\n+| Landmark | (GHR and CSF suites) Old UI: jQuery/HTML5; New UI: Typescript/Angular Shared repo | Phillip Patton, Andrew Lipetzky | `3.3`, `3.5`, `4x` |\n| Lawson S3 | | Andy Buboltz | `4.x` |\n| LBI | | Steve Stahl, Rommel Dollison | `3.x` |\n| LTM App Group | | Jerry Drinka, David Cooper | `3.x` |\n",
        "date": "13.07.2018 10:22:02",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Update Landmark team information in TEAMS.md"
    },
    {
        "msg": "update use of searchExpandableRow option",
        "diff": "diff --git a/src/components/datagrid/datagrid.js b/src/components/datagrid/datagrid.js @@ -5252,8 +5252,9 @@ Datagrid.prototype = {\nrow.find('td').each(function () {\nconst cell = $(this);\nconst cellText = cell.text().toLowerCase();\n+ const isSearchExpandableRow = self.settings.searchExpandableRow ? true : !row.hasClass('datagrid-expandable-row');\n- if (cellText.indexOf(term) > -1 && !row.hasClass('datagrid-expandable-row')) {\n+ if (cellText.indexOf(term) > -1 && isSearchExpandableRow) {\nfound = true;\ncell.find('*').each(function () {\nif (this.innerHTML === this.textContent) {\n",
        "date": "26.07.2018 14:40:58",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Refactor search functionality in datagrid.js to include searchExpandableRow setting"
    },
    {
        "msg": "update description for colorpicker sizes",
        "diff": "diff --git a/src/components/colorpicker/readme.md b/src/components/colorpicker/readme.md @@ -10,7 +10,7 @@ description: This page describes Color Picker.\n1. Select the label not the Hex [View Example]( ../components/colorpicker/example-show-label)\n1. Test States [View Test]( ../components/colorpicker/test-states)\n1. Test it works on a Modal [View Test]( ../components/colorpicker/test-modal)\n-1. Showing Custom Colors [View Example]( ../components/colorpicker/example-sizes)\n+1. Showing different colorpicker sizes [View Example]( ../components/colorpicker/example-sizes)\n## Code Example\n",
        "date": "03.08.2018 15:01:05",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Refactor colorpicker example to show different sizes"
    },
    {
        "msg": "update the contribution file info",
        "diff": "diff --git a/docs/CONTRIBUTING.md b/docs/CONTRIBUTING.md @@ -4,14 +4,12 @@ So you're interested in giving us a hand? That's awesome! We've put together som\nThere are several to get involved, this document covers:\n-- [raising issues](#raising-issues)\n- - [bug reports](#bugs)\n- - [feature requests](#features)\n- - [change requests](#changes)\n-- [working on Enterprise core](#core)\n+- [Raising Issues/Requests](#reporting-an-issue)\n+ - [bug reports](#bug-reports)\n+ - [feature requests](#feature-requests)\n+- [Contributing to the codebase](#submitting-pull-requests)\n- [submitting pull requests](#pull-requests)\n-- [testing and quality assurance](#testing)\n-- [writing documentation](#documentation)\n+- [testing and quality assurance](#testing-and-quality-assurance)\n## Reporting An Issue\n@@ -63,10 +61,14 @@ If you'd like to submit a pull request you'll need to do the following:\n1. **[Forking the repo](https://help.github.com/articles/fork-a-repo/)**. Navigate to [Github Repository](https://github.com/infor-design/enterprise) and click the \"Fork\" button in the top right corner of your browser.\n-1. **[Clone the Repository](https://help.github.com/articles/cloning-a-repository/) to your machine.**.\n-1. **Make your changes with the local copy of the code.**\n+1. **[Clone the Repository](https://help.github.com/articles/cloning-a-repository/)** to your machine.\n+1. **Make your changes** to your local fork for the proper branch.\n+- Almost all development will be done on branches from `master`.\n+- Occasionally there will be a need to contribute to a version branch (i.e. `4.9.x`) in which case you want to branch off of one of those.\n-1. **Commit your changes locally.** Add any related JIRA Ticket numbers or Github issue numbers into the message\n+If you are unsure, just ask someone on the team so you don't have to redo your branch.\n+\n+1. **Commit your changes locally.** Try to follow the standards for your commit message outlined below.\n- Try to follow\n- [Github's commit message standards](https://github.com/erlang/otp/wiki/Writing-good-commit-messagesMore)\n- [Closing issues using keywords with commits and PRs](https://help.github.com/articles/closing-issues-using-keywords/)\n@@ -88,7 +90,9 @@ If you'd like to submit a pull request you'll need to do the following:\n1. **Push your changes to your remote repository.** Use `git push {remote} {branch}` to push your changes to your branch on the remote repository.\n-1. **[Creating a pull request](https://help.github.com/articles/creating-a-pull-request/)**\n+1. **[Create a pull request](https://help.github.com/articles/creating-a-pull-request/)** to the proper branch\n+- Normal changes get merged into `master`\n+- Version specific changes need to go into that specific version branch\nSee [help.github.com](https://help.github.com/) for further information.\n",
        "date": "27.08.2018 15:42:53",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Refactor CONTRIBUTING.md for clarity and consistency in section headings and instructions."
    },
    {
        "msg": "update validation to just prevent closing modal when hitting enter on input",
        "diff": "diff --git a/src/components/modal/modal.js b/src/components/modal/modal.js @@ -604,7 +604,7 @@ Modal.prototype = {\ne.stopPropagation();\ne.preventDefault();\n- if ($(target).is(':button')) {\n+ if (!target.hasClass('fileupload') && !$(target).is(':input')) {\nthis.element.find('.btn-modal-primary:enabled').trigger('click');\n}\n}\n",
        "date": "28.08.2018 18:31:57",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Fix button click event triggering in modal component"
    },
    {
        "msg": "update dutch date time format",
        "diff": "diff --git a/src/components/locale/cultures/nl-NL.js b/src/components/locale/cultures/nl-NL.js @@ -22,7 +22,7 @@ Soho.Locale.addCulture('nl-NL', {\nmonth: 'dd MMMM',\nyear: 'MMMM yyyy',\ntimestamp: 'HH:mm:ss',\n- datetime: 'M/d/yyyy HH:mm'\n+ datetime: 'd/M/yyyy HH:mm'\n}, // Infered short + short gregorian/dateTimeFormats\n// ca-gregorian/main/dates/calendars/gregorian/days/format/short or abbreviated (2 digit)\ndays: {\n",
        "date": "31.08.2018 18:45:22",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Update date and time format in nl-NL culture to d/M/yyyy HH:mm"
    },
    {
        "msg": "update functional tests",
        "diff": "diff --git a/test/components/busyindicator/busyindicator-api.func-spec.js b/test/components/busyindicator/busyindicator-api.func-spec.js -import { BusyIndicator } from '../../../src/components/busyindicator/busyindicator';\n-\nconst busyindicatorHTML = require('../../../app/views/components/busyindicator/example-index.html');\n-const svg = require('../../../src/components/icons/svg.html');\nlet busyindicatorEl;\n-let svgEl;\nlet busyindicatorObj;\ndescribe('Busy Indicator API', () => {\nbeforeEach(() => {\nbusyindicatorEl = null;\n- svgEl = null;\n- busyindicatorObj = null;\n- document.body.insertAdjacentHTML('afterbegin', svg);\ndocument.body.insertAdjacentHTML('afterbegin', busyindicatorHTML);\n- busyindicatorEl = document.body.querySelector('.busy-indicator');\n- svgEl = document.body.querySelector('.svg-icons');\n- busyindicatorEl.classList.add('no-init');\n- busyindicatorObj = new BusyIndicator(busyindicatorEl);\n+\n+ busyindicatorEl = $('#busy-form');\n+\n+ busyindicatorObj = busyindicatorEl.data('busyindicator');\n});\nafterEach(() => {\n+ if (busyindicatorObj) {\nbusyindicatorObj.destroy();\n- busyindicatorEl.parentNode.removeChild(busyindicatorEl);\n- svgEl.parentNode.removeChild(svgEl);\n+ }\n});\n- it('Should be defined on jQuery object', () => {\n- expect(busyindicatorObj).toEqual(jasmine.any(Object));\n- });\n+ it('Should destroy busy indicator', () => {\n+ const buttonEl = $('#submit');\n+ buttonEl.click();\n- it('Should destroy busy indicator', (done) => {\n- const spyEvent = spyOnEvent(busyindicatorEl, 'start.busyindicator');\n+ setTimeout(() => {\nbusyindicatorObj.destroy();\n- const buttonEl = document.body.querySelector('#submit');\n+ expect(busyindicatorObj).toBeFalsy();\n+ }, 1000);\n+ });\n+\n+ it('Should display busy indicator when triggering \"start.busyindicator\"', () => {\n+ busyindicatorEl.trigger('start.busyindicator');\n+\n+ setTimeout(() => {\n+ expect(document.body.querySelector('.busy-indicator')).toBeTruthy();\n+ }, 1000);\n+ });\n+\n+ it('Should hide busy indicator when triggerring \"complete.busyindicator\"', () => {\n+ const buttonEl = $('#submit');\nbuttonEl.click();\nsetTimeout(() => {\n- expect(spyEvent).not.toHaveBeenTriggered();\n- done();\n- }, 500);\n+ busyindicatorEl.trigger('complete.busyindicator');\n- expect($(busyindicatorEl).data('busyindicator')).toBeFalsy();\n+ expect(document.body.querySelector('.busy-indicator')).toBeFalsy();\n});\n-\n- it('Should set settings', () => {\n- const settings = {\n- blockUI: true,\n- text: null,\n- displayDelay: 1000,\n- timeToComplete: 0,\n- transparentOverlay: false,\n- overlayOnly: false\n- };\n-\n- expect(busyindicatorObj.settings).toEqual(settings);\n});\n- it('Should update settings via parameter', () => {\n- const settings = {\n- blockUI: false,\n- text: null,\n- displayDelay: 1000,\n- timeToComplete: 0,\n- transparentOverlay: false,\n- overlayOnly: false\n- };\n+ it('Should update text of busy indicator', () => {\n+ const buttonEl = $('#submit');\n+ buttonEl.click();\n+\n+ let customText = '';\n- busyindicatorObj.init();\n- busyindicatorObj.updated(settings);\n+ setTimeout(() => {\n+ customText = 'Custom Text';\n+ busyindicatorObj.updated({ text: customText });\n+ }, 1000);\n+\n+ setTimeout(() => {\n+ const customTextEl = $('.busy-indicator-container > span');\n- expect(busyindicatorObj.settings.blockUI).toEqual(settings.blockUI);\n+ expect(customTextEl.text()).toEqual(customText);\n+ }, 2000);\n+ });\n+\n+ it('Should return correct value for isActive', () => {\n+ const buttonEl = $('#submit');\n+ buttonEl.click();\n+\n+ setTimeout(() => {\n+ expect(busyindicatorObj.isActive()).toEqual(true);\n+ }, 1000);\n});\n});\n",
        "date": "13.09.2018 16:42:40",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Refactor BusyIndicator API functionality and update tests"
    },
    {
        "msg": "update checkRow function to use string value instead of actual value",
        "diff": "diff --git a/src/components/datagrid/datagrid.js b/src/components/datagrid/datagrid.js @@ -1701,7 +1701,7 @@ Datagrid.prototype = {\nisMatch = !(rowValueStr.indexOf(conditionValue) === 0 && rowValueStr !== '');\nbreak;\ncase 'is-empty':\n- isMatch = (rowValue === '');\n+ isMatch = (rowValueStr === '');\nbreak;\ncase 'is-not-empty':\nisMatch = (rowValue !== '');\n",
        "date": "26.09.2018 16:26:46",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Fix comparison logic for 'is-empty' condition in datagrid."
    },
    {
        "msg": "update test page",
        "diff": "diff --git a/app/views/components/autocomplete/test-beforeopen-event.html b/app/views/components/autocomplete/test-beforeopen-event.html <div class=\"row\">\n<div class=\"twelve columns\">\n+ <h2 class=\"fieldset-title\">Autocomplete Test: Before Open event</h2>\n+ </div>\n+</div>\n+\n+<div class=\"row\">\n+ <div class=\"twelve columns\">\n+ <div class=\"field\">\n+ This autocomplete will only allow searches with { at the start. All other searches will prevent the popup from showing up\n+ </div>\n<div class=\"field\">\n- <label for=\"autocomplete-default\">States</label>\n- <input type=\"text\" autocomplete=\"off\" class='autocomplete' data-options='{source: \"{{basepath}}api/states?term=\"}' placeholder=\"Type to Search\" id=\"autocomplete-default\">\n+ <label for=\"auto-template\">Users</label>\n+ <input class=\"autocomplete\" data-autocomplete=\"source\" data-init=\"false\" id=\"auto-template\" placeholder=\"Type to Search\" type=\"text\">\n+ </div>\n</div>\n</div>\n- <script>\n- $('#autocomplete-default').on('selected', function (e, elem, args) {\n- console.log(args);\n- }).on('beforeopen.autocomplete', function (e, elem) {\n+\n+<script id=\"test-scripts\">\n+ $('body').on('initialized', function() {\n+\n+ // Setup an alternate source for the templated Autocomplete.\n+ $('#auto-template').autocomplete({\n+ source: function (req, resp) {\n+ var data = [];\n+ data.push({ label: '{test1}'});\n+ data.push({ label: '{test2}'});\n+ data.push({ label: '{test3}'});\n+ data.push({ label: '{test4}'});\n+ data.push({ label: '{test5}'});\n+ data.push({ label: 'John Smith' });\n+ data.push({ label: 'Alex Mills' });\n+ data.push({ label: 'Steve Mills' });\n+ data.push({ label: 'Quincy Adams' });\n+ data.push({ label: 'Paul Thompson' });\n+ resp(req, data);\n+ }\n+ }).on('selected', function (e, anchor) {\n+ console.log('Changed to: ' + $(anchor).parent().attr('data-value'));\n+ });\n+\n+ $('#auto-default, #auto-template').on('beforeopen.autocomplete', function (e, elem) {\nconsole.log('beforeopen');\nif (elem.value.charAt(0) !== '{') {\nconsole.log('open');\n}\n});\n+ });\n</script>\n-</div>\n\\ No newline at end of file\n+\n\\ No newline at end of file\n",
        "date": "09.11.2018 14:01:44",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Add autocomplete functionality for users with before open event handling."
    },
    {
        "msg": "update html temp",
        "diff": "diff --git a/app/views/components/bar/test-axis-formatter.html b/app/views/components/bar/test-axis-formatter.html @@ -18,32 +18,30 @@ $('body').on('initialized', function () {\nvar dataset = [{\ndata: [\n// {'name': 'Lee Hogan', 'value': 1101061117},\n- {'name': 'Dan Barret', 'value': 1105272},\n- {'name': 'Ed Martinez', 'value': 773456},\n- {'name': 'Linda Walsh', 'value': 752648},\n- {'name': 'Cathy Hughes', 'value': 274582},\n- {'name': 'Kim Lee', 'value': 143623},\n- {'name': 'Derek Murray', 'value': 91783},\n- {'name': 'Manuel Fuentes', 'value': 79700},\n- {'name': 'Georgine Ekels', 'value': 79594},\n- {'name': 'Hans Stichler', 'value': 68719},\n- {'name': 'Rajeev Mitra', 'value': 41814},\n- {'name': 'Jean Grant', 'value': 14153},\n- {'name': 'Agnes Kumer', 'value': 11612},\n- {'name': 'Administrator', 'value': 10330},\n- {'name': 'Brian McNulty', 'value': 3812},\n- {'name': 'Ken Dryden', 'value': 0},\n- {'name': 'Lou Pizzutti', 'value': 0},\n- {'name': 'John Smith', 'value': 0}\n- ],\n- name: 'Sales By Employee'\n+ {'name': 'Dan Barret', 'abbrName': 'Dan Barret', 'shortName': 'Dan Barret', 'value': 1105272},\n+ {'name': 'Ed Martinez', 'abbrName': 'Ed Martinez', 'shortName': 'Ed Martinez', 'value': 773456},\n+ {'name': 'Linda Walsh', 'abbrName': 'Linda Walsh', 'shortName': 'Linda Walsh', 'value': 752648},\n+ {'name': 'Cathy Hughes', 'abbrName': 'Cathy Hughes', 'shortName': 'Cathy Hughes', 'value': 274582},\n+ {'name': 'Kim Lee', 'abbrName': 'Kim Lee', 'shortName': 'Kim Lee', 'value': 143623},\n+ {'name': 'Derek Murray', 'abbrName': 'Derek Murray', 'shortName': 'Derek Murray', 'value': 91783},\n+ {'name': 'Manuel Fuentes', 'abbrName': 'Manuel Fuentes', 'shortName': 'Manuel Fuentes', 'value': 79700},\n+ {'name': 'Georgine Ekels', 'abbrName': 'Georgine Ekels', 'shortName': 'Georgine Ekels', 'value': 79594},\n+ {'name': 'Hans Stichler', 'abbrName': 'Hans Stichler', 'shortName': 'Hans Stichler', 'value': 68719},\n+ {'name': 'Rajeev Mitra', 'abbrName': 'Rajeev Mitra', 'shortName': 'Rajeev Mitra', 'value': 41814},\n+ {'name': 'Jean Grant', 'abbrName': 'Jean Grant', 'shortName': 'Jean Grant', 'value': 14153},\n+ {'name': 'Agnes Kumer', 'abbrName': 'Agnes Kumer', 'shortName': 'Agnes Kumer', 'value': 11612},\n+ {'name': 'Administrator', 'abbrName': 'Administrator', 'shortName': 'Administrator', 'value': 10330},\n+ {'name': 'Brian McNulty', 'abbrName': 'Brian McNulty', 'shortName': 'Brian McNulty', 'value': 3812},\n+ {'name': 'Ken Dryden', 'abbrName': 'Ken Dryden', 'shortName': 'Ken Dryden', 'value': 0},\n+ {'name': 'Lou Pizzutti', 'abbrName': 'Lou Pizzutti', 'shortName': 'Lou Pizzutti', 'value': 0},\n+ {'name': 'John Smith', 'abbrName': 'John Smith', 'shortName': 'John Smith', 'value': 0}\n+ ]\n}];\n$('#bar-example').chart({\ntype: 'bar',\ndataset: dataset,\nshowLegend: false,\n- useLogScale: false,\nticks: {largeNumber: 10, mediumNumber: 5, smallNumber: 3, format: ',.1s'}});\n});\n",
        "date": "13.11.2018 20:25:34",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Refactor axis formatter in bar chart component"
    },
    {
        "msg": "update margin-left of images to 0px",
        "diff": "diff --git a/src/components/hierarchy/_hierarchy.scss b/src/components/hierarchy/_hierarchy.scss @@ -798,7 +798,7 @@ html[dir='rtl'] {\nimg,\n.image-placeholder {\nfloat: right;\n- margin-left: inherit;\n+ margin-left: 0px;\nmargin-right: 14px;\n}\n",
        "date": "16.01.2019 19:19:05",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Fix margin-left value in image placeholder styling"
    },
    {
        "msg": "update docs for publishing a nightly dev manually",
        "diff": "diff --git a/docs/PUBLISH.md b/docs/PUBLISH.md @@ -7,7 +7,8 @@ To do a dev release, publish a dated semver to npm.\n1. Make sure you are on `master` and its clean\n1. Change the `package.json` version to append the date, i.e. `4.7.0-dev.YYYYMMDD`\n1. Save the `package.json` file (**DO NOT** commit it)\n-1. `npm publish --tag=dev`\n+1. `npm run build && npm run zip-dist` to build\n+1. `npm publish --tag=dev` to publish\n1. Undo the version change/reset your branch\n## Production Release (tagged)\n",
        "date": "04.02.2019 12:51:22",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Add build step before publishing dev release"
    },
    {
        "msg": "update test to reflect new changes made to sample.",
        "diff": "diff --git a/test/components/hierarchy/hierarchy-stacked.e2e-spec.js b/test/components/hierarchy/hierarchy-stacked.e2e-spec.js @@ -48,7 +48,6 @@ describe('Hierarchy stacked layout', () => {\n// Go back\nawait element.all(by.css('.btn')).get(0).click();\nexpect(await element.all(by.css('.leaf')).count()).toEqual(3);\n- expect(await element.all(by.css('.btn-actions')).count()).toEqual(3);\nexpect(await element.all(by.css('.btn-collapse')).count()).toEqual(3);\n});\n",
        "date": "21.02.2019 09:39:07",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Remove unnecessary assertion in hierarchy-stacked.e2e-spec.js"
    },
    {
        "msg": "update hierarchy stacked test to match change to html",
        "diff": "diff --git a/test/components/hierarchy/hierarchy-stacked-api.func-spec.js b/test/components/hierarchy/hierarchy-stacked-api.func-spec.js @@ -33,7 +33,7 @@ describe('Hierarchy Stacked API', () => {\ntemplateId: 'hierarchyChartTemplate',\nlegendKey: 'employmentType',\nlegend: legendData,\n- dataset: data,\n+ dataset: [data],\nlayout: 'stacked'\n});\n",
        "date": "21.02.2019 18:33:45",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Refactor dataset to be an array in Hierarchy Stacked API."
    },
    {
        "msg": "update example page for before commit cell edit with datagrid",
        "diff": "diff --git a/app/views/components/datagrid/test-editable-before-commitcelledit.html b/app/views/components/datagrid/test-editable-before-commitcelledit.html +<div class=\"row\">\n+ <div class=\"twelve columns\">\n+ <button id=\"can-commit\" type=\"button\" class=\"btn-menu btn-secondary\">\n+ <span>Can Commit (<span id=\"can-commit-text\"></span>)</span>\n+ <svg class=\"icon\" focusable=\"false\" aria-hidden=\"true\" role=\"presentation\">\n+ <use xlink:href=\"#icon-dropdown\"></use>\n+ </svg>\n+ </button>\n+ <ul class=\"popupmenu is-selectable\">\n+ <li><a href=\"#\" data-value=\"true\">True</a></li>\n+ <li><a href=\"#\" data-value=\"false\">False</a></li>\n+ </ul>\n+ </div>\n+</div>\n<div class=\"row\">\n<div class=\"twelve columns\">\n</div>\n<script>\n- var gridApi = null;\n-\n$('body').one('initialized', function () {\n-\nLocale.set('en-US').done(function () {\n- var grid,\n- data = [],\n+\n+ var data = [],\ncolumns = [],\n//lookup data\n}\n};\n-\n// Some Sample Data\ndata.push({ id: 1, productId: 2142201, productName: 'Compressor', activity: '<svg/onload=alert(1)>', quantity: 1, price: 210.99, status: 'OK', orderDate: new Date(2016, 2, 15, 12, 30, 36), portable: false, action: 'ac', description: 'Compressor comes with various air compressor accessories, to help you with a variety of projects. All fittings are with 1/4 NPT connectors. The kit has an air blow gun that can be used for cleaning' });\ndata.push({ id: 2, productId: 2241202, productName: 'Different Compressor', activity: 'Inspect and Repair', quantity: 2, price: 210.991, status: '', orderDate: new Date(2016, 2, 15, 0, 30, 36), portable: false, action: 'oh', description: 'The kit has an air blow gun that can be used for cleaning' });\ncolumns.push({ id: 'price', name: 'Price', field: 'price', width: 125, align: 'right', formatter: Formatters.Decimal, numberFormat: { minimumFractionDigits: 3, maximumFractionDigits: 3 }, editor: Editors.Input, mask: '###.000' });\ncolumns.push({ id: 'orderDate', name: 'Order Date', field: 'orderDate', formatter: Formatters.Date, editor: Editors.Date5 });\n- // Toast message\n- var toast = function (message, timeout) {\n- $('body').toast({\n- title: '',\n- message: message || '',\n- timeout: timeout || 1000\n- });\n- };\n+ var canCommit = false;\n+ var canCommitBtn = $('#can-commit');\n+ var canCommitText = $('#can-commit-text');\n- // Message (Success or Error)\n- var message = function(options) {\n- var isError = options.type === 'error';\n- $('body').message({\n- title: '<span>'+ (isError ? 'Error' : 'Success') +'</span>',\n- status: isError ? 'error' : 'success',\n- returnFocus: $(this),\n- message: options.msg || '',\n- buttons: [{\n- text: 'Ok',\n- click: function() {\n- $(this).data('modal').close();\n- },\n- isDefault: true\n- }]\n+ // Set button default values\n+ var popupmenuApi = canCommitBtn.data('popupmenu');\n+ popupmenuApi.select($('[data-value=\"'+ canCommit +'\"]'));\n+ canCommitText.html(popupmenuApi.menu.find('.is-checked').text());\n+\n+ // Bind button\n+ canCommitBtn.on('selected', function (e, args) {\n+ canCommitText.html(args.text());\n+ canCommit = args.attr('data-value');\n});\n- };\n- const max = 3;\n- let index = 0;\n- //Init and get the api for the grid\n- grid = $('#datagrid').datagrid({\n+ // Init the grid\n+ $('#datagrid').datagrid({\ncolumns: columns,\ndataset: data,\neditable: true,\ntoolbar: { keywordFilter: true, results: true }\n- }).on('cellchange', function (e, args) {\n- console.log(e, args);\n- }).on('rowadd', function (e, args) {\n- console.log(e, args);\n- }).on('rowremove', function (e, args) {\n- console.log(e, args);\n- }).on('beforecommitcelledit', function (e, args) {\n- // index++;\n- // return index > max ? true : false;\n-\n- // Lazy loading\n- console.log('Begin: Before Commit Cell Edit');\n- var delay = 3000;\n- toast('Begin: Before Commit Cell Edit', delay);\n-\n- var deferred = $.Deferred();\n-\n- setTimeout(function() {\n- var shouldGoAhead = false;\n- if (shouldGoAhead) {\n- deferred.resolve();\n- } else {\n- deferred.reject();\n- message({ type: 'error', msg: 'Cell Edit Not Commited (row: '+ args.row +', cell: '+ args.cell +')' });\n- }\n- console.log('Complete: Before Commit Cell Edit');\n- }, delay);\n-\n- return deferred.promise();\n-\n+ })\n+ .on('beforecommitcelledit', function (e, args) {\n+ console.log({ canCommit }, args);\n+ return canCommit;\n});\n+\n});\n});\n-\n</script>\n",
        "date": "12.04.2019 14:47:32",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Add button to allow user to commit cell edits in datagrid"
    },
    {
        "msg": "update example page with another logic for before commit cell edit with datagrid",
        "diff": "diff --git a/app/views/components/datagrid/test-editable-before-commitcelledit.html b/app/views/components/datagrid/test-editable-before-commitcelledit.html -<div class=\"row\">\n- <div class=\"twelve columns\">\n- <button id=\"can-commit\" type=\"button\" class=\"btn-menu btn-secondary\">\n- <span>Can Commit (<span id=\"can-commit-text\"></span>)</span>\n- <svg class=\"icon\" focusable=\"false\" aria-hidden=\"true\" role=\"presentation\">\n- <use xlink:href=\"#icon-dropdown\"></use>\n- </svg>\n- </button>\n- <ul class=\"popupmenu is-selectable\">\n- <li><a href=\"#\" data-value=\"true\">True</a></li>\n- <li><a href=\"#\" data-value=\"false\">False</a></li>\n- </ul>\n- </div>\n-</div>\n-\n<div class=\"row\">\n<div class=\"twelve columns\">\n<div role=\"toolbar\" class=\"toolbar\">\ncolumns.push({ id: 'price', name: 'Price', field: 'price', width: 125, align: 'right', formatter: Formatters.Decimal, numberFormat: { minimumFractionDigits: 3, maximumFractionDigits: 3 }, editor: Editors.Input, mask: '###.000' });\ncolumns.push({ id: 'orderDate', name: 'Order Date', field: 'orderDate', formatter: Formatters.Date, editor: Editors.Date5 });\n+ // Edit mode\nvar canCommit = false;\n- var canCommitBtn = $('#can-commit');\n- var canCommitText = $('#can-commit-text');\n-\n- // Set button default values\n- var popupmenuApi = canCommitBtn.data('popupmenu');\n- popupmenuApi.select($('[data-value=\"'+ canCommit +'\"]'));\n- canCommitText.html(popupmenuApi.menu.find('.is-checked').text());\n-\n- // Bind button\n- canCommitBtn.on('selected', function (e, args) {\n- canCommitText.html(args.text());\n- canCommit = args.attr('data-value');\n- });\n-\n// Init the grid\n$('#datagrid').datagrid({\ntoolbar: { keywordFilter: true, results: true }\n})\n.on('beforecommitcelledit', function (e, args) {\n- console.log({ canCommit }, args);\n- return canCommit;\n+ // console.log(args);\n+ // return false;\n+ var targetCell = (args && args.target) ? args.target : null;\n+ var deferred = $.Deferred();\n+\n+ if (!canCommit) {\n+ canCommit = true;\n+\n+ $('body').message({\n+ title: 'Commit Edit',\n+ message: 'You are about to Commit Cell Edit<br>Would you like to proceed?',\n+ buttons: [{\n+ text: 'Yes',\n+ click: function(e, modal) {\n+ canCommit = true;\n+ deferred.resolve();\n+ modal.close();\n+ }\n+ }, {\n+ text: 'No',\n+ click: function(e, modal) {\n+ canCommit = false;\n+ deferred.reject();\n+ modal.close();\n+ },\n+ isDefault: true\n+ }]\n+ })\n+ .on('afterclose.message', (e) => {\n+ if (canCommit) {\n+ args.target.focus();\n+ }\n+ });\n+ }\n+\n+ return deferred.promise();\n});\n});\n",
        "date": "12.04.2019 17:14:08",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Refactor commit cell edit functionality and add confirmation dialog before committing."
    },
    {
        "msg": "update an example used in other places",
        "diff": "diff --git a/app/views/components/dropdown/example-icons.html b/app/views/components/dropdown/example-icons.html </div>\n<div class=\"field\">\n- <label for=\"example-colors\">Dropdown with Colors</label>\n- <select id=\"example-colors\" name=\"example-icon\" class=\"dropdown\">\n- <option value=\"opt-1\" data-icon=\"{icon: 'back-color', class: 'azure07-color'}\">Default</option>\n- <option value=\"opt-2\" data-icon=\"{icon: 'back-color', class: 'azure07-color'}\">Azure</option>\n- <option value=\"opt-3\" data-icon=\"{icon: 'back-color', class: 'amber07-color'}\">Amber</option>\n- <option value=\"opt-4\" data-icon=\"{icon: 'back-color', class: 'amethyst07-color'}\">Amethyst</option>\n- <option value=\"opt-4\" data-icon=\"{icon: 'back-color', class: 'turquoise07-color'}\">Turquoise</option>\n- <option value=\"opt-4\" data-icon=\"{icon: 'back-color', class: 'emerald07-color'}\">Emerald</option>\n- <option value=\"opt-4\" data-icon=\"{icon: 'back-color', class: 'ruby07-color'}\">Ruby</option>\n- <option value=\"opt-4\" data-icon=\"{icon: 'back-color', class: 'slate07-color'}\">Slate</option>\n- <option value=\"opt-4\" data-icon=\"{icon: 'back-color', class: 'graphite07-color'}\">Graphite</option>\n+ <div class=\"field\">\n+ <label for=\"example-colors\">Dropdown With Colors</label>\n+ <select id=\"example-colors\" name=\"example-colors\" class=\"dropdown\" data-init=\"false\">\n</select>\n</div>\n-\n+ </div>\n</div>\n</div>\n+\n+<script>\n+ $('body').on('initialized', function () {\n+ // Set up colors dropdown\n+ var colorsDropdown = $('#example-colors');\n+ var colors = Soho.theme.personalizationColors();\n+ var colorsHtml = '';\n+ for (color in colors) {\n+ colorsHtml += '<option data-icon=\"{icon: \\'swatch\\', class: \\'' + colors[color].backgroundColorClass +' swatch\\'}\" value=\"' + colors[color].id + '\" data-hex=\"' + colors[color].value + '\">'+ colors[color].name +'</option>';\n+ }\n+\n+ colorsDropdown.on('selected', function (e, args) {\n+ $('html').data('personalize').setColors(this.selectedOptions[0].getAttribute('data-hex'));\n+ //$('html').data('personalize').setTheme(this.selectedOptions[0].getAttribute('value'));\n+ }).html(colorsHtml).dropdown().val('azure').trigger('updated');\n+\n+ $('html').on('colorschanged', function (e, args) {\n+ console.log('colorschanged', args)\n+ });\n+ });\n+</script>\n",
        "date": "26.04.2019 10:31:46",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Refactor dropdown with colors to use personalization colors and add event listeners for color changes."
    },
    {
        "msg": "update focus on keydown with autocomplete",
        "diff": "diff --git a/src/components/popupmenu/popupmenu.js b/src/components/popupmenu/popupmenu.js @@ -1113,8 +1113,12 @@ PopupMenu.prototype = {\n}\n// Fix - not sure why, but firefox have to manualy trigger\n- if (self.isFirefox && isAutocomplete && key === 13) {\n+ if (self.isFirefox && isAutocomplete && !(/37|39|38|40/.test(key))) {\nself.element.triggerHandler(e);\n+ self.element[0].focus();\n+ const val = self.element[0].value;\n+ self.element[0].value = '';\n+ self.element[0].value = val;\n}\nreturn undefined;\n});\n",
        "date": "29.04.2019 13:07:09",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Fix issue with Firefox autocomplete triggering on key press."
    },
    {
        "msg": "update an e2e test for tree",
        "diff": "diff --git a/test/components/tree/tree.e2e-spec.js b/test/components/tree/tree.e2e-spec.js @@ -104,11 +104,11 @@ describe('Tree Ajax data tests', () => {\n});\nit('Should load Ajax data node on click', async () => {\n- expect(await element.all(by.css('.tree li')).count()).toBe(2);\n+ expect(await element.all(by.css('.tree li')).count()).toBe(3);\nawait element.all(by.css('.tree li.folder a[role=\"treeitem\"]')).first().click();\nawait browser.driver.sleep(2500);\n- expect(await element.all(by.css('.tree li')).count()).toBe(4);\n+ expect(await element.all(by.css('.tree li')).count()).toBe(5);\n});\n});\n",
        "date": "01.05.2019 12:13:42",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Increase tree node count on Ajax data load"
    },
    {
        "msg": "update the example to allow selection",
        "diff": "diff --git a/app/views/components/datagrid/test-modal-datagrid-single-column.html b/app/views/components/datagrid/test-modal-datagrid-single-column.html filterable: true,\nredrawOnResize: false,\nrowHeight: 'short',\n+ selectable: 'multiple',\ntoolbar: {title: 'Compressors', actions: true, rowHeight: true, personalize: true}\n});\n",
        "date": "13.05.2019 12:49:55",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Add multiple selection option and personalize toolbar in test modal datagrid single column view."
    },
    {
        "msg": "update the tolerance for a test",
        "diff": "diff --git a/test/components/toolbar-flex/toolbar-flex.e2e-spec.js b/test/components/toolbar-flex/toolbar-flex.e2e-spec.js @@ -47,7 +47,7 @@ describe('Flex toobar ajax tests', () => {\nbrowser.driver.manage().window().setSize(450, 1000);\nawait browser.driver.sleep(config.sleep);\n- expect(await browser.protractorImageComparison.checkElement(flexToolbarEl, 'flextool-index')).toBeLessThan(0.35);\n+ expect(await browser.protractorImageComparison.checkElement(flexToolbarEl, 'flextool-index')).toBeLessThan(1);\nawait element(await by.css('button.btn-actions')).click();\nawait browser.driver.sleep(config.sleep);\n",
        "date": "13.05.2019 14:29:33",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Adjust image threshold in toolbar-flex.e2e-spec.js test"
    },
    {
        "msg": "update change log for swedish translation",
        "diff": "diff --git a/docs/CHANGELOG.md b/docs/CHANGELOG.md - `[Personalization]` Added several form examples with buttons and completion chart that can be personalized. ([#1963](https://github.com/infor-design/enterprise/issues/1963))\n- `[Personalization]` Added an example of normal tabs behaving like header tabs in a personalized area. ([#1962](https://github.com/infor-design/enterprise/issues/1962))\n- `[Popupmenu]` Fixed an issue where disabled submenus were opening on mouseover. ([#1863](https://github.com/infor-design/enterprise/issues/1863))\n+- `[Timepicker]` Updated the Swedish translation for Set Time. ([#2153](https://github.com/infor-design/enterprise/issues/2153))\n- `[Tree]` Fixed an issue where children property null was breaking tree to not render. ([#1908](https://github.com/infor-design/enterprise/issues/1908))\n### v4.19.0 Chores & Maintenance\n",
        "date": "17.05.2019 14:40:44",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "[Timepicker] Updated Swedish translation for Set Time."
    },
    {
        "msg": "update `CHANGELOG.md` with info about and",
        "diff": "diff --git a/docs/CHANGELOG.md b/docs/CHANGELOG.md - `[Modal]` Fixed memory leak issues after destroy. ([#2497](https://github.com/infor-design/enterprise/issues/2497))\n- `[Slider]` Updated the color variant logic to match new uplift theming. ([#2647](https://github.com/infor-design/enterprise/issues/2647))\n- `[Toast]` Fixed memory leak issues after destroy. ([#2634](https://github.com/infor-design/enterprise/issues/2634))\n+- `[Uplift Theme]` Various improvements to the Dark/Contrast variants, with a focus on passing WCAG ([#2541](https://github.com/infor-design/enterprise/issues/2541)) ([#2588](https://github.com/infor-design/enterprise/issues/2588))\n### v4.21.0 Chores & Maintenance\n",
        "date": "29.08.2019 13:56:54",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Fix memory leak in Modal and Toast components, update Slider color variant logic, and improve Dark/Contrast variants in Uplift Theme. (#2497, #2647, #2634, #2541, #2588)"
    },
    {
        "msg": "update ESLint version",
        "diff": "diff --git a/package.json b/package.json \"mdlint\": \"npm run mdlint:docs && npm run mdlint:src\",\n\"mdlint:docs\": \"npx markdownlint docs/ && npx markdownlint README.md\",\n\"mdlint:src\": \"npx markdownlint src --config=src/.markdownlintrc\",\n- \"eslint\": \"npm run build:icons && npm run build:colors && npx eslint -c src/.eslintrc.js src test\",\n- \"eslint:log\": \"npm run build:icons && npm run build:colors && npx eslint -c src/.eslintrc.js src test -o eslint.log\",\n- \"eslint:error-only\": \"npm run build:icons && npm run build:colors && npx eslint -c src/.eslintrc.js --quiet src test\",\n+ \"eslint\": \"npm run build:icons && npm run build:colors && npx eslint src test app\",\n+ \"eslint:log\": \"npm run build:icons && npm run build:colors && npx eslint -o eslint.log src test app\",\n+ \"eslint:error-only\": \"npm run build:icons && npm run build:colors && npx eslint --quiet src test app\",\n\"lint:ci\": \"npm run eslint:error-only && npm run mdlint && npm run stylelint\",\n\"minify\": \"node ./scripts/minify.js\",\n\"functional:local\": \"npx karma start test/karma.conf.js\",\n\"csurf\": \"^1.9.0\",\n\"del\": \"^4.1.0\",\n\"documentation\": \"^5.3.5\",\n- \"eslint\": \"^4.19.1\",\n+ \"eslint\": \"^6.5.1\",\n\"eslint-config-airbnb-base\": \"^12.1.0\",\n\"eslint-plugin-compat\": \"^3.1.1\",\n\"eslint-plugin-import\": \"^2.17.1\",\n",
        "date": "16.10.2019 15:31:37",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Update eslint version to 6.5.1 and adjust eslint scripts to include 'app' directory."
    },
    {
        "msg": "update dirty cell after remove row with datagrid",
        "diff": "diff --git a/src/components/datagrid/datagrid.js b/src/components/datagrid/datagrid.js @@ -569,8 +569,10 @@ Datagrid.prototype = {\nthis.restoreDirtyRows();\nif (this.settings.selectable) {\n+ if (!this.settings.groupable && (this.settings.groupable && this.originalDataset)) {\nthis.syncDatasetWithSelectedRows();\n}\n+ }\nthis.preventSelection = true;\nif (!noSync) {\n",
        "date": "15.11.2019 15:08:28",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Fix issue with selectable rows not syncing with dataset when groupable is enabled"
    },
    {
        "msg": "update border color on hover",
        "diff": "diff --git a/src/components/homepage/homepage.js b/src/components/homepage/homepage.js @@ -158,7 +158,7 @@ Homepage.prototype = {\n.on('dragstart.handle', (event) => {\nevent.preventDefault();\ncard.addClass(\"ui-resize-passive\");\n- card.css({ borderColor: '#078cd9', opacity: 0.9, zIndex: 90 });\n+ card.css({ opacity: 0.9, zIndex: 90 });\n$(window)\n.on('mousemove.handle', (event) => {\nlet width = event.clientX - card.offset().left;\n@@ -186,7 +186,7 @@ Homepage.prototype = {\n}\n$(\".ui-resizable-handle\").remove();\n- card.css({ borderColor: '#bdbdbd', opacity: 1, width: \"\" });\n+ card.css({ opacity: 1, width: \"\" });\nhomepage.refresh(false);\n})\n})\n@@ -195,7 +195,7 @@ Homepage.prototype = {\n.on('dragstart.handle', (event) => {\nevent.preventDefault();\ncard.addClass(\"ui-resize-passive\");\n- card.css({ borderColor: '#078cd9', opacity: 0.9, zIndex: 90 });\n+ card.css({ opacity: 0.9, zIndex: 90 });\n$(window)\n.on('mousemove.handle', (event) => {\nlet height = event.clientY - card.offset().top;\n@@ -219,19 +219,21 @@ Homepage.prototype = {\n}\n$(\".ui-resizable-handle\").remove();\n- card.css({borderColor: '#bdbdbd', opacity: 1, height: \"\" });\n+ card.css({ opacity: 1, height: \"\" });\nhomepage.refresh(false);\n})\n});\nif(card.has(\".ui-resizable-handle\").length === 0){\ncard.append(eastHandle, southHandle);\n}\n+ card.css({border: '1px solid #078cd9'});\n})\n.on('mouseleave.card', function () {\nconst card = $(this);\nif (!card.hasClass(\"ui-resize-passive\")) {\n$(\".ui-resizable-handle\").remove();\n}\n+ card.css({border: '1px solid #bdbdbd'});\n})\n.on('dragstart.card', function () {\nconst card = $(this);\n",
        "date": "05.03.2020 15:51:48",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Refactor card border styling in homepage.js"
    },
    {
        "msg": "update variable names in example",
        "diff": "diff --git a/app/views/components/homepage/example-editable.html b/app/views/components/homepage/example-editable.html }\n});\n$('.homepage')\n- .on('resizecard', function(event, columns, data){ console.log(\"resizecard event: \", [columns, data])})\n- .on('reordercard', function(event, columns, data){ console.log(\"reordercard event: \", [columns, data])})\n- .on('removecard', function(event, columns, data){ console.log(\"removecard event: \", [columns, data])});\n+ .on('resizecard', function(event, card, data){ console.log(\"resizecard event: \", [card, data])})\n+ .on('reordercard', function(event, card, data){ console.log(\"reordercard event: \", [card, data])})\n+ .on('removecard', function(event, card, data){ console.log(\"removecard event: \", [card, data])});\n</script>\n\\ No newline at end of file\n",
        "date": "23.03.2020 14:43:02",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Refactor event listeners in homepage component to include card parameter in callbacks"
    },
    {
        "msg": "update example page",
        "diff": "diff --git a/app/views/components/homepage/example-editable.html b/app/views/components/homepage/example-editable.html }\n});\n$('.homepage')\n- .on('resizecard', function(event, card, data){ console.log(\"resizecard event: \", [card, data])})\n- .on('reordercard', function(event, card, data){ console.log(\"reordercard event: \", [card, data])})\n- .on('removecard', function(event, card, data){ console.log(\"removecard event: \", [card, data])});\n+ .on('resizecard', function(event, card, data){ console.log(\"Homepage: resizecard event: \", [card, data])})\n+ .on('reordercard', function(event, card, data){ console.log(\"Homepage: reordercard event: \", [card, data])})\n+ .on('removecard', function(event, card, data){ console.log(\"Homepage: removecard event: \", [card, data])});\n+ $('.widget')\n+ .on('resizecard', function(event, card, data){ console.log(\"Widget: resizecard event: \", [card, data])})\n+ .on('reordercard', function(event, card, data){ console.log(\"Widget: reordercard event: \", [card, data])})\n+ .on('removecard', function(event, card, data){ console.log(\"Widget: removecard event: \", [card, data])});\n</script>\n\\ No newline at end of file\n",
        "date": "20.05.2020 18:05:46",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Refactor event listeners in homepage example-editable.html"
    },
    {
        "msg": "update change log regarding changes made to issue",
        "diff": "diff --git a/docs/CHANGELOG.md b/docs/CHANGELOG.md - `[Vertical Tabs]` Fixed an issue where the error icon was misaligning. ([#873](https://github.com/infor-design/enterprise-ng/issues/873))\n- `[Popupmenu]` Fixed a minor issue with the shortcut text on small breakpoints. ([#3984](https://github.com/infor-design/enterprise/issues/3984))\n- `[Splitter]` Fixes an issue where the collapse button was not working when splitter is on the right. ([#1730](https://github.com/infor-design/enterprise-ng/issues/1730))\n+- `[Personalize]` Fixed an issue regarding the layout and scroll ability of a page. ([#3330](https://github.com/infor-design/enterprise/issues/3330))\n## v4.31.0\n",
        "date": "07.08.2020 18:09:51",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Fix layout and scroll issue in Personalize feature (#3330)"
    },
    {
        "msg": "update textarea API settings",
        "diff": "diff --git a/test/components/textarea/textarea-settings.func-spec.js b/test/components/textarea/textarea-settings.func-spec.js @@ -34,7 +34,8 @@ describe('Textarea API', () => {\nmaxLength: null,\nprintable: true,\ncharRemainingText: null,\n- charMaxText: null\n+ charMaxText: null,\n+ attributes: null\n};\nexpect(textareaObj.settings).toEqual(settings);\n@@ -48,7 +49,8 @@ describe('Textarea API', () => {\nmaxLength: null,\nprintable: true,\ncharRemainingText: null,\n- charMaxText: null\n+ charMaxText: null,\n+ attributes: null\n};\ntextareaObj.updated(settings);\n",
        "date": "20.10.2020 20:02:44",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Add attributes property to textarea settings对象"
    },
    {
        "msg": "update docs to account for `attributes` setting",
        "diff": "diff --git a/src/components/tabs/readme.md b/src/components/tabs/readme.md @@ -171,7 +171,9 @@ You can add custom attributes/automation id's that can be used for scripting to\n</div>\n```\n-Additionally, when using the `add()` API method, it's possible to pass an `attributes` object as part of the settings array that will append any additional attributes needed:\n+The Tabs API also supports an `attributes` setting, similar to other IDS components, which allows for passing attributes to all pre-existing tabs, the more tabs button, the add-tabs (+) button, and the App Menu trigger button on Module Tabs instances.\n+\n+Additionally, when using the `add()` API method, the `attributes` setting will be respected when adding tabs. Also, it's possible to pass another `attributes` object as part of the settings array that will append new attributes specifically to the new tab:\n```js\nconst api = $('#my-tabs').data('tabs');\n",
        "date": "21.10.2020 16:39:04",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Update Tabs API to support attributes setting and add new tab attributes"
    },
    {
        "msg": "update func settings",
        "diff": "diff --git a/test/components/spinbox/spinbox-settings.func-spec.js b/test/components/spinbox/spinbox-settings.func-spec.js @@ -36,7 +36,8 @@ describe('Spinbox settings', () => {\nmin: 0,\nmax: 10,\nstep: null,\n- maskOptions: null\n+ maskOptions: null,\n+ attributes: null\n};\nsettings.min = 0; // example initializes with data-options\n@@ -51,7 +52,8 @@ describe('Spinbox settings', () => {\nmin: 10,\nmax: 20,\nstep: null,\n- maskOptions: null\n+ maskOptions: null,\n+ attributes: null\n};\nspinboxApi.updated();\n@@ -82,7 +84,8 @@ describe('Spinbox settings', () => {\nmin: 0,\nmax: 10,\nstep: null,\n- maskOptions: null\n+ maskOptions: null,\n+ attributes: null\n};\nexpect(spinboxApi.settings).toEqual(settings);\n",
        "date": "24.10.2020 02:10:39",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Add attributes field to Spinbox settings"
    },
    {
        "msg": "update fixed lint errors",
        "diff": "diff --git a/src/components/validation/validation.js b/src/components/validation/validation.js @@ -123,7 +123,6 @@ function ValidationRules() {\nlet dtApi = null;\nif (field && field.data('datepicker')) {\ndtApi = field.data('datepicker');\n- console.log(dtApi.settings.showTime)\nif (dtApi.settings.showTime) {\nthis.message = Locale.translate('InvalidDateTime');\n}\n",
        "date": "15.03.2021 10:37:02",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Remove console log statement in ValidationRules function"
    },
    {
        "msg": "update array and destroy fn just to remove classList from array",
        "diff": "diff --git a/src/components/charts/charts.js b/src/components/charts/charts.js @@ -7,82 +7,8 @@ import { theme } from '../theme/theme';\nconst charts = {};\ncharts.destroy = function destroy(el) {\n- const e = el[0] === undefined ? window.document.getElementsByClassName('chart-container')[0] : el[0];\n- const chartClasses = [\n- {\n- chart: {\n- type: 'area',\n- containerClass: ['line-chart']\n- }\n- },\n- {\n- chart: {\n- type: 'bar',\n- containerClass: ['bar-chart', 'bar-chart-stacked']\n- }\n- },\n- {\n- chart: {\n- type: 'bar-grouped',\n- containerClass: ['bar-chart', 'bar-chart-grouped']\n- }\n- },\n- {\n- chart: {\n- type: 'bar-stacked',\n- containerClass: ['bar-chart', 'bar-chart-stacked']\n- }\n- },\n- {\n- chart: {\n- type: 'bubble',\n- containerClass: ['line-chart', 'bubble']\n- }\n- },\n- {\n- chart: {\n- type: 'column',\n- containerClass: ['column-chart']\n- }\n- },\n- {\n- chart: {\n- type: 'column-grouped',\n- containerClass: ['column-chart']\n- }\n- },\n- {\n- chart: {\n- type: 'completion-target',\n- containerClass: ['completion-chart', 'chart-completion-target-padding']\n- }\n- },\n- {\n- chart: {\n- type: 'donut',\n- containerClass: ['chart-pie', 'has-right-legend']\n- }\n- },\n- {\n- chart: {\n- type: 'line',\n- containerClass: ['line-chart']\n- }\n- },\n- {\n- chart: {\n- type: 'column-positive-negative',\n- containerClass: ['column-chart']\n- }\n- },\n- {\n- chart: {\n- type: 'sparkline-dots-n-peak',\n- containerClass: []\n- }\n- },\n- ];\n- chartClasses.forEach(arrItem => e.classList.remove(...arrItem.chart.containerClass));\n+ const chartClasses = ['line-chart', 'bar-chart', 'bar-chart-stacked', 'bar-chart-grouped', 'bubble', 'column-chart', 'completion-chart', 'chart-completion-target-padding', 'chart-pie', 'has-right-legend'];\n+ el[0]?.classList.remove(...chartClasses);\n};\n// Reference to the tooltip\n",
        "date": "19.03.2021 17:02:51",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Refactor chart destruction logic in charts.js"
    },
    {
        "msg": "update ids for multiselect",
        "diff": "diff --git a/src/components/cards/cards.js b/src/components/cards/cards.js @@ -160,8 +160,15 @@ Cards.prototype = {\n}\nif (this.settings.selectable === 'multiple') {\n- utils.addAttributes(this.cards.find('.card-content .checkbox-label'), this, this.settings.attributes, 'checkbox-label', true);\n- utils.addAttributes(this.cards.find('.card-content .checkbox'), this, this.settings.attributes, 'checkbox', true);\n+ const self = this;\n+ setTimeout(() => {\n+ const options = this.cards.find('.card');\n+ options.each(function (i) {\n+ const opt = $(this);\n+ utils.addAttributes(opt.find('.checkbox-label'), self, self.settings.attributes, `checkbox-label-${i}`, true);\n+ utils.addAttributes(opt.find('.card-content .checkbox'), self, self.settings.attributes, `checkbox-${i}`, true);\n+ })\n+ }, 1);\n}\nreturn this;\n",
        "date": "20.07.2021 19:46:15",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Refactor checkbox label and checkbox attribute assignment in Cards component"
    },
    {
        "msg": "update change log with new changes and order fix",
        "diff": "diff --git a/docs/CHANGELOG.md b/docs/CHANGELOG.md - `[ContextualActionPanel]` Added `title` prop in CAP to control the title via `modaSettings`, and added missing `beforeclose` event. ([NG#1048](https://github.com/infor-design/enterprise-ng/issues/1048))\n- `[Datagrid]` - Fixed a bug where the first two columns row heights did not match the others for the Medium setting ([#5366](https://github.com/infor-design/enterprise/issues/5366))\n- `[Datepicker]` Fixed a bug where the -/+ keys were not detected in datepicker. ([#5353](https://github.com/infor-design/enterprise/issues/5353))\n+-`[Datagrid]` Fixed a bug where the font color on tags was black when a row was hovered over in dark mode. Font color now white. ([#5289](https://github.com/infor-design/enterprise/issues/5289))\n- `[Donut]` Changed legend design when item exceeds maximum width of chart. ([#5292](https://github.com/infor-design/enterprise/issues/5292))\n- `[Dropdown]` Fixed a bug where backspace in Dropdown is not working when pressed. ([#5113](https://github.com/infor-design/enterprise/issues/5113))\n- `[Icon]` Changed button icon colors to slate6 ([#5307](https://github.com/infor-design/enterprise/issues/5307))\n- `[Monthview]` Fixed a bug where a vertical scroll is showing when it is unnecessary. ([#5350](https://github.com/infor-design/enterprise/issues/5350))\n- `[Multiselect]` Fixed a regression bug where clear icon were not properly aligned on compact mode. ([#5396](https://github.com/infor-design/enterprise/issues/5396))\n- `[Popdown]` Remove deprecation console warning. We still consider this component deprecated but will not remove until 5.0 version. The warning was only removed for now. ([#1070](https://github.com/infor-design/enterprise-ng/issues/1070))\n--`[Datagrid]` Fixed a bug where the font color on tags was black when a row was hovered over in dark mode. Font color now white. ([#5289](https://github.com/infor-design/enterprise/issues/5289))\n+- `[Personalize]` Added css to remove color gradient on overflowing horizontal tab headers. fix is limited to personalize styling ([#5303](https://github.com/infor-design/enterprise/issues/5303))\n### v4.54.0 Markup Changes\n",
        "date": "20.07.2021 15:38:43",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Fix various bugs and make improvements in different components."
    },
    {
        "msg": "update toolbar flex tabbing updated the flex toolbar to respect the allowTabs property assignment",
        "diff": "diff --git a/src/components/toolbar-flex/toolbar-flex.js b/src/components/toolbar-flex/toolbar-flex.js @@ -372,8 +372,12 @@ ToolbarFlex.prototype = {\n}\nfor (let i = 0; i < this.items.length; i++) {\n+ if (this.items[i].settings.allowTabs) {\n+ this.items[i].focused = true;\n+ } else {\nthis.items[i].focused = false;\n}\n+ }\nitem.focused = true;\nthis.trueFocusedItem = item;\n},\n",
        "date": "28.07.2021 09:04:28",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "\"Set focused state based on allowTabs settings in toolbar items\""
    },
    {
        "msg": "update changelog forgot to include change log update",
        "diff": "diff --git a/docs/CHANGELOG.md b/docs/CHANGELOG.md - `[Multiselect]` Fixed a regression bug where clear icon were not properly aligned on compact mode. ([#5396](https://github.com/infor-design/enterprise/issues/5396))\n- `[Personalize]` Added css to remove color gradient on overflowing horizontal tab headers. fix is limited to personalize styling ([#5303](https://github.com/infor-design/enterprise/issues/5303))\n- `[Popdown]` Remove deprecation console warning. We still consider this component deprecated but will not remove until 5.0 version. The warning was only removed for now. ([#1070](https://github.com/infor-design/enterprise-ng/issues/1070))\n+- `[ToolbarFlex]` updated logic to account for the AllowTabs property and set toolbar items with a tab-index of 0 when allowTabs is ture ([#5387](https://github.com/infor-design/enterprise/issues/5387))\n### v4.54.0 Markup Changes\n",
        "date": "28.07.2021 11:54:05",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Fix alignment issue in Multiselect clear icon and update ToolbarFlex logic for AllowTabs property."
    },
    {
        "msg": "update log for more information",
        "diff": "diff --git a/docs/CHANGELOG.md b/docs/CHANGELOG.md - `[Calendar]` Fix on overlap in today text and calendar view changer when in mobile. ([#5438](https://github.com/infor-design/enterprise/issues/5438))\n- `[Charts]` Fixed a bug where automation ids is not properly rendered on legend, text and slices. ([#5441](https://github.com/infor-design/enterprise/issues/5441))\n-- `[Datagrid]` Fixed a bug where the checkbox overlaps with the label when `editorOptions.multiple` is set to true. ([NG#1075](https://github.com/infor-design/enterprise-ng/issues/1075))\n+- `[Datagrid]` Fixed a bug where the checkbox overlaps with the label when `editorOptions.multiple` is set to true. Also added formatters and editor for multiselect. ([NG#1075](https://github.com/infor-design/enterprise-ng/issues/1075))\n- `[Datagrid]` Fixed an issue where tree list indentation is not left aligned when row has no children and datagrid row height is extra small or small. ([#5487](https://github.com/infor-design/enterprise/issues/5487))\n- `[Datagrid]` Fixed an issue where tree list indentation is not left aligned when row has no children and datagrid row height is extra small or small. ([#5487](https://github.com/infor-design/enterprise/issues/5487))\n- `[Message]` Added maxWidth setting to allow message to go full width when title is long. ([#5443](https://github.com/infor-design/enterprise/issues/5443))\n",
        "date": "24.08.2021 05:29:35",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Fix bugs and add features in Calendar, Charts, Datagrid, and Message components."
    },
    {
        "msg": "update the log",
        "diff": "diff --git a/docs/CHANGELOG.md b/docs/CHANGELOG.md ## v4.56.0 Features\n- `[Charts]` Added ability to disable the selection of the charts including the legend. ([#2736](https://github.com/infor-design/enterprise/issues/2736))\n+\n## v4.56.0 Fixes\n- `[Dropdown]` Fixed disabling of function keys F1 to F12. ([#4976](https://github.com/infor-design/enterprise/issues/4976))\n",
        "date": "13.09.2021 18:05:00",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Add ability to disable chart selection and fix disabling of function keys F1 to F12."
    },
    {
        "msg": "update chrome driver that will fix e2e to work",
        "diff": "diff --git a/package.json b/package.json \"e2e:local:debug\": \"npm run webdriver:update && npx protractor test/protractor.local.debug.conf.js\",\n\"e2e:puppeteer\": \"npx --no-install jest --config=test/jest.config.js --runInBand --detectOpenHandles --forceExit\",\n\"webdriver:clean\": \"npx webdriver-manager clean\",\n- \"webdriver:update\": \"npx webdriver-manager update --versions.chrome 92.0.4515.43 --standalone false --quiet --gecko=false\",\n+ \"webdriver:update\": \"npx webdriver-manager update --standalone false --quiet --gecko=false\",\n\"zip-dist\": \"npx grunt zip-dist\",\n\"documentation\": \"node ./scripts/deploy-documentation.js\",\n\"release:dev\": \"node scripts/publish-nightly-manual\",\n\"node-version-check\": \"npx check-node-version --node 12\",\n\"node-updates-check\": \"npx ncu\"\n},\n- \"chrome-version\": \"92\",\n+ \"chrome-version\": \"94\",\n\"dependencies\": {\n\"d3\": \"^5.16.0\",\n\"jquery\": \"^3.6.0\",\n",
        "date": "29.09.2021 11:31:06",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Update Chrome version to 94 and remove specific version in webdriver update command"
    },
    {
        "msg": "update monthview for dst",
        "diff": "diff --git a/src/components/monthview/monthview.js b/src/components/monthview/monthview.js @@ -346,10 +346,8 @@ MonthView.prototype = {\nconst dayMilliseconds = 60 * 60 * 24 * 1000;\nconst rangeStart = new Date(this.settings.displayRange.start);\nconst originalEnd = new Date(this.settings.displayRange.end);\n- // add one more day to make the last day inclusive\n- const inclusiveEnd = new Date(originalEnd.getTime() + dayMilliseconds);\nconst leadDays = dateUtils.firstDayOfWeek(rangeStart);\n- const numberOfWeeks = Math.ceil((inclusiveEnd - leadDays) / (7 * dayMilliseconds));\n+ const numberOfWeeks = Math.ceil((originalEnd - leadDays) / (7 * dayMilliseconds));\nthis.settings.showMonthYearPicker = false;\nthis.settings.inPage = stringUtils.toBoolean(this.settings.inPage);\nif (this.settings.inPage) {\n",
        "date": "29.09.2021 09:16:25",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Refactor calculation of number of weeks in MonthView"
    },
    {
        "msg": "update test page for comparison",
        "diff": "diff --git a/app/views/components/checkboxes/example-checkboxes-with-hitboxes.html b/app/views/components/checkboxes/example-checkboxes-with-hitboxes.html </div>\n<div class=\"row top-padding\">\n<div class=\"six columns\">\n+ <h2 class=\"section-title\">With Hitbox</h2>\n<form id=\"test-form\">\n<div class=\"field\">\n<input type=\"checkbox\" class=\"checkbox\" id=\"starts-nolabel-checked\" checked />\n</form>\n</div>\n+\n+ <div class=\"six columns\">\n+ <h2 class=\"section-title\">Without Hitbox</h2>\n+ <form id=\"test-form-2\">\n+ <div class=\"field\">\n+ <input type=\"checkbox\" class=\"checkbox\" id=\"starts-nolabel-checked-2\" checked />\n+ <label for=\"starts-nolabel-checked-2\" class=\"checkbox-label hitbox-style\"><span class=\"audible\">Checked</span></label>\n+ </div>\n+ <div class=\"field\">\n+ <input type=\"checkbox\" class=\"checkbox\" name=\"checkbox1-normal\" id=\"checkbox1-normal\" />\n+ <label for=\"checkbox1-normal\" class=\"checkbox-label hitbox-style\">Unchecked</label>\n+ </div>\n+\n+ <div class=\"field\">\n+ <input type=\"checkbox\" class=\"checkbox\" id=\"checkbox2-normal\" checked=\"true\" />\n+ <label for=\"checkbox2-normal\" class=\"checkbox-label hitbox-style\">Checked</label>\n+ </div>\n+\n+ <div class=\"field\">\n+ <input type=\"checkbox\" data-trackdirty=\"true\" class=\"checkbox\" id=\"checkbox3-normal\" />\n+ <label for=\"checkbox3-normal\" class=\"checkbox-label hitbox-style\" checked>Dirty tracking</label>\n+ </div>\n+\n+ <div class=\"field\">\n+ <input type=\"checkbox\" class=\"checkbox\" id=\"checkbox4-normal\" disabled=\"true\" />\n+ <label for=\"checkbox4-normal\" class=\"checkbox-label hitbox-style\">Disabled and unchecked</label>\n+ </div>\n+\n+ <div class=\"field\">\n+ <input type=\"checkbox\" class=\"checkbox\" id=\"checkbox5-normal\" disabled=\"true\" checked=\"true\" />\n+ <label for=\"checkbox5-normal\" class=\"checkbox-label hitbox-style\">Disabled and checked</label>\n+ </div>\n+\n+ <div class=\"field\">\n+ <input type=\"checkbox\" aria-checked=\"mixed\" class=\"checkbox partial\" checked=\"true\" id=\"checkbox8-normal\" />\n+ <label for=\"checkbox8-normal\" class=\"checkbox-label hitbox-style\"><span class=\"audible\">Partial (not\n+ accessible)</span>Partial</label>\n+ </div>\n+\n+ <div class=\"field\">\n+ <input type=\"checkbox\" class=\"checkbox error\" id=\"checkbox9-normal\" />\n+ <label for=\"checkbox9-normal\" class=\"checkbox-label hitbox-style\">Error</label>\n+ </div>\n+\n+\n+ <div class=\"field\">\n+ <input type=\"checkbox\" class=\"checkbox\" name=\"checkbox10-normal\" id=\"checkbox10-normal\" data-validate=\"required\" />\n+ <label for=\"checkbox10-normal\" class=\"checkbox-label hitbox-style\">Required<span class=\"required\"\n+ aria-hidden=\"true\"></span></label>\n+ </div>\n+\n+ <div class=\"field\">\n+ <input type=\"checkbox\" class=\"checkbox\" name=\"checkbox11-normal\" id=\"checkbox11-normal\" data-validate=\"required\" />\n+ <label for=\"checkbox11-normal\" class=\"checkbox-label hitbox-style required\">Required (No indicator)</label>\n+ </div>\n+ </form>\n+\n+ </div>\n</div>\n\\ No newline at end of file\n",
        "date": "13.10.2021 22:56:01",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Add checkboxes with hitboxes and labels for better user interaction. Include examples of checked, unchecked, disabled, error, and required checkboxes."
    },
    {
        "msg": "update the template of toolbar flex with categories",
        "diff": "diff --git a/app/views/components/header/example-toolbar-flex-with-categories.html b/app/views/components/header/example-toolbar-flex-with-categories.html <div class=\"toolbar-section search-categories search flex-grow-2\">\n<div class=\"searchfield-wrapper\">\n<label class=\"audible\" for=\"maincontent\"></label>\n- <input id=\"maincontent2\" data-init=\"false\" class=\"searchfield context\" placeholder=\"Search for a Product\" data-options=\"{ clearable: true }\" />\n+ <input id=\"maincontent\" data-init=\"false\" class=\"searchfield context\" placeholder=\"Search for a Product\" data-options=\"{ clearable: true }\" />\n</div>\n</div>\n<div class=\"toolbar-section buttonset flex-grow-1 flex-end\">\n",
        "date": "17.12.2021 01:42:03",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Fix search input id in example-toolbar-flex-with-categories.html"
    },
    {
        "msg": "update the locale exemptions",
        "diff": "diff --git a/src/components/tabs/tabs.js b/src/components/tabs/tabs.js @@ -129,7 +129,7 @@ Tabs.prototype = {\nconst self = this;\nlet tabPanelContainer;\nlet moveTabPanelContainer = false;\n- const localeExemptions = ['en-US', 'de-DE', 'fr-FR', 'ja-JP', 'zh-CN', 'zh-Hans', 'zh-tw', 'zh-Hant'];\n+ const localeExemptions = ['en-US', 'de-DE', 'ja-JP', 'zh-CN', 'zh-Hans', 'zh-TW', 'zh-Hant'];\n// Check for a tab panel container immediately after the `.tab-container`\n// element (default as of IDS Enterprise 4.3.0)\n",
        "date": "22.12.2021 11:17:06",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Update localeExemptions array to include 'zh-TW' instead of 'zh-tw'"
    },
    {
        "msg": "update the test oage",
        "diff": "diff --git a/app/views/components/cards/example-actionable.html b/app/views/components/cards/example-actionable.html <button class=\"btn card\" type=\"button\" id=\"actionable-btn-3\">Change Department</button>\n<button class=\"btn card\" type=\"button\" id=\"actionable-btn-4\">Change Project</button>\n<button class=\"btn card\" type=\"button\" id=\"actionable-btn-5\">Change Time Code</button>\n- <hr />\n- <br />\n<button class=\"btn card\" type=\"button\" id=\"actionable-btn-6\">View Clock Transactions</button>\n- <a href=\"#\" class=\"btn card\" type=\"button\" id=\"actionable-btn-7\">View Clock Transactions</a>\n+ <a href=\"#\" class=\"btn card\" type=\"button\" id=\"actionable-btn-7\">Change Level</a>\n</div>\n</div>\n",
        "date": "19.01.2022 00:29:15",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Refactor actionable buttons in example card view"
    },
    {
        "msg": "update changelog edit spinbox ticket number",
        "diff": "diff --git a/docs/CHANGELOG.md b/docs/CHANGELOG.md - `[Icon]` Created a puppeteer script for the new launch icon. ([#5854](https://github.com/infor-design/enterprise/issues/5854))\n- `[Icon]` Created a puppeteer script for the new mobile icon. ([#6199](https://github.com/infor-design/enterprise/issues/6199))\n-- `[Spinbox]` Created a puppeteer script for Spinbox Field sizes on mobile. ([#6197](https://github.com/infor-design/enterprise/pull/6197))\n+- `[Spinbox]` Created a puppeteer script for Spinbox Field sizes on mobile. ([#5843](https://github.com/infor-design/enterprise/issues/5843))\n## v4.62.0 Fixes\n",
        "date": "22.03.2022 15:45:56",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Created puppeteer scripts for new launch icon and mobile icon, as well as Spinbox Field sizes on mobile."
    },
    {
        "msg": "update chrome driver",
        "diff": "diff --git a/package.json b/package.json \"e2e:puppeteer\": \"npx --no-install jest --config=test/jest.config.js --runInBand --detectOpenHandles --forceExit\",\n\"e2e:update-imagesnapshots\": \"npx --no-install jest --config=test/jest.config.js --updateSnapshot --runInBand --detectOpenHandles --forceExit\",\n\"webdriver:clean\": \"npx webdriver-manager clean\",\n- \"webdriver:update\": \"npx webdriver-manager update --versions.chrome=98.0.4758.102 --standalone false --quiet --gecko=false\",\n+ \"webdriver:update\": \"npx webdriver-manager update --standalone false --quiet --gecko=false\",\n\"zip-dist\": \"npx grunt zip-dist\",\n\"documentation\": \"node ./scripts/deploy-documentation.js\",\n\"release:dev\": \"node scripts/publish-nightly-manual\",\n\"node-version-check\": \"npx check-node-version --node 14\",\n\"node-updates-check\": \"npx ncu\"\n},\n- \"chrome-version\": \"98\",\n+ \"chrome-version\": \"100\",\n\"dependencies\": {\n\"d3\": \"^5.16.0\",\n\"ids-identity\": \"4.11.3\",\n",
        "date": "31.03.2022 14:33:56",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Update Chrome version to 100 and remove specific version in webdriver update command"
    },
    {
        "msg": "update again the chrome version",
        "diff": "diff --git a/package.json b/package.json \"e2e:puppeteer\": \"npx --no-install jest --config=test/jest.config.js --runInBand --detectOpenHandles --forceExit\",\n\"e2e:update-imagesnapshots\": \"npx --no-install jest --config=test/jest.config.js --updateSnapshot --runInBand --detectOpenHandles --forceExit\",\n\"webdriver:clean\": \"npx webdriver-manager clean\",\n- \"webdriver:update\": \"npx webdriver-manager update --versions.chrome=101.0.4951.41 --standalone false --quiet --gecko=false\",\n+ \"webdriver:update\": \"npx webdriver-manager update --standalone false --quiet --gecko=false\",\n\"zip-dist\": \"npx grunt zip-dist\",\n\"documentation\": \"node ./scripts/deploy-documentation.js\",\n\"release:dev\": \"node scripts/publish-nightly-manual\",\n\"node-version-check\": \"npx check-node-version --node 14\",\n\"node-updates-check\": \"npx ncu\"\n},\n- \"chrome-version\": \"100\",\n+ \"chrome-version\": \"101\",\n\"dependencies\": {\n\"d3\": \"^5.16.0\",\n\"ids-identity\": \"4.11.3\",\n",
        "date": "27.04.2022 20:34:21",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Update webdriver-manager command in package.json and bump chrome version to 101"
    },
    {
        "msg": "update data of headerTooltip",
        "diff": "diff --git a/app/views/components/datagrid/example-header-icon-with-tooltip.html b/app/views/components/datagrid/example-header-icon-with-tooltip.html //Define Columns for the Grid.\ncolumns.push({ id: 'selectionCheckbox', sortable: false, resizable: false, formatter: Formatters.SelectionCheckbox, align: 'center'});\ncolumns.push({ id: 'productId', name: 'Product Id', field: 'productId', minWidth: 75, textOverflow: 'ellipsis' });\n- columns.push({ id: 'productName', name: 'Product Name', field: 'productName', textOverflow: 'ellipsis', headerTooltip: 'This is header', headerIcon: 'info', headerCssClass: 'lm-custom-class-header' , headerIconTooltip: headerIconTooltipContent, formatter: Formatters.Hyperlink });\n+ columns.push({ id: 'productName', name: 'Product Name', field: 'productName', textOverflow: 'ellipsis', headerTooltip: headerIconTooltipContent, headerIcon: 'info', headerCssClass: 'lm-custom-class-header' , headerIconTooltip: headerIconTooltipContent, formatter: Formatters.Hyperlink });\ncolumns.push({ id: 'activity', hidden: true, name: 'Activity', field: 'activity', textOverflow: 'ellipsis'});\ncolumns.push({ id: 'quantity', align: 'right', name: 'Quantity', minWidth: 75, field: 'quantity', textOverflow: 'ellipsis'});\ncolumns.push({ id: 'status', name: 'Status', field: 'price', textOverflow: 'ellipsis', formatter: Formatters.Alert, ranges: [{'min': 0, 'max': 150, 'classes': 'success', text: 'Confirmed'}, {'min': 151, 'max': 9999, 'classes': 'error', text: 'Error'}]});\n",
        "date": "26.07.2022 20:27:27",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Refactor header icon tooltip in product name column in datagrid"
    },
    {
        "msg": "update chrome version to 106",
        "diff": "diff --git a/package.json b/package.json \"e2e:puppeteer\": \"npx --no-install jest --config=test/jest.config.js --runInBand --detectOpenHandles --forceExit\",\n\"e2e:update-imagesnapshots\": \"npx --no-install jest --config=test/jest.config.js --updateSnapshot --runInBand --detectOpenHandles --forceExit\",\n\"webdriver:clean\": \"npx webdriver-manager clean\",\n- \"webdriver:update\": \"npx webdriver-manager update --versions.chrome=104.0.5112.79 --standalone false --quiet --gecko=false\",\n+ \"webdriver:update\": \"npx webdriver-manager update --versions.chrome=106.0.5249.91 --standalone false --quiet --gecko=false\",\n\"zip-dist\": \"npx grunt zip-dist\",\n\"documentation\": \"node ./scripts/deploy-documentation.js\",\n\"release:dev\": \"node scripts/publish-nightly-manual\",\n\"node-version-check\": \"npx check-node-version --node 14\",\n\"node-updates-check\": \"npx ncu\"\n},\n- \"chrome-version\": \"104\",\n+ \"chrome-version\": \"106\",\n\"dependencies\": {\n\"d3\": \"^5.16.0\",\n\"ids-identity\": \"4.11.11\",\n",
        "date": "05.10.2022 16:56:01",
        "repo": "infor-design/enterprise",
        "type": "update",
        "chatgpt_zeroshot": "Update Chrome version to 106 in webdriver update script"
    },
    {
        "msg": "update travis to remove django1.7 and add django1.10",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -6,14 +6,9 @@ python:\n- 3.5\nenv:\n- - DJANGOVER=django17\n- DJANGOVER=django18\n- DJANGOVER=django19\n-\n-matrix:\n- exclude:\n- - python: 3.5\n- env: DJANGOVER=django17\n+ - DJANGOVER=django110\ninstall:\n- pip install tox\n",
        "date": "01.01.2017 20:24:23",
        "repo": "jrief/django-angular",
        "type": "update",
        "chatgpt_zeroshot": "Update Django version to 1.10 in .travis.yml"
    },
    {
        "msg": "update html legend example to show scrollbar for vertical menu and added example for horizontal menu.",
        "diff": "diff --git a/web/examples/html-legend.html b/web/examples/html-legend.html </head>\n<body>\n-<div id=\"test\"></div>\n-<div id=\"legend\"></div>\n+<p>This page demonstrates the usage of the html legend.\n+ It shows example of scrollbars for the vertical menu and setting up a horizontal menu</p>\n+<div class=\"container\">\n+\n+ <div style=\"width:600px; height:300px\">\n+ <div id=\"year\"></div>\n+ <div id=\"year-legend\"></div>\n+ </div>\n+\n+ <div style=\"width:600px; height:300px\">\n+ <div id=\"name\"></div>\n+ <div id=\"name-legend\"></div>\n+ </div>\n<script type=\"text/javascript\" src=\"../js/d3.js\"></script>\n<script type=\"text/javascript\" src=\"../js/crossfilter.js\"></script>\n<script type=\"text/javascript\" src=\"../js/dc.js\"></script>\n-<script type=\"text/javascript\">\n- var chart = dc.pieChart(\"#test\");\n- d3.csv(\"morley.csv\", function (error, experiments) {\n+ <style type=\"text/css\">\n+ /* overrode the dc-html-legend class to make scroll bar appear for examples purpose*/\n+ .dc-html-legend {\n+ height: 80px;\n+ width: 150px;\n+ }\n+ </style>\n- var ndx = crossfilter(experiments),\n- runDimension = ndx.dimension(function (d) {\n- return \"run-\" + d.Run;\n- }),\n- speedSumGroup = runDimension.group().reduceSum(function (d) {\n- return d.Speed * d.Run;\n+ <script type=\"text/javascript\">\n+\n+ var spendData = [\n+ { Name: 'Mr A', Spent: '$40', Year: 2010 },\n+ { Name: 'Mr B', Spent: '$10', Year: 2011 },\n+ { Name: 'Mr C', Spent: '$40', Year: 2012 },\n+ { Name: 'Mr D', Spent: '$70', Year: 2013 },\n+ { Name: 'Mr E', Spent: '$20', Year: 2014 },\n+ { Name: 'Mr F', Spent: '$50', Year: 2015 },\n+ { Name: 'Mr G', Spent: '$30', Year: 2016 }\n+ ];\n+ // normalize/parse data\n+ spendData.forEach(function (d) {\n+ d.Spent = d.Spent.match(/\\d+/)[0];\n});\n+ // set crossfilter\n+ var ndx = crossfilter(spendData),\n+ yearDim = ndx.dimension(function (d) {\n+ return +d.Year;\n+ }),\n+ nameDim = ndx.dimension(function (d) {\n+ return d.Name;\n+ }),\n+ spendPerYear = yearDim.group().reduceSum(function (d) {\n+ return +d.Spent;\n+ }),\n+ nameGroup = nameDim.group().reduceCount();\n+\n- chart\n- .width(768)\n- .height(480)\n- .slicesCap(4)\n+ var yearChart = dc.pieChart(\"#year\"),\n+ nameChart = dc.pieChart(\"#name\");\n+\n+ yearChart\n+ .width(400)\n+ .height(300)\n.innerRadius(100)\n- .dimension(runDimension)\n- .group(speedSumGroup)\n- .legend(dc.htmlLegend().container('#legend').horizontal(false));\n+ .dimension(yearDim)\n+ .group(spendPerYear)\n+ .legend(dc.htmlLegend().container('#year-legend').horizontal(false));\n- chart.render();\n- });\n+ nameChart\n+ .width(400)\n+ .height(300)\n+ .innerRadius(100)\n+ .dimension(nameDim)\n+ .group(nameGroup)\n+ .legend(dc.htmlLegend().container('#name-legend').horizontal(true));\n-</script>\n+ yearChart.render();\n+ nameChart.render();\n+ </script>\n+</div>\n</body>\n</html>\n\\ No newline at end of file\n",
        "date": "31.03.2018 08:49:19",
        "repo": "dc-js/dc.js",
        "type": "update",
        "chatgpt_zeroshot": "Refactored HTML legend usage and added examples for vertical and horizontal menus."
    },
    {
        "msg": "update html legend example page.",
        "diff": "diff --git a/web/examples/html-legend.html b/web/examples/html-legend.html <body>\n<p>This page demonstrates the usage of the html legend.\n- It shows example of scrollbars for the vertical menu and setting up a horizontal menu</p>\n+ It shows example of scrollbars for the vertical menu and setting up a horizontal menu.\n+</p>\n+<p style=\"padding-bottom: 20px\">\n+ It also shows the selected legend highlighted\n+</p>\n<div class=\"container\">\n- <div style=\"width:600px; height:300px\">\n+ <div style=\"width:400px; height:150px;display: inline-block\">\n<div id=\"year\"></div>\n- <div id=\"year-legend\"></div>\n+ <div id=\"year-legend\" class=\"dc-html-legend-container\"></div>\n</div>\n- <div style=\"width:600px; height:300px\">\n+ <div style=\"width:400px; height:150px;display: inline-block;margin-left: 100px\">\n<div id=\"name\"></div>\n- <div id=\"name-legend\"></div>\n+ <div id=\"name-legend\" class=\"dc-html-legend-container\"></div>\n</div>\n<script type=\"text/javascript\" src=\"../js/d3.js\"></script>\n<script type=\"text/javascript\" src=\"../js/crossfilter.js\"></script>\n<script type=\"text/javascript\" src=\"../js/dc.js\"></script>\n- <style type=\"text/css\">\n- /* overrode the dc-html-legend class to make scroll bar appear for examples purpose*/\n- .dc-html-legend {\n- height: 80px;\n- width: 150px;\n- }\n- </style>\n-\n<script type=\"text/javascript\">\nvar spendData = [\n{ Name: 'Mr D', Spent: '$70', Year: 2013 },\n{ Name: 'Mr E', Spent: '$20', Year: 2014 },\n{ Name: 'Mr F', Spent: '$50', Year: 2015 },\n- { Name: 'Mr G', Spent: '$30', Year: 2016 }\n+ { Name: 'Mr G', Spent: '$30', Year: 2016 },\n+ { Name: 'Mr D', Spent: '$70', Year: 2017 },\n+ { Name: 'Mr E', Spent: '$20', Year: 2018 },\n+ { Name: 'Mr F', Spent: '$50', Year: 2019 },\n+ { Name: 'Mr G', Spent: '$30', Year: 2020 }\n];\n// normalize/parse data\nspendData.forEach(function (d) {\nnameDim = ndx.dimension(function (d) {\nreturn d.Name;\n}),\n- spendPerYear = yearDim.group().reduceSum(function (d) {\n+ spendPerYearGroup = yearDim.group().reduceSum(function (d) {\nreturn +d.Spent;\n}),\nnameGroup = nameDim.group().reduceCount();\nnameChart = dc.pieChart(\"#name\");\nyearChart\n- .width(400)\n- .height(300)\n- .innerRadius(100)\n+ .width(200)\n+ .height(150)\n.dimension(yearDim)\n- .group(spendPerYear)\n+ .group(spendPerYearGroup)\n+ .turnOnControls(true)\n.legend(dc.htmlLegend().container('#year-legend').horizontal(false));\nnameChart\n- .width(400)\n- .height(300)\n- .innerRadius(100)\n+ .width(200)\n+ .height(150)\n.dimension(nameDim)\n.group(nameGroup)\n.legend(dc.htmlLegend().container('#name-legend').horizontal(true));\n",
        "date": "31.03.2018 19:19:40",
        "repo": "dc-js/dc.js",
        "type": "update",
        "chatgpt_zeroshot": "Update html-legend.html with additional legend highlighting and layout adjustments"
    },
    {
        "msg": "update doc/CDN references to v3.0",
        "diff": "diff --git a/README.md b/README.md @@ -25,7 +25,7 @@ Support\n* [Example Site](http://dc-js.github.com/dc.js/)\n* [Changelog](https://github.com/dc-js/dc.js/blob/develop/Changelog.md)\n* [Frequently Asked Questions](https://github.com/dc-js/dc.js/wiki/FAQ) and [Wiki](https://github.com/dc-js/dc.js/wiki)\n-* [v2.0 API Reference](http://dc-js.github.io/dc.js/docs/html/) <sup>([markdown](https://github.com/dc-js/dc.js/blob/master/web/docs/api-latest.md))</sup> <sup>([next - v2.1](https://github.com/dc-js/dc.js/blob/develop/web/docs/api-latest.md))</sup> <sup>([last - v1.7](https://github.com/dc-js/dc.js/blob/master/web/docs/api-1.7.0.md))</sup>\n+* [v3.0 API Reference](http://dc-js.github.io/dc.js/docs/html/) <sup>([markdown](https://github.com/dc-js/dc.js/blob/master/web/docs/api-latest.md))</sup> <sup>([last - v2.1](https://github.com/dc-js/dc.js/blob/develop/web/docs/api-latest.md))</sup>\n* [dc.js on StackOverflow](http://stackoverflow.com/questions/tagged/dc.js) - ask questions and get help\n* [User Group](https://groups.google.com/forum/?fromgroups#!forum/dc-js-user-group) (\"mailing list\") - discussion and longer topics\n* [GitHub Issues](https://github.com/dc-js/dc.js/issues) - bug reports and feature requests\n@@ -37,7 +37,9 @@ Get help faster with a working example! Fork these to get started:<br>\nCDN location\n--------------------\n-For CDN URLs, please visit [dc.js on cdnjs.com](https://cdnjs.com/libraries/dc), select the version you want (2.0 is stable, 2.1 has breaking changes), and copy the URLs from there.\n+For CDN URLs, please visit [dc.js on cdnjs.com](https://cdnjs.com/libraries/dc), select the version you want (3.0 is stable, 2.1 is legacy version), and copy the URLs from there.\n+\n+dc.js version 3 needs d3.js versions 4/5. dc.js version 2.1 only works with d3.js version 3.\nPlease do not use github.io as a CDN unless you need the bleeding-edge features.\n",
        "date": "20.05.2018 09:19:42",
        "repo": "dc-js/dc.js",
        "type": "update",
        "chatgpt_zeroshot": "Update API Reference links and CDN information for dc.js version 3."
    },
    {
        "msg": "update fiddles; copy simpler cdn info from wiki",
        "diff": "diff --git a/README.md b/README.md @@ -33,17 +33,19 @@ Support\n*Please direct questions and support requests to Stack Overflow or the user group. When posting to Stack Overflow, use the* `[dc.js]` *and/or* `[crossfilter]` *tags - other tags are likely to draw unwanted attention.*\nGet help faster with a working example! Fork these to get started:<br>\n-[example jsFiddle](https://jsfiddle.net/gordonwoodhull/1hbjwxzy/) - [blank jsFiddle](https://jsfiddle.net/gordonwoodhull/kk4j0bzn/) - [example bl.ock](http://blockbuilder.org/gordonwoodhull/ecce8e32d64c662cffd5) - [blank bl.ock](http://blockbuilder.org/gordonwoodhull/9ab997c9a8d7d3380364)\n+[example jsFiddle](https://jsfiddle.net/gordonwoodhull/raxxxmk1/) - [blank jsFiddle](https://jsfiddle.net/gordonwoodhull/ckf3d2cv/) - [example bl.ock](http://blockbuilder.org/gordonwoodhull/ecce8e32d64c662cffd5) - [blank bl.ock](http://blockbuilder.org/gordonwoodhull/9ab997c9a8d7d3380364)\n-CDN location\n---------------------\n-For CDN URLs, please visit [dc.js on cdnjs.com](https://cdnjs.com/libraries/dc), select the version you want (3.0 is stable, 2.1 is legacy version), and copy the URLs from there.\n+## Versioning\n+Version 3.* is compatible with d3 versions 4 and 5. Use dc.js 2.* if you still need compatibility with d3 version 3.\n-dc.js version 3 needs d3.js versions 4/5. dc.js version 2.1 only works with d3.js version 3.\n+## CDN location\n-Please do not use github.io as a CDN unless you need the bleeding-edge features.\n+```\n+http://unpkg.com/dc@3/dc.js\n+http://unpkg.com/dc@3/dc.css\n+```\n-[More info on the Wiki.](https://github.com/dc-js/dc.js/wiki#cdn-location)\n+or copy the latest links from [CDNJS](https://cdnjs.com/libraries/dc)\nInstall with npm\n",
        "date": "20.05.2018 19:34:50",
        "repo": "dc-js/dc.js",
        "type": "update",
        "chatgpt_zeroshot": "Update CDN location and versioning information in README.md"
    },
    {
        "msg": "update titles after merging enter->update fixes update selection is now empty until explicitly merged",
        "diff": "diff --git a/src/heatmap.js b/src/heatmap.js @@ -226,13 +226,13 @@ dc.heatMap = function (parent, chartGroup) {\n.attr('y', function (d, i) { return rows(_chart.valueAccessor()(d, i)); })\n.on('click', _chart.boxOnClick());\n+ boxes = gEnter.merge(boxes);\n+\nif (_chart.renderTitle()) {\ngEnter.append('title');\nboxes.select('title').text(_chart.title());\n}\n- boxes = gEnter.merge(boxes);\n-\ndc.transition(boxes.select('rect'), _chart.transitionDuration(), _chart.transitionDelay())\n.attr('x', function (d, i) { return cols(_chart.keyAccessor()(d, i)); })\n.attr('y', function (d, i) { return rows(_chart.valueAccessor()(d, i)); })\n",
        "date": "17.09.2018 13:13:39",
        "repo": "dc-js/dc.js",
        "type": "update",
        "chatgpt_zeroshot": "Refactor heatmap.js to merge box elements and improve rendering performance"
    },
    {
        "msg": "update resource urls, fixed mixed content loading resolves issue with mixed content loading, http content over https; in example",
        "diff": "diff --git a/web/examples/replacing-data.html b/web/examples/replacing-data.html </head>\n<body>\n-<link rel=\"stylesheet\" type=\"text/css\" href=\"http://dc-js.github.io/dc.js/css/dc.css\"/>\n+<link rel=\"stylesheet\" type=\"text/css\" href=\"//dc-js.github.io/dc.js/css/dc.css\"/>\n<div class=\"container\">\n<script type=\"text/javascript\" src=\"header.js\"></script>\n<script type=\"text/javascript\" src=\"../js/promise-polyfill.js\"></script>\n<script type=\"text/javascript\" src=\"../js/fetch.umd.js\"></script>\n-<script type=\"text/javascript\" src=\"http://dc-js.github.io/dc.js/js/d3.js\"></script>\n-<script type=\"text/javascript\" src=\"http://dc-js.github.io/dc.js/js/crossfilter.js\"></script>\n-<script type=\"text/javascript\" src=\"http://dc-js.github.io/dc.js/js/dc.js\"></script>\n+<script type=\"text/javascript\" src=\"//dc-js.github.io/dc.js/js/d3.js\"></script>\n+<script type=\"text/javascript\" src=\"//dc-js.github.io/dc.js/js/crossfilter.js\"></script>\n+<script type=\"text/javascript\" src=\"//dc-js.github.io/dc.js/js/dc.js\"></script>\n<div id=\"chart-ring-year\"></div>\n<div id=\"chart-row-spenders\"></div>\n<p>This page will replace the crossfilter data in 5 seconds. If you modify the filters before then, the filters will be restored.<p>\n-<p>It's based on <a href=\"http://stackoverflow.com/questions/32770830/updating-dc-js-data-and-reapplying-original-filters\">a question\n+<p>It's based on <a href=\"//stackoverflow.com/questions/32770830/updating-dc-js-data-and-reapplying-original-filters\">a question\nand answer on Stack Overflow</a>; question by geotheory, answer by Ethan Jewett.</p>\n<script type=\"text/javascript\">\n",
        "date": "13.06.2019 14:10:42",
        "repo": "dc-js/dc.js",
        "type": "update",
        "chatgpt_zeroshot": "Update URLs to use protocol-relative paths in replacing-data.html"
    },
    {
        "msg": "update example url to github.io",
        "diff": "diff --git a/README.md b/README.md @@ -13,7 +13,7 @@ attributes through the position, size, and color of its elements, and also prese\nwhich can be filtered. When the filter or brush changes, all other charts are updated dynamically,\nusing animated transitions.\n-Check out the [example page](http://dc-js.github.com/dc.js/)\n+Check out the [example page](http://dc-js.github.io/dc.js/)\nand its [annotated source](http://dc-js.github.io/dc.js/docs/stock.html) for a quick five minute\nhow-to guide. The detailed [API reference is here](http://dc-js.github.io/dc.js/docs/html/)\n([markdown version](https://github.com/dc-js/dc.js/blob/master/docs/api-latest.md)). For\n@@ -22,7 +22,7 @@ more examples and hints please visit the [Wiki](https://github.com/dc-js/dc.js/w\nSupport\n--------------------\n-* [Example Site](http://dc-js.github.com/dc.js/)\n+* [Example Site](http://dc-js.github.io/dc.js/)\n* [Changelog](https://github.com/dc-js/dc.js/blob/develop/Changelog.md)\n* [Frequently Asked Questions](https://github.com/dc-js/dc.js/wiki/FAQ) and [Wiki](https://github.com/dc-js/dc.js/wiki)\n* [v4.0 API Reference](http://dc-js.github.io/dc.js/docs/html/) <sup>([markdown](https://github.com/dc-js/dc.js/blob/master/docs/api-latest.md))</sup> <sup>([last - v3.1.9](https://github.com/dc-js/dc.js/blob/master/docs/old-api-docs/api-3.1.9.md))</sup>\n",
        "date": "18.05.2021 23:45:18",
        "repo": "dc-js/dc.js",
        "type": "update",
        "chatgpt_zeroshot": "Update example page link to use https in README.md"
    },
    {
        "msg": "update feature list in readme.md",
        "diff": "diff --git a/Extensions/azure-node-essentials/README.md b/Extensions/azure-node-essentials/README.md # Azure Node Essentials\n-This extension provides NodeJs tools for developers working with Azure in VSCode.\n+This extension provides NodeJs tools for developers working with Azure SDKs.\n## Feature List\n1. Project and file scaffolding\n1. Snippets for some common operations such as authentication, creating a service principal.\n+1. Code generation scenarios\n+ * generate code for template deployment\n+\n## Dependencies\nThe following package/extension dependencies are auto installed when you install this extension.\n1. [vscode yo](https://marketplace.visualstudio.com/items?itemName=samverschueren.yo)\n-1. [generator-azure-node](https://github.com/balajikris/generator-azure-node)\n+1. [generator-azure-node](https://github.com/Azure/azure-sdk-for-node/tree/master/Extensions/generator-azure-node)\n",
        "date": "07.02.2017 17:32:42",
        "repo": "azure/azure-sdk-for-node",
        "type": "update",
        "chatgpt_zeroshot": "Update Azure Node Essentials extension to provide tools for working with Azure SDKs. Add code generation scenarios for template deployment. Update dependency link for generator-azure-node."
    },
    {
        "msg": "update readme with more help",
        "diff": "diff --git a/Extensions/azure-node-essentials/README.md b/Extensions/azure-node-essentials/README.md @@ -5,23 +5,32 @@ This extension provides NodeJs tools for developers working with Azure SDKs.\n## Feature List\n1. Project and file scaffolding\n+ * `yo azure-node` to create\n+ * Javascript or Typescript project with package.json set up to target Azure SDKs\n+ * Empty .js or .ts files\n+ * pre populated .tsconfig or .jsconfig files\n+ * create a service principal\n1. Snippets for some common operations such as authentication, creating a service principal.\n+ * `loginInt` : generate code for interactive login\n+ * `loginPwd` : generate code for logging in with username and password\n+ * `loginSp` : generate code for logging in with a service principal\n+ * `spCreate` : generate code to create a service principal\n1. Code generation scenarios\n- * generate code for template deployment\n+ * command `Azure-Node: Generate code for template deployment` : generate code for template deployment\n### Sample workflow\n-1. Open VS code with an empty workspace (no folder)\n-2. Bring up VS code command palette, invoke `yo`\n-3. Choose `azure-node` generator and invoke it.\n-4. Choose `* app` to invoke the main generator (the sub generators for files are listed at the root level)\n-5. Choose a Javascript project and proceed.\n-6. This should initialize your project and install npm dependencies\n-7. Meanwhile, open the folder in VSCode and navigate to index.js\n-8. Notice that package.json has been set up and index.js has boiler plate code for authentication.\n-9. Place caret on the line after `// TODO: Write your application logic here.`\n-9. From VS Code's command palette, invoke `>Azure-Node: Generate code for template deployment`\n-10. The extension generates code for template deployment.\n+1. Open VS code with an empty workspace (empty folder)\n+1. Bring up VS code command palette, invoke `yo`\n+1. Choose `azure-node` generator and invoke it.\n+1. Choose `* app` to invoke the main generator (the sub generators for files are listed at the root level)\n+1. Choose a Javascript project and proceed.\n+1. This should initialize your project and install npm dependencies\n+1. Meanwhile, open the folder in VSCode and navigate to index.js\n+1. Notice that package.json has been set up and index.js has boiler plate code for authentication.\n+1. Place caret on the line after `// TODO: Write your application logic here.`\n+1. From VS Code's command palette, invoke `>Azure-Node: Generate code for template deployment`\n+1. The extension generates code for template deployment.\n## Dependencies\n",
        "date": "08.02.2017 11:46:25",
        "repo": "azure/azure-sdk-for-node",
        "type": "update",
        "chatgpt_zeroshot": "Add code generation scenarios and snippets for common operations in Azure Node Essentials extension"
    },
    {
        "msg": "update changelog for 0.2.3",
        "diff": "diff --git a/Extensions/azure-node-essentials/changelog.md b/Extensions/azure-node-essentials/changelog.md # Change Log for Azure Node Essentials\n-## 0.1.0-preview - 2017-02-07\n+## 0.2.3 [2017-02-08]\n+\n+1. Bug fixes for Mac\n+1. updates to readme\n+1. check for generator package's version and upgrade if not latest\n+\n+## 0.2.0 - 0.2.2 [2017-02-07]\n+\n+1. No product change, updates to readme and other metadata about the project.\n+\n+## 0.1.0 [2017-02-07]\n1. Project and file scaffolding\n1. Snippets for some common operations such as authentication, creating a service principal.\n",
        "date": "08.02.2017 12:06:39",
        "repo": "azure/azure-sdk-for-node",
        "type": "update",
        "chatgpt_zeroshot": "Update Azure Node Essentials to version 0.2.3 with bug fixes, readme updates, and generator package version check."
    },
    {
        "msg": "update the package version.",
        "diff": "diff --git a/lib/services/computeManagement/package.json b/lib/services/computeManagement/package.json \"Lee, Hyonho <Hyonho.Lee@microsoft.com>\",\n\"Desai, Priyank <priydes@microsoft.com>\"\n],\n- \"version\": \"0.17.1\",\n+ \"version\": \"0.18.1\",\n\"description\": \"Microsoft Azure Compute Management Client Library for node\",\n\"tags\": [\n\"azure\",\n",
        "date": "16.02.2017 17:20:35",
        "repo": "azure/azure-sdk-for-node",
        "type": "update",
        "chatgpt_zeroshot": "Bump version to 0.18.1 in package.json"
    },
    {
        "msg": "update patch version for msrest",
        "diff": "diff --git a/runtime/ms-rest/package.json b/runtime/ms-rest/package.json \"email\": \"azsdkteam@microsoft.com\",\n\"url\": \"https://github.com/Azure/azure-sdk-for-node\"\n},\n- \"version\": \"1.15.5\",\n+ \"version\": \"1.15.6\",\n\"description\": \"Client Runtime for Node.js client libraries generated using AutoRest\",\n\"tags\": [\"node\", \"microsoft\", \"autorest\", \"clientruntime\"],\n\"keywords\": [\"node\", \"microsoft\", \"autorest\", \"clientruntime\"],\n",
        "date": "07.03.2017 11:23:54",
        "repo": "azure/azure-sdk-for-node",
        "type": "update",
        "chatgpt_zeroshot": "Bump version to 1.15.6 in package.json"
    },
    {
        "msg": "update patch version for msrestazure",
        "diff": "diff --git a/runtime/ms-rest-azure/package.json b/runtime/ms-rest-azure/package.json \"email\": \"azsdkteam@microsoft.com\",\n\"url\": \"https://github.com/Azure/azure-sdk-for-node\"\n},\n- \"version\": \"1.15.5\",\n+ \"version\": \"1.15.6\",\n\"description\": \"Client Runtime for Node.js Azure client libraries generated using AutoRest\",\n\"tags\": [ \"node\", \"microsoft\", \"autorest\", \"azure\", \"clientruntime\" ],\n\"keywords\": [ \"node\", \"microsoft\", \"autorest\", \"azure\", \"clientruntime\" ],\n\"async\": \"0.2.7\",\n\"uuid\": \"^3.0.1\",\n\"adal-node\": \"^0.1.17\",\n- \"ms-rest\": \"^1.15.5\",\n+ \"ms-rest\": \"^1.15.6\",\n\"moment\": \"^2.14.1\",\n\"azure-arm-resource\": \"^1.6.1-preview\"\n},\n",
        "date": "07.03.2017 11:27:20",
        "repo": "azure/azure-sdk-for-node",
        "type": "update",
        "chatgpt_zeroshot": "Bump version to 1.15.6 and update ms-rest dependency to 1.15.6"
    },
    {
        "msg": "update nsproj for ADL",
        "diff": "diff --git a/nodeSDK.njsproj b/nodeSDK.njsproj <SchemaVersion>2.0</SchemaVersion>\n<ProjectGuid>{72210dc5-a996-48d4-bb68-ba82b3544c77}</ProjectGuid>\n<ProjectHome />\n- <ProjectView>ShowAllFiles</ProjectView>\n+ <ProjectView>ProjectFiles</ProjectView>\n<StartupFile>\n</StartupFile>\n<WorkingDirectory>.</WorkingDirectory>\n<Compile Include=\"lib\\services\\dataLake.Analytics\\lib\\account\\dataLakeAnalyticsAccountManagementClient.js\" />\n<Compile Include=\"lib\\services\\dataLake.Analytics\\lib\\account\\models\\addDataLakeStoreParameters.js\" />\n<Compile Include=\"lib\\services\\dataLake.Analytics\\lib\\account\\models\\addStorageAccountParameters.js\" />\n- <Compile Include=\"lib\\services\\dataLake.Analytics\\lib\\account\\models\\createStorageAccountInfo.js\" />\n<Compile Include=\"lib\\services\\dataLake.Analytics\\lib\\account\\models\\dataLakeAnalyticsAccount.js\" />\n<Compile Include=\"lib\\services\\dataLake.Analytics\\lib\\account\\models\\dataLakeAnalyticsAccountListDataLakeStoreResult.js\" />\n<Compile Include=\"lib\\services\\dataLake.Analytics\\lib\\account\\models\\dataLakeAnalyticsAccountListResult.js\" />\n<Compile Include=\"lib\\services\\dataLake.Analytics\\lib\\account\\models\\dataLakeAnalyticsAccountListStorageAccountsResult.js\" />\n<Compile Include=\"lib\\services\\dataLake.Analytics\\lib\\account\\models\\dataLakeAnalyticsAccountUpdateParameters.js\" />\n+ <Compile Include=\"lib\\services\\dataLake.Analytics\\lib\\account\\models\\dataLakeAnalyticsFirewallRuleListResult.js\" />\n<Compile Include=\"lib\\services\\dataLake.Analytics\\lib\\account\\models\\dataLakeStoreAccountInfo.js\" />\n<Compile Include=\"lib\\services\\dataLake.Analytics\\lib\\account\\models\\errorDetails.js\" />\n- <Compile Include=\"lib\\services\\dataLake.Analytics\\lib\\account\\models\\errorModel.js\" />\n+ <Compile Include=\"lib\\services\\dataLake.Analytics\\lib\\account\\models\\firewallRule.js\" />\n<Compile Include=\"lib\\services\\dataLake.Analytics\\lib\\account\\models\\index.js\" />\n- <Compile Include=\"lib\\services\\dataLake.Analytics\\lib\\account\\models\\innerError.js\" />\n<Compile Include=\"lib\\services\\dataLake.Analytics\\lib\\account\\models\\listSasTokensResult.js\" />\n<Compile Include=\"lib\\services\\dataLake.Analytics\\lib\\account\\models\\listStorageContainersResult.js\" />\n+ <Compile Include=\"lib\\services\\dataLake.Analytics\\lib\\account\\models\\optionalSubResource.js\" />\n<Compile Include=\"lib\\services\\dataLake.Analytics\\lib\\account\\models\\resource.js\" />\n<Compile Include=\"lib\\services\\dataLake.Analytics\\lib\\account\\models\\sasTokenInfo.js\" />\n<Compile Include=\"lib\\services\\dataLake.Analytics\\lib\\account\\models\\storageAccountInfo.js\" />\n<Compile Include=\"lib\\services\\dataLake.Analytics\\lib\\account\\models\\storageContainer.js\" />\n+ <Compile Include=\"lib\\services\\dataLake.Analytics\\lib\\account\\models\\subResource.js\" />\n+ <Compile Include=\"lib\\services\\dataLake.Analytics\\lib\\account\\models\\updateFirewallRuleParameters.js\" />\n<Compile Include=\"lib\\services\\dataLake.Analytics\\lib\\account\\models\\updateStorageAccountParameters.js\" />\n<Compile Include=\"lib\\services\\dataLake.Analytics\\lib\\account\\operations\\account.js\" />\n<Compile Include=\"lib\\services\\dataLake.Analytics\\lib\\account\\operations\\dataLakeStoreAccounts.js\" />\n+ <Compile Include=\"lib\\services\\dataLake.Analytics\\lib\\account\\operations\\firewallRules.js\" />\n<Compile Include=\"lib\\services\\dataLake.Analytics\\lib\\account\\operations\\index.js\" />\n<Compile Include=\"lib\\services\\dataLake.Analytics\\lib\\account\\operations\\storageAccounts.js\" />\n<Compile Include=\"lib\\services\\dataLake.Analytics\\lib\\catalog\\dataLakeAnalyticsCatalogManagementClient.js\" />\n<Compile Include=\"lib\\services\\dataLake.Store\\lib\\account\\models\\encryptionConfig.js\" />\n<Compile Include=\"lib\\services\\dataLake.Store\\lib\\account\\models\\encryptionIdentity.js\" />\n<Compile Include=\"lib\\services\\dataLake.Store\\lib\\account\\models\\errorDetails.js\" />\n- <Compile Include=\"lib\\services\\dataLake.Store\\lib\\account\\models\\errorModel.js\" />\n<Compile Include=\"lib\\services\\dataLake.Store\\lib\\account\\models\\firewallRule.js\" />\n<Compile Include=\"lib\\services\\dataLake.Store\\lib\\account\\models\\index.js\" />\n- <Compile Include=\"lib\\services\\dataLake.Store\\lib\\account\\models\\innerError.js\" />\n<Compile Include=\"lib\\services\\dataLake.Store\\lib\\account\\models\\keyVaultMetaInfo.js\" />\n<Compile Include=\"lib\\services\\dataLake.Store\\lib\\account\\models\\resource.js\" />\n<Compile Include=\"lib\\services\\dataLake.Store\\lib\\account\\models\\subResource.js\" />\n<Compile Include=\"lib\\services\\dataLake.Store\\lib\\account\\models\\trustedIdProvider.js\" />\n+ <Compile Include=\"lib\\services\\dataLake.Store\\lib\\account\\models\\updateFirewallRuleParameters.js\" />\n+ <Compile Include=\"lib\\services\\dataLake.Store\\lib\\account\\models\\updateTrustedIdProviderParameters.js\" />\n<Compile Include=\"lib\\services\\dataLake.Store\\lib\\account\\operations\\account.js\" />\n<Compile Include=\"lib\\services\\dataLake.Store\\lib\\account\\operations\\firewallRules.js\" />\n<Compile Include=\"lib\\services\\dataLake.Store\\lib\\account\\operations\\index.js\" />\n",
        "date": "23.03.2017 14:15:56",
        "repo": "azure/azure-sdk-for-node",
        "type": "update",
        "chatgpt_zeroshot": "Update project view and add new models and operations for firewall rules and trusted ID providers."
    },
    {
        "msg": "update gulp file",
        "diff": "diff --git a/gulpfile.js b/gulpfile.js @@ -241,7 +241,7 @@ const mappings = {\n},\n'servermanagement': {\n'dir': 'servermanagement/lib',\n- 'source': 'arm-servermanagement/2016-07-01-preview/servermanagement.json'\n+ 'source': 'arm-servermanagement/2016-07-01-preview/swagger/servermanagement.json'\n},\n'serviceMap': {\n'dir': 'serviceMapManagement/lib',\n@@ -288,12 +288,12 @@ const mappings = {\n}\n};\n-const defaultAutoRestVersion = '1.0.1-20170322-2300-nightly';\n+const defaultAutoRestVersion = '1.0.1-20170324-2300-nightly';\nvar usingAutoRestVersion;\nconst specRoot = args['spec-root'] || \"https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master\";\nconst project = args['project'];\n-const language = 'Azure.NodeJS';\n-const modeler = 'Swagger';\n+var language = 'Azure.NodeJS';\n+var modeler = 'Swagger';\nfunction getAutorestVersion(version) {\nif (!version) version = 'latest';\n@@ -332,7 +332,7 @@ function deleteFolderRecursive(path) {\nfunction clearProjectBeforeGenerating(projectDir) {\nlet modelsDir = `${projectDir}/models`;\nlet operationsDir = `${projectDir}/operations`;\n- let clientTypedefFile = path.basename(glob.sync(`${projectDir}/*.d.ts`)[0]);\n+ let clientTypedefFile = path.basename(glob.sync(`${projectDir}/*.d.ts`)[0] || '');\nlet clientJSFile = `${clientTypedefFile.split('.')[0]}.js`;\nlet directoriesToBeDeleted = [modelsDir, operationsDir];\nlet filesToBeDeleted = [clientTypedefFile, clientJSFile];\n",
        "date": "25.03.2017 19:50:52",
        "repo": "azure/azure-sdk-for-node",
        "type": "update",
        "chatgpt_zeroshot": "Update source path for servermanagement and default AutoRest version, declare language and modeler variables as var, and handle edge case for clientTypedefFile."
    },
    {
        "msg": "update gulp file",
        "diff": "diff --git a/gulpfile.js b/gulpfile.js @@ -18,7 +18,7 @@ const mappings = {\n},\n'apiManagement': {\n'dir': 'apiManagement/lib',\n- 'source': 'azure-rest-api-specs/arm-apimanagement/compositeApiManagementClient.json',\n+ 'source': 'arm-apimanagement/compositeApiManagementClient.json',\n'modeler': 'CompositeSwagger'\n},\n'authorization': {\n@@ -174,7 +174,7 @@ const mappings = {\n},\n'operationalInsights': {\n'dir': 'operationalInsightsManagement2/lib',\n- 'source': 'arm-operationalInsights/compositeOperationalInsights.json',\n+ 'source': 'arm-operationalinsights/compositeOperationalInsights.json',\n'modeler': 'CompositeSwagger'\n},\n'powerbiembedded': {\n@@ -353,6 +353,7 @@ function generateProject(project, specRoot, autoRestVersion) {\nlet currentModeler = modeler;\nlet specPath = specRoot + '/' + mappings[project].source;\nlet result;\n+ language = 'Azure.NodeJS'\n//servicefabric wants to generate using generic NodeJS.\nif (mappings[project].language && mappings[project].language.match(/^NodeJS$/ig) !== null) {\nlanguage = mappings[project].language;\n",
        "date": "28.03.2017 16:24:38",
        "repo": "azure/azure-sdk-for-node",
        "type": "update",
        "chatgpt_zeroshot": "Refactor source paths and add language specification for Azure NodeJS."
    },
    {
        "msg": "update npm in travis",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -13,6 +13,7 @@ before_install:\n- npm install -g npm@1.4.23\n- npm run-script setup\n- npm install\n+ - npm update -g npm\n#- cd ..\n#- git clone https://github.com/azure/azure-xplat-cli.git\n#- cd azure-xplat-cli\n",
        "date": "28.03.2017 21:51:55",
        "repo": "azure/azure-sdk-for-node",
        "type": "update",
        "chatgpt_zeroshot": "Update npm globally in Travis CI configuration"
    },
    {
        "msg": "update change log for 2.0.0-preview release",
        "diff": "diff --git a/ChangeLog.md b/ChangeLog.md +##2017.03.31 version 2.0.0-preview\n+* Updated type definition (.d.ts) files for all the packages and improved typescript support .\n+* Added Promise support for all the APIs. For each callback based API, we now have an overloaded method that returns a Promise.\n+* Moved Javascript code to ES6 syntax\n+* Minimum required node.js version is 6.10\n+* Add client libraries for following ARM services\n+ * Advisor Management\n+ * Automation Management\n+ * Billing Management\n+ * Cognitive Services Management\n+ * Container Registry Management\n+ * Customer Insights Management\n+ * DocumentDB Management\n+ * Logic Management\n+ * Machine Learning Management\n+ * Media Services Management\n+ * Operational Insights Management\n+ * Recovery Services Backup Management\n+ * Recovery Services Management\n+ * Relay Management\n+ * Scheduler Management\n+ * Search Management\n+ * ServiceMap Management\n+ * SQL Management\n+ * Storage Import Export Management\n+ * Search Index\n+ * Search Service\n+\n##2016.09.07 Version 1.2.0-preview\n* Added client libraries for following ARM services\n* Servicebus management\n",
        "date": "31.03.2017 16:48:29",
        "repo": "azure/azure-sdk-for-node",
        "type": "update",
        "chatgpt_zeroshot": "Update to version 2.0.0-preview with improved typescript support, Promise support for APIs, ES6 syntax, and added client libraries for various ARM services."
    },
    {
        "msg": "update ms-rest-azure dep in uber package.json",
        "diff": "diff --git a/package.json b/package.json \"azure-scheduler\": \"0.10.3\",\n\"azure-storage\": \"1.3.0\",\n\"mime\": \"~1.2.4\",\n- \"ms-rest-azure\": \"^2.0.0\",\n+ \"ms-rest-azure\": \"^2.0.1\",\n\"ms-rest\": \"^2.0.0\",\n\"moment\": \"^2.18.1\",\n\"underscore\": \"1.4.x\",\n",
        "date": "03.04.2017 12:21:05",
        "repo": "azure/azure-sdk-for-node",
        "type": "update",
        "chatgpt_zeroshot": "Update ms-rest-azure to version 2.0.1"
    },
    {
        "msg": "update grunt to include runtime and exclude webSiteManagement2 due to an issue",
        "diff": "diff --git a/gruntfile.js b/gruntfile.js @@ -25,9 +25,10 @@ module.exports = function(grunt) {\ntemplate: 'node_modules/minami',\nconfigure: 'jsdocs/jsdoc.conf.json',\n};\n-\n-\n- var sources = _.map(glob.sync('lib/**/package.json', {}), function(pack) {\n+ var servicePackages = glob.sync('lib/**/package.json', {ignore: 'lib/services/webSiteManagement2/package.json'});\n+ var runtimePackages = glob.sync('runtime/**/package.json', {ignore: 'runtime/**/test/package.json'});\n+ var packages = servicePackages.concat(runtimePackages);\n+ var sources = _.map(packages, function(pack) {\nreturn _.map(['/**/*.js', '/package.json', '/README.md'], function(i) {\nreturn path.dirname(pack) + i;\n});\n",
        "date": "05.04.2017 11:39:07",
        "repo": "azure/azure-sdk-for-node",
        "type": "update",
        "chatgpt_zeroshot": "Refactor package.json file handling in gruntfile"
    },
    {
        "msg": "update gulpfile to use strict",
        "diff": "diff --git a/gulpfile.js b/gulpfile.js +/*\n+ * Copyright (c) Microsoft Corporation. All rights reserved.\n+ * Licensed under the MIT License. See License.txt in the project root for\n+ * license information.\n+ */\n+\n+'use strict';\n+\nconst gulp = require('gulp');\nconst args = require('yargs').argv;\nconst colors = require('colors');\n",
        "date": "18.04.2017 08:18:22",
        "repo": "azure/azure-sdk-for-node",
        "type": "update",
        "chatgpt_zeroshot": "Add copyright notice and update dependencies in gulpfile"
    },
    {
        "msg": "update version to 2.0.0-preview because breaking changes introduced by autorest update",
        "diff": "diff --git a/lib/services/storageManagement2/package.json b/lib/services/storageManagement2/package.json \"Wang, Yugang <yugangw@microsoft.com>\",\n\"Zavery, Amar <amzavery@microsoft.com>\"\n],\n- \"version\": \"1.1.0-preview\",\n+ \"version\": \"2.0.0-preview\",\n\"description\": \"Microsoft Azure Storage Resource Provider Management Client Library for Node\",\n\"tags\": [\n\"azure\",\n",
        "date": "09.06.2017 15:11:00",
        "repo": "azure/azure-sdk-for-node",
        "type": "update",
        "chatgpt_zeroshot": "Update version to 2.0.0-preview in storageManagement2 package.json"
    },
    {
        "msg": "update gulp script to add --prerelase tag",
        "diff": "diff --git a/gulpfile.js b/gulpfile.js @@ -374,7 +374,7 @@ const mappings = {\n}\n};\n-const defaultAutoRestVersion = '1.0.1-20170608-2300-nightly';\n+const defaultAutoRestVersion = '1.1.0-20170704-2300-nightly --prerelease';\nvar usingAutoRestVersion;\nconst specRoot = args['spec-root'] || \"https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master\";\nconst project = args['project'];\n",
        "date": "05.07.2017 14:03:58",
        "repo": "azure/azure-sdk-for-node",
        "type": "update",
        "chatgpt_zeroshot": "Update default AutoRest version to 1.1.0-20170704-2300-nightly --prerelease"
    },
    {
        "msg": "update content per guidance",
        "diff": "diff --git a/package_service_mapping.json b/package_service_mapping.json \"service_name\": \"Monitor\",\n\"category\": \"Management\"\n},\n- \"azure-arm-intune\": {\n- \"service_name\": \"Intune\",\n- \"category\": \"Management\"\n- },\n\"azure-arm-iothub\": {\n\"service_name\": \"IoT Hub\",\n\"category\": \"Management\"\n",
        "date": "27.07.2017 11:54:27",
        "repo": "azure/azure-sdk-for-node",
        "type": "update",
        "chatgpt_zeroshot": "Remove azure-arm-intune service from package_service_mapping.json"
    },
    {
        "msg": "update API version in Network's README.md",
        "diff": "diff --git a/lib/services/networkManagement2/README.md b/lib/services/networkManagement2/README.md This project provides a Node.js package that makes it easy to manage Microsoft Azure Network Resources.\n- **Node.js version: 6.x.x or higher**\n-- **API version: 2017-06-01**\n+- **API version: 2017-08-01**\n## Features\n",
        "date": "01.09.2017 10:22:52",
        "repo": "azure/azure-sdk-for-node",
        "type": "update",
        "chatgpt_zeroshot": "Update Azure API version to 2017-08-01"
    },
    {
        "msg": "update gulp to exclude search data plane as this package is being managed by service team",
        "diff": "diff --git a/gulpfile.js b/gulpfile.js @@ -22,6 +22,7 @@ const specRoot = args['spec-root'] || \"https://raw.githubusercontent.com/Azure/a\nconst project = args['project'];\nvar language = 'Azure.NodeJS';\nvar modeler = 'Swagger';\n+const regexForExcludedServices = /\\/(intune|documentdbManagement|insightsManagement|insights|search)\\//i;\nfunction getAutorestVersion(version) {\nif (!version) version = 'latest';\n@@ -241,9 +242,9 @@ gulp.task('validate-each-packagejson', (cb) => {\n//This task updates the dependencies in package.json to the relative service libraries inside lib/services directory.\ngulp.task('update-deps-rollup', (cb) => {\n- const re = /\\/(intune|documentdbManagement|insightsManagement|insights)\\//i;\n+\nlet packagePaths = glob.sync(path.join(__dirname, './lib/services', '/**/package.json')).filter((packagePath) => {\n- return packagePath.match(re) === null;\n+ return packagePath.match(regexForExcludedServices) === null;\n});\nlet rollupPackage = require('./package.json');\nlet rollupDependencies = rollupPackage.dependencies;\n@@ -372,9 +373,8 @@ gulp.task('sync-mappings-with-repo', (cb) => {\n// This task synchronizes the dependencies in package.json to the versions of relative service libraries inside lib/services directory.\n// This should be done in the end to ensure that all the package dependencies have the correct version.\ngulp.task('sync-deps-rollup', (cb) => {\n- const re = /\\/(intune|documentdbManagement|insightsManagement|insights)\\//i;\nlet packagePaths = glob.sync(path.join(__dirname, './lib/services', '/**/package.json')).filter((packagePath) => {\n- return packagePath.match(re) === null;\n+ return packagePath.match(regexForExcludedServices) === null;\n});\n//console.log(packagePaths);\nconsole.log(`Total packages found under lib/services: ${packagePaths.length}`);\n",
        "date": "29.09.2017 11:41:15",
        "repo": "azure/azure-sdk-for-node",
        "type": "update",
        "chatgpt_zeroshot": "Refactor regex for excluded services in gulpfile"
    },
    {
        "msg": "update Network's version",
        "diff": "diff --git a/lib/services/networkManagement2/package.json b/lib/services/networkManagement2/package.json \"Rajendran, Deepak <derajen@microsoft.com>\",\n\"Choubey, Ankur <anchoube@microsoft.com>\"\n],\n- \"version\": \"4.0.0\",\n+ \"version\": \"4.0.1\",\n\"description\": \"Microsoft Azure Network Resource Provider Management Client Library for node\",\n\"tags\": [\n\"azure\",\n",
        "date": "03.10.2017 17:34:39",
        "repo": "azure/azure-sdk-for-node",
        "type": "update",
        "chatgpt_zeroshot": "Bumped version to 4.0.1 in package.json"
    },
    {
        "msg": "update ms-rest and ms-rest-azure dependencies",
        "diff": "diff --git a/package.json b/package.json \"azure-storage-legacy\": \"0.10.2\",\n\"mime\": \"~1.2.4\",\n\"moment\": \"~2.18.1\",\n- \"ms-rest\": \"^2.2.3\",\n- \"ms-rest-azure\": \"^2.4.1\",\n+ \"ms-rest\": \"^2.2.5\",\n+ \"ms-rest-azure\": \"^2.4.4\",\n\"request\": \"^2.81.0\",\n\"underscore\": \"1.8.3\",\n\"uuid\": \"^3.0.1\"\n",
        "date": "08.11.2017 10:14:59",
        "repo": "azure/azure-sdk-for-node",
        "type": "update",
        "chatgpt_zeroshot": "Update ms-rest and ms-rest-azure versions in package.json"
    },
    {
        "msg": "update typings to include needed properties that already exist but weren't exposed to typescript",
        "diff": "diff --git a/runtime/ms-rest/index.d.ts b/runtime/ms-rest/index.d.ts @@ -15,6 +15,23 @@ export interface ClientRequestOptions extends RequestOptions {\njar?: boolean;\n}\n+/**\n+ * HttpResponse wrapper that encapsulates the\n+ * response stream plus available status codes/messages\n+ *\n+ * @property {Object} headers - response headers returned from the server, duplicate filtered\n+ * as described in https://nodejs.org/dist/latest-v8.x/docs/api/http.html#http_message_headers\n+ * @property {Array} [rawHeaders] - Original unprocessed response headers\n+ * @property {Number} statusCode - HTTP status code for response\n+ * @property {String} statusMessage - HTTP status response message\n+ */\n+export interface Response extends stream.Readable {\n+ headers: any;\n+ rawHeaders: string[];\n+ statusCode: number;\n+ statusMessage: string;\n+}\n+\n/**\n* HttpOperationResponse wrapper that provides the raw request, raw response and the deserialized response body.\n*\n@@ -24,7 +41,7 @@ export interface ClientRequestOptions extends RequestOptions {\n*/\nexport interface HttpOperationResponse<T> {\nrequest: WebResource;\n- response: stream;\n+ response: Response;\nbody: T;\n}\n@@ -250,6 +267,13 @@ export interface UrlBasedRequestPrepareOptions extends RequestPrepareOptions {\n* properties to initiate a request.\n*/\nexport class WebResource {\n+ /**\n+ * Access to raw request headers for requests. Useful when you need to set a header\n+ * on every request (like in a credential object) where the prepare method does\n+ * far too much work.\n+ */\n+ public headers: { [key: string]: string; };\n+\n/**\n* Hook up the given input stream to a destination output stream if the WebResource method\n* requires a request body and a body is not already set.\n@@ -260,6 +284,7 @@ export class WebResource {\n* @return destStream\n*/\npipeInput(inputStream: stream.Readable, destStream: stream.Writable): stream.Writable;\n+\n/**\n* Validates that the required properties such as method, url, headers['Content-Type'],\n* headers['accept-language'] are defined. It will throw an error if one of the above\n",
        "date": "14.11.2017 15:55:55",
        "repo": "azure/azure-sdk-for-node",
        "type": "update",
        "chatgpt_zeroshot": "Add HttpResponse and Response interfaces, update HttpOperationResponse interface, and add headers property to WebResource class"
    },
    {
        "msg": "update package.json to new runtime version",
        "diff": "diff --git a/package.json b/package.json \"mime\": \"~1.2.4\",\n\"moment\": \"~2.18.1\",\n\"ms-rest\": \"^2.2.5\",\n- \"ms-rest-azure\": \"^2.4.4\",\n+ \"ms-rest-azure\": \"^2.5.0\",\n\"request\": \"^2.81.0\",\n\"underscore\": \"1.8.3\",\n\"uuid\": \"^3.0.1\"\n",
        "date": "28.12.2017 15:44:35",
        "repo": "azure/azure-sdk-for-node",
        "type": "update",
        "chatgpt_zeroshot": "Update ms-rest-azure version to 2.5.0"
    },
    {
        "msg": "update package mapping",
        "diff": "diff --git a/package_service_mapping.json b/package_service_mapping.json \"category\": \"Client\",\n\"service_name\": \"Batch\"\n},\n- \"azure-cognitiveservices\": {\n+ \"azure-cognitiveservices-computervision\": {\n\"category\": \"Client\",\n- \"service_name\": \"Cognitiveservices\"\n+ \"service_name\": \"computerVision\"\n+ },\n+ \"azure-cognitiveservices-contentmoderator\": {\n+ \"category\": \"Client\",\n+ \"service_name\": \"contentModerator\"\n+ },\n+ \"azure-cognitiveservices-customsearch\": {\n+ \"category\": \"Client\",\n+ \"service_name\": \"customSearch\"\n+ },\n+ \"azure-cognitiveservices-entitysearch\": {\n+ \"category\": \"Client\",\n+ \"service_name\": \"entitySearch\"\n+ },\n+ \"azure-cognitiveservices-face\": {\n+ \"category\": \"Client\",\n+ \"service_name\": \"face\"\n+ },\n+ \"azure-cognitiveservices-imagesearch\": {\n+ \"category\": \"Client\",\n+ \"service_name\": \"imageSearch\"\n+ },\n+ \"azure-cognitiveservices-language\": {\n+ \"category\": \"Client\",\n+ \"service_name\": \"language\"\n+ },\n+ \"azure-cognitiveservices-newssearch\": {\n+ \"category\": \"Client\",\n+ \"service_name\": \"newsSearch\"\n+ },\n+ \"azure-cognitiveservices-search\": {\n+ \"category\": \"Client\",\n+ \"service_name\": \"search\"\n+ },\n+ \"azure-cognitiveservices-spellcheck\": {\n+ \"category\": \"Client\",\n+ \"service_name\": \"spellCheck\"\n+ },\n+ \"azure-cognitiveservices-textanalytics\": {\n+ \"category\": \"Client\",\n+ \"service_name\": \"textAnalytics\"\n+ },\n+ \"azure-cognitiveservices-videosearch\": {\n+ \"category\": \"Client\",\n+ \"service_name\": \"videoSearch\"\n+ },\n+ \"azure-cognitiveservices-vision\": {\n+ \"category\": \"Client\",\n+ \"service_name\": \"vision\"\n+ },\n+ \"azure-cognitiveservices-websearch\": {\n+ \"category\": \"Client\",\n+ \"service_name\": \"webSearch\"\n},\n\"azure-graph\": {\n\"category\": \"Client\",\n",
        "date": "17.01.2018 12:26:28",
        "repo": "azure/azure-sdk-for-node",
        "type": "update",
        "chatgpt_zeroshot": "Update service names in package_service_mapping.json"
    },
    {
        "msg": "update package.json version",
        "diff": "diff --git a/lib/services/consumptionManagement/package.json b/lib/services/consumptionManagement/package.json \"contributors\": [\n\"Zavery, Amar <amzavery@microsoft.com>\"\n],\n- \"version\": \"2.1.0\",\n+ \"version\": \"3.0.0\",\n\"description\": \"Microsoft Azure Consumption Management Client Library for node\",\n\"tags\": [\n\"azure\",\n",
        "date": "31.01.2018 18:53:26",
        "repo": "azure/azure-sdk-for-node",
        "type": "update",
        "chatgpt_zeroshot": "Bump version to 3.0.0 in consumptionManagement package.json"
    },
    {
        "msg": "update dummy OID to clarify we dont need actual recorded value",
        "diff": "diff --git a/test/services/keyVault/keyVault-storage-tests.js b/test/services/keyVault/keyVault-storage-tests.js @@ -49,7 +49,7 @@ var testStorageAccount;\nvar _tokenFromUserCredentials = () => {\nreturn new Promise ( (resolve, reject) => {\nif(suite.isPlayback) {\n- resolve( { 'oid': '7541419d-883d-452f-a823-56aa8bf0749f' } );\n+ resolve( { 'oid': 'dummyoid' } );\nreturn;\n}\n",
        "date": "21.05.2018 10:23:21",
        "repo": "azure/azure-sdk-for-node",
        "type": "update",
        "chatgpt_zeroshot": "Update testStorageAccount token to use 'dummyoid' instead of actual oid."
    },
    {
        "msg": "update storage test rec",
        "diff": "diff --git a/test/recordings/keyvaultstorage-tests/Key_Vault_Storage_should_successfully_assign_Key_Vault_the_operator_role_on_a_storage_account.nock.js b/test/recordings/keyvaultstorage-tests/Key_Vault_Storage_should_successfully_assign_Key_Vault_the_operator_role_on_a_storage_account.nock.js @@ -9,7 +9,7 @@ exports.scopes = [[function (nock) {\nvar result =\nnock('https://management.azure.com:443')\n.filteringRequestBody(function (path) { return '*';})\n-.put('/subscriptions/6d8e19c2-3a60-481f-8ebb-118dc3007c5d/resourcegroups/nodeTestGroup8988?api-version=2017-05-10', '*')\n+.put('/subscriptions/6d8e19c2-3a60-481f-8ebb-118dc3007c5d/resourcegroups/nodeTestGroup8988?api-version=2018-03-01-preview', '*')\n.reply(201, \"{\\\"id\\\":\\\"/subscriptions/6d8e19c2-3a60-481f-8ebb-118dc3007c5d/resourceGroups/nodeTestGroup8988\\\",\\\"name\\\":\\\"nodeTestGroup8988\\\",\\\"location\\\":\\\"westus\\\",\\\"properties\\\":{\\\"provisioningState\\\":\\\"Succeeded\\\"}}\", { 'cache-control': 'no-cache',\npragma: 'no-cache',\n'content-length': '187',\n@@ -73,12 +73,12 @@ function (nock) {\nvar result =\nnock('https://management.azure.com:443')\n.filteringRequestBody(function (path) { return '*';})\n-.put('/subscriptions/6d8e19c2-3a60-481f-8ebb-118dc3007c5d/resourceGroups/nodeTestGroup8988/providers/Microsoft.Storage/storageAccounts/testakvsa725?api-version=2017-10-01', '*')\n+.put('/subscriptions/6d8e19c2-3a60-481f-8ebb-118dc3007c5d/resourceGroups/nodeTestGroup8988/providers/Microsoft.Storage/storageAccounts/testakvsa725?api-version=2018-03-01-preview', '*')\n.reply(202, \"\", { 'cache-control': 'no-cache',\npragma: 'no-cache',\n'content-type': 'text/plain; charset=utf-8',\nexpires: '-1',\n- location: 'https://management.azure.com/subscriptions/6d8e19c2-3a60-481f-8ebb-118dc3007c5d/providers/Microsoft.Storage/locations/westus/asyncoperations/13677821-d80a-4bae-92c0-e81a17ae32e0?monitor=true&api-version=2017-10-01',\n+ location: 'https://management.azure.com/subscriptions/6d8e19c2-3a60-481f-8ebb-118dc3007c5d/providers/Microsoft.Storage/locations/westus/asyncoperations/13677821-d80a-4bae-92c0-e81a17ae32e0?monitor=true&api-version=2018-03-01-preview',\n'retry-after': '17',\n'x-ms-request-id': '13677821-d80a-4bae-92c0-e81a17ae32e0',\n'strict-transport-security': 'max-age=31536000; includeSubDomains',\n@@ -94,7 +94,7 @@ nock('https://management.azure.com:443')\nfunction (nock) {\nvar result =\nnock('https://management.azure.com:443')\n- .get('/subscriptions/6d8e19c2-3a60-481f-8ebb-118dc3007c5d/providers/Microsoft.Storage/locations/westus/asyncoperations/13677821-d80a-4bae-92c0-e81a17ae32e0?monitor=true&api-version=2017-10-01')\n+ .get('/subscriptions/6d8e19c2-3a60-481f-8ebb-118dc3007c5d/providers/Microsoft.Storage/locations/westus/asyncoperations/13677821-d80a-4bae-92c0-e81a17ae32e0?monitor=true&api-version=2018-03-01-preview')\n.reply(200, \"{\\\"sku\\\":{\\\"name\\\":\\\"Standard_RAGRS\\\",\\\"tier\\\":\\\"Standard\\\"},\\\"kind\\\":\\\"Storage\\\",\\\"id\\\":\\\"/subscriptions/6d8e19c2-3a60-481f-8ebb-118dc3007c5d/resourceGroups/nodeTestGroup8988/providers/Microsoft.Storage/storageAccounts/testakvsa725\\\",\\\"name\\\":\\\"testakvsa725\\\",\\\"type\\\":\\\"Microsoft.Storage/storageAccounts\\\",\\\"location\\\":\\\"westus\\\",\\\"tags\\\":{},\\\"properties\\\":{\\\"networkAcls\\\":{\\\"bypass\\\":\\\"AzureServices\\\",\\\"virtualNetworkRules\\\":[],\\\"ipRules\\\":[],\\\"defaultAction\\\":\\\"Allow\\\"},\\\"trustedDirectories\\\":[\\\"72f988bf-86f1-41af-91ab-2d7cd011db47\\\"],\\\"supportsHttpsTrafficOnly\\\":false,\\\"encryption\\\":{\\\"services\\\":{\\\"file\\\":{\\\"enabled\\\":true,\\\"lastEnabledTime\\\":\\\"2018-06-27T23:53:18.5429883Z\\\"},\\\"blob\\\":{\\\"enabled\\\":true,\\\"lastEnabledTime\\\":\\\"2018-06-27T23:53:18.5429883Z\\\"}},\\\"keySource\\\":\\\"Microsoft.Storage\\\"},\\\"provisioningState\\\":\\\"Succeeded\\\",\\\"creationTime\\\":\\\"2018-06-27T23:53:18.2617285Z\\\",\\\"primaryEndpoints\\\":{\\\"blob\\\":\\\"https://testakvsa725.blob.core.windows.net/\\\",\\\"queue\\\":\\\"https://testakvsa725.queue.core.windows.net/\\\",\\\"table\\\":\\\"https://testakvsa725.table.core.windows.net/\\\",\\\"file\\\":\\\"https://testakvsa725.file.core.windows.net/\\\"},\\\"primaryLocation\\\":\\\"westus\\\",\\\"statusOfPrimary\\\":\\\"available\\\",\\\"secondaryLocation\\\":\\\"eastus\\\",\\\"statusOfSecondary\\\":\\\"available\\\",\\\"secondaryEndpoints\\\":{\\\"blob\\\":\\\"https://testakvsa725-secondary.blob.core.windows.net/\\\",\\\"queue\\\":\\\"https://testakvsa725-secondary.queue.core.windows.net/\\\",\\\"table\\\":\\\"https://testakvsa725-secondary.table.core.windows.net/\\\"}}}\", { 'cache-control': 'no-cache',\npragma: 'no-cache',\n'content-length': '1380',\n",
        "date": "28.06.2018 15:33:51",
        "repo": "azure/azure-sdk-for-node",
        "type": "update",
        "chatgpt_zeroshot": "Update API version to 2018-03-01-preview for resource group and storage account operations."
    },
    {
        "msg": "update path to sdk-tools",
        "diff": "diff --git a/.azure-pipelines/client.yml b/.azure-pipelines/client.yml @@ -144,7 +144,7 @@ jobs:\nsteps:\n- powershell: |\n- Invoke-WebRequest -Uri \"https://github.com/chidozieononiwu/azure-sdk-tools/releases/download/sdk-tools_v1.0/sdk-tools.zip\" `\n+ Invoke-WebRequest -Uri \"https://github.com/Azure/azure-sdk-tools/releases/download/sdk-tools_14793/sdk-tools.zip\" `\n-OutFile \"sdk-tools.zip\" | Wait-Process; Expand-Archive -Path \"sdk-tools.zip\" -DestinationPath \"./sdk-tools/\"\nworkingDirectory: '$(Build.BinariesDirectory)'\ndisplayName: 'Download Tools Archive From Github Release and Extract it'\n@@ -152,7 +152,7 @@ jobs:\n- task: PythonScript@0\ndisplayName: 'Run VerifyAgentOS script'\ninputs:\n- scriptPath: '$(Build.BinariesDirectory)/sdk-tools/verify_agent_os.py'\n+ scriptPath: '$(Build.BinariesDirectory)/sdk-tools/scripts/python/verify_agent_os.py'\narguments: $(OSName)\n- task: NodeTool@0\n",
        "date": "04.04.2019 13:30:12",
        "repo": "azure/azure-sdk-for-node",
        "type": "update",
        "chatgpt_zeroshot": "Update download URL and script path in Azure Pipelines configuration."
    },
    {
        "msg": "update tests to pass all required parameters to exec()",
        "diff": "diff --git a/packages/preact-iso/test/match.test.js b/packages/preact-iso/test/match.test.js import { exec } from '../router.js';\n+function doExec(path, route, opts) {\n+ return exec(path, route, { path, query: {}, params: {}, ...(opts || {}) });\n+}\n+\ndescribe('match', () => {\nit('Base route', () => {\n- const accurateResult = exec('/', '/', { path: '/' });\n+ const accurateResult = doExec('/', '/');\nexpect(accurateResult).toEqual({ path: '/', params: {} });\n- const inaccurateResult = exec('/user/1', '/', { path: '/' });\n+ const inaccurateResult = doExec('/user/1', '/');\nexpect(inaccurateResult).toEqual(undefined);\n});\nit('Param route', () => {\n- const accurateResult = exec('/user/2', '/user/:id', { path: '/' });\n+ const accurateResult = doExec('/user/2', '/user/:id');\nexpect(accurateResult).toEqual({ path: '/', params: { id: '2' } });\n- const inaccurateResult = exec('/', '/user/:id', { path: '/' });\n+ const inaccurateResult = doExec('/', '/user/:id');\nexpect(inaccurateResult).toEqual(undefined);\n});\nit('Optional param route', () => {\n- const accurateResult = exec('/user', '/user/:id?', { path: '/' });\n+ const accurateResult = doExec('/user', '/user/:id?');\nexpect(accurateResult).toEqual({ path: '/', params: { id: undefined } });\n- const inaccurateResult = exec('/', '/user/:id?', { path: '/' });\n+ const inaccurateResult = doExec('/', '/user/:id?');\nexpect(inaccurateResult).toEqual(undefined);\n});\nit('Handles leading/trailing slashes', () => {\n- const result = exec('/about-late/_SEGMENT1_/_SEGMENT2_/', '/about-late/:seg1/:seg2/', {});\n+ const result = doExec('/about-late/_SEGMENT1_/_SEGMENT2_/', '/about-late/:seg1/:seg2/');\nexpect(result).toEqual({\nparams: {\nseg1: '_SEGMENT1_',\n@@ -36,7 +40,7 @@ describe('match', () => {\n});\nit('should not overwrite existing properties', () => {\n- const result = exec('/foo/bar', '/:path/:query', { path: '/' });\n+ const result = doExec('/foo/bar', '/:path/:query');\nexpect(result).toEqual({\nparams: { path: 'foo', query: 'bar' },\npath: '/'\n",
        "date": "04.05.2021 15:28:26",
        "repo": "preactjs/wmr",
        "type": "update",
        "chatgpt_zeroshot": "Refactor match.test.js to use a helper function for executing routes"
    },
    {
        "msg": "update other matrices",
        "diff": "diff --git a/.github/workflows/main.yml b/.github/workflows/main.yml @@ -65,7 +65,7 @@ jobs:\nruns-on: ubuntu-latest\nstrategy:\nmatrix:\n- node-version: [12.18, 14.x]\n+ node-version: [12.x, 14.x]\nsteps:\n- name: Checkout\nuses: actions/checkout@v2\n@@ -96,7 +96,7 @@ jobs:\nruns-on: ubuntu-latest\nstrategy:\nmatrix:\n- node-version: [12.18, 14.x]\n+ node-version: [12.x, 14.x]\nsteps:\n- name: Checkout\nuses: actions/checkout@v2\n",
        "date": "29.09.2021 13:17:19",
        "repo": "preactjs/wmr",
        "type": "update",
        "chatgpt_zeroshot": "Update node version matrix to include all versions in the 12.x range."
    },
    {
        "msg": "update an anchor in the README file to point to the right place.",
        "diff": "diff --git a/README.md b/README.md @@ -41,7 +41,7 @@ For examples, see [`./sample_data`](./sample_data).\n| Name | Type | Required | Description |\n| - | - | - | - |\n-| configuration | [ConfigurationObject](#configuration-object) | no | configuration for this dataset |\n+| configuration | [ConfigurationObject](#ConfigurationObject) | no | configuration for this dataset |\n| dataset | array\\<object\\> | yes | An array of data points. All data points are expected to have the same schema. |\n#### ConfigurationObject\n",
        "date": "18.04.2018 13:35:49",
        "repo": "iqtlabs/crviz",
        "type": "update",
        "chatgpt_zeroshot": "Fix casing of ConfigurationObject in README.md"
    },
    {
        "msg": "update dockerfile for more correct usage of apk and healthcheck",
        "diff": "diff --git a/Dockerfile b/Dockerfile FROM node:alpine\nLABEL maintainer=\"rashley-iqt <rashley@iqt.org>\"\n+RUN apk --no-cache upgrade && \\\n+ apk --no-cache add \\\n+ curl\n+\nHEALTHCHECK --interval=15s --timeout=15s \\\nCMD curl --silent --fail http://localhost:5000/ || exit 1\n-RUN apk add --update \\\n- curl \\\n- && rm -rf /var/cache/apk/*\n-\nCOPY . /app\nWORKDIR /app\n",
        "date": "23.01.2019 11:18:44",
        "repo": "iqtlabs/crviz",
        "type": "update",
        "chatgpt_zeroshot": "Add curl to Dockerfile and update healthcheck command"
    },
    {
        "msg": "update buildx version",
        "diff": "diff --git a/.github/workflows/docker.yml b/.github/workflows/docker.yml @@ -17,9 +17,10 @@ jobs:\nrun: if [ \"${{ steps.get_version.outputs.VERSION }}\" == \"master\" ]; then echo ::set-output name=VERSION::latest; else echo ::set-output name=VERSION::${{ steps.get_version.outputs.VERSION }}; fi\n- name: Set up Docker Buildx\nid: buildx\n- uses: crazy-max/ghaction-docker-buildx@v1.4.0\n+ uses: crazy-max/ghaction-docker-buildx@v1.6.0\nwith:\n- version: latest\n+ buildx-version: latest\n+ qemu-version: latest\n- name: Build Docker\nrun: |\n",
        "date": "07.05.2020 16:10:50",
        "repo": "iqtlabs/crviz",
        "type": "update",
        "chatgpt_zeroshot": "Update Docker Buildx action to v1.6.0 and add support for latest QEMU version."
    },
    {
        "msg": "update GA buildx to v3",
        "diff": "diff --git a/.github/workflows/docker.yml b/.github/workflows/docker.yml @@ -17,7 +17,7 @@ jobs:\nrun: if [ \"${{ steps.get_version.outputs.VERSION }}\" == \"master\" ]; then echo ::set-output name=VERSION::latest; else echo ::set-output name=VERSION::${{ steps.get_version.outputs.VERSION }}; fi\n- name: Set up Docker Buildx\nid: buildx\n- uses: crazy-max/ghaction-docker-buildx@v1.6.2\n+ uses: crazy-max/ghaction-docker-buildx@v3\nwith:\nbuildx-version: latest\nqemu-version: latest\n",
        "date": "08.06.2020 09:17:39",
        "repo": "iqtlabs/crviz",
        "type": "update",
        "chatgpt_zeroshot": "Update Docker Buildx action to version 3"
    },
    {
        "msg": "update README.md, add Deskreen include Deskreen in readme section: Who is using `simple-peer`?",
        "diff": "diff --git a/README.md b/README.md @@ -647,6 +647,9 @@ constructor. See the API docs above.\n- [simple-peer-files](https://github.com/subins2000/simple-peer-files) - A simple library to easily transfer files over WebRTC. Has a feature to resume file transfer after uploader interruption.\n- [WebDrop.Space](https://WebDrop.Space) - Share files and messages across devices. Cross-platform, no installation alternative to AirDrop, Xender. [Source Code](https://github.com/subins2000/WebDrop)\n- [Speakrandom](https://speakrandom.com) - Voice-chat social network using simple-peer to create audio conferences!\n+- [Deskreen](https://deskreen.com) - A desktop app that helps you to turn any device into a secondary screen for your computer. It uses simple-peer for sharing entire computer screen to any device with a web browser.\n+\n+\n- *Your app here! - send a PR!*\n",
        "date": "22.02.2021 14:45:37",
        "repo": "feross/simple-peer",
        "type": "update",
        "chatgpt_zeroshot": "Add Deskreen to list of projects in README.md"
    },
    {
        "msg": "update accessibility.md added quotes to render an '<a>' tag in WAI-ARIA compliance",
        "diff": "diff --git a/packages/chakra-ui-core/src/CLink/accessibility.md b/packages/chakra-ui-core/src/CLink/accessibility.md @@ -16,7 +16,7 @@ A link widget provides an interactive reference to a resource. The target resour\n### `CLink` WAI-ARIA compliance\nThe element containing the link text or graphic has role of link.\n-Links are accessible elements used primarily for navigation. This component is styled to resemble a hyperlink and semantically renders an <a>.\n+Links are accessible elements used primarily for navigation. This component is styled to resemble a hyperlink and semantically renders an `<a>`.\nThe `CLink` component composes `CPseudoBox`, so you can pass all `CPseudoBox` props\n",
        "date": "27.06.2020 14:51:16",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "update",
        "chatgpt_zeroshot": "Improve WAI-ARIA compliance in CLink component"
    },
    {
        "msg": "update accessibility.md keyboard interaction removed as that was optional in nature.",
        "diff": "diff --git a/packages/chakra-ui-core/src/CLink/accessibility.md b/packages/chakra-ui-core/src/CLink/accessibility.md @@ -11,8 +11,6 @@ A link widget provides an interactive reference to a resource. The target resour\n### `CLink` Keyboard Interaction\n- [x] **`Enter`**: Executes the link and moves focus to the link target.\n-- [x] **`Shift + F10 (Optional)`**: Opens a context menu for the link.\n-\n### `CLink` WAI-ARIA compliance\nThe element containing the link text or graphic has role of link.\n",
        "date": "27.06.2020 16:18:43",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "update",
        "chatgpt_zeroshot": "Remove optional keyboard interaction from CLink component"
    },
    {
        "msg": "update webpack 5 version in docs",
        "diff": "diff --git a/website/pages/getting-started.mdx b/website/pages/getting-started.mdx @@ -100,7 +100,7 @@ yarn add --dev \\\nChoose your webpack version\n```bash\n-yarn add --dev webpack@5.24.0 html-webpack-plugin@5.2.0\n+yarn add --dev webpack@5.65.0 html-webpack-plugin@5.2.0\n# or\nyarn add --dev webpack@4.46.0 html-webpack-plugin@4.5.2\n```\n",
        "date": "07.01.2022 13:05:32",
        "repo": "jaredpalmer/razzle",
        "type": "update",
        "chatgpt_zeroshot": "Update webpack version to 5.65.0 in getting-started guide"
    },
    {
        "msg": "update transition to not reveal edge. Refactored to better performing transform property.",
        "diff": "diff --git a/src/components/library/library.css b/src/components/library/library.css @@ -98,7 +98,7 @@ $sides: 20rem;\n/* @todo: move this animation to onClick? */\n.filter-component:hover .x-icon-wrapper .x-icon {\n- left: 0;\n+ transform: translateX(0);\nopacity: 1;\n}\n@@ -128,15 +128,14 @@ $sides: 20rem;\n.x-icon {\nposition: relative;\n- left: 10px;\n+ transform: translateX(8px);\nopacity: 0;\nmargin: 0.25rem;\nuser-select: none;\n- /* @todo: transforms instead of left, for smoother perf? */\n- transition: left 0.09s cubic-bezier(0.78, 1, 1, 1),\n- opacity 0.04s ease;\n+ transition: transform 0.085s cubic-bezier(0.78, 1, 1, 1),\n+ opacity 0.05s linear;\n}\n.filter-input {\n",
        "date": "12.05.2017 12:26:21",
        "repo": "wdr-data/code4maus",
        "type": "update",
        "chatgpt_zeroshot": "Refactor animation in library.css for smoother performance"
    },
    {
        "msg": "update toolbox before ScratchBlocks inject",
        "diff": "diff --git a/src/containers/blocks.jsx b/src/containers/blocks.jsx @@ -53,12 +53,9 @@ class Blocks extends React.Component {\ncomponentDidMount () {\nthis.ScratchBlocks.FieldColourSlider.activateEyedropper_ = this.props.onActivateColorPicker;\n- const workspaceConfig = defaultsDeep({}, Blocks.defaultOptions, this.props.options);\n+ const workspaceConfig = defaultsDeep({}, Blocks.defaultOptions, this.props.options, {toolbox: this.props.toolboxXML});\nthis.workspace = this.ScratchBlocks.inject(this.blocks, workspaceConfig);\n- // Load the toolbox from the GUI (otherwise we get the scratch-blocks default toolbox)\n- this.workspace.updateToolbox(this.props.toolboxXML);\n-\n// @todo change this when blockly supports UI events\naddFunctionListener(this.workspace, 'translate', this.onWorkspaceMetricsChange);\naddFunctionListener(this.workspace, 'zoom', this.onWorkspaceMetricsChange);\n",
        "date": "31.10.2017 10:38:15",
        "repo": "wdr-data/code4maus",
        "type": "update",
        "chatgpt_zeroshot": "Update workspace configuration to include toolboxXML prop"
    },
    {
        "msg": "update fullscreen integration test to use new loadURI function.",
        "diff": "diff --git a/test/integration/test.js b/test/integration/test.js @@ -126,7 +126,7 @@ describe('costumes, sounds and variables', () => {\n.window()\n.setSize(1920, 1080);\nconst projectId = '96708228';\n- await driver.get(`file://${uri}#${projectId}`);\n+ await loadUri(`${uri}#${projectId}`);\nawait new Promise(resolve => setTimeout(resolve, 2000));\nawait clickXpath('//img[@title=\"Zoom Control\"]');\nawait clickXpath('//img[@title=\"Go\"]');\n",
        "date": "25.11.2017 09:39:03",
        "repo": "wdr-data/code4maus",
        "type": "update",
        "chatgpt_zeroshot": "Refactor code to use loadUri function for loading project URI."
    },
    {
        "msg": "update scratch-vm version in package.json",
        "diff": "diff --git a/package.json b/package.json \"scratch-paint\": \"0.2.0-prerelease.20180309170325\",\n\"scratch-render\": \"0.1.0-prerelease.1516837442\",\n\"scratch-storage\": \"0.4.0\",\n- \"scratch-vm\": \"0.1.0-prerelease.1520606673-prerelease.1520606691\",\n+ \"scratch-vm\": \"0.1.0-prerelease.1521814818-prerelease.1521814838\",\n\"selenium-webdriver\": \"3.6.0\",\n\"startaudiocontext\": \"1.2.1\",\n\"style-loader\": \"^0.20.0\",\n",
        "date": "23.03.2018 10:32:33",
        "repo": "wdr-data/code4maus",
        "type": "update",
        "chatgpt_zeroshot": "Update scratch-vm version to 0.1.0-prerelease.1521814818-prerelease.1521814838"
    },
    {
        "msg": "update scratch-blocks (flyout bottom padding)",
        "diff": "diff --git a/package.json b/package.json \"redux-throttle\": \"0.1.1\",\n\"rimraf\": \"^2.6.1\",\n\"scratch-audio\": \"0.1.0-prerelease.1523977528\",\n- \"scratch-blocks\": \"0.1.0-prerelease.1526329848\",\n+ \"scratch-blocks\": \"0.1.0-prerelease.1526507753\",\n\"scratch-l10n\": \"2.0.20180108132626\",\n\"scratch-paint\": \"0.2.0-prerelease.20180514184134\",\n\"scratch-render\": \"0.1.0-prerelease.20180514172756\",\n",
        "date": "17.05.2018 09:45:19",
        "repo": "wdr-data/code4maus",
        "type": "update",
        "chatgpt_zeroshot": "Update scratch-blocks version to 0.1.0-prerelease.1526507753"
    },
    {
        "msg": "update vm and blocks",
        "diff": "diff --git a/package.json b/package.json \"redux-throttle\": \"0.1.1\",\n\"rimraf\": \"^2.6.1\",\n\"scratch-audio\": \"0.1.0-prerelease.1528210666\",\n- \"scratch-blocks\": \"0.1.0-prerelease.1528384994\",\n+ \"scratch-blocks\": \"0.1.0-prerelease.1528400332\",\n\"scratch-l10n\": \"3.0.20180604162003\",\n\"scratch-paint\": \"0.2.0-prerelease.20180607153112\",\n\"scratch-render\": \"0.1.0-prerelease.20180605145739\",\n\"scratch-storage\": \"0.5.0\",\n- \"scratch-vm\": \"0.1.0-prerelease.1528384542\",\n+ \"scratch-vm\": \"0.1.0-prerelease.1528399883\",\n\"scratch-svg-renderer\": \"0.2.0-prerelease.20180607141644\",\n\"selenium-webdriver\": \"3.6.0\",\n\"startaudiocontext\": \"1.2.1\",\n",
        "date": "07.06.2018 15:43:47",
        "repo": "wdr-data/code4maus",
        "type": "update",
        "chatgpt_zeroshot": "Update scratch-blocks and scratch-vm versions"
    },
    {
        "msg": "update manifest name",
        "diff": "diff --git a/gatsby-config.js b/gatsby-config.js @@ -44,8 +44,8 @@ module.exports = {\n{\nresolve: `gatsby-plugin-manifest`,\noptions: {\n- name: `GatsbyJS`,\n- short_name: `GatsbyJS`,\n+ name: `Cheat Sheets`,\n+ short_name: `Cheat Sheets`,\nstart_url: `/`,\nbackground_color: `#f7f0eb`,\ntheme_color: `#a2466c`,\n",
        "date": "01.10.2019 11:17:25",
        "repo": "spences10/cheat-sheets",
        "type": "update",
        "chatgpt_zeroshot": "Update app name and short name in gatsby-config.js"
    },
    {
        "msg": "update metadata hook!",
        "diff": "diff --git a/src/hooks/useSiteMetadata.js b/src/hooks/useSiteMetadata.js @@ -9,6 +9,15 @@ export const useSiteMetadata = () => {\ntitle\nsiteUrl\nsiteTitle\n+ titleTemplate\n+ description\n+ image\n+ twitterUsername\n+ faviconPng\n+ backgroundColour\n+ themeColour\n+ siteLanguage\n+ siteLocale\n}\n}\n}\n",
        "date": "06.10.2019 11:53:45",
        "repo": "spences10/cheat-sheets",
        "type": "update",
        "chatgpt_zeroshot": "Add additional site metadata fields to useSiteMetadata hook"
    },
    {
        "msg": "update package rules",
        "diff": "diff --git a/renovate.json b/renovate.json },\n\"packageRules\": [\n{\n- \"packagePatterns\": [\"^gatsby\"],\n- \"extends\": \"schedule:after 10pm on Wednesday\"\n+ \"packagePatterns\": [\"gatsby^\"],\n+ \"extends\": {\n+ \"schedule\": [\n+ \"after 10pm every weekday\",\n+ \"before 5am every weekday\",\n+ \"every weekend\"\n+ ]\n+ }\n}\n]\n}\n",
        "date": "22.04.2020 13:14:24",
        "repo": "spences10/cheat-sheets",
        "type": "update",
        "chatgpt_zeroshot": "Update renovate.json packageRules to schedule updates for \"gatsby\" packages after 10pm every weekday and before 5am every weekday, and every weekend."
    },
    {
        "msg": "update og image url",
        "diff": "diff --git a/src/templates/cheat-sheet-template.js b/src/templates/cheat-sheet-template.js import { graphql } from 'gatsby'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\nimport React from 'react'\n-import { Helmet } from 'react-helmet'\nimport SEO from 'react-seo-component'\nimport styled from 'styled-components'\nimport { GitHubCorner } from '../components/github-corner'\n@@ -85,7 +84,7 @@ export default ({ data }) => {\ntitle={title}\ntitleTemplate={siteTitle}\ndescription={excerpt}\n- image={`${siteUrl}${image}`}\n+ image={ogImageUrl(authorName, 'cheatsheets.xyz', title)}\npathname={`${siteUrl}${fields.slug}`}\narticle={true}\npublishedDate={createdDate}\n@@ -93,16 +92,6 @@ export default ({ data }) => {\ntwitterUsername={twitterUsername}\nauthor={authorName}\n/>\n- <Helmet encodeSpecialCharacters={false}>\n- <meta\n- property=\"og:image\"\n- content={ogImageUrl(authorName, 'cheatsheets.xyz', title)}\n- />\n- <meta\n- name=\"twitter:image:src\"\n- content={ogImageUrl(authorName, 'cheatsheets.xyz', title)}\n- />\n- </Helmet>\n<GitHubCorner />\n{typeof tableOfContents.items === 'undefined' ? null : (\n<Toc>\n",
        "date": "27.05.2020 20:17:31",
        "repo": "spences10/cheat-sheets",
        "type": "update",
        "chatgpt_zeroshot": "Refactor image handling in cheat-sheet-template.js"
    },
    {
        "msg": "update the licence",
        "diff": "diff --git a/LICENSE b/LICENSE MIT License\n-Copyright (c) 2019 Scott Spence\n+Copyright (c) 2021 Scott Spence\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\n",
        "date": "05.01.2021 19:12:59",
        "repo": "spences10/cheat-sheets",
        "type": "update",
        "chatgpt_zeroshot": "Update copyright year to 2021 in LICENSE file"
    },
    {
        "msg": "update newman to runtime v5",
        "diff": "diff --git a/lib/run/index.js b/lib/run/index.js var fs = require('fs'),\n_ = require('lodash'),\n+ sdk = require('postman-collection'),\nasyncEach = require('async/each'),\nEventEmitter = require('eventemitter3'),\nruntime = require('postman-runtime'),\n@@ -103,23 +104,19 @@ module.exports = function (options, callback) {\n},\n// todo: add support for more types of timeouts, currently only request is supported\ntimeout: options.timeoutRequest ? { request: options.timeoutRequest } : undefined,\n- requester: {\nfileResolver: fs,\n+ requester: {\ncookieJar: request.jar(),\nfollowRedirects: _.has(options, 'ignoreRedirects') ? !options.ignoreRedirects : undefined,\n- strictSSL: _.has(options, 'insecure') ? !options.insecure : undefined,\n- certificateManager: options.sslClientCert ? {\n- getCertificateContents: function (hostname, callback) {\n- return callback(null, {\n- key: options.sslClientKey ? fs.readFileSync(options.sslClientKey) : '',\n- pem: fs.readFileSync(options.sslClientCert),\n- passphrase: options.sslClientPassphrase,\n- keyPath: options.sslClientKey,\n- pemPath: options.sslClientCert\n- });\n- }\n- } : undefined\n- }\n+ strictSSL: _.has(options, 'insecure') ? !options.insecure : undefined\n+ },\n+ certificates: options.sslClientCert && new sdk.CertificateList({}, [{\n+ name: 'client-cert',\n+ matches: ['<all_urls>'],\n+ key: { src: options.sslClientKey },\n+ cert: { src: options.sslClientCert },\n+ passphrase: options.sslClientPassphrase\n+ }])\n}, function (err, run) {\nvar callbacks = {},\n// ensure that the reporter option type polymorphism is handled\n",
        "date": "16.03.2017 17:31:35",
        "repo": "postmanlabs/newman",
        "type": "update",
        "chatgpt_zeroshot": "Refactor requester options and add support for SSL client certificates"
    },
    {
        "msg": "update HTML report template data example",
        "diff": "diff --git a/examples/reports/html-reporter-template-data.json b/examples/reports/html-reporter-template-data.json {\n- \"timestamp\": \"Thu Feb 16 2017 17:46:41 GMT+0530 (IST)\",\n- \"version\": \"3.4.3\",\n+ \"timestamp\": \"Wed Apr 05 2017 13:32:47 GMT+0530 (IST)\",\n+ \"version\": \"3.5.2\",\n\"aggregations\": [\n{\n\"parent\": {\n\"header\": [\n{\n\"key\": \"User-Agent\",\n- \"value\": \"PostmanRuntime/4.0.3\"\n+ \"value\": \"PostmanRuntime/6.0.0.beta-4\"\n},\n{\n\"key\": \"Accept\",\n},\n{\n\"key\": \"User-Agent\",\n- \"value\": \"PostmanRuntime/4.0.3\"\n+ \"value\": \"PostmanRuntime/6.0.0.beta-4\"\n},\n{\n\"key\": \"Accept\",\n",
        "date": "05.04.2017 13:30:19",
        "repo": "postmanlabs/newman",
        "type": "update",
        "chatgpt_zeroshot": "Update timestamp and version in html-reporter-template-data.json, and update User-Agent value to PostmanRuntime/6.0.0.beta-4."
    },
    {
        "msg": "update package to use new collection and runtime versions that support pm-api",
        "diff": "diff --git a/package.json b/package.json \"lodash\": \"4.17.2\",\n\"mkdirp\": \"0.5.1\",\n\"parse-json\": \"2.2.0\",\n- \"postman-collection\": \"1.1.0\",\n+ \"postman-collection\": \"1.1.1-beta.2\",\n\"postman-collection-transformer\": \"2.0.12\",\n\"postman-request\": \"2.80.1-postman.1\",\n- \"postman-runtime\": \"6.0.1\",\n+ \"postman-runtime\": \"6.1.0-beta.2\",\n\"pretty-ms\": \"2.1.0\",\n\"semver\": \"5.3.0\",\n\"serialised-error\": \"1.1.2\",\n",
        "date": "13.04.2017 17:04:48",
        "repo": "postmanlabs/newman",
        "type": "update",
        "chatgpt_zeroshot": "Update postman-collection and postman-runtime versions to latest beta releases."
    },
    {
        "msg": "update newman to use the new runtime v6 assertion event",
        "diff": "diff --git a/lib/run/index.js b/lib/run/index.js @@ -23,7 +23,7 @@ var fs = require('fs'),\nbeforePrerequest: ['events', 'item'],\nprerequest: ['executions', 'item'],\nbeforeRequest: ['request', 'item'],\n- request: ['response', 'request', 'item'],\n+ request: ['response', 'request', 'item', 'cookies'],\nbeforeTest: ['events', 'item'],\ntest: ['executions', 'item'],\nitem: ['item'],\n@@ -120,7 +120,9 @@ module.exports = function (options, callback) {\n}, function (err, run) {\nvar callbacks = {},\n// ensure that the reporter option type polymorphism is handled\n- reporters = _.isString(options.reporters) ? [options.reporters] : options.reporters;\n+ reporters = _.isString(options.reporters) ? [options.reporters] : options.reporters,\n+ // keep a track of start assertion indices of legacy assertions\n+ legacyAssertionIndices = {};\n// emit events for all the callbacks triggered by the runtime\n_.forEach(runtimeEvents, function (definition, eventName) {\n@@ -173,6 +175,28 @@ module.exports = function (options, callback) {\n});\n},\n+ assertion: function (cursor, assertion) {\n+ !assertion && (assertion = {});\n+\n+ // store the legacy assertion index\n+ assertion.index && (legacyAssertionIndices[cursor.ref] = assertion.index);\n+\n+ emitter.emit('assertion', (assertion.passed ? null : {\n+ name: _.get(assertion, 'error.name', ''),\n+ index: assertion.index,\n+ message: _.get(assertion, 'error.message', ''),\n+\n+ stack: 'AssertionFailure: ' + _.get(assertion, 'error.message', '') + '\\n' +\n+ ' at Object.eval sandbox-script.js:' + (assertion.index + 1) + ':' +\n+ ((cursor && cursor.position || 0) + 1) + ')'\n+ }), {\n+ cursor: cursor,\n+ assertion: assertion.name,\n+ error: assertion.error,\n+ item: run.resolveCursor(cursor)\n+ });\n+ },\n+\n/**\n* Custom callback to override the `done` event to fire the end callback.\n*\n@@ -223,26 +247,28 @@ module.exports = function (options, callback) {\n}\n});\n- // generate pseudo assertion events since runtime does not trigger assertion events yet.\n+ // generate pseudo assertion events for all legacy assertions.\n// without this, all reporters would needlessly need to extract assertions and create an error object\n// out of it\nemitter.on('script', function (err, o) {\n// we iterate on each test assertion to trigger an event. during this, we create a pseudo error object\n// for the assertion\n- var index = 0,\n+ var cursor = o && o.cursor || {},\n+ index = legacyAssertionIndices[cursor.ref] || 0,\ntype = o && o.event && o.event.listen;\n_.forEach(_.get(o.execution, 'tests'), function (passed, assertion) {\n+ index += 1;\n+\nemitter.emit('assertion', (passed ? null : {\nname: 'AssertionFailure',\nindex: index,\nmessage: assertion,\n- stack: 'AssertionFailure: Expected tests[\"' + assertion + '\"] to be truth-like\\n' +\n- ' at Object.eval test.js:' + (index + 1) + ':' +\n- ((o.cursor && o.cursor.position || 0) + 1) + ')'\n+ stack: 'AssertionFailure: Expected tests[\"' + assertion + '\"] to be true-like\\n' +\n+ ' at Object.eval ' + type + '.js:' + (index + 1) + ':' +\n+ ((cursor.position || 0) + 1) + ')'\n}), _.assignIn({ assertion: assertion }, o));\n- index += 1;\n});\n// bubble special script name based events\n",
        "date": "13.04.2017 17:07:12",
        "repo": "postmanlabs/newman",
        "type": "update",
        "chatgpt_zeroshot": "Add support for legacy assertions and emit assertion events for them."
    },
    {
        "msg": "update sample collection to use pm-api",
        "diff": "diff --git a/examples/sample-collection.json b/examples/sample-collection.json \"listen\": \"test\",\n\"script\": {\n\"type\": \"text/javascript\",\n- \"exec\": [\"tests['response code is 200'] = (responseCode.code === 200);\"]\n+ \"exec\": [\n+ \"pm.test('expect response be 200', function () {\",\n+ \" pm.expect(pm.response.code).to.equal(200);\",\n+ \"})\",\n+ \"pm.test('expect response json contain args', function () {\",\n+ \" pm.expect(pm.response.json().args).to.have.property('source')\",\n+ \" .and.equal('newman-sample-github-collection')\",\n+ \"})\"\n+ ]\n}\n}],\n\"request\": {\n",
        "date": "13.04.2017 17:07:49",
        "repo": "postmanlabs/newman",
        "type": "update",
        "chatgpt_zeroshot": "Refactor script execution in sample-collection.json to use Postman test functions"
    },
    {
        "msg": "update package to release v3.6.0-beta.2",
        "diff": "diff --git a/package.json b/package.json {\n\"name\": \"newman\",\n- \"version\": \"3.5.2\",\n+ \"version\": \"3.6.0-beta.2\",\n\"description\": \"Command-line companion utility for Postman\",\n\"homepage\": \"https://github.com/postmanlabs/newman\",\n\"bugs\": \"https://github.com/postmanlabs/newman/issues\",\n",
        "date": "16.04.2017 12:46:19",
        "repo": "postmanlabs/newman",
        "type": "update",
        "chatgpt_zeroshot": "Bump version to 3.6.0-beta.2 in package.json"
    },
    {
        "msg": "update the readme instructions about the API",
        "diff": "diff --git a/README.md b/README.md @@ -452,7 +452,7 @@ file-upload.postman_collection.json sample-file.txt\n$ newman run file-upload.postman_collection.json\n```\n-## Using Newman with the Postman Cloud API\n+## Using Newman with the Postman Pro API\n1 [Generate an API key](https://app.getpostman.com/dashboard/integrations)<br/>\n2 Fetch a list of your collections from: `https://api.getpostman.com/collections?apikey=$apiKey`<br/>\n@@ -460,7 +460,8 @@ $ newman run file-upload.postman_collection.json\n4 Obtain the environment URI from: `https://api.getpostman.com/environments?apikey=$apiKey`<br/>\n5 Using the collection and environment URIs acquired in steps 3 and 4, run the collection as follows:\n```\n-newman run <collectionUri> --environment <environmentUri>\n+newman run https://api.getpostman.com/collections/$uid?apikey=$apiKey \\\n+ --environment https://api.getpostman.com/environments/$uid?apikey=$apiKey\n```\n---\n",
        "date": "09.06.2017 15:40:22",
        "repo": "postmanlabs/newman",
        "type": "update",
        "chatgpt_zeroshot": "Update Newman instructions to use Postman Pro API"
    },
    {
        "msg": "update unreleased section in CHANGELOG.md",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md #### Unreleased\n- support for second generation scripting sandbox with support for limited `require`\n- addition of assertion functions on request and response.\n+- Added momentjs to the sandbox\n+- Added support for authorization mechanisms\n+- Added support for IO events\n#### v3.6.1 (June 9, 2017)\n* :arrow_up: Updated dependencies\n",
        "date": "15.06.2017 15:59:12",
        "repo": "postmanlabs/newman",
        "type": "update",
        "chatgpt_zeroshot": "Add support for momentjs, authorization mechanisms, and IO events in scripting sandbox"
    },
    {
        "msg": "update system test for NSP configuration",
        "diff": "diff --git a/test/system/nsp.test.js b/test/system/nsp.test.js @@ -29,7 +29,7 @@ describe('nsp', function () {\n});\nit('must exclude only a known set of packages', function () {\n- expect(nsprc.exclusions).to.eql(['postman-collection', 'postman-runtime']);\n+ expect(nsprc.exclusions).to.eql([]);\n});\n// if you are changing the version here, most probably you are better of removing the exclusion in first place.\n",
        "date": "09.07.2017 15:55:25",
        "repo": "postmanlabs/newman",
        "type": "update",
        "chatgpt_zeroshot": "Remove exclusions for 'postman-collection' and 'postman-runtime' in nsp test."
    },
    {
        "msg": "update run options builder to override global variables correctly",
        "diff": "diff --git a/lib/run/options.js b/lib/run/options.js @@ -236,5 +236,13 @@ var _ = require('lodash'),\n* @returns {*}\n*/\nmodule.exports = function (options, callback) {\n- config.get(options, { loaders: configLoaders, command: 'run' }, callback);\n+ config.get(options, { loaders: configLoaders, command: 'run' }, function (err, result) {\n+ if (err) { return callback(err); }\n+\n+ !_.isEmpty(options.globalVar) && _.forEach(options.globalVar, function (variable) {\n+ variable && (result.globals.set(variable.key, variable.value));\n+ });\n+\n+ callback(null, result);\n+ });\n};\n",
        "date": "24.07.2017 14:34:33",
        "repo": "postmanlabs/newman",
        "type": "update",
        "chatgpt_zeroshot": "Refactor config.get function to handle global variables in options"
    },
    {
        "msg": "update CLI unit test",
        "diff": "diff --git a/test/unit/cli.test.js b/test/unit/cli.test.js @@ -151,9 +151,12 @@ describe('cli parser', function () {\n});\n});\n- it('should throw an error for --global-var values without an `=`', function (done) {\n- cli.rawOptions('run myCollection.json --global-var foo'.split(' '), 'newmantests', function (err) {\n- expect(err.code).to.equal('ARGError');\n+ it('should handle --global-var values without an `=`', function (done) {\n+ cli.rawOptions('run myCollection.json --global-var foo'.split(' '), 'newmantests', function (err, res) {\n+ expect(err).to.be(null);\n+ expect(res.run.globalVar).to.eql([\n+ { key: 'foo', value: undefined }\n+ ]);\ndone();\n});\n",
        "date": "24.07.2017 15:36:10",
        "repo": "postmanlabs/newman",
        "type": "update",
        "chatgpt_zeroshot": "Refactor handling of --global-var values without an `=` in cli parser"
    },
    {
        "msg": "update NSP configuration system test",
        "diff": "diff --git a/test/system/nsp.test.js b/test/system/nsp.test.js */\nvar expect = require('expect.js'),\n- fs = require('fs');\n+ fs = require('fs'),\n+ _ = require('lodash');\n/* global describe, it, before */\ndescribe('nsp', function () {\n@@ -28,8 +29,16 @@ describe('nsp', function () {\nexpect(nsprc.exceptions).to.eql([]);\n});\n- it('must exclude only a known set of packages', function () {\n- expect(nsprc.exclusions).to.eql([]);\n+ it('must exclude only a known set of packages (prevent erroneous exclusions)', function () {\n+ expect(nsprc.exclusions).to.eql({\n+ 'postman-runtime': '6.3.2',\n+ 'postman-collection': '3.0.0'\n+ });\n+ });\n+\n+ it('dependency version in package.json should match .nsprc (time to remove exclusion?)', function () {\n+ var pkg = _.pick(require('../../package').dependencies, _.keys(nsprc.exclusions));\n+ expect(pkg).to.eql(nsprc.exclusions);\n});\n// if you are changing the version here, most probably you are better of removing the exclusion in first place.\n",
        "date": "27.09.2017 17:21:00",
        "repo": "postmanlabs/newman",
        "type": "update",
        "chatgpt_zeroshot": "Add lodash dependency and update exclusion checks in nsp.test.js"
    },
    {
        "msg": "update nsp check code to account for new exclusions structure",
        "diff": "diff --git a/npm/test-system.js b/npm/test-system.js @@ -92,7 +92,7 @@ module.exports = function (exit) {\nnsp.check({\noffline: false,\npackage: _.merge({\n- dependencies: _.omit(pkg.dependencies, nsprc.exclusions || [])\n+ dependencies: _.omit(pkg.dependencies, _.keys(nsprc.exclusions) || [])\n}, _.pick(pkg, ['name', 'version', 'homepage', 'repository']))\n}, function (err, result) {\n// if processing nsp had an error, simply print that and exit\n",
        "date": "27.09.2017 17:22:07",
        "repo": "postmanlabs/newman",
        "type": "update",
        "chatgpt_zeroshot": "Fix exclusion logic in nsp check"
    },
    {
        "msg": "update options.bail description for available modifiers",
        "diff": "diff --git a/README.md b/README.md @@ -319,7 +319,7 @@ return of the `newman.run` function is a run instance, which emits run events th\n| options.delayRequest | Specify the time (in milliseconds) to wait for between subsequent requests.<br /><br />_Optional_<br />Type: `number`, Default value: `0` |\n| options.ignoreRedirects | This specifies whether newman would automatically follow 3xx responses from servers.<br /><br />_Optional_<br />Type: `boolean`, Default value: `false` |\n| options.insecure | Disables SSL verification checks and allows self-signed SSL certificates.<br /><br />_Optional_<br />Type: `boolean`, Default value: `false` |\n-| options.bail | A boolean switch to specify whether or not to gracefully stop a collection run on encountering the first error. Takes no arguments.<br /><br />_Optional_<br />Type: `boolean`, Default value: `false` |\n+| options.bail | A switch to specify whether or not to gracefully stop a collection run on encountering the first error. Takes additional modifiers as arguments to specify whether to end the run with an error for invalid name or path.<br /><br/>Available modifiers: `folder` and `failure`.<br />eg. `bail : ['folder']`<br /><br />_Optional_<br />Type: `boolean|object`, Default value: `false` |\n| options.suppressExitCode | If present, allows overriding the default exit code from the current collection run, useful for bypassing collection result failures. Takes no arguments.<br /><br />_Optional_<br />Type: `boolean`, Default value: `false` |\n| options.reporters | Specify one reporter name as `string` or provide more than one reporter name as an `array`.<br /><br />Available reporters: `cli`, `json`, `html` and `junit`.<br /><br />_Optional_<br />Type: `string|array` |\n| options.reporter | Specify options for the reporter(s) declared in `options.reporters`. <br /> e.g. `reporter : { junit : { export : './xmlResults.xml' } }` <br /> e.g. `reporter : { html : { export : './htmlResults.html', template: './customTemplate.hbs' } }` <br /><br />_Optional_<br />Type: `object` |\n",
        "date": "06.12.2017 12:31:13",
        "repo": "postmanlabs/newman",
        "type": "update",
        "chatgpt_zeroshot": "Update options.bail description in README.md"
    },
    {
        "msg": "update library test as per runtime compliance",
        "diff": "diff --git a/test/library/run-options.test.js b/test/library/run-options.test.js @@ -129,7 +129,7 @@ describe('Newman run options', function () {\nbail: ['folder', 'failure']\n}, function (err) {\nexpect(err).to.be.ok();\n- expect(err.message).to.contain('Unable to find a folder or request');\n+ expect(err.message).to.be('Unable to find a folder or request: invalidName');\ndone();\n});\n",
        "date": "08.12.2017 17:17:06",
        "repo": "postmanlabs/newman",
        "type": "update",
        "chatgpt_zeroshot": "Fix error message in run-options.test.js to include specific invalid name."
    },
    {
        "msg": "update docker build command to include the latest tag",
        "diff": "diff --git a/docker/scripts/run.sh b/docker/scripts/run.sh function build_docker_image {\nBASENAME=$(basename $1);\nIMAGE_NAME=\"newman_$BASENAME\";\n- TAG=\"$2\";\n- docker build -t \"$DOCKER_ID_USER/$IMAGE_NAME:$TAG\" .\n+ docker build -t \"$DOCKER_ID_USER/$IMAGE_NAME:$TRAVIS_TAG\" -t \"$DOCKER_ID_USER/$IMAGE_NAME:latest\" .;\nif docker images | grep -q \"$DOCKER_ID_USER/$IMAGE_NAME\"; then\n- echo \"Image built\"\n- if docker run -t \"$DOCKER_ID_USER/$IMAGE_NAME:$TAG\" run \"sample-collection.json\"; then\n- echo \"Collection run successfully\"\n- docker login -u \"$DOCKER_ID_USER\" -p \"$DOCKER_ID_PASSWORD\"\n- docker push \"$DOCKER_ID_USER/$IMAGE_NAME:$TAG\"\n+ echo \"Image built\";\n+ if docker run -t \"$DOCKER_ID_USER/$IMAGE_NAME:$TRAVIS_TAG\" run \"sample-collection.json\"; then\n+ echo \"Collection run successfully\";\n+ docker login -u \"$DOCKER_ID_USER\" -p \"$DOCKER_ID_PASSWORD\";\n+ docker push \"$DOCKER_ID_USER/$IMAGE_NAME:$TRAVIS_TAG\" \"$DOCKER_ID_USER/$IMAGE_NAME:latest\";\nelse\n- echo \"Collection not run successfully\"\n+ echo \"Collection not run successfully\";\nfi\nelse\n- echo \"Image $BASENAME:$TAG not built\"\n+ echo \"Image $BASENAME:$TRAVIS_TAG and $BASENAME:latest not built\";\nfi\n}\n-IMAGES_BASE_PATH=\"./docker/images\"\n-EXTRACTED_TAG=$(echo $TRAVIS_TAG | grep -o \"[0-9]\\+.[0-9]\\+.[0-9]\\+\")\n+IMAGES_BASE_PATH=\"./docker/images\";\n+EXTRACTED_TAG=$(echo $TRAVIS_TAG | grep -o \"[0-9]\\+.[0-9]\\+.[0-9]\\+\");\nif [ -n \"$TRAVIS_TAG\" ] && [ \"$TRAVIS_TAG\" = \"$EXTRACTED_TAG\" ] && [ \"$TRAVIS_NODE_VERSION\" = \"8\" ]; then\nfor image in $IMAGES_BASE_PATH/*; do\n- if [ -d \"${image}\" ] && [ -f \"${image}/Dockerfile\" ]; then\n- cp \"${image}/Dockerfile\" .\n- build_docker_image ${image} ${TRAVIS_TAG};\n- build_docker_image ${image} \"latest\";\n- rm -f ./Dockerfile\n+ if [ -f \"${image}/Dockerfile\" ]; then\n+ cp \"${image}/Dockerfile\" .;\n+ build_docker_image ${image};\n+ rm -f ./Dockerfile;\nfi\ndone\nfi\n",
        "date": "25.01.2018 21:46:02",
        "repo": "postmanlabs/newman",
        "type": "update",
        "chatgpt_zeroshot": "Refactor docker build script and update image tagging strategy"
    },
    {
        "msg": "update failure list formatting to include enclosing test name",
        "diff": "diff --git a/lib/reporters/cli/index.js b/lib/reporters/cli/index.js @@ -328,12 +328,15 @@ _.assignIn(PostmanCLIReporter, {\n_.forEach(failures, function (failure, index) {\nvar name = failure.error && failure.error.name || E,\n- message = failure.error && failure.error.message || E;\n+ message = failure.error && failure.error.test || E;\n// augment name with iteration information\nfailure.cursor && (failure.cursor.cycles > 1) &&\n(name += LF + colors.gray('iteration: ' + (failure.cursor.iteration + 1)));\n+ // include the assertion error message in the failure details\n+ failure.error && (message += LF + colors.gray(failure.error.message || E));\n+\n// augment the message with stack information\nfailure.at && (message += LF + colors.gray('at ' + failure.at));\n",
        "date": "29.01.2018 14:44:46",
        "repo": "postmanlabs/newman",
        "type": "update",
        "chatgpt_zeroshot": "Include assertion error message in failure details"
    },
    {
        "msg": "update repository.test.js to account for .sh files also being present in the npm folder",
        "diff": "diff --git a/test/system/repository.test.js b/test/system/repository.test.js @@ -73,22 +73,29 @@ describe('project repository', function () {\ndescribe('script definitions', function () {\nit('files must exist', function () {\n- var scriptRegex = /^node\\snpm\\/.+\\.js$/;\n-\n+ var scriptRegexJS = /^node\\snpm\\/.+\\.js$/,\n+ scriptRegexSH = /^\\.\\/npm\\/.+\\.sh$/;\nexpect(json.scripts).to.be.ok();\njson.scripts && Object.keys(json.scripts).forEach(function (scriptName) {\n- expect(scriptRegex.test(json.scripts[scriptName])).to.be.ok();\n- expect(fs.statSync('npm/' + scriptName + '.js')).to.be.ok();\n+ expect(scriptRegexJS.test(json.scripts[scriptName]) ||\n+ scriptRegexSH.test(json.scripts[scriptName])).to.be.ok();\n+ expect(fs.existsSync('npm/' + scriptName + '.js') ||\n+ fs.existsSync('npm/' + scriptName + '.sh')).to.be.ok();\n});\n});\nit('must have the hashbang defined', function () {\njson.scripts && Object.keys(json.scripts).forEach(function (scriptName) {\n- var fileContent = fs.readFileSync('npm/' + scriptName + '.js').toString();\n+ fs.readFile('npm/' + scriptName + '.js', function (err, fileContent) {\n+ if (err) {\n+ fileContent = fs.readFileSync('npm/' + scriptName + '.sh');\n+ }\n+ fileContent = fileContent.toString();\nexpect(/^#!\\/(bin\\/bash|usr\\/bin\\/env\\snode)[\\r\\n][\\W\\w]*$/g.test(fileContent)).to.be.ok();\n});\n});\n});\n+ });\ndescribe('dependencies', function () {\nit('must exist', function () {\n",
        "date": "31.01.2018 16:45:34",
        "repo": "postmanlabs/newman",
        "type": "update",
        "chatgpt_zeroshot": "Refactor script existence and hashbang checks in repository.test.js"
    },
    {
        "msg": "update Alpine Docker image Node version to v8",
        "diff": "diff --git a/docker/images/alpine33/Dockerfile b/docker/images/alpine33/Dockerfile @@ -8,12 +8,16 @@ RUN if [ ! $(echo $newman_version | grep -oE \"^[0-9]+\\.[0-9]+\\.[0-9]+$\") ]; then\nexit 1; \\\nfi\n-# Can't upgrade to node v8 because it isn't supported in alpine 3.3\n-ENV NODE_VERSION 4.3.2\n+ENV NODE_VERSION 8.11.2\n# Install node\nRUN echo -e \"http://nl.alpinelinux.org/alpine/v3.3/main\\nhttp://nl.alpinelinux.org/alpine/v3.3/community\" > /etc/apk/repositories && \\\n- apk add --update nodejs=${NODE_VERSION}-r1;\n+ apk add --update --no-cache libgcc libstdc++;\n+\n+ADD https://github.com/oznu/alpine-node/releases/download/${NODE_VERSION}/node-v${NODE_VERSION}-linux-x86_64-alpine.tar.gz /opt/node-${NODE_VERSION}.tar.gz\n+\n+RUN tar -xzf /opt/node-${NODE_VERSION}.tar.gz -C /usr --no-same-owner && \\\n+ rm /opt/node-${NODE_VERSION}.tar.gz;\n# Set environment variables\nENV LC_ALL=\"en_US.UTF-8\" LANG=\"en_US.UTF-8\" LANGUAGE=\"en_US.UTF-8\" NEWMAN_VERSION=$newman_version\n",
        "date": "26.05.2018 16:35:49",
        "repo": "postmanlabs/newman",
        "type": "update",
        "chatgpt_zeroshot": "Upgrade Node version to 8.11.2 in Alpine 3.3 image"
    },
    {
        "msg": "update default HTML reporter template to include failure information",
        "diff": "diff --git a/lib/reporters/html/template-default.hbs b/lib/reporters/html/template-default.hbs <div class=\"col-md-6\">Average response time</div><div class=\"col-md-6\">{{responseAverage}}</div>\n<div class=\"col-md-12\">&nbsp;</div>\n- <div class=\"col-md-3\"><strong>Total Failures</strong></div><div class=\"col-md-6\"><strong>{{failures}}</strong></div>\n+ <div class=\"col-md-3\"><strong>Total Failures</strong></div><div class=\"col-md-6\"><strong>{{failures.length}}</strong></div>\n{{/with}}\n</div>\n{{> aggregations}}\n{{/if}}\n{{/each}}\n+\n+ {{#if summary.failures.length}}\n+ <br/><h4>Failures</h4>\n+\n+ {{#each summary.failures}}\n+ <div class=\"panel-group\" id=\"collapse-failure-{{@index}}\" role=\"tablist\" aria-multiselectable=\"true\">\n+ <div class=\"panel panel-default\">\n+ <div class=\"panel-heading\" role=\"tab\" id=\"failureHead-{{@index}}\">\n+ <h4 class=\"panel-title\">\n+ <a data-toggle=\"collapse\" data-parent=\"#accordion\" href=\"#failureData-{{@index}}\" aria-controls=\"collapseOne\">\n+ {{error.name}}: {{#if error.test}}{{error.test}}{{else}}{{error.message}}{{/if}}\n+ </a>\n+ </h4>\n+ </div>\n+\n+ <div id=\"failureData-{{@index}}\" class=\"panel-collapse collapse in\" role=\"tabpanel\" aria-labelledby=\"failureHead-{{@index}}\">\n+ <div class=\"panel-body\">\n+ <div class=\"col-md-12\">&nbsp;</div>\n+ {{#if error.test}}\n+ <div class=\"col-md-4\">Description</div><div class=\"col-md-8\">{{error.message}}</div><br/>\n+ {{/if}}\n+\n+ <div class=\"col-md-4\">Location</div><div class=\"col-md-8\">{{at}}</div><br/>\n+ <div class=\"col-md-4\">Request</div><div class=\"col-md-8\">\n+ <a href=\"#collapse-request-{{source.id}}\">{{source.name}}</a>\n+ </div>\n+ {{#gt cursor.cycles 1}}\n+ <div class=\"col-md-4\">Iteration</div><div class=\"col-md-8\">{{add cursor.iteration 1}}</div><br/>\n+ {{/gt}}\n+ </div>\n+ </div>\n+ </div>\n+ </div>\n+ {{/each}}\n+ {{/if}}\n</div>\n</body>\n</html>\n",
        "date": "26.05.2018 21:49:54",
        "repo": "postmanlabs/newman",
        "type": "update",
        "chatgpt_zeroshot": "Update failure handling in HTML template and display detailed failure information."
    },
    {
        "msg": "update documentation for export option behaviour :scroll:",
        "diff": "diff --git a/README.md b/README.md @@ -34,8 +34,8 @@ The current Node version compatibility can also be seen from the `engines.node`\n3. [HTML reporter options](#html-reporter-options)\n4. [JUnit reporter options](#junitxml-reporter-options)\n5. [Custom reporters](#custom-reporters)\n- a. [Using custom reporters](#using-custom-reporters)\n- b. [Creating custom reporters](#creating-custom-reporters)\n+ 1. [Using custom reporters](#using-custom-reporters)\n+ 2. [Creating custom reporters](#creating-custom-reporters)\n2. [SSL client certificates](#ssl-client-certificates)\n2. [Proxy](#proxy)\n@@ -230,7 +230,7 @@ To enable JSON reporter, provide `--reporters json` as a CLI option.\n| CLI Option | Description |\n|-------------|-------------------|\n-| `--reporter-json-export <path>` | Specify a path where the output JSON file will be written to disk. If not specified, the file will be written to `newman/` in the current working directory. |\n+| `--reporter-json-export <path>` | Specify a path where the output JSON file will be written to disk. If not specified, the file will be written to `newman/` in the current working directory. If the specified path does not exist, it will be created. However, if the specified path is a pre-existing directory, the report will be generated in that directory. |\n##### HTML reporter options\n@@ -239,7 +239,7 @@ HTML reporter, provide `--reporters html` as a CLI option.\n| CLI Option | Description |\n|-------------|-------------------|\n-| `--reporter-html-export <path>` | Specify a path where the output HTML file will be written to disk. If not specified, the file will be written to `newman/` in the current working directory. |\n+| `--reporter-html-export <path>` | Specify a path where the output HTML file will be written to disk. If not specified, the file will be written to `newman/` in the current working directory. If the specified path does not exist, it will be created. However, if the specified path is a pre-existing directory, the report will be generated in that directory. |\n| `--reporter-html-template <path>` | Specify a path to the custom template which will be used to render the HTML report. This option depends on `--reporter html` and `--reporter-html-export` being present in the run command. If this option is not specified, the [default template](https://github.com/postmanlabs/newman/blob/develop/lib/reporters/html/template-default.hbs) is used |\nCustom templates (currently handlebars only) can be passed to the HTML reporter via `--reporter-html-template <path>` with `--reporters html` and `--reporter-html-export`.\n@@ -251,7 +251,7 @@ Newman can output a summary of the collection run to a JUnit compatible XML file\n| CLI Option | Description |\n|-------------|-------------------|\n-| `--reporter-junit-export <path>` | Specify a path where the output XML file will be written to disk. If not specified, the file will be written to `newman/` in the current working directory. |\n+| `--reporter-junit-export <path>` | Specify a path where the output XML file will be written to disk. If not specified, the file will be written to `newman/` in the current working directory. If the specified path does not exist, it will be created. However, if the specified path is a pre-existing directory, the report will be generated in that directory. |\nOlder command line options are supported, but are deprecated in favour of the newer v3 options and will soon be\ndiscontinued. For documentation on the older command options, refer to [README.md for Newman v2.X](https://github.com/postmanlabs/newman/blob/release/2.x/README.md).\n",
        "date": "09.06.2018 16:30:24",
        "repo": "postmanlabs/newman",
        "type": "update",
        "chatgpt_zeroshot": "Update HTML, JSON, and JUnit reporter options in README.md"
    },
    {
        "msg": "update NSP exclusison config system tests :white_check_mark:",
        "diff": "diff --git a/test/system/nsp.test.js b/test/system/nsp.test.js @@ -30,9 +30,7 @@ describe('nsp', function () {\n});\nit('must not have exclusions (prevent erroneous exclusions)', function () {\n- expect(nsprc.exclusions).to.eql({\n- 'cli-table2': '0.2.0'\n- });\n+ expect(nsprc.exclusions).to.eql({});\n});\nit('dependency version in package.json should match .nsprc (time to remove exclusion?)', function () {\n",
        "date": "10.06.2018 19:57:07",
        "repo": "postmanlabs/newman",
        "type": "update",
        "chatgpt_zeroshot": "Remove erroneous exclusion in nsp.test.js"
    },
    {
        "msg": "update CLI tests for JUnit reporter time precision bugfix :white_check_mark:",
        "diff": "diff --git a/test/cli/shallow-junit-reporter.test.js b/test/cli/shallow-junit-reporter.test.js @@ -38,8 +38,13 @@ describe('JUnit reporter', function () {\nexpect(error).to.not.be.ok();\nvar suite = _.get(result.testsuites, 'testsuite.0');\n+\n+ expect(result.testsuites.$).to.not.be.empty();\n+ expect(result.testsuites.$.time).to.match(/^\\d+\\.\\d{3}$/);\n+\nexpect(suite).to.not.be.empty();\nexpect(suite.$).to.not.be.empty();\n+ expect(suite.$.time).to.match(/^\\d+\\.\\d{3}$/);\nexpect(suite.testcase).to.not.be.empty();\nexpect(suite.$).to.have.property('tests', '1');\n@@ -66,8 +71,12 @@ describe('JUnit reporter', function () {\nvar testcase,\nsuite = _.get(result.testsuites, 'testsuite.0');\n+ expect(result.testsuites.$).to.not.be.empty();\n+ expect(result.testsuites.$.time).to.match(/^\\d+\\.\\d{3}$/);\n+\nexpect(suite).to.not.be.empty();\nexpect(suite.$).to.not.be.empty();\n+ expect(suite.$.time).to.match(/^\\d+\\.\\d{3}$/);\nexpect(suite.testcase).to.not.be.empty();\nexpect(suite.$).to.have.property('tests', '1');\n@@ -78,6 +87,7 @@ describe('JUnit reporter', function () {\nexpect(testcase).to.not.be.empty();\nexpect(testcase.$).to.have.property('classname', 'JUnitXmlReporter.constructor');\n+ expect(testcase.$.time).to.match(/^\\d+\\.\\d{3}$/);\nexpect(testcase.failure).to.not.be.empty();\nexpect(testcase.failure[0]._).to.not.be.empty();\nexpect(testcase.failure[0].$).to.have.property('type', 'AssertionFailure');\n@@ -105,6 +115,7 @@ describe('JUnit reporter', function () {\nexpect(suite).to.not.be.empty();\nexpect(suite.$).to.not.be.empty();\n+ expect(suite.$.time).to.match(/^\\d+\\.\\d{3}$/);\nexpect(suite.testcase).to.not.be.empty();\nexpect(suite.$).to.have.property('tests', '2');\n@@ -115,6 +126,7 @@ describe('JUnit reporter', function () {\nexpect(testcase).to.not.be.empty();\nexpect(testcase.$).to.have.property('classname', 'JUnitXmlReporter.constructor');\n+ expect(testcase.$.time).to.match(/^\\d+\\.\\d{3}$/);\nexpect(testcase.failure).to.not.be.empty();\nexpect(testcase.failure[0]._).to.not.be.empty();\nexpect(testcase.failure[0].$).to.have.property('type', 'AssertionFailure');\n",
        "date": "14.06.2018 18:30:10",
        "repo": "postmanlabs/newman",
        "type": "update",
        "chatgpt_zeroshot": "Add time validation for JUnit reporter tests"
    },
    {
        "msg": "update library tests for JUnit reporter time precision bugfix :white_check_mark:",
        "diff": "diff --git a/test/library/shallow-junit-reporter.test.js b/test/library/shallow-junit-reporter.test.js @@ -42,8 +42,13 @@ describe('JUnit reporter', function () {\nexpect(error).to.not.be.ok();\nvar suite = _.get(result.testsuites, 'testsuite.0');\n+\n+ expect(result.testsuites.$).to.not.be.empty();\n+ expect(result.testsuites.$.time).to.match(/^\\d+\\.\\d{3}$/);\n+\nexpect(suite).to.not.be.empty();\nexpect(suite.$).to.not.be.empty();\n+ expect(suite.$.time).to.match(/^\\d+\\.\\d{3}$/);\nexpect(suite.testcase).to.not.be.empty();\nexpect(suite.$).to.have.property('tests', '1');\n@@ -73,8 +78,12 @@ describe('JUnit reporter', function () {\nvar testcase,\nsuite = _.get(result.testsuites, 'testsuite.0');\n+ expect(result.testsuites.$).to.not.be.empty();\n+ expect(result.testsuites.$.time).to.match(/^\\d+\\.\\d{3}$/);\n+\nexpect(suite).to.not.be.empty();\nexpect(suite.$).to.not.be.empty();\n+ expect(suite.$.time).to.match(/^\\d+\\.\\d{3}$/);\nexpect(suite.testcase).to.not.be.empty();\nexpect(suite.$).to.have.property('tests', '1');\n@@ -85,6 +94,7 @@ describe('JUnit reporter', function () {\nexpect(testcase).to.not.be.empty();\nexpect(testcase.$).to.have.property('classname', 'JUnitXmlReporter.constructor');\n+ expect(testcase.$.time).to.match(/^\\d+\\.\\d{3}$/);\nexpect(testcase.failure).to.not.be.empty();\nexpect(testcase.failure[0]._).to.not.be.empty();\nexpect(testcase.failure[0].$).to.have.property('type', 'AssertionFailure');\n@@ -113,8 +123,12 @@ describe('JUnit reporter', function () {\nvar testcase,\nsuite = _.get(result.testsuites, 'testsuite.0');\n+ expect(result.testsuites.$).to.not.be.empty();\n+ expect(result.testsuites.$.time).to.match(/^\\d+\\.\\d{3}$/);\n+\nexpect(suite).to.not.be.empty();\nexpect(suite.$).to.not.be.empty();\n+ expect(suite.$.time).to.match(/^\\d+\\.\\d{3}$/);\nexpect(suite.testcase).to.not.be.empty();\nexpect(suite.$).to.have.property('tests', '2');\n@@ -125,6 +139,7 @@ describe('JUnit reporter', function () {\nexpect(testcase).to.not.be.empty();\nexpect(testcase.$).to.have.property('classname', 'JUnitXmlReporter.constructor');\n+ expect(testcase.$.time).to.match(/^\\d+\\.\\d{3}$/);\nexpect(testcase.failure).to.not.be.empty();\nexpect(testcase.failure[0]._).to.not.be.empty();\nexpect(testcase.failure[0].$).to.have.property('type', 'AssertionFailure');\n",
        "date": "14.06.2018 18:30:19",
        "repo": "postmanlabs/newman",
        "type": "update",
        "chatgpt_zeroshot": "Add time validation for test suites and test cases in JUnit reporter"
    },
    {
        "msg": "update default timeout values to Infinity :bug: This makes the code consistent with the API docs",
        "diff": "diff --git a/lib/run/index.js b/lib/run/index.js @@ -131,9 +131,9 @@ module.exports = function (options, callback) {\nitem: options.delayRequest\n},\ntimeout: {\n- global: options.timeout,\n- request: options.timeoutRequest,\n- script: options.timeoutScript\n+ global: options.timeout || 0,\n+ request: options.timeoutRequest || 0,\n+ script: options.timeoutScript || 0\n},\nfileResolver: fs,\nrequester: {\n",
        "date": "16.07.2018 16:56:31",
        "repo": "postmanlabs/newman",
        "type": "update",
        "chatgpt_zeroshot": "Set default timeout values to 0 if not provided"
    },
    {
        "msg": "update postpublish script to account for postman/newman",
        "diff": "diff --git a/npm/postpublish.sh b/npm/postpublish.sh # Bail out on the first error\nset -e;\n-BLUE='\\033[0;34m';\n-NO_COLOUR='\\033[0m';\n-DOCKER_USER=\"postman\";\n-TAG=${npm_package_version};\n+LATEST=\"alpine\";\n+BLUE=\"\\033[0;34m\";\n+NO_COLOUR=\"\\033[0m\";\n+DOCKER_REPO=\"postman/newman\";\n+VERSION=${npm_package_version};\nIMAGES_BASE_PATH=\"./docker/images\";\n+GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD);\n# It's good to be paranoid\n-[[ -z \"$TAG\" ]] && TAG=$(jq -r \".version\" < package.json);\n+[[ -z \"$VERSION\" ]] && VERSION=$(jq -r \".version\" < package.json);\n+\n+MAJOR=$(echo ${VERSION} | grep -oE \"^\\d+\");\n+MINOR=$(echo ${VERSION} | grep -oE \"^\\d+\\.\\d+\");\nfunction build_docker_image {\n- local TAG=\"$2\";\n- local BASENAME=$(basename $1);\n- local IMAGE_NAME=\"newman_$BASENAME\";\n- local GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD);\n+ local TAG=$(basename $1);\necho \"\";\n- # Build\n- if [[ ${GIT_BRANCH} = \"master\" ]]; then\n- echo -e \"$BLUE Building docker image for $DOCKER_USER/$IMAGE_NAME:$TAG, latest $NO_COLOUR\";\n-\n- docker build \\\n- --no-cache --force-rm --squash \\\n- -t \"$DOCKER_USER/$IMAGE_NAME:$TAG\" -t \"$DOCKER_USER/$IMAGE_NAME:latest\" \\\n- --file=\"docker/images/$BASENAME/Dockerfile\" --build-arg NEWMAN_VERSION=\"$TAG\" .;\n-\n- echo -e \"$BLUE Running docker image test for $DOCKER_USER/$IMAGE_NAME:$TAG, latest $NO_COLOUR\";\n- else\n- echo -e \"$BLUE Building docker image for $DOCKER_USER/$IMAGE_NAME:$TAG $NO_COLOUR\";\n+ echo -e \"$BLUE Building $DOCKER_REPO:$VERSION-$TAG $NO_COLOUR\";\ndocker build \\\n- --no-cache --force-rm --squash \\\n- -t \"$DOCKER_USER/$IMAGE_NAME:$TAG\" \\\n- --file=\"docker/images/$BASENAME/Dockerfile\" --build-arg NEWMAN_VERSION=\"$TAG\" .;\n+ --no-cache --force-rm --squash -t ${DOCKER_REPO}:${VERSION}-${TAG} \\\n+ --file=\"docker/images/$TAG/Dockerfile\" --build-arg NEWMAN_VERSION=${VERSION} .;\n- echo -e \"$BLUE Running docker image test for $DOCKER_USER/$IMAGE_NAME:$TAG $NO_COLOUR\";\n- fi\n+ echo -e \"$BLUE Running docker image test for $DOCKER_REPO:$VERSION-$TAG, latest $NO_COLOUR\";\n# Test\n- docker run -v \"$PWD/examples:/etc/newman\" -t \"$DOCKER_USER/$IMAGE_NAME:$TAG\" run \"sample-collection.json\";\n+ docker run -v ${PWD}/examples:/etc/newman -t ${DOCKER_REPO}:${VERSION}-${TAG} run \"sample-collection.json\";\n- # Tag\n- if [[ ${GIT_BRANCH} = \"master\" ]]; then\n- echo -e \"$BLUE Pushing docker image for $DOCKER_USER/$IMAGE_NAME:$TAG, latest $NO_COLOUR\";\n+ echo -e \"$BLUE Pushing docker image for $DOCKER_REPO:$VERSION-$TAG $NO_COLOUR\";\n- docker tag \"$DOCKER_USER/$IMAGE_NAME:latest\" \"$DOCKER_USER/$IMAGE_NAME:latest\";\n- docker push \"$DOCKER_USER/$IMAGE_NAME:latest\";\n+ # Tag\n+ if [[ ${GIT_BRANCH} != \"master\" ]]; then\n+ if [[ ${TAG} == \"ubuntu1404\" || ${TAG} == \"alpine33\" ]]; then\n+ docker tag ${DOCKER_REPO}:${VERSION}-${TAG} ${DOCKER_REPO}_${TAG}:latest;\n+ docker push ${DOCKER_REPO}_${TAG}:latest;\nelse\n- echo -e \"$BLUE Pushing docker image for $DOCKER_USER/$IMAGE_NAME:$TAG $NO_COLOUR\";\n+ docker tag ${DOCKER_REPO}:${VERSION}-${TAG} ${DOCKER_REPO}:${TAG};\n+ docker push ${DOCKER_REPO}:${TAG};\n+\n+ if [[ ${TAG} == ${LATEST} ]]; then\n+ docker tag ${DOCKER_REPO}:${VERSION}-${TAG} ${DOCKER_REPO}:latest;\n+ docker tag ${DOCKER_REPO}:${VERSION}-${TAG} ${DOCKER_REPO}:${VERSION};\n+ docker tag ${DOCKER_REPO}:${VERSION}-${TAG} ${DOCKER_REPO}:${MINOR};\n+ docker tag ${DOCKER_REPO}:${VERSION}-${TAG} ${DOCKER_REPO}:${MAJOR};\n+\n+ docker push ${DOCKER_REPO}:latest;\n+ docker push ${DOCKER_REPO}:${VERSION};\n+ docker push ${DOCKER_REPO}:${MINOR};\n+ docker push ${DOCKER_REPO}:${MAJOR};\n+ fi\n+ fi\nfi\n+ if [[ ${TAG} == \"ubuntu1404\" || ${TAG} == \"alpine33\" ]]; then\n+ docker tag ${DOCKER_REPO}:${VERSION}-${TAG} ${DOCKER_REPO}_${TAG}:${VERSION};\n+ docker push ${DOCKER_REPO}_${TAG}:${VERSION};\n+ else\n# Push\n- docker tag \"$DOCKER_USER/$IMAGE_NAME:$TAG\" \"$DOCKER_USER/$IMAGE_NAME:$TAG\";\n- docker push \"$DOCKER_USER/$IMAGE_NAME:$TAG\";\n+ docker tag ${DOCKER_REPO}:${VERSION}-${TAG} ${DOCKER_REPO}:${VERSION}-${TAG};\n+ docker tag ${DOCKER_REPO}:${VERSION}-${TAG} ${DOCKER_REPO}:${MINOR}-${TAG};\n+ docker tag ${DOCKER_REPO}:${VERSION}-${TAG} ${DOCKER_REPO}:${MAJOR}-${TAG};\n+\n+ docker push ${DOCKER_REPO}:${VERSION}-${TAG};\n+ docker push ${DOCKER_REPO}:${MINOR}-${TAG};\n+ docker push ${DOCKER_REPO}:${MAJOR}-${TAG};\n+ fi\n}\nfor image in ${IMAGES_BASE_PATH}/*; do\n- build_docker_image ${image} ${TAG};\n+ build_docker_image ${image};\ndone\n",
        "date": "03.11.2018 05:14:06",
        "repo": "postmanlabs/newman",
        "type": "update",
        "chatgpt_zeroshot": "Refactor docker image building and tagging process"
    },
    {
        "msg": "update Docker lint rules :shirt:",
        "diff": "diff --git a/test/system/dockerfile_rules.yml b/test/system/dockerfile_rules.yml multiline_regex: /\\\\$/\nline_rules:\nFROM:\n- paramSyntaxRegex: /^[a-z0-9./-]+(:[a-z0-9.]+)?$/\n+ paramSyntaxRegex: /^[a-z0-9./-]+(:[a-z0-9.-]+)?$/\nrules:\n-\nlabel: \"is_latest_tag\"\nreference_url:\n- \"https://docs.docker.com/reference/builder/\"\n- \"#from\"\n- MAINTAINER:\n- paramSyntaxRegex: /.+/\n- rules: []\nRUN:\nparamSyntaxRegex: /.+/\nrules:\n",
        "date": "03.11.2018 06:27:38",
        "repo": "postmanlabs/newman",
        "type": "update",
        "chatgpt_zeroshot": "Update paramSyntaxRegex for FROM rule in dockerfile_rules.yml"
    },
    {
        "msg": "update util.prettyms() to return nanoseconds if given ms < 1",
        "diff": "diff --git a/lib/util.js b/lib/util.js @@ -64,6 +64,9 @@ util = {\n* @returns {String} - The prettified time, scaled to units of time, depending on the input value.\n*/\nprettyms: function (ms) {\n+ if (ms < 1) {\n+ return `${parseInt(ms * 1000, 10)}ns`;\n+ }\nreturn (ms < 1998) ? `${parseInt(ms, 10)}ms` : prettyms(ms || 0);\n},\n",
        "date": "13.02.2019 15:33:45",
        "repo": "postmanlabs/newman",
        "type": "update",
        "chatgpt_zeroshot": "Add support for displaying time in nanoseconds if input value is less than 1."
    },
    {
        "msg": "update readme to add more community reporters",
        "diff": "diff --git a/README.md b/README.md @@ -415,40 +415,46 @@ Older command line options are supported, but are deprecated in favour of the ne\ndiscontinued. For documentation on the older command options, refer to [README.md for Newman v2.X](https://github.com/postmanlabs/newman/blob/release/2.x/README.md).\n### HTML Reporter\n-Its an external reporter which can be installed via `npm install -g newman-reporter-html`.\n-The complete installation and usage guide is available at [newman-reporter-html](https://github.com/postmanlabs/newman-reporter-html#readme). Once HTML reporter is installed you can provide `--reporters html` as a CLI option.\n+An external reporter, maintained by Postman, which can be installed via `npm install -g newman-reporter-html`. This reporter was part of the Newman project but was separated out into it's own project in V4.\n+\n+The complete installation and usage guide is available at [newman-reporter-html](https://github.com/postmanlabs/newman-reporter-html#readme). Once the HTML reporter is installed you can provide `--reporters html` as a CLI option.\n[back to top](#table-of-contents)\n## External Reporters\n### Using External Reporters\n-Newman also supports external reporters, provided that the reporter works with Newman's event sequence. Working examples on\n+Newman also supports external reporters, provided that the reporter works with Newman's event sequence. Working examples of\nhow Newman reporters work can be found in [lib/reporters](https://github.com/postmanlabs/newman/tree/develop/lib/reporters).\n-For instance, to use the [Newman HTML Reporter](https://github.com/postmanlabs/newman-reporter-html):\n+\n+For instance, to use the [Newman htmlextra Reporter](https://github.com/DannyDainton/newman-reporter-htmlextra):\n- Install the reporter package. Note that the name of the package is of the form `newman-reporter-<name>`. The installation should be global if newman is installed globally, local otherwise. (Remove `-g` flag from the command below for a local installation.)<br/>\n```console\n-$ npm install -g newman-reporter-html\n+$ npm install -g newman-reporter-htmlextra\n```\n- Use the installed reporter, either via the CLI, or programmatic usage. Here, the `newman-reporter` prefix is **not** required while specifying the reporter name in the options.<br/>\n```console\n-$ newman run /path/to/collection.json -r cli,html\n+$ newman run /path/to/collection.json -r cli,htmlextra\n```\n```javascript\nconst newman = require('newman');\nnewman.run({\ncollection: '/path/to/collection.json',\n- reporters: ['cli', 'html']\n+ reporters: ['cli', 'htmlextra']\n}, process.exit);\n```\n#### Community Maintained Reporters\n-- [HTML](https://github.com/postmanlabs/newman-reporter-html)\n-- [TeamCity](https://github.com/leafle/newman-reporter-teamcity)\n-- [JSON-Light](https://github.com/Paramagnetic/newman-reporter-json-light)\n+- [htmlextra](https://github.com/DannyDainton/newman-reporter-htmlextra)\n+- [csv](https://github.com/matt-ball/newman-reporter-csv)\n+- [json-summary](https://github.com/spenceclark/newman-reporter-json-summary)\n+- [teamcity](https://github.com/leafle/newman-reporter-teamcity)\n+- [testrail](https://github.com/billylam/newman-reporter-testrail)\n+- [statsd](https://github.com/gsorry/newman-reporter-statsd)\n+- [confluence](https://github.com/OmbraDiFenice/newman-reporter-confluence)\n### Creating Your Own Reporter\nA custom reporter is a Node module with a name of the form `newman-reporter-<name>`. To create a custom reporter:\n@@ -460,8 +466,11 @@ function CustomNewmanReporter (emitter, reporterOptions, collectionRunOptions) {\n// reporterOptions is an object of the reporter specific options. See usage examples below for more details.\n// collectionRunOptions is an object of all the collection run options: https://github.com/postmanlabs/newman#newmanrunoptions-object--callback-function--run-eventemitter\n}\n+module.exports = CustomNewmanReporter\n```\n-3. Publish your reporter using `npm publish`, or use your reporter locally [see usage instructions](https://github.com/postmanlabs/newman/tree/develop/lib/reporters).\n+3. To use your reporter locally, use the `npm pack` command to create a `.tgz` file. Once created, this can be installed using the `npm i -g newman-reporter-<name>.<version>.tgz` command.\n+\n+Once you're happy with your reporter, it can be published to `npm` using `npm publish`. This will then be made available for other people to download.\nScoped reporter package names like `@myorg/newman-reporter-<name>` are also supported. Working reporter examples can be found in [lib/reporters](lib/reporters).\n",
        "date": "25.04.2019 16:26:51",
        "repo": "postmanlabs/newman",
        "type": "update",
        "chatgpt_zeroshot": "Refactor HTML reporter installation and add new external reporters"
    },
    {
        "msg": "update README with new logo and tagline",
        "diff": "diff --git a/README.md b/README.md ### Newman v4 has been released. Check the [migration guide](MIGRATION.md#migrating-from-v3-to-v4) and [changelog](https://github.com/postmanlabs/newman/blob/v4.0.0/CHANGELOG.yaml#L3) for more details.\n-<a href=\"https://www.getpostman.com/\"><img src=\"https://raw.githubusercontent.com/postmanlabs/postmanlabs.github.io/develop/global-artefacts/postman-logo%2Btext-320x132.png\" /></a><br />\n-_Supercharge your API workflow<br/>Modern software is built on APIs. Postman helps you develop APIs faster._\n+<a href=\"https://www.getpostman.com/\"><img src=\"https://assets.getpostman.com/common-share/postman-logo-horizontal-320x132.png\" /></a><br />\n+_Manage all of your organization's APIs in Postman, with the industry's most complete API development environment._\n# newman <sub>_the cli companion for postman_</sub>\n",
        "date": "29.05.2019 23:13:46",
        "repo": "postmanlabs/newman",
        "type": "update",
        "chatgpt_zeroshot": "Update Postman logo and tagline in README.md"
    },
    {
        "msg": "update CONTRIBUTING.md to reflect how to run newman locally",
        "diff": "diff --git a/.github/CONTRIBUTING.md b/.github/CONTRIBUTING.md @@ -34,10 +34,11 @@ In order to contribute to this project, you should:\n4. Make sure everything is working by running `npm test`.\n5. Create a new feature branch from `develop` with `feature/your-feature-name`.\n6. Make the necessary changes in line with the objective(s) of the pull request\n-7. Ensure that you have added unit and integration tests for any new features added / bugs fixed\n-8. Run `npm test`. If any tests fail, resolve the issue with the code, and re-try\n-9. Once the tests pass, commit and push. **Do not** alter the `version` in `package.json`\n-10. Create a pull request to `develop`\n+7. You can debug newman locally by running `node ./bin/newman <command-name>`.\n+8. Ensure that you have added unit and integration tests for any new features added / bugs fixed\n+9. Run `npm test`. If any tests fail, resolve the issue with the code, and re-try\n+10. Once the tests pass, commit and push. **Do not** alter the `version` in `package.json`\n+11. Create a pull request to `develop`\n## NPM Command Reference\n",
        "date": "26.02.2020 13:49:03",
        "repo": "postmanlabs/newman",
        "type": "update",
        "chatgpt_zeroshot": "Update CONTRIBUTING.md with additional debugging instructions"
    },
    {
        "msg": "update README for cli-timestamps Updated README for cli-timestamps",
        "diff": "diff --git a/README.md b/README.md @@ -425,6 +425,9 @@ such a scenario.\n| CLI Option | Description |\n|-------------|-------------------|\n| `--reporter-cli-silent` | The CLI reporter is internally disabled and you see no output to terminal. |\n+\n+| `--reporter-cli-show-timestamp` | This prints the local time for each request made. |\n+| `--reporter-cli-show-timestamp-utc` | This prints the UTC time of each request made. |\n| `--reporter-cli-no-summary` | The statistical summary table is not shown. |\n| `--reporter-cli-no-failures` | This prevents the run failures from being separately printed. |\n| `--reporter-cli-no-assertions` | This turns off the output for request-wise assertions as they happen. |\n",
        "date": "15.03.2020 17:40:20",
        "repo": "postmanlabs/newman",
        "type": "update",
        "chatgpt_zeroshot": "Add options to show timestamps in CLI reporter"
    },
    {
        "msg": "update changelog for verbose CLI reporter upgrades",
        "diff": "diff --git a/CHANGELOG.yaml b/CHANGELOG.yaml @@ -3,6 +3,10 @@ master:\n- >-\nGH-2806 Exposed the runner on newman and the runtime run object in start\nevent\n+ - >-\n+ Added ability to see request and responses in CLI reporter `--verbose`\n+ mode. Also added ability to see additional meta such as header count,\n+ cookie count and body mime-types in verbose mode.\n5.2.4:\ndate: 2021-06-24\n",
        "date": "13.08.2021 19:54:57",
        "repo": "postmanlabs/newman",
        "type": "update",
        "chatgpt_zeroshot": "Add ability to view request and responses in CLI reporter and additional meta in verbose mode"
    },
    {
        "msg": "update ADD_METRIC_FILTER action",
        "diff": "diff --git a/packages/reports/addon/consumers/request/metric.js b/packages/reports/addon/consumers/request/metric.js @@ -39,8 +39,8 @@ export default ActionConsumer.extend({\n* @param {Object} metric - metadata model of metric to add\n* @param {Object} parameter - selected metric parameter\n*/\n- [RequestActions.ADD_METRIC_WITH_PARAM]({ currentModel }, metric, parameter) {\n- get(currentModel, 'request').addRequestMetricWithParam(metric, parameter);\n+ [RequestActions.ADD_METRIC_WITH_PARAM]({ currentModel }, metric, parameters) {\n+ get(currentModel, 'request').addRequestMetricWithParam(metric, parameters);\n},\n/**\n@@ -49,18 +49,22 @@ export default ActionConsumer.extend({\n* @param {Object} metric - metadata model of metric to add\n* @param {Object} parameter - selected metric parameter\n*/\n- [RequestActions.REMOVE_METRIC_WITH_PARAM]({ currentModel }, metric, parameter) {\n- get(currentModel, 'request').removeRequestMetricWithParam(metric, parameter);\n+ [RequestActions.REMOVE_METRIC_WITH_PARAM]({ currentModel }, metric, parameters) {\n+ get(currentModel, 'request').removeRequestMetricWithParam(metric, parameters);\n},\n/**\n- * @action TOGGLE_METRIC_FILTER\n+ * @action ADD_METRIC_FILTER\n* @param {Object} route - route that has a model that contains a request property\n* @param {Object} metric - metric to filter\n*/\n- [RequestActions.ADD_METRIC_FILTER](route, metric) {\n+ [RequestActions.ADD_METRIC_FILTER](route, metric, parameters) {\n// Metric filter can't exist without the metric present in the request\n+ if(parameters){\n+ get(this, 'requestActionDispatcher').dispatch(RequestActions.ADD_METRIC_WITH_PARAM, route, metric, parameters);\n+ } else {\nget(this, 'requestActionDispatcher').dispatch(RequestActions.ADD_METRIC, route, metric);\n+ }\n},\n/**\n",
        "date": "06.03.2018 22:06:58",
        "repo": "yahoo/yavin",
        "type": "update",
        "chatgpt_zeroshot": "Refactor metric.js to handle metric parameters in request actions"
    },
    {
        "msg": "update tooltip to work with parameterized metrics",
        "diff": "diff --git a/packages/reports/addon/templates/components/metric-selector.hbs b/packages/reports/addon/templates/components/metric-selector.hbs {{else}}\nRemove all\n{{/if}}\n+ {{else}}\n{{#if (get metricsFiltered metric.name)}}\nRemove Filter\n{{else}}\nAdd Filter\n{{/if}}\n+ {{/if}}\n{{/tooltip-on-component}}\n{{/navi-icon}}\n</div>\n",
        "date": "08.03.2018 17:53:25",
        "repo": "yahoo/yavin",
        "type": "update",
        "chatgpt_zeroshot": "Refactor metric selector component to add filter functionality."
    },
    {
        "msg": "update installation instructions for ubuntu",
        "diff": "diff --git a/README.md b/README.md @@ -45,31 +45,14 @@ Try out the [live demo](http://demo.groovebasin.com/).\n* File system monitoring. Add songs anywhere inside your music directory and\nthey instantly appear in your library.\n-## Install\n+## Installation on Ubuntu\n-### Pre-Built Packages\n+Last updated for Zesty 17.04.\n-#### Ubuntu\n-\n-```\n-sudo apt-add-repository ppa:andrewrk/libgroove\n-sudo apt-get update\n-sudo apt-get install groovebasin\n-groovebasin\n-```\n-\n-### From Source\n-\n-1. Install one of these:\n- * [Node.js](http://nodejs.org) v0.10.36 or v0.12.x\n- * [io.js](https://iojs.org) v1.x.x\n- * On Debian and Ubuntu, `sudo apt-get install nodejs-dev nodejs-legacy npm`\n-2. Install [libgroove](https://github.com/andrewrk/libgroove).\n- libgroove is available in many package managers. See the libgroove README\n- for more details.\n-3. Clone the source and cd to it.\n-4. `npm run build`\n-5. `npm start`\n+1. `sudo apt-get install nodejs libgrooveloudness-dev libgroovefingerprinter-dev libgrooveplayer-dev libgroove-dev`\n+2. Clone this repo and cd to it.\n+3. `npm run build`\n+4. `npm start`\n## Configuration\n",
        "date": "07.12.2017 21:20:16",
        "repo": "andrewrk/groovebasin",
        "type": "update",
        "chatgpt_zeroshot": "Update installation instructions for Ubuntu in README.md"
    },
    {
        "msg": "update leveldown dependency",
        "diff": "diff --git a/package.json b/package.json \"httpolyglot\": \"~0.1.1\",\n\"keese\": \"~1.1.1\",\n\"lastfm\": \"~0.9.2\",\n- \"leveldown\": \"~1.4.3\",\n+ \"leveldown\": \"~2.1.1\",\n\"mess\": \"~0.1.2\",\n\"mkdirp\": \"~0.5.1\",\n\"multiparty\": \"~4.1.2\",\n",
        "date": "07.12.2017 21:05:47",
        "repo": "andrewrk/groovebasin",
        "type": "update",
        "chatgpt_zeroshot": "Update leveldown dependency to version 2.1.1"
    },
    {
        "msg": "update name drinks => opendrinks",
        "diff": "diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md @@ -28,5 +28,5 @@ The [/src/recipes/](/src/recipes/) directory contains all the drink recipes as a\n* Filename should match recipe filename\n* JPG format, 600x400px if possible, 200KB max in size\n* Submit a Pull Request with your recipe!\n-* Once approved and merged, the latest update will be published to https://drinklist.netlify.com\n+* Once approved and merged, the latest update will be published to https://opendrinks.netlify.com\n",
        "date": "16.09.2019 22:52:41",
        "repo": "alfg/opendrinks",
        "type": "update",
        "chatgpt_zeroshot": "Update publishing URL to opendrinks.netlify.com"
    },
    {
        "msg": "update src/recipes/lemonade.json",
        "diff": "diff --git a/src/recipes/lemonade.json b/src/recipes/lemonade.json \"Combine lemon juice, simple syrup: Pour the juice and the simple syrup sugar water into a serving pitcher. Add more water if you would like it to be more diluted (though note that when you add ice, it will melt and naturally dilute the lemonade).\",\n\"Chill: Refrigerate 30 to 40 minutes and serve\"\n],\n- \"image\": \"<lemonade.jpg>\"\n+ \"image\": \"lemonade.jpg\"\n}\n",
        "date": "01.10.2019 14:41:47",
        "repo": "alfg/opendrinks",
        "type": "update",
        "chatgpt_zeroshot": "Update image file path for lemonade recipe"
    },
    {
        "msg": "update image source and keywords",
        "diff": "diff --git a/src/recipes/bourbon-mule.json b/src/recipes/bourbon-mule.json \"Fill cup with ice. Add ginger beer; stir gently to combine.\",\n\"Garnish with mint sprig and lime slice.\"\n],\n- \"image\": \"<bourbon-mule.jpg>\",\n+ \"image\": \"bourbon-mule.jpg\",\n\"source\": \"https://www.cookinglight.com/recipes/bourbon-mule\",\n\"keywords\": [\n\"bourbon mule\",\n- \"bourbon\",\n+ \"bourbon\"\n]\n}\n",
        "date": "04.10.2019 09:08:27",
        "repo": "alfg/opendrinks",
        "type": "update",
        "chatgpt_zeroshot": "Update bourbon-mule recipe image and keywords."
    },
    {
        "msg": "update getRecipes lambda function.",
        "diff": "diff --git a/.netlify/functions-src/getRecipes.js b/.netlify/functions-src/getRecipes.js -import { getRecipes } from '../../src/recipes/index';\n+import recipes from '../../src/recipes/index';\nexports.handler = function(event, context, callback) {\n- // const r = recipes.getRecipes();\n+ const r = recipes.getRecipes();\nreturn callback(null, {\nstatusCode: 200,\nheaders: {\n'Content-Type': 'application/json',\n},\n- // body: JSON.stringify({ recipes: r }),\n+ body: JSON.stringify({ recipes: r }),\n});\n}\n",
        "date": "11.10.2019 23:23:44",
        "repo": "alfg/opendrinks",
        "type": "update",
        "chatgpt_zeroshot": "Refactor getRecipes function to use default export in recipes index file"
    },
    {
        "msg": "update pending changes",
        "diff": "diff --git a/docs/ast.md b/docs/ast.md @@ -10,8 +10,9 @@ Pending changes in AST:\n- `Progid` is subject to be removed\n- `Space` will be extended to store actual whitespaces\n+- `Space` may to be renamed into `WhiteSpace`\n- `Type`, `Universal`, `Id`, `Class`, `Attribute`, `PseudoClass` and `PseudoElement` may to be renamed to add a `Selector` suffix\n-- `PseudoClass` and `PseudoElement` may to be joined into single type `Pseudo` (or `PseudoSelector`)\n+- `Type` and `Universal` to be joined into single type `Type`\nOther node types are stable enough.\n",
        "date": "07.02.2017 15:00:57",
        "repo": "csstree/csstree",
        "type": "update",
        "chatgpt_zeroshot": "Refactor AST node names and properties"
    },
    {
        "msg": "update docs according to changes in AST",
        "diff": "diff --git a/docs/ast.md b/docs/ast.md @@ -11,8 +11,6 @@ Pending changes in AST:\n- `Progid` is subject to be removed\n- `Space` will be extended to store actual whitespaces\n- `Space` may to be renamed into `WhiteSpace`\n-- `Type`, `Universal`, `Id`, `Class`, `Attribute`, `PseudoClass` and `PseudoElement` may to be renamed to add a `Selector` suffix\n-- `Type` and `Universal` to be joined into single type `Type`\nOther node types are stable enough.\n@@ -23,10 +21,10 @@ Node types:\n- [AnPlusB](#anplusb)\n- [Atrule](#atrule)\n- [AtruleExpression](#atruleexpression)\n-- [Attribute](#attribute)\n+- [AttributeSelector](#attributeselector)\n- [Block](#block)\n- [Brackets](#brackets)\n-- [Class](#class)\n+- [ClassSelector](#classselector)\n- [Combinator](#combinator)\n- [Comment](#comment)\n- [Declaration](#declaration)\n@@ -34,7 +32,7 @@ Node types:\n- [Dimension](#dimension)\n- [Function](#function)\n- [Hash](#hash)\n-- [Id](#id)\n+- [IdSelector](#idselector)\n- [Identifier](#identifier)\n- [MediaFeature](#mediafeature)\n- [MediaQuery](#mediaquery)\n@@ -45,8 +43,8 @@ Node types:\n- [Parentheses](#parentheses)\n- [Percentage](#percentage)\n- [Progid](#progid)\n-- [PseudoClass](#pseudoclass)\n-- [PseudoElement](#pseudoelement)\n+- [PseudoClassSelector](#pseudoclassselector)\n+- [PseudoElementSelector](#pseudoelementselector)\n- [Ratio](#ratio)\n- [Raw](#raw)\n- [Rule](#rule)\n@@ -55,9 +53,8 @@ Node types:\n- [Space](#space)\n- [String](#string)\n- [StyleSheet](#stylesheet)\n-- [Type](#type)\n+- [TypeSelector](#typeselector)\n- [UnicodeRange](#unicoderange)\n-- [Universal](#universal)\n- [Url](#url)\n- [Value](#value)\n@@ -97,11 +94,11 @@ Used to represent [the An+B microsyntax](https://drafts.csswg.org/css-syntax/#an\n}\n```\n-## Attribute\n+## AttributeSelector\n```\n{\n- \"type\": \"Attribute\",\n+ \"type\": \"AttributeSelector\",\n\"name\": string,\n\"operator\": string | null,\n\"value\": <String> | <Identifier> | null,\n@@ -127,11 +124,11 @@ Used to represent [the An+B microsyntax](https://drafts.csswg.org/css-syntax/#an\n}\n```\n-## Class\n+## ClassSelector\n```\n{\n- \"type\": \"Class\",\n+ \"type\": \"ClassSelector\",\n\"name\": string\n}\n```\n@@ -203,11 +200,11 @@ Used to represent [the An+B microsyntax](https://drafts.csswg.org/css-syntax/#an\n}\n```\n-## Id\n+## IdSelector\n```\n{\n- \"type\": \"Id\",\n+ \"type\": \"IdSelector\",\n\"name\": string\n}\n```\n@@ -304,21 +301,21 @@ Used to represent [the An+B microsyntax](https://drafts.csswg.org/css-syntax/#an\n}\n```\n-## PseudoClass\n+## PseudoClassSelector\n```\n{\n- \"type\": \"PseudoClass\",\n+ \"type\": \"PseudoClassSelector\",\n\"name\": string,\n\"children\": List | null\n}\n```\n-## PseudoElement\n+## PseudoElementSelector\n```\n{\n- \"type\": \"PseudoElement\",\n+ \"type\": \"PseudoElementSelector\",\n\"name\": string,\n\"children\": List | null\n}\n@@ -375,7 +372,8 @@ Used to represent [the An+B microsyntax](https://drafts.csswg.org/css-syntax/#an\n```\n{\n- \"type\": \"Space\"\n+ \"type\": \"Space\",\n+ \"value\": string\n}\n```\n@@ -397,11 +395,11 @@ Used to represent [the An+B microsyntax](https://drafts.csswg.org/css-syntax/#an\n}\n```\n-## Type\n+## TypeSelector\n```\n{\n- \"type\": \"Type\",\n+ \"type\": \"TypeSelector\",\n\"name\": string\n}\n```\n@@ -415,15 +413,6 @@ Used to represent [the An+B microsyntax](https://drafts.csswg.org/css-syntax/#an\n}\n```\n-## Universal\n-\n-```\n-{\n- \"type\": \"Universal\",\n- \"name\": string\n-}\n-```\n-\n## Url\n```\n",
        "date": "07.02.2017 20:34:48",
        "repo": "csstree/csstree",
        "type": "update",
        "chatgpt_zeroshot": "Refactor node types and selectors in AST"
    },
    {
        "msg": "update supported properties list",
        "diff": "diff --git a/docs/supported.md b/docs/supported.md @@ -163,6 +163,7 @@ Support for a property means CSSTree has a grammar for such property, so its val\n- `-webkit-mask-repeat`\n- `-webkit-mask-repeat-x`\n- `-webkit-mask-repeat-y`\n+- `-webkit-mask-size`\n- `-webkit-overflow-scrolling`\n- `-webkit-print-color-adjust`\n- `-webkit-tap-highlight-color`\n@@ -320,6 +321,7 @@ Support for a property means CSSTree has a grammar for such property, so its val\n- `font-feature-settings`\n- `font-kerning`\n- `font-language-override`\n+- `font-optical-sizing`\n- `font-size`\n- `font-size-adjust`\n- `font-stretch`\n",
        "date": "17.05.2018 22:06:17",
        "repo": "csstree/csstree",
        "type": "update",
        "chatgpt_zeroshot": "Add support for `-webkit-mask-size` and `font-optical-sizing` properties"
    },
    {
        "msg": "update url params for stargazer and ContributorItem links",
        "diff": "diff --git a/src/components/screens/IndexScreen/Hero.js b/src/components/screens/IndexScreen/Hero.js @@ -368,7 +368,6 @@ Framework.propTypes = {\n};\nexport default function Hero({ startOpen, ...props }) {\n- const [namespace, repo] = url.gitHub.repo.match(/github.com\\/(.*)\\/(.*)$/).slice(1);\nconst Modal = () => (\n<AspectRatio ratio={0.5625}>\n@@ -392,6 +391,9 @@ export default function Hero({ startOpen, ...props }) {\nquery HeroContributorQuery {\ngitHubRepoData {\ncontributorCount\n+ url\n+ author\n+ name\n}\n}\n`}\n@@ -484,7 +486,7 @@ export default function Hero({ startOpen, ...props }) {\n<Stats>\n<GitHubWrapper className=\"chromatic-ignore\">\n- <GitHubButton type=\"stargazers\" namespace={namespace} repo={repo} />\n+ <GitHubButton type=\"stargazers\" namespace={data.gitHubRepoData.author} repo={data.gitHubRepoData.name} />\n</GitHubWrapper>\n<Stat\nsize=\"small\"\n@@ -492,7 +494,7 @@ export default function Hero({ startOpen, ...props }) {\ntext=\"Latest version\"\nnoPlural\nstatus=\"primary\"\n- countLink={url.gitHub.releases}\n+ countLink={`${data.gitHubRepoData.url}/releases`}\n/>\n<NpmDownloadStat />\n<Stat\n",
        "date": "22.01.2019 22:19:42",
        "repo": "storybookjs/frontpage",
        "type": "update",
        "chatgpt_zeroshot": "Refactor Hero component to use data from GitHubRepoData in GitHubButton and Latest version Stat."
    },
    {
        "msg": "update story to use the new Video component",
        "diff": "diff --git a/src/components/layout/ValueProp.stories.js b/src/components/layout/ValueProp.stories.js @@ -4,6 +4,8 @@ import { storiesOf } from '@storybook/react';\nimport ValueProp from './ValueProp';\nimport PlaceholderAspectRatio from './PlaceholderAspectRatio';\n+import { Video } from '../basics';\n+\nconst ImageWrapper = styled.div`\nimg {\nwidth: 100%;\n@@ -19,9 +21,11 @@ storiesOf('screens/IndexScreen/ValueProp', module).add('default', () => (\nmedia={\n/* eslint-disable jsx-a11y/media-has-caption */\n<PlaceholderAspectRatio ratio={0.75}>\n- <video autoPlay muted loop playsInline>\n- <source src=\"videos/storybook-workflow-build-optimized-sm.mp4\" type=\"video/mp4\" />\n- </video>\n+ <Video\n+ src=\"videos/storybook-workflow-build-optimized-lg.mp4\"\n+ alt=\"Storybook build workflow video\"\n+ shouldChangeSize\n+ />\n</PlaceholderAspectRatio>\n}\ntitle=\"Lorem ipsum dolor sit amet\"\n",
        "date": "25.01.2019 13:28:58",
        "repo": "storybookjs/frontpage",
        "type": "update",
        "chatgpt_zeroshot": "Refactor ValueProp component to use Video component for displaying videos"
    },
    {
        "msg": "update landing page copy",
        "diff": "diff --git a/src/components/screens/IndexScreen/Hero.js b/src/components/screens/IndexScreen/Hero.js @@ -385,8 +385,9 @@ export default function Hero({ startOpen, ...props }) {\n<Pitch>\n<Title>Build bulletproof UI components faster</Title>\n<Subtitle>\n- Storybook is an open source tool for developing UI components in isolation for React, Vue,\n- Angular, and more. It makes building stunning UIs organized and efficient.\n+ Storybook is an open source tool for developing, testing and documenting UI components in\n+ isolation for React, Vue, Angular, and more. It makes building stunning UIs organized and\n+ efficient.\n</Subtitle>\n<PitchActions>\n<Button appearance=\"primary\" isLink href={docs}>\n",
        "date": "19.04.2021 14:28:04",
        "repo": "storybookjs/frontpage",
        "type": "update",
        "chatgpt_zeroshot": "Refactor Hero component to update Subtitle in IndexScreen"
    },
    {
        "msg": "update config for sitemap plugin",
        "diff": "diff --git a/gatsby-config.js b/gatsby-config.js @@ -14,11 +14,10 @@ module.exports = {\n...siteMetadata,\n...versionData,\n},\n- // flags: {\n- // PRESERVE_WEBPACK_CACHE: true,\n- // FAST_DEV: true,\n- // QUERY_ON_DEMAND: true,\n- // },\n+ flags: {\n+ FAST_DEV: true,\n+ QUERY_ON_DEMAND: true,\n+ },\n...(!versionData.isLatest\n? { assetPrefix: getReleaseBranchUrl(versionData.versionString) }\n: undefined),\n@@ -177,6 +176,17 @@ module.exports = {\n{\nresolve: `gatsby-plugin-sitemap`,\noptions: {\n+ query: `\n+ {\n+ allSitePage {\n+ edges {\n+ node {\n+ path\n+ }\n+ }\n+ }\n+ }\n+ `,\nserialize: ({ site, allSitePage }) =>\nallSitePage.edges.map((edge) => ({\nurl: `${site.siteMetadata.siteUrl}${edge.node.path}/`,\n",
        "date": "08.06.2022 20:41:28",
        "repo": "storybookjs/frontpage",
        "type": "update",
        "chatgpt_zeroshot": "Refactor gatsby-config.js to enable FAST_DEV and QUERY_ON_DEMAND flags"
    },
    {
        "msg": "update slot time to 5m",
        "diff": "diff --git a/src/config/testnet_postake_medium_curves.mlh b/src/config/testnet_postake_medium_curves.mlh [%%define genesis_ledger \"testnet_postake\"]\n[%%define genesis_state_timestamp \"2019-01-30 12:00:00-08:00\"]\n-[%%define block_window_duration 30000]\n+[%%define block_window_duration 300000]\n[%%define integration_tests false]\n[%%define force_updates false]\n",
        "date": "28.06.2019 22:14:05",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Increase block window duration to 300000 in testnet_postake configuration."
    },
    {
        "msg": "update the PR",
        "diff": "diff --git a/src/lib/proposer/proposer.ml b/src/lib/proposer/proposer.ml @@ -343,7 +343,13 @@ let run ~logger ~prover ~verifier ~trust_system ~get_completed_work\n(Protocol_state.hash previous_protocol_state)\n|> Option.value_exn\nin\n- let transition =\n+ let error_msg_prefix = \"Validation failed: \" in\n+ let reason_for_failure =\n+ \" One possible reason could be a ledger-catchup is \\\n+ triggered before we produce a proof for the proposed \\\n+ transition.\"\n+ in\n+ match\nExternal_transition.Validation.wrap\n{ With_hash.hash= transition_hash\n; data=\n@@ -359,24 +365,32 @@ let run ~logger ~prover ~verifier ~trust_system ~get_completed_work\n`This_transition_was_not_received_via_gossip\n|> Transition_frontier_validation\n.validate_frontier_dependencies ~logger ~frontier\n- |> Result.map_error ~f:(fun err ->\n- let exn name =\n- Error.to_exn\n- (Error.of_string\n- (sprintf\n- \"Error validating proposed \\\n- transition frontier dependencies: %s\"\n- name))\n- in\n- match err with\n- | `Already_in_frontier ->\n- exn \"already in frontier\"\n- | `Not_selected_over_frontier_root ->\n- exn \"not selected over frontier root\"\n- | `Parent_missing_from_frontier ->\n- exn \"parent missing from frontier\" )\n- |> Result.ok_exn\n- in\n+ with\n+ | Error `Already_in_frontier ->\n+ Logger.error logger ~module_:__MODULE__\n+ ~location:__LOC__\n+ ~metadata:\n+ [ ( \"protocol_state\"\n+ , Protocol_state.value_to_yojson protocol_state\n+ ) ]\n+ \"%sproposed transition is already in frontier\"\n+ error_msg_prefix ;\n+ return ()\n+ | Error `Not_selected_over_frontier_root ->\n+ Logger.warn logger ~module_:__MODULE__\n+ ~location:__LOC__\n+ \"%sproposed transition is not selected over the \\\n+ root of transition frontier.%s\"\n+ error_msg_prefix reason_for_failure ;\n+ return ()\n+ | Error `Parent_missing_from_frontier ->\n+ Logger.warn logger ~module_:__MODULE__\n+ ~location:__LOC__\n+ \"%sparent of proposed transition is missing from \\\n+ the frontier.%s\"\n+ error_msg_prefix reason_for_failure ;\n+ return ()\n+ | Ok transition -> (\nlet%bind breadcrumb_result =\nBreadcrumb.build ~logger ~verifier ~trust_system\n~parent:crumb ~transition ~sender:None\n@@ -398,33 +412,39 @@ let run ~logger ~prover ~verifier ~trust_system ~get_completed_work\n(Exn.to_string e))\n| `Invalid_staged_ledger_diff e ->\nexn\n- (sprintf \"invalid staged ledger diff -- %s\"\n+ (sprintf\n+ \"invalid staged ledger diff -- %s\"\n(Error.to_string_hum e))\n| `Invalid_staged_ledger_hash e ->\nexn\n- (sprintf \"invalid staged ledger hash -- %s\"\n+ (sprintf\n+ \"invalid staged ledger hash -- %s\"\n(Error.to_string_hum e)) )\n|> Result.ok_exn\nin\nlet metadata =\n- [(\"state_hash\", State_hash.to_yojson transition_hash)]\n+ [ ( \"state_hash\"\n+ , State_hash.to_yojson transition_hash ) ]\nin\n- Logger.info logger ~module_:__MODULE__ ~location:__LOC__\n- !\"Submitting newly produced block $state_hash to the \\\n- transition frontier controller\"\n+ Logger.info logger ~module_:__MODULE__\n+ ~location:__LOC__\n+ !\"Submitting newly produced block $state_hash to \\\n+ the transition frontier controller\"\n~metadata ;\n- Coda_metrics.(Counter.inc_one Proposer.blocks_proposed) ;\n+ Coda_metrics.(\n+ Counter.inc_one Proposer.blocks_proposed) ;\nlet%bind () =\n- Strict_pipe.Writer.write transition_writer breadcrumb\n+ Strict_pipe.Writer.write transition_writer\n+ breadcrumb\nin\n- Logger.debug logger ~module_:__MODULE__ ~location:__LOC__\n- ~metadata\n- \"Waiting for transition $state_hash to be inserted \\\n- into frontier\" ;\n+ Logger.debug logger ~module_:__MODULE__\n+ ~location:__LOC__ ~metadata\n+ \"Waiting for transition $state_hash to be \\\n+ inserted into frontier\" ;\nDeferred.choose\n[ Deferred.choice\n- (Transition_frontier.wait_for_transition frontier\n- transition_hash)\n+ (Transition_frontier.wait_for_transition\n+ frontier transition_hash)\n(Fn.const `Transition_accepted)\n; Deferred.choice\n( Time.Timeout.create time_controller\n@@ -439,19 +459,20 @@ let run ~logger ~prover ~verifier ~trust_system ~get_completed_work\n| `Transition_accepted ->\nLogger.info logger ~module_:__MODULE__\n~location:__LOC__ ~metadata\n- \"Generated transition $state_hash was accepted \\\n- into transition frontier\"\n+ \"Generated transition $state_hash was \\\n+ accepted into transition frontier\"\n| `Timed_out ->\nlet str =\n\"Timed out waiting for generated transition \\\n$state_hash to enter transition frontier. \\\n- Continuing to produce new blocks anyway. This \\\n- may mean your CPU is overloaded. Consider \\\n- disabling `-run-snark-worker` if it's configured.\"\n+ Continuing to produce new blocks anyway. \\\n+ This may mean your CPU is overloaded. \\\n+ Consider disabling `-run-snark-worker` if \\\n+ it's configured.\"\nin\n(* FIXME #3167: this should be fatal, and more importantly, shouldn't happen. *)\nLogger.error logger ~module_:__MODULE__\n- ~location:__LOC__ ~metadata \"%s\" str )) )\n+ ~location:__LOC__ ~metadata \"%s\" str ) )) )\nin\nlet proposal_supervisor = Singleton_supervisor.create ~task:propose in\nlet scheduler = Singleton_scheduler.create time_controller in\n",
        "date": "23.08.2019 16:11:56",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Refactor validation error handling and logging in proposer.ml"
    },
    {
        "msg": "update docs to link to grants repo",
        "diff": "diff --git a/frontend/website/docs/contributing.md b/frontend/website/docs/contributing.md @@ -22,7 +22,9 @@ Coda is entirely open source, and the code is distributed under the terms of the\n## Coda Grants\n-There are also a limited set of grants for projects related to Coda's development. Many of these focus on development, but more will be added in the areas of design and community development. Reach out on Discord for more info on the grant program.\n+O(1) Labs provides grants for certain projects related to the development of Coda -- visit the [Coda Grants repo](https://github.com/CodaProtocol/coda-grants) to find out more details.\n+\n+Currently, the projects are mostly programming focused, but more will be added in the areas of design and community development. Reach out on Discord if you have any questions about the grant program.\n## Reporting Issues\n",
        "date": "04.09.2019 13:53:11",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Update information about Coda Grants and provide link to Coda Grants repo."
    },
    {
        "msg": "update the cache as soon as possible",
        "diff": "diff --git a/src/lib/pipe_lib/broadcast_pipe.ml b/src/lib/pipe_lib/broadcast_pipe.ml @@ -21,7 +21,6 @@ let create a =\nin\ndon't_wait_for\n(Pipe.iter ~flushed:(Consumer consumer) root_r ~f:(fun v ->\n- t.cache <- v ;\ndownstream_flushed_v := Ivar.create () ;\nlet inner_pipes = Int.Table.data t.pipes in\nlet%bind () =\n@@ -105,6 +104,7 @@ module Writer = struct\nlet write t x =\nguard_already_closed t (fun () ->\n+ t.cache <- x ;\nlet%bind () = Pipe.write t.root_pipe x in\nlet%bind _ = Pipe.downstream_flushed t.root_pipe in\nDeferred.unit )\n",
        "date": "23.09.2019 16:34:31",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Refactor broadcast_pipe.ml to update cache before writing to root_pipe"
    },
    {
        "msg": "update style bug in Glossary page",
        "diff": "diff --git a/frontend/website/docs/glossary.md b/frontend/website/docs/glossary.md @@ -45,7 +45,7 @@ The Coda daemon is a background process that implements the Coda protocol and ru\nBecause staking coda requires nodes to be online, some nodes may desire to delegate their coda to another node which runs a staking service. This process is called delegating a stake, and often the service provider or staking pool operator may charge a fee for running this service, which will be deducted any time the delegator gets selected to be a block producer.\n-###Full Node\n+####Full Node\nA Coda node that is able to verify the state of the network trustlessly. In Coda, every node is a full node since all nodes can receive and verify zk-SNARKs.\n",
        "date": "25.09.2019 14:08:20",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Update glossary.md - Changed header level for \"Full Node\" to be a subheading."
    },
    {
        "msg": "update graphql schema post-rebase",
        "diff": "diff --git a/graphql_schema.json b/graphql_schema.json \"enumValues\": null,\n\"possibleTypes\": null\n},\n+ {\n+ \"kind\": \"OBJECT\",\n+ \"name\": \"AddrsAndPorts\",\n+ \"description\": null,\n+ \"fields\": [\n+ {\n+ \"name\": \"externalIp\",\n+ \"description\": null,\n+ \"args\": [],\n+ \"type\": {\n+ \"kind\": \"NON_NULL\",\n+ \"name\": null,\n+ \"ofType\": {\n+ \"kind\": \"SCALAR\",\n+ \"name\": \"String\",\n+ \"ofType\": null\n+ }\n+ },\n+ \"isDeprecated\": false,\n+ \"deprecationReason\": null\n+ },\n+ {\n+ \"name\": \"bindIp\",\n+ \"description\": null,\n+ \"args\": [],\n+ \"type\": {\n+ \"kind\": \"NON_NULL\",\n+ \"name\": null,\n+ \"ofType\": {\n+ \"kind\": \"SCALAR\",\n+ \"name\": \"String\",\n+ \"ofType\": null\n+ }\n+ },\n+ \"isDeprecated\": false,\n+ \"deprecationReason\": null\n+ },\n+ {\n+ \"name\": \"discoveryPort\",\n+ \"description\": null,\n+ \"args\": [],\n+ \"type\": {\n+ \"kind\": \"NON_NULL\",\n+ \"name\": null,\n+ \"ofType\": {\n+ \"kind\": \"SCALAR\",\n+ \"name\": \"Int\",\n+ \"ofType\": null\n+ }\n+ },\n+ \"isDeprecated\": false,\n+ \"deprecationReason\": null\n+ },\n+ {\n+ \"name\": \"clientPort\",\n+ \"description\": null,\n+ \"args\": [],\n+ \"type\": {\n+ \"kind\": \"NON_NULL\",\n+ \"name\": null,\n+ \"ofType\": {\n+ \"kind\": \"SCALAR\",\n+ \"name\": \"Int\",\n+ \"ofType\": null\n+ }\n+ },\n+ \"isDeprecated\": false,\n+ \"deprecationReason\": null\n+ },\n+ {\n+ \"name\": \"libp2pPort\",\n+ \"description\": null,\n+ \"args\": [],\n+ \"type\": {\n+ \"kind\": \"NON_NULL\",\n+ \"name\": null,\n+ \"ofType\": {\n+ \"kind\": \"SCALAR\",\n+ \"name\": \"Int\",\n+ \"ofType\": null\n+ }\n+ },\n+ \"isDeprecated\": false,\n+ \"deprecationReason\": null\n+ },\n+ {\n+ \"name\": \"communicationPort\",\n+ \"description\": null,\n+ \"args\": [],\n+ \"type\": {\n+ \"kind\": \"NON_NULL\",\n+ \"name\": null,\n+ \"ofType\": {\n+ \"kind\": \"SCALAR\",\n+ \"name\": \"Int\",\n+ \"ofType\": null\n+ }\n+ },\n+ \"isDeprecated\": false,\n+ \"deprecationReason\": null\n+ }\n+ ],\n+ \"inputFields\": null,\n+ \"interfaces\": [],\n+ \"enumValues\": null,\n+ \"possibleTypes\": null\n+ },\n{\n\"kind\": \"OBJECT\",\n\"name\": \"ConsensusConfiguration\",\n},\n\"isDeprecated\": false,\n\"deprecationReason\": null\n+ },\n+ {\n+ \"name\": \"addrsAndPorts\",\n+ \"description\": null,\n+ \"args\": [],\n+ \"type\": {\n+ \"kind\": \"NON_NULL\",\n+ \"name\": null,\n+ \"ofType\": {\n+ \"kind\": \"OBJECT\",\n+ \"name\": \"AddrsAndPorts\",\n+ \"ofType\": null\n+ }\n+ },\n+ \"isDeprecated\": false,\n+ \"deprecationReason\": null\n+ },\n+ {\n+ \"name\": \"libp2pPeerId\",\n+ \"description\": null,\n+ \"args\": [],\n+ \"type\": {\n+ \"kind\": \"NON_NULL\",\n+ \"name\": null,\n+ \"ofType\": {\n+ \"kind\": \"SCALAR\",\n+ \"name\": \"String\",\n+ \"ofType\": null\n+ }\n+ },\n+ \"isDeprecated\": false,\n+ \"deprecationReason\": null\n}\n],\n\"inputFields\": null,\n",
        "date": "24.10.2019 16:41:31",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Add new object type AddrsAndPorts and fields to ConsensusConfiguration"
    },
    {
        "msg": "update link on Testnet page to testnet challenges for 3.2",
        "diff": "diff --git a/frontend/website/src/pages/Testnet.re b/frontend/website/src/pages/Testnet.re @@ -419,8 +419,7 @@ let make = (~challenges as _, ~testnetName as _) => {\n</ul>\n<p className=Styles.markdownStyles>\n{React.string(\"Check out all challenges \")}\n- <a\n- href=\"https://forums.codaprotocol.com/t/testnet-beta-release-3-1-challenges/271\">\n+ <a href=\"https://bit.ly/Challenges3-2a\">\n{React.string(\" here \")}\n</a>\n{React.string(\"and join \")}\n",
        "date": "24.04.2020 20:49:02",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Update challenges link to point to new location."
    },
    {
        "msg": "update expected local agent google-sdk search path",
        "diff": "diff --git a/buildkite/scripts/cache-through.sh b/buildkite/scripts/cache-through.sh @@ -10,7 +10,7 @@ fi\n# download gsutil if it doesn't exist\n# TODO: Bake this into the agents\n-if [[ ! -f ./google-cloud-sdk/bin/gsutil ]]; then\n+if [[ ! -f /usr/local/google-cloud-sdk/bin/gsutil ]]; then\necho \"Downloading gsutil because it doesn't exist\"\nwget https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-296.0.1-linux-x86_64.tar.gz\n",
        "date": "15.06.2020 18:29:13",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Update gsutil download path in cache-through script"
    },
    {
        "msg": "update unit-test.sh - bump job concurrency back to at most 16",
        "diff": "diff --git a/buildkite/scripts/unit-test.sh b/buildkite/scripts/unit-test.sh @@ -21,4 +21,4 @@ echo \"--- Make build\"\ntime make build\necho \"--- Run unit tests\"\n-time dune runtest \"${path}\" --profile=\"${profile}\" -j1 || (./scripts/link-coredumps.sh && false)\n+time dune runtest \"${path}\" --profile=\"${profile}\" -j16 || (./scripts/link-coredumps.sh && false)\n",
        "date": "07.07.2020 07:13:57",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Increase parallelism in unit tests to improve performance"
    },
    {
        "msg": "update transaction pool",
        "diff": "diff --git a/src/lib/network_pool/transaction_pool.ml b/src/lib/network_pool/transaction_pool.ml @@ -931,6 +931,9 @@ struct\nlet unsafe_apply t env =\nmatch%map apply t env with Ok e -> Ok e | Error e -> Error (`Other e)\n+\n+ (* Transaction verification currently happens in apply. In the future we could batch it. *)\n+ let verify _ _ = Deferred.return true\nend\nlet get_rebroadcastable (t : t) ~is_expired =\n",
        "date": "05.08.2020 15:49:57",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Add placeholder function for transaction verification in transaction pool"
    },
    {
        "msg": "update trigger agent metadata setting",
        "diff": "diff --git a/buildkite/src/Pipeline/TriggerCommand.dhall b/buildkite/src/Pipeline/TriggerCommand.dhall @@ -3,5 +3,5 @@ in\n(\n\\(dhallPipelineRelativeToBuildKiteDir : Text) ->\n- Cmd.quietly \"dhall-to-yaml --quoted <<< '(./buildkite/${dhallPipelineRelativeToBuildKiteDir}).pipeline' | BUILDKITE_AGENT_META_DATA_size=small buildkite-agent pipeline upload\"\n+ Cmd.quietly \"dhall-to-yaml --quoted <<< '(./buildkite/${dhallPipelineRelativeToBuildKiteDir}).pipeline' | BUILDKITE_AGENT_META_DATA_SIZE=small buildkite-agent pipeline upload\"\n) : Text -> Cmd.Type\n",
        "date": "12.08.2020 23:59:33",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Fix typo in environment variable name"
    },
    {
        "msg": "update dune file",
        "diff": "diff --git a/src/lib/runtime_config/dune b/src/lib/runtime_config/dune (library\n(name runtime_config)\n(public_name coda_runtime_config)\n- (libraries core_kernel currency ppx_dhall_type)\n+ (libraries core_kernel currency ppx_dhall_type coda_numbers)\n(preprocess (pps ppx_let ppx_deriving_yojson ppx_dhall_type ppx_version ppx_deriving.eq)))\n",
        "date": "19.08.2020 11:46:08",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Add coda_numbers library to runtime_config dependencies"
    },
    {
        "msg": "update nonconsensus lib",
        "diff": "diff --git a/src/nonconsensus/coda_numbers/dune b/src/nonconsensus/coda_numbers/dune (inline_tests)\n(library_flags -linkall)\n(libraries fold_lib tuple_lib bignum_bigint snark_bits_nonconsensus unsigned_extended_nonconsensus random_oracle_nonconsensus\n- core_kernel codable)\n+ core_kernel codable ppx_dhall_type)\n(preprocessor_deps ../../config.mlh)\n(preprocess\n(pps ppx_version ppx_optcomp ppx_bin_prot ppx_sexp_conv ppx_compare ppx_hash ppx_deriving.eq ppx_deriving_yojson\n",
        "date": "19.08.2020 12:25:43",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Add ppx_dhall_type to core_kernel and codable libraries in nonconsensus coda_numbers module"
    },
    {
        "msg": "update coda-automation",
        "diff": "diff --git a/src/lib/integration_test_cloud_engine/coda_automation.ml b/src/lib/integration_test_cloud_engine/coda_automation.ml @@ -98,7 +98,8 @@ module Network_config = struct\n; balance=\nBalance.of_formatted_string balance\n(* delegation currently unsupported *)\n- ; delegate= None }\n+ ; delegate= None\n+ ; timing= None }\nin\nlet secret_name = \"test-keypair-\" ^ Int.to_string index in\nlet keypair =\n",
        "date": "19.08.2020 15:35:33",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Add timing field to network configuration in coda_automation"
    },
    {
        "msg": "update size formula",
        "diff": "diff --git a/frontend/website-redesign/src/components/Icon.re b/frontend/website-redesign/src/components/Icon.re @@ -43,10 +43,9 @@ type kind =\nlet make = (~kind, ~size=?) => {\nlet size =\nswitch (size) {\n- | Some(size) => size\n- | None => \"24\"\n+ | Some(size) => Js.Int.toString(size * 16) ++ \"px\"\n+ | None => \"24px\"\n};\n-\nswitch (kind) {\n| World => <svg height=size width=size />\n| Discord => <svg height=size width=size />\n",
        "date": "20.08.2020 13:26:31",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Update Icon component to dynamically calculate size in pixels based on input size value."
    },
    {
        "msg": "update PATH within client sdk unit test script",
        "diff": "diff --git a/scripts/client-sdk-unit-tests.sh b/scripts/client-sdk-unit-tests.sh @@ -4,6 +4,9 @@ set -e\n# run client SDK tests in node\n+export PATH=/home/opam/.cargo/bin:/usr/lib/go/bin:$PATH\n+export GO=/usr/lib/go/bin/go\n+\necho \"Building client SDK...\"\nmake client_sdk\necho \"Running tests\"\n",
        "date": "24.08.2020 14:29:56",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Add environment variables for Go and Cargo paths in client SDK unit tests script"
    },
    {
        "msg": "update definitions of assert equals/equals",
        "diff": "diff --git a/src/lib/currency/currency.ml b/src/lib/currency/currency.ml @@ -295,27 +295,12 @@ end = struct\nlet ( + ) = add\nlet equal (t1 : var) (t2 : var) =\n- let seal x =\n- let%bind y = exists Field.typ ~compute:As_prover.(read_var x) in\n- let%map () = Field.Checked.Assert.equal x y in\n- y\n- in\n- let%bind v1 = seal (pack_var t1.magnitude) in\n- let v2 = pack_var t1.magnitude in\n- let%bind v1_equal_v2 = Field.Checked.equal v1 v2\n- and sgns_equal =\n- Field.Checked.equal (t1.sgn :> Field.Var.t) (t2.sgn :> Field.Var.t)\n- in\n- let%bind v1_is_zero =\n- Field.Checked.equal v1 (Field.Var.constant Field.zero)\n- in\n- let%bind v1_zero_or_sgns_equal =\n- Boolean.any [v1_is_zero; sgns_equal]\n- in\n- Boolean.all [v1_equal_v2; v1_zero_or_sgns_equal]\n+ let%bind t1 = to_field_var t1 and t2 = to_field_var t2 in\n+ Field.Checked.equal t1 t2\nlet assert_equal (t1 : var) (t2 : var) =\n- equal t1 t2 >>= Boolean.Assert.is_true\n+ let%bind t1 = to_field_var t1 and t2 = to_field_var t2 in\n+ Field.Checked.Assert.equal t1 t2\nlet cswap_field (b : Boolean.var) (x, y) =\n(* (x + b(y - x), y + b(x - y)) *)\n",
        "date": "31.08.2020 09:30:18",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Refactor equal and assert_equal functions in currency module"
    },
    {
        "msg": "update sandbox page for pickles",
        "diff": "diff --git a/frontend/website/pages/docs/developers/sandbox-node.mdx b/frontend/website/pages/docs/developers/sandbox-node.mdx @@ -22,7 +22,7 @@ docker run \\\n--publish 3085:3085 \\\n-d \\\n--name coda \\\n- codaprotocol/coda-demo:sandbox-32a.1\n+ codaprotocol/coda-demo:pickles-sandbox\n```\nThis command will start a daemon inside the docker container and expose the GraphQL port (3085), which is used for communication with the client, to your computer. This daemon will automatically be running in the background with a block producer and snark worker.\n@@ -59,8 +59,8 @@ The password for this account is the empty string (there's no password -- you ca\nThere are a few things you can do with your sandbox now that you have it running:\n-- [Install Coda](/docs/getting-started#installation) as usual and use many of the client commands. Since the daemon is already running in the container, you don't need to run `coda daemon`!\n-\n-- Install the [GUI Wallet](/docs/gui-wallet) app to use a graphical interface to your node. Enter '127.0.0.1' as the host of your node during setup.\n+- Follow [the normal instructions](https://codaprotocol.com/docs/my-first-transaction#create-a-new-account) skipping over those steps that interact with a live network such as using a faucet.\n- Head over to http://localhost:3085/graphql to play with the GraphQL API directly.\n+\n+- Observe the logs and marvel at all the interesting crypto executing on your machine.\n",
        "date": "04.09.2020 23:36:13",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Update docker image tag and instructions in sandbox-node.mdx"
    },
    {
        "msg": "update docker vers in one place missed",
        "diff": "diff --git a/src/app/rosetta/README.md b/src/app/rosetta/README.md @@ -72,7 +72,7 @@ The Construction API is _not_ validated using `rosetta-cli` as this would requir\n### Reproduce agent and rosetta-cli validation\n-`gcr.io/o1labs-192920/coda-rosetta:debug-v1`\n+`gcr.io/o1labs-192920/coda-rosetta:debug-v1.1`\nand\n[`rosetta-cli` @ 4bb48b24a794deb3635973e32d1ea806e5b30729](https://github.com/coinbase/rosetta-cli/commit/4bb48b24a794deb3635973e32d1ea806e5b30729)\nusing this [`rosetta.conf`](https://github.com/CodaProtocol/coda/blob/e02605429e9a490c14994087ce954e19fc321edc/src/app/rosetta/rosetta.conf)\n",
        "date": "15.09.2020 17:14:08",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Update rosetta image version to debug-v1.1"
    },
    {
        "msg": "update coda automation config",
        "diff": "diff --git a/src/lib/integration_test_cloud_engine/coda_automation.ml b/src/lib/integration_test_cloud_engine/coda_automation.ml @@ -122,7 +122,8 @@ module Network_config = struct\n; block_window_duration_ms= None\n; transaction_capacity= None\n; coinbase_amount= None\n- ; account_creation_fee= None }\n+ ; account_creation_fee= None\n+ ; supercharged_coinbase_factor= None }\nin\nlet runtime_config =\n{ Runtime_config.daemon= Some {txpool_max_size= Some txpool_max_size}\n",
        "date": "15.09.2020 14:46:41",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Add supercharged_coinbase_factor to Network_config in coda_automation module"
    },
    {
        "msg": "update pk for echobot",
        "diff": "diff --git a/frontend/website/pages/docs/my-first-transaction.mdx b/frontend/website/pages/docs/my-first-transaction.mdx @@ -159,7 +159,7 @@ Finally we get to the good stuff, sending our first transaction! Before you send\nFor testing purposes, there's already an echo service set up that will immediately refund your payment minus the transaction fees. You can use the following public key for the echo bot.\n```\n-4vsRCViQQRxXfkgEspR9vPWLypuSEGkZtHxjYF7srq5M1mZN4LSoX7wWCFZGitJLmdoozDXmrCugvBBKsePd6hfBAp9P3eTCHs5HwdC763A1FbjzskfrCvWMq9KXXsmFxWhYpG9nnhWzqSC1\n+B62qk5jqp4nYPwDDdd9XJAV8bYQ5cSzaZ9Me7ccaMdSSJpqKasDqMx9\n```\n<Alert kind=\"warning\">\n@@ -174,7 +174,7 @@ Let's send some of our newly received coda to this service to see what a payment\ncoda client send-payment \\\n-amount 0.5 \\\n- -receiver 4vsRCViQQRxXfkgEspR9vPWLypuSEGkZtHxjYF7srq5M1mZN4LSoX7wWCFZGitJLmdoozDXmrCugvBBKsePd6hfBAp9P3eTCHs5HwdC763A1FbjzskfrCvWMq9KXXsmFxWhYpG9nnhWzqSC1 \\\n+ -receiver B62qk5jqp4nYPwDDdd9XJAV8bYQ5cSzaZ9Me7ccaMdSSJpqKasDqMx9 \\\n-fee 0.1 \\\n-sender $CODA_PUBLIC_KEY\n",
        "date": "16.09.2020 11:36:02",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Update receiver public key for echo bot in send-payment command"
    },
    {
        "msg": "update spreadsheet id",
        "diff": "diff --git a/frontend/leaderboard/Dockerfile b/frontend/leaderboard/Dockerfile @@ -13,7 +13,7 @@ COPY ./src ./src\nRUN yarn build\n-ENV SPREADSHEET_ID=1dkHatzBcaN_5rb3sQEDIcwdh0qTc_9t7pHGAVfdHACY\n+ENV SPREADSHEET_ID=1Nq_Y76ALzSVJRhSFZZm4pfuGbPkZs2vTtCnVQ1ehujE\nENTRYPOINT [\"bash\", \"-c\"]\nCMD [\"node lib/js/src/Main.bs.js\"]\n\\ No newline at end of file\n",
        "date": "16.09.2020 17:37:33",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Update SPREADSHEET_ID in Dockerfile"
    },
    {
        "msg": "update helm install logic in toolchain dockerfile",
        "diff": "diff --git a/dockerfiles/Dockerfile-toolchain b/dockerfiles/Dockerfile-toolchain @@ -62,8 +62,8 @@ RUN export CLOUD_SDK_REPO=\"cloud-sdk-$(lsb_release -c -s)\" && \\\nsudo apt-get update -y && sudo apt-get install google-cloud-sdk kubectl -y\n# Helm tools\n-RUN echo \"deb https://baltocdn.com/helm/stable/debian/ all main\" | tee /etc/apt/sources.list.d/helm-stable-debian.list && \\\n- apt-get update && apt-get install helm\n+RUN echo \"deb https://baltocdn.com/helm/stable/debian/ all main\" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list && \\\n+ sudo apt-get update -y && sudo apt-get install helm -y --allow-unauthenticated\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs -o /tmp/rust_install.sh\nRUN chmod +x /tmp/rust_install.sh\n",
        "date": "24.09.2020 20:22:31",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Update Helm installation in Dockerfile to allow unauthenticated installation"
    },
    {
        "msg": "update block-producer helm README",
        "diff": "diff --git a/helm/block-producer/README.md b/helm/block-producer/README.md @@ -24,28 +24,28 @@ Parameter | Description\nParameter | Description | Default\n--- | --- | ---\n-`userAgent.image` | Container image to use for a Coda protocol user-agent sidecar\n-`bots.image` | Container image to use for a Codaprotocol faucet and echo service sidecars\n+`userAgent.image` | Container image to use for a Coda protocol user-agent sidecar | \"\"\n+`bots.image` | Container image to use for a Codaprotocol faucet and echo service sidecars | \"\"\n`coda.image` | container image to use for operating the archive node's Coda daemon | `codaprotocol/coda-daemon:0.0.12-beta-new-genesis-01eca9b`\n-`blockProducerConfigs` | list of Coda protocol block producer config and provisioning settings\n-`blockProducerConfigs[].name` | Name of block producer configuration and deployment object\n-`blockProducerConfigs[].class` | Testnet block producer class based on account balance (e.g. fish or whale)\n-`blockProducerConfigs[].runWithBots` | Whether to run with certain Coda protocol testnet bots\n-`blockProducerConfigs[].runWithUserAgent` | Whether to run with a user-agent which periodically sends transactions\n-`blockProducerConfigs[].enableGossipFlooding` | Whether to enable gossip flooding\n-`blockProducerConfigs[].privateKeySecret` | account wallet private key secret associated with Coda test account/wallet\n-`blockProducerConfigs[].externalPort` | Port Coda clients use for connecting to the external network\n+`blockProducerConfigs` | list of Coda protocol block producer config and provisioning settings | `see [default] values.yaml`\n+`blockProducerConfigs[].name` | Name of block producer configuration and deployment object | `<item-data>`\n+`blockProducerConfigs[].class` | Testnet block producer class based on account balance (e.g. fish or whale) | `<item-data>`\n+`blockProducerConfigs[].runWithBots` | Whether to run with certain Coda protocol testnet bots | `<item-data>`\n+`blockProducerConfigs[].runWithUserAgent` | Whether to run with a user-agent which periodically sends transactions | `<item-data>`\n+`blockProducerConfigs[].enableGossipFlooding` | Whether to enable gossip flooding | `<item-data>`\n+`blockProducerConfigs[].privateKeySecret` | account wallet private key secret associated with Coda test account/wallet | `<item-data>`\n+`blockProducerConfigs[].externalPort` | Port Coda clients use for connecting to the external network | `<item-data>`\n`coda.logLevel` | log level to set for Coda daemon | `TRACE`\n`coda.logReceivedBlocks` | whether the Coda daemon should log received blocks events | `false`\n`coda.logSnarkWorkGossip` | whether the Coda daemon should log SNARK work gossip | `false`\n`coda.runtimeConfig` | Coda daemon configuration to use at runtime | `undefined`\n`coda.privKeyPass` | public-private key-pair associated with Coda daemon account | `see [default] values.yaml`\n-`userAgent.minFee` | Minimum fee to accept for sending network transactions\n-`userAgent.maxFee` | Maximum fee to accept for sending network transactions\n-`userAgent.minTx` | Minimum transaction amount to send by the user-agent\n-`userAgent.maxTx` | Maxiumum transaction amount to send by the user-agent\n-`bots.faucet.amount` | Amount to send in response to request for faucet funds\n-`bots.faucet.fee` | Fee to charge for sending faucet funds\n+`userAgent.minFee` | Minimum fee to accept for sending network transactions | \"\"\n+`userAgent.maxFee` | Maximum fee to accept for sending network transactions | \"\"\n+`userAgent.minTx` | Minimum transaction amount to send by the user-agent | \"\"\n+`userAgent.maxTx` | Maxiumum transaction amount to send by the user-agent | \"\"\n+`bots.faucet.amount` | Amount to send in response to request for faucet funds | \"10000000000\"\n+`bots.faucet.fee` | Fee to charge for sending faucet funds | \"100000000\"\n## block-producer launch examples\n",
        "date": "01.10.2020 19:05:15",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Update block producer Helm chart with default values for block producer configurations and user-agent settings."
    },
    {
        "msg": "update references in code to new jpg assets",
        "diff": "diff --git a/frontend/website-redesign/src/pages/NodeOperators.re b/frontend/website-redesign/src/pages/NodeOperators.re @@ -331,7 +331,7 @@ module BlockExplorersAndTools = {\nlet make = () =>\n<div\nclassName={Styles.sectionContainer(\n- \"/static/img/MinaSpectrumPrimary1.png\",\n+ \"/static/img/MinaSpectrumPrimary1.jpg\",\n)}>\n<Spacer height=6. />\n<Section title=\"Block Explorers & Tools\" slug=\"block-explorers-tools\">\n@@ -347,9 +347,9 @@ let make = () => {\n<div className=Nav.Styles.spacer />\n<Hero\nbackground={\n- Theme.desktop: \"/static/img/NodeOperatorHero.png\",\n- Theme.tablet: \"/static/img/NodeOperatorHero.png\",\n- Theme.mobile: \"/static/img/NodeOperatorHero.png\",\n+ Theme.desktop: \"/static/img/NodeOperatorHero.jpg\",\n+ Theme.tablet: \"/static/img/NodeOperatorHero.jpg\",\n+ Theme.mobile: \"/static/img/NodeOperatorHero.jpg\",\n}\ntitle=\"Get Started For Node Operators\"\nheader=\"Run a Node\"\n",
        "date": "07.10.2020 10:29:37",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Update image file extensions to .jpg in NodeOperators page."
    },
    {
        "msg": "update genesis page",
        "diff": "diff --git a/frontend/website-redesign/src/pages/Genesis.re b/frontend/website-redesign/src/pages/Genesis.re @@ -355,11 +355,7 @@ let make = (~profiles) => {\n}>\n<Spacer height=2. />\n<Button\n- href={\n- `External(\n- \"https://docs.google.com/forms/d/e/1FAIpQLSebjJSGobXHIOPlnjnGtp0InsNFU3Z7Sig_xoqCfeaKebJ0XQ/viewform\",\n- )\n- }\n+ href={`External(Constants.genesisGrantApplication)}\nbgColor=Theme.Colors.black>\n{React.string(\"Apply Now\")}\n<Icon kind=Icon.ArrowRightMedium />\n@@ -383,10 +379,7 @@ let make = (~profiles) => {\nbuttonColor: Theme.Colors.orange,\nbuttonTextColor: Theme.Colors.white,\ndark: false,\n- href:\n- `External(\n- \"https://docs.google.com/forms/d/e/1FAIpQLSebjJSGobXHIOPlnjnGtp0InsNFU3Z7Sig_xoqCfeaKebJ0XQ/viewform\",\n- ),\n+ href: `External(Constants.genesisGrantApplication),\n}),\n}>\n<Spacer height=4. />\n",
        "date": "15.10.2020 11:15:56",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Refactor grant application button href to use Constants in Genesis page."
    },
    {
        "msg": "update commitment lengths computation",
        "diff": "diff --git a/src/lib/pickles/commitment_lengths.ml b/src/lib/pickles/commitment_lengths.ml @@ -5,54 +5,44 @@ open Import\n(* Compute the number of group elements required to represent each commitment.\nThis is simply ceil(degree of commitment / max degree natively supported by the PCS) *)\n-let generic' ~h ~k ~sub:( - ) ~mul:( * ) ~of_int ~ceil_div_max_degree :\n- _ Dlog_marlin_types.Evals.t =\n- let two_h = ceil_div_max_degree (of_int 2 * h#size) in\n- let three_k_minus_three =\n- ceil_div_max_degree ((of_int 3 * k#size) - of_int 3)\n- in\n- let h = ceil_div_max_degree h#size in\n- let k = ceil_div_max_degree k#size in\n- let index : _ Abc.t = {a= k; b= k; c= k} in\n- { w_hat= h\n- ; z_hat_a= h\n- ; z_hat_b= h\n- ; h_1= two_h\n- ; h_2= h\n- ; h_3= three_k_minus_three\n- ; row= index\n- ; col= index\n- ; value= index\n- ; rc= index\n- ; g_1= h\n- ; g_2= h\n- ; g_3= k }\n+let generic' ~h ~add:( + ) ~mul:( * ) ~of_int ~ceil_div_max_degree :\n+ _ Dlog_plonk_types.Evals.t =\n+ let n = h#size in\n+ let n_plus_2 = ceil_div_max_degree (of_int 2 + n) in\n+ let n_plus_3 = ceil_div_max_degree (of_int 3 + n) in\n+ let five_n_plus_1 = ceil_div_max_degree (of_int 5 * (n + of_int 1)) in\n+ let h = ceil_div_max_degree n in\n+ { l= n_plus_2\n+ ; r= n_plus_2\n+ ; o= n_plus_2\n+ ; z= n_plus_3\n+ ; t= five_n_plus_1\n+ ; f= n_plus_3\n+ ; sigma1= h\n+ ; sigma2= h }\n-let generic map ~h ~k ~max_degree : _ Dlog_marlin_types.Evals.t =\n- let index : _ Abc.t = {a= k; b= k; c= k} in\n- Dlog_marlin_types.Evals.map\n+let generic map ~h ~max_degree : _ Dlog_plonk_types.Evals.t =\n+ let n_plus_2 = map h ~f:(fun h -> h + 2) in\n+ let n_plus_3 = map h ~f:(fun h -> h + 3) in\n+ let five_n_plus_1 = map h ~f:(fun h -> 5 * (h + 1)) in\n+ Dlog_plonk_types.Evals.map\n~f:(fun v ->\nmap v ~f:(fun x -> Int.round_up x ~to_multiple_of:max_degree / max_degree)\n)\n- { w_hat= h\n- ; z_hat_a= h\n- ; z_hat_b= h\n- ; h_1= map h ~f:(( * ) 2)\n- ; h_2= h\n- ; h_3= map k ~f:(fun k -> (3 * k) - 3)\n- ; row= index\n- ; col= index\n- ; value= index\n- ; rc= index\n- ; g_1= h\n- ; g_2= h\n- ; g_3= k }\n+ { l= n_plus_2\n+ ; r= n_plus_2\n+ ; o= n_plus_2\n+ ; z= n_plus_3\n+ ; t= five_n_plus_1\n+ ; f= n_plus_3\n+ ; sigma1= h\n+ ; sigma2= h }\n-let of_domains {Domains.h; k} ~max_degree : int Dlog_marlin_types.Evals.t =\n- let h, k = Domain.(size h, size k) in\n- generic ~max_degree (fun x ~f -> f x) ~h ~k\n+let of_domains {Domains.h} ~max_degree : int Dlog_plonk_types.Evals.t =\n+ let h = Domain.size h in\n+ generic ~max_degree (fun x ~f -> f x) ~h\nlet of_domains_vector domainses =\nlet open Vector in\nlet f field = map domainses ~f:(Fn.compose Domain.size field) in\n- Vector.(generic map ~h:(f Domains.h) ~k:(f Domains.k))\n+ Vector.(generic map ~h:(f Domains.h))\n",
        "date": "16.10.2020 11:57:46",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Refactor commitment lengths calculation for Dlog Plonk types"
    },
    {
        "msg": "update snarky log with weight",
        "diff": "diff --git a/src/lib/snarky_log/snarky_log.ml b/src/lib/snarky_log/snarky_log.ml @@ -20,10 +20,10 @@ module Constraints (Snarky_backendless : Snark_intf.Basic) = struct\nopen Snarky_backendless\n(** Generate a flamechart for the labels of a checked computation. *)\n- let log (t : (_, _) Checked.t) : events =\n+ let log ?weight (t : (_, _) Checked.t) : events =\nlet rev_events = ref [] in\nlet _total =\n- constraint_count t ~log:(fun ?(start = false) label count ->\n+ constraint_count ?weight t ~log:(fun ?(start = false) label count ->\nrev_events :=\ncreate_event label\n~phase:(if start then Measure_start else Measure_end)\n",
        "date": "16.10.2020 12:01:37",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Add optional weight parameter to log function in snarky_log"
    },
    {
        "msg": "update block producers and snark workers number to 100s",
        "diff": "diff --git a/frontend/website-redesign/src/components/SecuredBySection.re b/frontend/website-redesign/src/components/SecuredBySection.re @@ -182,14 +182,14 @@ let make = () => {\n<div className=Styles.flexRow>\n<span className=Styles.imageColumn>\n<img src=\"/static/img/AboutBlockProducers.svg\" />\n- <h3 className=Theme.Type.h3> {React.string(\"XXXX\")} </h3>\n+ <h3 className=Theme.Type.h3> {React.string(\"100s\")} </h3>\n<p className=Theme.Type.label>\n{React.string(\"Block Producers\")}\n</p>\n</span>\n<span className=Styles.imageColumn>\n<img src=\"/static/img/AboutSnarkProducers.svg\" />\n- <h3 className=Theme.Type.h3> {React.string(\"XXXX\")} </h3>\n+ <h3 className=Theme.Type.h3> {React.string(\"100s\")} </h3>\n<p className=Theme.Type.label>\n{React.string(\"Snark Workers\")}\n</p>\n",
        "date": "16.10.2020 13:43:37",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Update SecuredBySection component to display actual numbers instead of placeholder text."
    },
    {
        "msg": "update bijans title",
        "diff": "diff --git a/frontend/website-redesign/src/components/TeamGrid.re b/frontend/website-redesign/src/components/TeamGrid.re @@ -65,7 +65,7 @@ let make = () => {\n/>\n<TeamMember\nfullName=\"Bijan Shahrokhi\"\n- title=\"Product Manager, O(1) Labs\"\n+ title=\"Head of Product, O(1) Labs\"\nsrc=\"/static/img/headshots/BijanShahrokhi.jpg\"\n/>\n<TeamMember\n",
        "date": "16.10.2020 14:25:19",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Update title for Bijan Shahrokhi in TeamGrid component"
    },
    {
        "msg": "update order for teams",
        "diff": "diff --git a/frontend/website-redesign/src/pages/About.re b/frontend/website-redesign/src/pages/About.re @@ -57,7 +57,7 @@ Next.injectGetInitialProps(make, _ => {\n{\n\"include\": 1,\n\"content_type\": ContentType.TeamProfile.id,\n- \"order\": \"-fields.name\",\n+ \"order\": \"fields.order\",\n},\n),\nContentful.getEntries(\n",
        "date": "07.11.2020 17:50:49",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Fix sorting order in team profile retrieval"
    },
    {
        "msg": "update daemon readiness check using healthcheck utilities",
        "diff": "diff --git a/helm/common/templates/_healthchecks.tpl b/helm/common/templates/_healthchecks.tpl @@ -37,7 +37,7 @@ Daemon readiness check settings\nreadinessProbe:\nexec:\ncommand: [\n- \"status=$(curl localhost:3085/graphql -d'{ query { daemonStatus { syncStatus } } }'); [[ status == \\\"synced\\\" ]] && return 0 || return 1\"\n+ \"source /healthcheck/utilities.sh && isDaemonSynced\"\n]\n{{- include \"healthcheck.common.settings\" . | indent 2 }}\n{{- end }}\n",
        "date": "23.10.2020 15:29:33",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Refactor readinessProbe command to use isDaemonSynced function"
    },
    {
        "msg": "update added new release and phase spreadsheet references",
        "diff": "diff --git a/frontend/leaderboard/src/Sheets.re b/frontend/leaderboard/src/Sheets.re @@ -53,10 +53,10 @@ module Core = {\nrange: \"All-Time Leaderboard!C4:H\",\n}\n| CurrentPhaseLeaderboard => {\n- name: \"Phase 3 Leaderboard\",\n- range: \"Phase 3 Leaderboard!B4:E\",\n+ name: \"Adversarial Testnet - Leaderboard\",\n+ range: \"Adversarial Testnet - Leaderboard!B4:E\",\n}\n- | CurrentReleaseLeaderboard => {name: \"3.3\", range: \"3.3!A4:C\"}\n+ | CurrentReleaseLeaderboard => {name: \"4.1\", range: \"4.1!A4:C\"}\n| MemberProfileData => {\nname: \"Member_Profile_Data\",\nrange: \"Member_Profile_Data!A2:Z\",\n",
        "date": "16.11.2020 14:49:19",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Update leaderboard names and ranges for Adversarial Testnet and 4.1 release."
    },
    {
        "msg": "update readme for release",
        "diff": "diff --git a/src/app/rosetta/README.md b/src/app/rosetta/README.md @@ -81,13 +81,13 @@ The Construction API is _not_ validated using `rosetta-cli` as this would requir\n### Reproduce agent and rosetta-cli validation\n-`gcr.io/o1labs-192920/coda-rosetta:debug-v1.1` and `rosetta-cli @ v0.5.12`\n-using this [`rosetta.conf`](https://github.com/CodaProtocol/coda/blob/5625847fa820da3a4d34ef35e013db11fad2ada4/src/app/rosetta/rosetta.conf) and the [`bootstrap_balances.json`](https://github.com/CodaProtocol/coda/blob/5625847fa820da3a4d34ef35e013db11fad2ada4/src/app/rosetta/rosetta.conf) next to it.\n+`gcr.io/o1labs-192920/coda-rosetta:debug-v1.1.4` and `rosetta-cli @ v0.5.12`\n+using this [`rosetta.conf`](https://github.com/CodaProtocol/coda/blob/2b43c8cccfb9eb480122d207c5a3e6e58c4bbba3/src/app/rosetta/rosetta.conf) and the [`bootstrap_balances.json`](https://github.com/CodaProtocol/coda/blob/2b43c8cccfb9eb480122d207c5a3e6e58c4bbba3/src/app/rosetta/bootstrap_balances.json) next to it.\n**Create one of each transaction type and exit**\n```\n-$ docker run --publish 3087:3087 --publish 3086:3086 --publish 3085:3085 --name coda-rosetta-test --entrypoint ./docker-test-start.sh -d gcr.io/o1labs-192920/coda-rosetta:debug-v1.1\n+$ docker run --publish 3087:3087 --publish 3086:3086 --publish 3085:3085 --name coda-rosetta-test --entrypoint ./docker-test-start.sh -d gcr.io/o1labs-192920/coda-rosetta:debug-v1.1.4\n$ docker logs --follow coda-rosetta-test\n@@ -103,7 +103,7 @@ $ rosetta-cli --configuration-file rosetta.conf check:data\n**Run a fast sandbox network forever**\n```\n-$ docker run --publish 3087:3087 --publish 3086:3086 --publish 3085:3085 --name coda-rosetta --entrypoint ./docker-demo-start.sh -d gcr.io/o1labs-192920/coda-rosetta:debug-v1.1\n+$ docker run --publish 3087:3087 --publish 3086:3086 --publish 3085:3085 --name coda-rosetta --entrypoint ./docker-demo-start.sh -d gcr.io/o1labs-192920/coda-rosetta:debug-v1.1.4\n$ docker logs --follow coda-rosetta\n",
        "date": "15.10.2020 19:24:10",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Update coda-rosetta image version to debug-v1.1.4 and fix file paths in README"
    },
    {
        "msg": "update seed-node helm readiness probe exec shell",
        "diff": "diff --git a/helm/seed-node/templates/_healthchecks.tpl b/helm/seed-node/templates/_healthchecks.tpl @@ -21,8 +21,10 @@ seed-node readiness settings\nreadinessProbe:\nexec:\ncommand: [\n+ \"/bin/bash\",\n+ \"-c\",\n\"source\",\n- \"/healthcheck/utilities.sh && isDaemonSynced\"\n+ \"/healthcheck/utilities.sh && isDaemonSynced && peerCountGreaterThan 0\"\n]\n{{- end }}\n",
        "date": "30.11.2020 16:20:43",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Update seed-node readiness probe to check for peer count greater than 0"
    },
    {
        "msg": "update rpc type",
        "diff": "diff --git a/src/lib/coda_base/rpc_intf.ml b/src/lib/coda_base/rpc_intf.ml @@ -40,7 +40,12 @@ module type Rpc_interface_intf = sig\ntype ('query, 'response) rpc\ntype rpc_handler =\n- | Rpc_handler : ('q, 'r) rpc * ('q, 'r) rpc_fn -> rpc_handler\n+ | Rpc_handler :\n+ { rpc: ('q, 'r) rpc\n+ ; f: ('q, 'r) rpc_fn\n+ ; cost: 'q -> int\n+ ; budget: int * [`Per of Time.Span.t] }\n+ -> rpc_handler\nval implementation_of_rpc : ('q, 'r) rpc -> ('q, 'r) rpc_implementation\n",
        "date": "30.11.2020 18:19:20",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Refactor rpc_handler to include cost and budget parameters"
    },
    {
        "msg": "update code changed with merge",
        "diff": "diff --git a/src/app/libp2p_helper/src/libp2p_helper/main.go b/src/app/libp2p_helper/src/libp2p_helper/main.go @@ -702,7 +702,10 @@ func (o *openStreamMsg) run(app *app) (interface{}, error) {\nreturn nil, badRPC(err)\n}\n- stream, err := app.P2p.Host.NewStream(app.Ctx, peer, protocol.ID(o.ProtocolID))\n+ ctx, cancel := context.WithTimeout(app.Ctx, 30*time.Second)\n+ defer cancel()\n+\n+ stream, err := app.P2p.Host.NewStream(ctx, peer, protocol.ID(o.ProtocolID))\nif err != nil {\nreturn nil, badp2p(err)\n}\n",
        "date": "04.12.2020 15:56:31",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "\"Add context timeout to NewStream function in libp2p_helper\""
    },
    {
        "msg": "update node_selector anti-affinity match expression",
        "diff": "diff --git a/helm/common/templates/_node-selectors.tpl b/helm/common/templates/_node-selectors.tpl @@ -14,9 +14,7 @@ affinity:\n- labelSelector:\nmatchExpressions:\n- key: \"cloud.google.com/gke-preemptible\"\n- operator: In\n- values:\n- - \"true\"\n+ operator: Exists\ntopologyKey: failure-domain.beta.kubernetes.io/region\n{{- end }}\n{{- end }}\n",
        "date": "15.12.2020 21:55:28",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Refactor node selectors to use \"Exists\" operator for \"cloud.google.com/gke-preemptible\" key."
    },
    {
        "msg": "update block-producer user-agent + bots readiness probes",
        "diff": "diff --git a/helm/block-producer/templates/_healthchecks.tpl b/helm/block-producer/templates/_healthchecks.tpl @@ -61,6 +61,8 @@ user-agent readiness check settings\nreadinessProbe:\nexec:\ncommand: [\n+ \"/bin/bash\",\n+ \"-c\",\n\"source /healthcheck/utilities.sh && isDaemonSynced && hasSentUserCommandsGreaterThan 0\"\n]\n{{- include \"healthcheck.common.settings\" . | indent 2 }}\n@@ -100,6 +102,8 @@ Mina testnet bot readiness check settings\nreadinessProbe:\nexec:\ncommand: [\n+ \"/bin/bash\",\n+ \"-c\",\n\"source /healthcheck/utilities.sh && isDaemonSynced && peerCountGreaterThan 0 && ownsFunds\"\n]\n{{- include \"healthcheck.common.settings\" . | indent 2 }}\n",
        "date": "15.12.2020 22:42:06",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Add bash command to readinessProbe for user-agent and Mina testnet bot healthchecks."
    },
    {
        "msg": "update private key",
        "diff": "diff --git a/src/lib/mina_base/gen/gen.ml b/src/lib/mina_base/gen/gen.ml @@ -20,7 +20,7 @@ let keypairs =\n(* This key is also at the start of all the release ledgers. It's needed to generate a valid genesis transition *)\n(Keypair.of_private_key_exn\n(Private_key.of_base58_check_exn\n- \"EKEjf4cZcaUScpV3iAE8r9PaEj4dbPbyUhzWryhhxQqjTTSCfyo8\"))\n+ \"EKFKgDtU3rcuFTVSEpmpXSkukjmX4cKefYREi6Sdsk7E7wsT7KRw\"))\ngenerated_keypairs\nlet expr ~loc =\n",
        "date": "19.12.2020 13:04:14",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Update genesis keypair in gen.ml"
    },
    {
        "msg": "update archive-node chart version",
        "diff": "diff --git a/helm/archive-node/Chart.yaml b/helm/archive-node/Chart.yaml @@ -2,7 +2,7 @@ apiVersion: v2\nname: archive-node\ndescription: A Helm chart for Mina Protocol's archive node\ntype: application\n-version: 0.4.3\n+version: 0.4.4\nappVersion: 1.16.0\ndependencies:\n- name: postgresql\n",
        "date": "22.12.2020 20:27:23",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Bump version to 0.4.4 in Chart.yaml"
    },
    {
        "msg": "update values.yml watchman defaults",
        "diff": "diff --git a/helm/common/values.yaml b/helm/common/values.yaml @@ -12,7 +12,7 @@ nodeSelector:\nwatchman:\nenable: false\n- image: icalialabs/watchman:latest\n- volumeName: watchman-dir\n- volumeMountPath: /tmp\n- command: ls\n+ # image: icalialabs/watchman:latest\n+ # volumeName: watchman-dir\n+ # volumeMountPath: /tmp\n+ # command: ls\n",
        "date": "11.01.2021 19:25:13",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Comment out watchman configuration in values.yaml"
    },
    {
        "msg": "update watchman version",
        "diff": "diff --git a/automation/services/coda-network-services/Dockerfile b/automation/services/coda-network-services/Dockerfile @@ -5,7 +5,7 @@ ARG WATCHMAN_DEB_URL=\"http://ftp.us.debian.org/debian/pool/main/w/watchman/watch\nRUN apt update && apt install -y \\\ngnupg2 lsb-core apt-transport-https git curl jq wget \\\n- graphviz dumb-init build-essential python-dev automake autoconf libtool\n+ graphviz dumb-init build-essential python-dev automake autoconf libtool pkg-config\n# Install GCloud SDK\nRUN wget ${GCLOUDSDK_DOWNLOAD_URL} && tar -zxf $(basename ${GCLOUDSDK_DOWNLOAD_URL}) -C /usr/local/\n@@ -19,11 +19,11 @@ RUN curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -\nRUN apt update && apt install -y kubectl\n# Install Watchman utility\n-RUN cd /tmp && git clone https://github.com/facebook/watchman.git\n+RUN cd /tmp && git clone https://github.com/facebook/watchman.git -b v4.9.0 --depth 1\nWORKDIR /tmp/watchman\n-RUN git checkout v4.7.0 && ./autogen.sh && ./configure --enable-statedir=/tmp\n+RUN ./autogen.sh && ./configure --enable-statedir=/tmp\nRUN make && make install && mv watchman /usr/local/bin/watchman\nADD \"https://www.random.org/cgi-bin/randbyte?nbytes=10&format=h\" skipcache\n",
        "date": "11.01.2021 19:39:18",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Update Dockerfile to include pkg-config and specify Watchman version 4.9.0"
    },
    {
        "msg": "update watchdog helm charts for service",
        "diff": "diff --git a/helm/watchdog/templates/watchdog.yaml b/helm/watchdog/templates/watchdog.yaml @@ -24,12 +24,12 @@ spec:\nprometheus.io/path: '/metrics'\nspec:\ncontainers:\n- - name: coda-network-services\n+ - name: watchdog\nresources:\nrequests:\nmemory: 512m\ncpu: 1.0\n- image: gcr.io/o1labs-192920/coda-network-services:latest\n+ image: gcr.io/o1labs-192920/watchdog:latest\ncommand: [\"bash\"]\nargs: [\"-c\", \"/code/main.sh\"]\nports:\n",
        "date": "20.01.2021 14:19:51",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Update container name and image in watchdog.yaml"
    },
    {
        "msg": "update watchdog helm chart role",
        "diff": "diff --git a/helm/watchdog/templates/watchdog.yaml b/helm/watchdog/templates/watchdog.yaml @@ -15,7 +15,7 @@ spec:\nlabels:\napp: {{ $config.name }}\ntestnet: {{ $.Values.testnetName }}\n- role: block-producer\n+ role: watchdog\nclass: {{ default \"undefined\" $config.class }}\nversion: {{ trunc 6 (split \":\" $.Values.coda.image)._1 | trimSuffix \"-\" }}\nannotations:\n",
        "date": "20.01.2021 14:20:16",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Change role from block-producer to watchdog in watchdog.yaml template"
    },
    {
        "msg": "update watchdog for automation changes",
        "diff": "diff --git a/automation/terraform/modules/kubernetes/testnet/helm.tf b/automation/terraform/modules/kubernetes/testnet/helm.tf @@ -269,6 +269,8 @@ resource \"helm_release\" \"archive_node\" {\n# Watchdog\nresource \"helm_release\" \"watchdog\" {\n+ provider = helm.testnet_deploy\n+\nname = \"${var.testnet_name}-watchdog\"\nrepository = local.use_local_charts ? \"\" : local.mina_helm_repo\nchart = local.use_local_charts ? \"../../../../helm/watchdog\" : \"watchdog\"\n",
        "date": "21.01.2021 19:02:40",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Add helm provider for watchdog deployment in testnet."
    },
    {
        "msg": "update artifact upload cmd",
        "diff": "diff --git a/buildkite/src/Command/DeployTestnet.dhall b/buildkite/src/Command/DeployTestnet.dhall @@ -27,7 +27,7 @@ let deployEnv = \"DOCKER_DEPLOY_ENV\" in\n),\nCmd.run (\n-- upload genesis_ledger and related generated json files\n- \"cd ~ && buildkite/scripts/buildkite-artifact-helper.sh automation/terraform/testnets/${testnetName}/*.json\"\n+ \"../../../../buildkite/scripts/buildkite-artifact-helper.sh *.json\"\n),\nCmd.run (\n-- always execute post-deploy operation\n",
        "date": "26.01.2021 20:43:13",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Refactor artifact upload path in DeployTestnet script"
    },
    {
        "msg": "update terraform workspace check",
        "diff": "diff --git a/buildkite/src/Command/DeployTestnet.dhall b/buildkite/src/Command/DeployTestnet.dhall @@ -13,9 +13,10 @@ let deployEnv = \"DOCKER_DEPLOY_ENV\" in\nCommand.build\nCommand.Config::{\ncommands = [\n- -- create separate workspace based on build branch to isolate infrastructure states\nCmd.run (\n- \"cd automation/terraform/testnets/${testnetName} && terraform init && (terraform workspace new \\\\\\${BUILDKITE_BRANCH//_/-} || true)\"\n+ \"cd automation/terraform/testnets/${testnetName} && terraform init\" ++\n+ -- create separate workspace based on build branch to isolate infrastructure states\n+ \" && (terraform workspace select \\\\\\${BUILDKITE_BRANCH//_/-} || terraform workspace new \\\\\\${BUILDKITE_BRANCH//_/-})\"\n),\nCmd.run (\n\"if [ ! -f ${deployEnv} ]; then \" ++\n",
        "date": "28.01.2021 15:25:34",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Add logic to select or create Terraform workspace based on build branch"
    },
    {
        "msg": "update python script name",
        "diff": "diff --git a/helm/watchdog/templates/watchdog.yaml b/helm/watchdog/templates/watchdog.yaml @@ -29,7 +29,7 @@ spec:\ncpu: 1.0\nimage: {{ .Values.image }}\ncommand: [\"python3\"]\n- args: [\"/code/prometheus_server.py\"]\n+ args: [\"/code/watchdog.py\"]\nenv:\n- name: \"RESTART_EVERY_MINS\"\nvalue: {{ .Values.restartEveryMins | quote }}\n",
        "date": "28.01.2021 16:41:15",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Update command args in watchdog.yaml to run watchdog.py instead of prometheus_server.py"
    },
    {
        "msg": "update artifact cache helper to scope uploads to files provided and not full paths",
        "diff": "diff --git a/automation/terraform/modules/kubernetes/buildkite-agent/helm.tf b/automation/terraform/modules/kubernetes/buildkite-agent/helm.tf @@ -148,8 +148,9 @@ locals {\n# upload artifact if explicitly set and exit\nif [[ $UPLOAD_PATH ]]; then\n- echo \"--- uploading artifact: $${FILE}\"\n- buildkite-agent artifact upload \"$${FILE}\"\n+ echo \"--- Uploading artifact: $${FILE}\"\n+ pushd $(dirname $FILE)\n+ buildkite-agent artifact upload \"$(basename $FILE)\"; popd\nexit\nfi\n@@ -161,13 +162,16 @@ locals {\nset -e\necho \"*** Cache miss -- executing step ***\"\nbash -c \"$${MISS_CMD}\"\n- buildkite-agent artifact upload \"$${FILE}\"\n+\n+ echo \"--- Uploading artifact: $${FILE}\"\n+ pushd $(dirname $FILE)\n+ buildkite-agent artifact upload \"$${FILE}\"; popd\nelse\necho \"*** Cache miss -- failing since a miss command was NOT provided ***\"\nexit 1\nfi\nelse\n- echo \"*** Artifact not provided ***\"\n+ echo \"*** Artifact not provided - skipping ***\"\nfi\nEOF\n",
        "date": "04.02.2021 20:38:01",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Refactor artifact upload process in helm.tf"
    },
    {
        "msg": "update deb repo (=> unstable) of CI's coda tools installation",
        "diff": "diff --git a/automation/terraform/modules/kubernetes/buildkite-agent/helm.tf b/automation/terraform/modules/kubernetes/buildkite-agent/helm.tf @@ -315,7 +315,7 @@ locals {\nln --symbolic --force /docker-entrypoint.d/00-artifact-cache-helper /usr/local/bin/artifact-cache-helper.sh\n# Install mina debian package tools\n- echo \"deb [trusted=yes] http://packages.o1test.net $deb_repo main\" > /etc/apt/sources.list.d/o1.list\n+ echo \"deb [trusted=yes] http://packages.o1test.net unstable main\" > /etc/apt/sources.list.d/o1.list\napt-get update && apt-get install -y \"mina-testnet-postake-medium-curves\"\nEOF\n}\n",
        "date": "05.02.2021 12:40:51",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Update deb repository URL to point to unstable branch"
    },
    {
        "msg": "update telemetry function",
        "diff": "diff --git a/src/lib/telemetry/telemetry.ml b/src/lib/telemetry/telemetry.ml (* telemetry.ml *)\n-open Core_kernel\nopen Async\nlet get_telemetry_data_from_peers (net : Mina_networking.t)\n- (peer_ids : Network_peer.Peer.Id.t list option) =\n+ (peers : Network_peer.Peer.t list option) =\nlet open Deferred.Let_syntax in\n- let run peer_id =\n- let open Mina_base.Rpc_intf in\n- match%map\n- Mina_networking.(\n- query_peer net peer_id Mina_networking.Rpcs.Get_telemetry_data ())\n- with\n- | Failed_to_connect err ->\n- Error err\n- | Connected envelope -> (\n- match Network_peer.Envelope.Incoming.data envelope with\n- | Ok response ->\n- (* already an Or_error.t *)\n- response\n- | Error err ->\n- Error err )\n- in\n+ let run peer = Mina_networking.get_peer_telemetry_data net peer in\nlet%bind peer_ids =\n- match peer_ids with\n- | Some ids ->\n- return ids\n+ match peers with\n+ | Some ps ->\n+ return ps\n| None ->\n(* use daemon peers *)\n- let%bind peers = Mina_networking.peers net in\n- Deferred.List.map peers ~f:(fun {peer_id; _} -> return peer_id)\n+ Mina_networking.peers net\nin\nDeferred.List.map ~how:`Parallel peer_ids ~f:run\n",
        "date": "11.02.2021 15:18:45",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Refactor telemetry module to use Network_peer.Peer.t instead of Network_peer.Peer.Id.t for better data retrieval."
    },
    {
        "msg": "update daemon rpc",
        "diff": "diff --git a/src/lib/daemon_rpcs/daemon_rpcs.ml b/src/lib/daemon_rpcs/daemon_rpcs.ml @@ -285,7 +285,7 @@ end\nMina_networking's Get_telemetry_data for each provided peer\n*)\nmodule Get_telemetry_data = struct\n- type query = Network_peer.Peer.Id.Stable.Latest.t list option\n+ type query = Mina_net2.Multiaddr.t list option\n[@@deriving bin_io_unversioned]\ntype response =\n",
        "date": "11.02.2021 15:18:57",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Update query type in Get_telemetry_data module to use Mina_net2.Multiaddr.t list option instead of Network_peer.Peer.Id.Stable.Latest.t list option."
    },
    {
        "msg": "update archive schema",
        "diff": "diff --git a/automation/terraform/testnets/zenith/main.tf b/automation/terraform/testnets/zenith/main.tf @@ -100,7 +100,7 @@ module \"testnet_east\" {\nagent_send_every_mins = \"1\"\narchive_node_count = 0\n- mina_archive_schema = \"https://raw.githubusercontent.com/MinaProtocol/mina/10fcc9bc4b5aca13a00b80d92507ca21f0f20106/src/app/archive/create_schema.sql\"\n+ mina_archive_schema = \"https://raw.githubusercontent.com/MinaProtocol/mina/474e314bf6a35adb4976ed7c5b1b68f5c776ad78/src/app/archive/create_schema.sql\"\nseed_zone = local.seed_zone\nseed_region = local.seed_region\n",
        "date": "16.02.2021 17:40:01",
        "repo": "minaprotocol/mina",
        "type": "update",
        "chatgpt_zeroshot": "Update mina_archive_schema URL in main.tf"
    },
    {
        "msg": "use the new overridable function",
        "diff": "diff --git a/contracts/crowdsale/Crowdsale.sol b/contracts/crowdsale/Crowdsale.sol @@ -77,7 +77,7 @@ contract Crowdsale {\nuint256 weiAmount = msg.value;\n// calculate token amount to be created\n- uint256 tokens = weiAmount.mul(rate);\n+ uint256 tokens = getTokenAmount(weiAmount);\n// update state\nweiRaised = weiRaised.add(weiAmount);\n",
        "date": "03.01.2018 11:14:02",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "use",
        "chatgpt_zeroshot": "Refactor token calculation to use a separate function."
    },
    {
        "msg": "use short circuit",
        "diff": "diff --git a/contracts/crowdsale/CappedCrowdsale.sol b/contracts/crowdsale/CappedCrowdsale.sol @@ -22,14 +22,14 @@ contract CappedCrowdsale is Crowdsale {\n// @return true if crowdsale event has ended\nfunction hasEnded() public view returns (bool) {\nbool capReached = weiRaised >= cap;\n- return super.hasEnded() || capReached;\n+ return capReached || super.hasEnded();\n}\n// overriding Crowdsale#validPurchase to add extra cap logic\n// @return true if investors can buy at the moment\nfunction validPurchase() internal view returns (bool) {\nbool withinCap = weiRaised.add(msg.value) <= cap;\n- return super.validPurchase() && withinCap;\n+ return withinCap && super.validPurchase();\n}\n}\n",
        "date": "20.01.2018 03:45:48",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "use",
        "chatgpt_zeroshot": "Reorder logic in CappedCrowdsale.sol for better readability"
    },
    {
        "msg": "use a lighter font-weight for plain text entries, to distinguish them from clickable entries",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/css/style.css b/MaterialSkin/HTML/material/html/css/style.css @@ -385,6 +385,7 @@ a {\n.browse-text {\npadding:16px 16px 0px 16px;\nfont-size: 16px;\n+ font-weight: 200;\n}\n.browse-text img, .np-info-text img, .np-info-text-desktop img, .np-info-text-full img, .np-info-text-full-desktop img {\n",
        "date": "08.03.2019 17:06:24",
        "repo": "cdrummond/lms-material",
        "type": "use",
        "chatgpt_zeroshot": "Add font-weight to browse-text class in style.css"
    },
    {
        "msg": "use playerStatus values to update notif",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/toolbar.js b/MaterialSkin/HTML/material/html/js/toolbar.js @@ -20,7 +20,7 @@ function initMediaSessionAudio() {\nmediaAudio = document.createElement('audio');\nwindow.removeEventListener('touchend', initMediaSessionAudio);\nsetTimeout(function () {\n- toolbarComponent.updateMediaSession(toolbarComponent.media, true);\n+ toolbarComponent.updateMediaSession(toolbarComponent.playerStatus.current, true);\n}, 500);\n}\n}\n@@ -34,7 +34,7 @@ function startMediaSession() {\nmediaAudio.play().then(_ => {\nmediaAudio.currentTime = 0; // Go back to start\nmediaAudio.pause();\n- toolbarComponent.updateMediaSession(toolbarComponent.media, true);\n+ toolbarComponent.updateMediaSession(toolbarComponent.playerStatus.current, true);\nnavigator.mediaSession.playbackState = /*toolbarComponent.playerStatus && toolbarComponent.playerStatus.isplaying ? \"playing\" :*/ \"paused\";\nmediaInterval = setInterval(function() {\nmediaAudio.play().then(_ => {\n@@ -161,7 +161,7 @@ Vue.component('lms-toolbar', {\ndata() {\nreturn { songInfo:undefined,\nplaylist: { count: undefined, duration: undefined, timestamp: undefined },\n- playerStatus: { ison: 1, isplaying: false, volume: 0, current: { title:undefined, artist:undefined }, sleepTime: undefined },\n+ playerStatus: { ison: 1, isplaying: false, volume: 0, current: { title:undefined, artist:undefined, album:undefined }, sleepTime: undefined },\nmenuItems: [],\ntrans:{noplayer:undefined, nothingplaying:undefined, synchronise:undefined, info:undefined, connectionLost:undefined,\nswitchoff:undefined, switchon:undefined, showLarge:undefined, hideLarge:undefined, startPlayer:undefined},\n@@ -227,6 +227,7 @@ Vue.component('lms-toolbar', {\n(playerStatus.current.trackartist && playerStatus.current.trackartist!=this.playerStatus.current.artist) ) {\nthis.playerStatus.current.title=playerStatus.current.title;\nthis.playerStatus.current.artist=playerStatus.current.artist ? playerStatus.current.artist : playerStatus.current.trackartist;\n+ this.playerStatus.current.album=playerStatus.current.album;\nif (this.playerStatus.current.title) {\nif (this.playerStatus.current.artist) {\n@@ -311,14 +312,14 @@ Vue.component('lms-toolbar', {\n});\nbus.$on('currentCover', function(coverUrl) {\nthis.media.cover = coverUrl;\n- this.updateMediaSession(this.media, true);\n+ this.updateMediaSession(this.playerStatus.current, true);\n}.bind(this));\nbus.$emit('getCurrentCover');\nbus.$on('haveLocalAndroidPlayer', function(coverUrl) {\nthis.updateMediaSession(undefined, true);\n}.bind(this));\nbus.$on('lsAndNotifChanged', function(coverUrl) {\n- this.updateMediaSession(this.media, true);\n+ this.updateMediaSession(this.playerStatus.current, true);\n}.bind(this));\n}\nbus.$on('networkStatus', function(connected) {\n",
        "date": "19.04.2019 19:24:01",
        "repo": "cdrummond/lms-material",
        "type": "use",
        "chatgpt_zeroshot": "Update playerStatus object in toolbar.js"
    },
    {
        "msg": "use bolder font for setting chooser",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/css/classic-skin-mods.css b/MaterialSkin/HTML/material/html/css/classic-skin-mods.css @@ -64,10 +64,14 @@ div#browsedbList {\nmargin-left:-8px;\nmargin-bottom:8px;\nfont-size:16px !important;\n- font-weight:400 !important;\n+ font-weight:500 !important;\nborder-radius: 0px;\n}\n+#choose_setting optgroup {\n+ font-weight: 400;\n+}\n+\n#statusMessage {\ncolor:transparent!important;\n}\n",
        "date": "13.10.2019 19:24:10",
        "repo": "cdrummond/lms-material",
        "type": "use",
        "chatgpt_zeroshot": "Update font-weight for specific elements in classic-skin-mods.css"
    },
    {
        "msg": "use xx_svg.png and not xx.svg.png Closes",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/icon-mapping.js b/MaterialSkin/HTML/material/html/js/icon-mapping.js @@ -111,9 +111,9 @@ function mapIconType(item, app, type) {\nitem.svg=lmsIcon.split(\"MTL_svg_\").pop().split(\".\")[0];\nreturn true;\n}\n- if (lmsIcon.endsWith(\".svg.png\")) {\n+ if (lmsIcon.endsWith(\"_svg.png\")) {\nitem.image=item.icon=undefined;\n- item.svg=lmsIcon.replace(\".svg.png\", \".svg\");\n+ item.svg=lmsIcon.replace(\"_svg.png\", \".svg\");\nreturn true;\n}\nfor (const [key, value] of Object.entries(iconMap[\"endsWith\"])) {\n",
        "date": "22.02.2021 12:26:26",
        "repo": "cdrummond/lms-material",
        "type": "use",
        "chatgpt_zeroshot": "Fix icon mapping for files ending with \"_svg.png\" extension"
    },
    {
        "msg": "use more consistent select-all",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/sync-dialog.js b/MaterialSkin/HTML/material/html/js/sync-dialog.js @@ -16,6 +16,11 @@ Vue.component('lms-sync-dialog', {\n<v-flex xs12>{{i18n(\"Select which players you would like to synchronise with '%1':\", player.name)}}</v-flex>\n<v-flex xs12>\n<v-list class=\"sleep-list dialog-main-list\">\n+ <v-list-tile @click=\"toggleAll()\">\n+ <v-list-tile-avatar :tile=\"true\" class=\"lms-avatar\"><v-icon>{{selectAllIcon}}</v-icon></v-list-tile-avatar>\n+ <v-list-tile-title class=\"sleep-item\">{{i18n('Select All')}}</v-list-tile-title>\n+ </v-list-tile>\n+ <v-divider></v-divider>\n<template v-for=\"(p, index) in players\">\n<v-list-tile @click=\"p.synced=!p.synced; numSync+=(p.synced ? 1 : -1)\">\n<v-list-tile-avatar :tile=\"true\" class=\"lms-avatar\"><v-icon>{{p.synced ? 'check_box' : 'check_box_outline_blank'}}</v-icon></v-list-tile-avatar>\n@@ -29,9 +34,7 @@ Vue.component('lms-sync-dialog', {\n</v-container>\n</v-card-text>\n<v-card-actions>\n- <div style=\"width:12px\"></div>\n- <v-btn flat v-if=\"numSync==players.length\" icon @click.native=\"toggleAll(false)\" :title=\"i18n('Unselect all')\"><v-icon>filter_none</v-icon></v-btn>\n- <v-btn flat v-else icon @click.native=\"toggleAll(true)\" :title=\"i18n('Select all')\"><v-icon>library_add_check</v-icon></v-btn>\n+ <p style=\"margin-left:10px\" class=\"dimmed\">{{i18np(\"1 Player\", \"%1 Players\", numSync)}}</p>\n<v-spacer></v-spacer>\n<v-btn flat @click.native=\"close()\">{{i18n('Cancel')}}</v-btn>\n<v-btn flat @click.native=\"sync()\">{{i18n('Sync')}}</v-btn>\n@@ -48,6 +51,17 @@ Vue.component('lms-sync-dialog', {\nnumSync:0\n}\n},\n+ computed: {\n+ selectAllIcon () {\n+ if (this.numSync==this.players.length) {\n+ return \"check_box\";\n+ }\n+ if (this.numSync>0) {\n+ return \"indeterminate_check_box\";\n+ }\n+ return \"check_box_outline_blank\";\n+ }\n+ },\nmounted() {\nbus.$on('sync.open', function(player) {\nif (player.isgroup) {\n@@ -136,7 +150,8 @@ Vue.component('lms-sync-dialog', {\n});\n}\n},\n- toggleAll(sel) {\n+ toggleAll() {\n+ let sel = this.numSync!=this.players.length;\nfor (let i=0, len=this.players.length; i<len; ++i) {\nthis.players[i].synced = sel;\n}\n",
        "date": "08.12.2021 12:10:12",
        "repo": "cdrummond/lms-material",
        "type": "use",
        "chatgpt_zeroshot": "Add select all functionality to sync dialog and update icon based on selection status"
    },
    {
        "msg": "use teh secure fastly endpoint",
        "diff": "diff --git a/config/environment.js b/config/environment.js @@ -7,7 +7,7 @@ module.exports = function(environment) {\nrootURL: '/',\nrouterRootURL: '/',\nlocationType: 'auto',\n- API_HOST: 'http://ember-api-cdn.perf.site.global.prod.fastly.net',\n+ API_HOST: 'https://ead-sk.global.ssl.fastly.net',\nIS_FASTBOOT: !!process.env.EMBER_CLI_FASTBOOT,\nEmberENV: {\nEXTEND_PROTOTYPES: false,\n",
        "date": "27.03.2017 12:28:51",
        "repo": "ember-learn/ember-api-docs",
        "type": "use",
        "chatgpt_zeroshot": "Update API_HOST to use HTTPS and new domain."
    },
    {
        "msg": "use the right env variable",
        "diff": "diff --git a/ember-cli-build.js b/ember-cli-build.js @@ -35,14 +35,14 @@ module.exports = function(defaults) {\n//TODO move the proxying main site to a variable for testing & dev\napp.options['ember-service-worker'] = {\n- rootUrl: app.ENV.environment === 'production' ? 'https://emberjs.com/api-new/': '/'\n+ rootUrl: app.env.environment === 'production' ? 'https://emberjs.com/api-new/': '/'\n};\napp.options['esw-cache-first'] = {\npatterns: [\n- `${app.ENV.API_HOST}/json-docs-1/(.+)`,\n- `${app.ENV.API_HOST}/rev-index/(.+)`\n+ `${app.env.API_HOST}/json-docs-1/(.+)`,\n+ `${app.env.API_HOST}/rev-index/(.+)`\n]\n};\n",
        "date": "29.03.2017 12:18:58",
        "repo": "ember-learn/ember-api-docs",
        "type": "use",
        "chatgpt_zeroshot": "Refactor rootUrl and API_HOST variables in ember-cli-build.js"
    },
    {
        "msg": "use the correct url path for cdn assets",
        "diff": "diff --git a/config/environment.js b/config/environment.js @@ -24,7 +24,7 @@ module.exports = function(environment) {\n// Here you can pass flags/options to your application instance\n// when it is created\nscrollContainerSelector: 'body, html',\n- cdnUrl: process.env.FASTLY_CDN_URL ? `https://process.env.FASTLY_CDN_URL` : ''\n+ cdnUrl: process.env.FASTLY_CDN_URL ? `https://${process.env.FASTLY_CDN_URL}` : ''\n},\nfastboot: {\n",
        "date": "05.01.2018 13:00:31",
        "repo": "ember-learn/ember-api-docs",
        "type": "use",
        "chatgpt_zeroshot": "Fix interpolation in cdnUrl configuration"
    },
    {
        "msg": "use a mocha-multi version compatible with Nodejs 4",
        "diff": "diff --git a/package.json b/package.json \"rewire\": \">= 2.1.0\",\n\"mocha-jenkins-reporter\": \">= 0.1.9\",\n\"mocha-appveyor-reporter\": \">= 0.2.1\",\n- \"mocha-multi\": \">= 0.8.0\"\n+ \"mocha-multi\": \"~0.11.0\"\n},\n\"repository\": {\n\"type\" : \"git\",\n",
        "date": "17.01.2018 16:09:22",
        "repo": "datastax/nodejs-driver",
        "type": "use",
        "chatgpt_zeroshot": "Update mocha-multi version to ~0.11.0"
    },
    {
        "msg": "use all columns from peers in ControlConnection",
        "diff": "diff --git a/lib/control-connection.js b/lib/control-connection.js @@ -15,7 +15,7 @@ const f = util.format;\n// eslint-disable-next-line prefer-const\nlet dns = require('dns');\n-const selectPeers = \"SELECT peer,data_center,rack,tokens,rpc_address,release_version FROM system.peers\";\n+const selectPeers = \"SELECT * FROM system.peers\";\nconst selectLocal = \"SELECT * FROM system.local WHERE key='local'\";\nconst newNodeDelay = 1000;\nconst metadataQueryAbortTimeout = 2000;\n",
        "date": "08.03.2018 16:24:28",
        "repo": "datastax/nodejs-driver",
        "type": "use",
        "chatgpt_zeroshot": "Refactor selectPeers query to select all columns in system.peers"
    },
    {
        "msg": "use this.test.error() for unhandled errors",
        "diff": "diff --git a/test/test-helper.js b/test/test-helper.js @@ -43,6 +43,7 @@ const cassandraVersionByDse = {\n};\nconst afterNextHandlers = [];\n+let testUnhandledError = null;\n// Use a afterEach handler at root level\nafterEach(async () => {\n@@ -52,9 +53,17 @@ afterEach(async () => {\n}\n});\n+afterEach('unhandled check', function () {\n+ if (testUnhandledError !== null) {\n+ const err = testUnhandledError;\n+ testUnhandledError = null;\n+ this.test.error(err);\n+ }\n+});\n+\n// Add a listener for unhandled rejections and throw the error to exit with 1\nprocess.on('unhandledRejection', reason => {\n- throw reason;\n+ testUnhandledError = reason;\n});\nconst helper = {\n",
        "date": "23.12.2019 13:12:56",
        "repo": "datastax/nodejs-driver",
        "type": "use",
        "chatgpt_zeroshot": "Add afterEach handler to check for unhandled errors"
    },
    {
        "msg": "use right settings",
        "diff": "diff --git a/components/colorpicker/colorpicker.js b/components/colorpicker/colorpicker.js menu = $('<ul id=\"colorpicker-menu\" class=\"popupmenu colorpicker\"></ul>'),\ncurrentTheme = Soho.theme;\n- var isBorderAll = (settings.themes[currentTheme].border === 'all'),\n- checkmark = settings.themes[currentTheme].checkmark,\n+ var isBorderAll = (self.settings.themes[currentTheme].border === 'all'),\n+ checkmark = self.settings.themes[currentTheme].checkmark,\ncheckmarkClass = '';\n- for (var i = 0, l = settings.colors.length; i < l; i++) {\n+ for (var i = 0, l = self.settings.colors.length; i < l; i++) {\nvar li = $('<li></li>'),\na = $('<a href=\"#\"><span class=\"swatch\"></span></a>').appendTo(li),\n- number = settings.colors[i].number,\n+ number = self.settings.colors[i].number,\nnum = parseInt(number, 10),\n- text = (Locale.translate(settings.colors[i].label) || settings.colors[i].label) + (settings.colors[i].number || ''),\n- value = settings.colors[i].value,\n+ text = (Locale.translate(self.settings.colors[i].label) || self.settings.colors[i].label) + (settings.colors[i].number || ''),\n+ value = self.settings.colors[i].value,\nisBorder = false,\nregexp = new RegExp('\\\\b'+ currentTheme +'\\\\b'),\nelemValue = this.isEditor ? this.element.attr('data-value') : this.element.val();\n}\n// Set border to this swatch\n- if (isBorderAll || regexp.test(settings.colors[i].border)) {\n+ if (isBorderAll || regexp.test(self.settings.colors[i].border)) {\nisBorder = true;\n}\nthis.swatch.remove();\nthis.container.find('.trigger').remove();\nvar input = this.container.find('.colorpicker');\n+\n+ if (input.data('mask')) {\ninput.data('mask').destroy();\n+ }\n+\ninput.unwrap();\ninput.removeAttr('data-mask role aria-autocomplete');\n},\n",
        "date": "04.08.2017 10:44:54",
        "repo": "infor-design/enterprise",
        "type": "use",
        "chatgpt_zeroshot": "Refactor colorpicker.js to use self.settings instead of settings."
    },
    {
        "msg": "use the correct version for master",
        "diff": "diff --git a/publish/package.json b/publish/package.json {\n\"name\": \"ids-enterprise\",\n\"slug\": \"ids-enterprise\",\n- \"version\": \"4.7.0-dev.20180511\",\n+ \"version\": \"4.7.0-dev\",\n\"description\": \"Infor Design System (IDS) Enterprise Components for the web\",\n\"repository\": {\n\"type\": \"git\",\n",
        "date": "14.05.2018 10:48:34",
        "repo": "infor-design/enterprise",
        "type": "use",
        "chatgpt_zeroshot": "Update version to 4.7.0-dev in package.json"
    },
    {
        "msg": "use the new api url for BS badge",
        "diff": "diff --git a/README.md b/README.md # Infor Design System's Enterprise Components\n-[![BrowserStack Status](https://www.browserstack.com/automate/badge.svg?badge_key=MmgvZ2tsa3pydTRlTklvNG9HZGYvMVlwdWRzWklWVWtXNEFFeVJXSG1raz0tLTZuR0J1Nllxd1pOTVJKaE4zRFVYUkE9PQ==--628ff7dc2ecde8982f3a89ad70cdcf252bdd8fba)](https://www.browserstack.com/automate/public-build/MmgvZ2tsa3pydTRlTklvNG9HZGYvMVlwdWRzWklWVWtXNEFFeVJXSG1raz0tLTZuR0J1Nllxd1pOTVJKaE4zRFVYUkE9PQ==--628ff7dc2ecde8982f3a89ad70cdcf252bdd8fba)\n+[![BrowserStack Status](https://api.browserstack.com/automate/badge.svg?badge_key=MmgvZ2tsa3pydTRlTklvNG9HZGYvMVlwdWRzWklWVWtXNEFFeVJXSG1raz0tLTZuR0J1Nllxd1pOTVJKaE4zRFVYUkE9PQ==--628ff7dc2ecde8982f3a89ad70cdcf252bdd8fba)](https://www.browserstack.com/automate/public-build/MmgvZ2tsa3pydTRlTklvNG9HZGYvMVlwdWRzWklWVWtXNEFFeVJXSG1raz0tLTZuR0J1Nllxd1pOTVJKaE4zRFVYUkE9PQ==--628ff7dc2ecde8982f3a89ad70cdcf252bdd8fba)\nInfor Design System's Enterprise component library is a framework-independent UI library consisting of CSS and JS that provides Infor product development teams, partners, and customers the tools to create user experiences that are approachable, focused, relevant, perceptive.\n",
        "date": "19.06.2018 16:39:41",
        "repo": "infor-design/enterprise",
        "type": "use",
        "chatgpt_zeroshot": "Update BrowserStack badge URL in README.md"
    },
    {
        "msg": "use the production flag for docs deploy",
        "diff": "diff --git a/scripts/after-release.sh b/scripts/after-release.sh @@ -18,5 +18,5 @@ if [[ \"$RELEASE_TAG\" == \"latest\" ]]; then\necho \"Publishing and Deploying documentation\"\necho \"\"\n- node ./scripts/deploy-documentation.js\n+ node ./scripts/deploy-documentation.js --site prod\nfi\n",
        "date": "13.03.2019 17:12:24",
        "repo": "infor-design/enterprise",
        "type": "use",
        "chatgpt_zeroshot": "Add site flag to deploy documentation script"
    },
    {
        "msg": "use new npm clean cmd",
        "diff": "diff --git a/package.json b/package.json \"dist\"\n],\n\"scripts\": {\n- \"start\": \"npx grunt clean && npm run build && npm run minify && npm run quickstart\",\n+ \"start\": \"npm run clean && npm run build && npm run minify && npm run quickstart\",\n\"quickstart\": \"npx grunt demo && node app/server.js\",\n\"quickstart:livereload\": \"npx grunt demo && node app/server.js --livereload\",\n\"build\": \"node ./scripts/build\",\n",
        "date": "28.03.2019 14:03:28",
        "repo": "infor-design/enterprise",
        "type": "use",
        "chatgpt_zeroshot": "Refactor start script in package.json to remove unnecessary npx command"
    },
    {
        "msg": "use a date variance vs enum array for testing",
        "diff": "diff --git a/test/components/datepicker/datepicker.e2e-spec.js b/test/components/datepicker/datepicker.e2e-spec.js @@ -568,16 +568,15 @@ describe('Datepicker Timeformat Tests', () => {\nawait datepickerEl.sendKeys(protractor.Key.ARROW_DOWN);\nconst todayEl = await element(by.css('button.is-today'));\n- const testDate = new Date();\n- testDate.setSeconds(0);\n- testDate.setMilliseconds(0);\nawait todayEl.click();\nconst value = await element(by.id('dp3')).getAttribute('value');\n+ const valueDate = new Date(value);\n- const dateVariances = [-2, -1, 0, 1, 2]\n- .map(amt => testDate.setSeconds(testDate.getSeconds() + amt));\n+ const testDate = new Date();\n+ const allowedVariance = 60000; // milliseconds\n+ const dateDiff = Math.abs(testDate - valueDate); // guarentee its a positive result\n- expect(dateVariances).toContain(new Date(value).getTime());\n+ expect(dateDiff).toBeLessThanOrEqual(allowedVariance);\n});\n});\n",
        "date": "05.04.2019 10:48:26",
        "repo": "infor-design/enterprise",
        "type": "use",
        "chatgpt_zeroshot": "Refactor datepicker e2e test for timeformat validation"
    },
    {
        "msg": "use the proper style inheritance",
        "diff": "diff --git a/src/components/notification/_notification.scss b/src/components/notification/_notification.scss .notification-text,\n.notification-link {\n- color: $theme-color-palette-graphite-60;\n+ color: inherit;\n}\n.notification-link {\ntext-decoration: none;\n&:hover {\n- color: $theme-color-brand-secondary-contrast;\ntext-decoration: underline;\n}\n}\n}\n.notification-close {\n+ color: inherit;\nposition: absolute;\nright: 15px;\ntop: calc(50% - 18px);\n.icon {\n- color: $icon-color-fill;\n+ color: inherit;\nheight: 15px;\n}\n",
        "date": "12.04.2019 12:17:45",
        "repo": "infor-design/enterprise",
        "type": "use",
        "chatgpt_zeroshot": "Refactor notification styles to use inherit color and update close icon color."
    },
    {
        "msg": "use the min-width setting in the pager",
        "diff": "diff --git a/src/components/datagrid/datagrid.js b/src/components/datagrid/datagrid.js @@ -4068,6 +4068,9 @@ Datagrid.prototype = {\nif (this.element.parent().is('.modal-body')) { // handle on invisible modal\nthis.elemWidth = this.settings.paging ? 466 : 300; // Default a size for when on modals\n+ if (this.element.css('min-width')) {\n+ this.elemWidth = parseInt(this.element.css('min-width'));\n+ }\nthis.isInModal = true;\n}\n",
        "date": "21.05.2019 20:05:57",
        "repo": "infor-design/enterprise",
        "type": "use",
        "chatgpt_zeroshot": "Update Datagrid to dynamically set element width based on min-width CSS property"
    },
    {
        "msg": "use new chrome",
        "diff": "diff --git a/package.json b/package.json \"e2e:local:debug\": \"npm run webdriver:update && npx protractor test/protractor.local.debug.conf.js\",\n\"e2e:puppeteer\": \"npx --no-install jest --config=test/jest.config.js --runInBand --detectOpenHandles --forceExit\",\n\"webdriver:clean\": \"npx webdriver-manager clean\",\n- \"webdriver:update\": \"npx webdriver-manager update --versions.chrome=94.0.4606.61 --standalone false --quiet --gecko=false\",\n+ \"webdriver:update\": \"npx webdriver-manager update --standalone false --quiet --gecko=false\",\n\"zip-dist\": \"npx grunt zip-dist\",\n\"documentation\": \"node ./scripts/deploy-documentation.js\",\n\"release:dev\": \"node scripts/publish-nightly-manual\",\n\"node-version-check\": \"npx check-node-version --node 12\",\n\"node-updates-check\": \"npx ncu\"\n},\n- \"chrome-version\": \"94\",\n+ \"chrome-version\": \"95\",\n\"dependencies\": {\n\"d3\": \"^5.16.0\",\n\"ids-identity\": \"4.7.10\",\n",
        "date": "11.11.2021 09:56:35",
        "repo": "infor-design/enterprise",
        "type": "use",
        "chatgpt_zeroshot": "Update Chrome version to 95 in package.json"
    },
    {
        "msg": "use <code> for styling",
        "diff": "diff --git a/examples/server/templates/image-file-upload.html b/examples/server/templates/image-file-upload.html @@ -64,8 +64,8 @@ sent through Ajax. The server then moves the previously uploaded copy of that fi\n{% endautoescape %}\n<p class=\"bg-info\">A form accepting files and images without a permanent storage does not make\n-much sense. Therefore you normally would create a Django model using an ``models.ImageField``\n-and/or ``models.FileField``. From this model, you can create a form as usual. Image and\n+much sense. Therefore you normally would create a Django model using an <code>models.ImageField</code>\n+and/or <code>models.FileField</code>. From this model, you can create a form as usual. Image and\nfile fields then are replaced by their AngularJS enabled counterparts, enabling drag & drop and\nimmediate image preview.<br/>\nSome example code is shown in the last tab labeled <strong>Model</strong>.</p>\n",
        "date": "14.08.2017 13:30:43",
        "repo": "jrief/django-angular",
        "type": "use",
        "chatgpt_zeroshot": "Refactor HTML template for image file upload form to use <code>models.ImageField</code> and <code>models.FileField</code> in Django model."
    },
    {
        "msg": "use $touched in combination with $dirty",
        "diff": "diff --git a/djng/forms/angular_base.py b/djng/forms/angular_base.py @@ -52,7 +52,6 @@ class TupleErrorList(UserList, list):\n5: The desired error message. If this contains the magic word '$message' it will be added with\n``ng-bind`` rather than rendered inside the list item.\n\"\"\"\n- ul_format = '<ul class=\"{1}\" ng-show=\"{0}.{2}\" ng-cloak>{3}</ul>'\nli_format = '<li ng-show=\"{0}.{1}\" class=\"{2}\">{3}</li>'\nli_format_bind = '<li ng-show=\"{0}.{1}\" class=\"{2}\" ng-bind=\"{0}.{3}\"></li>'\n@@ -104,8 +103,11 @@ class TupleErrorList(UserList, list):\nerr_tuple = (e[0], e[3], e[4], force_text(e[5]))\nerror_lists[e[2]].append(format_html(li_format, *err_tuple))\n# renders and combine both of these lists\n- return mark_safe(''.join([format_html(self.ul_format, first[0], first[1], prop,\n- mark_safe(''.join(list_items))) for prop, list_items in error_lists.items()]))\n+ dirty_errors = format_html('<ul ng-show=\"{0}.$dirty && {0}.$touched\" class=\"{1}\" ng-cloak>{2}</ul>',\n+ first[0], first[1], mark_safe(''.join(error_lists['$dirty'])))\n+ pristine_errors = format_html('<ul ng-show=\"{0}.$pristine\" class=\"{1}\" ng-cloak>{2}</ul>',\n+ first[0], first[1], mark_safe(''.join(error_lists['$pristine'])))\n+ return format_html('{}{}', dirty_errors, pristine_errors)\nreturn format_html('<ul class=\"errorlist\">{0}</ul>',\nformat_html_join('', '<li>{0}</li>', ((force_text(e),) for e in self)))\n",
        "date": "12.09.2017 18:13:38",
        "repo": "jrief/django-angular",
        "type": "use",
        "chatgpt_zeroshot": "Refactor error list rendering in TupleErrorList"
    },
    {
        "msg": "use $watch instead of event handler to check form validity",
        "diff": "diff --git a/client/src/js/djng-forms-set.js b/client/src/js/djng-forms-set.js @@ -42,34 +42,14 @@ djngModule.directive('form', ['$timeout', function($timeout) {\nif (!attrs.name)\nthrow new Error(\"Each <form> embedded inside a <djng-forms-set> must identify itself by name.\")\n- element.find('input').on('keyup change', function() {\n- // delay until validation is ready\n- $timeout(reduceValidation);\n- });\n- element.find('select').on('change', function() {\n- $timeout(reduceValidation);\n- });\n- element.find('textarea').on('blur', function() {\n- $timeout(reduceValidation);\n- });\n-\n- element.on('$destroy', function() {\n- element.find('input').off('keyup change');\n- element.find('select').off('keyup change');\n- element.find('textarea').off('blur');\n- });\n-\n- // delay first evaluation until form is fully validated\n- $timeout(reduceValidation);\n-\n// check each child form's $valid state and reduce it to one single state `formsSetController.setIsValid`\n- function reduceValidation() {\n+ scope.$watch(attrs.name + '.$valid', function reduceValidation() {\nformsSetController.digestValidatedForms[formController.$name] = formController.$valid;\nformsSetController.setIsValid = true;\nangular.forEach(formsSetController.digestValidatedForms, function(validatedForm) {\nformsSetController.setIsValid = formsSetController.setIsValid && validatedForm;\n});\n- }\n+ });\n}\n};\n",
        "date": "04.10.2017 21:28:46",
        "repo": "jrief/django-angular",
        "type": "use",
        "chatgpt_zeroshot": "Refactor form validation event handling and reduceValidation function in djng-forms-set directive"
    },
    {
        "msg": "use rollup output plugin to apply terser only to dc.min.js",
        "diff": "diff --git a/rollup.config.js b/rollup.config.js @@ -42,14 +42,16 @@ const umdConf = {\npaths: d3Modules\n};\n-const umdMinConf = Object.assign({}, umdConf, {file: 'dist/dc.min.js'});\n+const umdMinConf = Object.assign({}, umdConf, {\n+ file: 'dist/dc.min.js',\n+ plugins: [terser()]\n+});\nexport default [\n{\ninput: 'src/index-with-version.js',\nexternal: Object.keys(d3Modules),\nplugins: [\n- terser(),\njsonPlugin,\nlicensePlugin\n],\n",
        "date": "30.08.2020 07:25:15",
        "repo": "dc-js/dc.js",
        "type": "use",
        "chatgpt_zeroshot": "Add terser plugin to umdMinConf in rollup.config.js"
    },
    {
        "msg": "use right class name for import",
        "diff": "diff --git a/lib/services/billingManagement/README.md b/lib/services/billingManagement/README.md @@ -19,7 +19,7 @@ npm install azure-arm-billing\n```javascript\nconst msRestAzure = require('ms-rest-azure');\n- const BillingManagement = require(\"azure-arm-billing\");\n+ const BillingManagementClient = require(\"azure-arm-billing\");\n// Interactive Login\n// It provides a url and code that needs to be copied and pasted in a browser and authenticated over there. If successful,\n",
        "date": "10.03.2020 17:11:10",
        "repo": "azure/azure-sdk-for-node",
        "type": "use",
        "chatgpt_zeroshot": "Refactor billingManagement import to use BillingManagementClient instead of BillingManagement"
    },
    {
        "msg": "use correct import",
        "diff": "diff --git a/src/wmr-middleware.js b/src/wmr-middleware.js import { resolve, dirname, sep, posix } from 'path';\n-import { promises as fs, fs as syncFS } from 'fs';\n+import syncFS, { promises as fs } from 'fs';\nimport chokidar from 'chokidar';\nimport mime from 'mime/lite.js';\nimport htmPlugin from './plugins/htm-plugin.js';\n",
        "date": "01.08.2020 16:20:09",
        "repo": "preactjs/wmr",
        "type": "use",
        "chatgpt_zeroshot": "Refactor fs import in wmr-middleware.js"
    },
    {
        "msg": "use more robust regex for ESM detection",
        "diff": "diff --git a/src/plugins/process-global-plugin.js b/src/plugins/process-global-plugin.js @@ -30,7 +30,7 @@ export default function processGlobalPlugin({ NODE_ENV = 'development' } = {}) {\n// if that wasn't the only way `process.env` was referenced...\nif (code.match(/[^a-zA-Z0-9]process\\.env/)) {\n// hack: avoid injecting imports into commonjs modules\n- if (/^import[\\s{]|^export\\s\\w/gm.test(code)) {\n+ if (/^\\s*(import|export)[\\s{]/gm.test(code)) {\ncode = `import process from '\\0builtins:process.js';${code}`;\n} else {\ncode = `var process=${processObj};${code}`;\n",
        "date": "03.10.2020 16:49:16",
        "repo": "preactjs/wmr",
        "type": "use",
        "chatgpt_zeroshot": "Refactor processGlobalPlugin to handle import and export statements in commonjs modules"
    },
    {
        "msg": "use $$html for transpiled JSX Fixes",
        "diff": "diff --git a/src/plugins/htm-plugin.js b/src/plugins/htm-plugin.js @@ -50,8 +50,8 @@ export default function htmPlugin({ include, production = true } = {}) {\nimport: {\nmodule: 'htm/preact'\n},\n- // @TODO: enable this to avoid a likely variable collision:\n- // tag: '$$html',\n+ // avoid a variable collisions:\n+ tag: '$$html',\nterse: true\n}\n]\n",
        "date": "20.12.2020 15:25:31",
        "repo": "preactjs/wmr",
        "type": "use",
        "chatgpt_zeroshot": "Fix variable collision in htm-plugin.js"
    },
    {
        "msg": "use jest matchers to better inspect mismatches",
        "diff": "diff --git a/packages/wmr/test/production.test.js b/packages/wmr/test/production.test.js @@ -241,17 +241,17 @@ describe('production', () => {\nconst main = await fs.readFile(path.join(env.tmp.path, 'dist', roots[2]), 'utf8');\n// https://cdn.example.com/assets/math.d41e7373.css\n- expect(math.includes(`(\"https://cdn.example.com/assets/${assets[1]}\")`)).toBe(true);\n- expect(math.includes(`import(\"./${chunks[0]}\")`)).toBe(true);\n+ expect(math).toMatch(`(\"https://cdn.example.com/assets/${assets[1]}\")`);\n+ expect(math).toMatch(`import(\"./${chunks[0]}\")`);\n// (preload) https://cdn.example.com/assets/math.d41e7373.css\n- expect(main.includes(`$w_s$(\"https://cdn.example.com/assets/${assets[1]}\")`)).toBe(true);\n+ expect(main).toMatch(`$w_s$(\"https://cdn.example.com/assets/${assets[1]}\")`);\n// HTML stylesheet: https://cdn.example.com/assets/index.0544f0a6.css\n- expect(html.includes(`href=\"https://cdn.example.com/assets/${assets[0]}\"`)).toBe(true);\n+ expect(html).toMatch(`href=\"https://cdn.example.com/assets/${assets[0]}\"`);\n// HTML script: https://cdn.example.com/assets/index.0544f0a6.css\n- expect(html.includes(`src=\"https://cdn.example.com/${roots[2]}\"`)).toBe(true);\n+ expect(html).toMatch(`src=\"https://cdn.example.com/${roots[2]}\"`);\n});\nit('should respect `config.publicPath` value (ts)', async () => {\n@@ -278,17 +278,17 @@ describe('production', () => {\nconst main = await fs.readFile(path.join(env.tmp.path, 'dist', roots[2]), 'utf8');\n// https://cdn.example.com/assets/math.d41e7373.css\n- expect(math.includes(`(\"https://cdn.example.com/assets/${assets[1]}\")`)).toBe(true);\n- expect(math.includes(`import(\"./${chunks[0]}\")`)).toBe(true);\n+ expect(math).toMatch(`(\"https://cdn.example.com/assets/${assets[1]}\")`);\n+ expect(math).toMatch(`import(\"./${chunks[0]}\")`);\n// (preload) https://cdn.example.com/assets/math.d41e7373.css\n- expect(main.includes(`$w_s$(\"https://cdn.example.com/assets/${assets[1]}\")`)).toBe(true);\n+ expect(main).toMatch(`$w_s$(\"https://cdn.example.com/assets/${assets[1]}\")`);\n// HTML stylesheet: https://cdn.example.com/assets/index.0544f0a6.css\n- expect(html.includes(`href=\"https://cdn.example.com/assets/${assets[0]}\"`)).toBe(true);\n+ expect(html).toMatch(`href=\"https://cdn.example.com/assets/${assets[0]}\"`);\n// HTML script: https://cdn.example.com/assets/index.0544f0a6.css\n- expect(html.includes(`src=\"https://cdn.example.com/${roots[2]}\"`)).toBe(true);\n+ expect(html).toMatch(`src=\"https://cdn.example.com/${roots[2]}\"`);\n});\n});\n",
        "date": "28.03.2021 08:58:54",
        "repo": "preactjs/wmr",
        "type": "use",
        "chatgpt_zeroshot": "Refactor production test to use expect().toMatch() instead of includes()"
    },
    {
        "msg": "use default ice servers if none specified",
        "diff": "diff --git a/index.js b/index.js @@ -40,6 +40,7 @@ function Peer (opts) {\nself.initiator = opts.initiator || false\nself.channelConfig = opts.channelConfig || Peer.channelConfig\nself.config = opts.config || Peer.config\n+ self.config.iceServers = self.config.iceServers || Peer.config.iceServers\nself.constraints = self._transformConstraints(opts.constraints || Peer.constraints)\nself.offerConstraints = self._transformConstraints(opts.offerConstraints || {})\nself.answerConstraints = self._transformConstraints(opts.answerConstraints || {})\n",
        "date": "19.01.2019 08:27:09",
        "repo": "feross/simple-peer",
        "type": "use",
        "chatgpt_zeroshot": "Add default iceServers to config in Peer constructor"
    },
    {
        "msg": "use cleaner Object.assign",
        "diff": "diff --git a/index.js b/index.js @@ -39,8 +39,7 @@ function Peer (opts) {\nself.initiator = opts.initiator || false\nself.channelConfig = opts.channelConfig || Peer.channelConfig\n- self.config = opts.config || Peer.config\n- self.config.iceServers = self.config.iceServers || Peer.config.iceServers\n+ self.config = Object.assign({}, Peer.config, opts.config)\nself.constraints = self._transformConstraints(opts.constraints || Peer.constraints)\nself.offerConstraints = self._transformConstraints(opts.offerConstraints || {})\nself.answerConstraints = self._transformConstraints(opts.answerConstraints || {})\n",
        "date": "19.01.2019 08:53:12",
        "repo": "feross/simple-peer",
        "type": "use",
        "chatgpt_zeroshot": "Refactor Peer constructor to use Object.assign for config options"
    },
    {
        "msg": "use the correct port when PORT is not set",
        "diff": "diff --git a/packages/razzle-dev-utils/webpackHotDevClient.js b/packages/razzle-dev-utils/webpackHotDevClient.js @@ -27,7 +27,7 @@ ErrorOverlay.startReportingRuntimeErrors({\nlaunchEditorEndpoint: url.format({\nprotocol: window.location.protocol,\nhostname: window.location.hostname,\n- port: parseInt(process.env.PORT, 10) + 1 || window.location.port,\n+ port: parseInt(process.env.PORT || window.location.port, 10) + 1,\npathname: launchEditorEndpoint,\n}),\nonError: function() {\n@@ -48,7 +48,7 @@ var connection = new SockJS(\nurl.format({\nprotocol: window.location.protocol,\nhostname: window.location.hostname,\n- port: parseInt(process.env.PORT, 10) + 1 || window.location.port,\n+ port: parseInt(process.env.PORT || window.location.port, 10) + 1,\n// Hardcoded in WebpackDevServer\npathname: '/sockjs-node',\n})\n",
        "date": "18.08.2018 09:37:56",
        "repo": "jaredpalmer/razzle",
        "type": "use",
        "chatgpt_zeroshot": "Fix port calculation in webpackHotDevClient.js"
    },
    {
        "msg": "use vm#createVariable",
        "diff": "diff --git a/src/containers/blocks.jsx b/src/containers/blocks.jsx @@ -127,7 +127,6 @@ class Blocks extends React.Component {\nif (this.props.vm.editingTarget && !this.state.workspaceMetrics[this.props.vm.editingTarget.id]) {\nthis.onWorkspaceMetricsChange();\n}\n-\nthis.ScratchBlocks.Events.disable();\nthis.workspace.clear();\n@@ -152,6 +151,7 @@ class Blocks extends React.Component {\n}\nhandlePromptCallback (data) {\nthis.state.prompt.callback(data);\n+ this.props.vm.createVariable(data);\nthis.handlePromptClose();\n}\nhandlePromptClose () {\n",
        "date": "25.05.2017 11:43:43",
        "repo": "wdr-data/code4maus",
        "type": "use",
        "chatgpt_zeroshot": "\"Add createVariable method call in handlePromptCallback\""
    },
    {
        "msg": "use comments flag to disable comments in scratch-blocks",
        "diff": "diff --git a/src/containers/blocks.jsx b/src/containers/blocks.jsx @@ -225,7 +225,8 @@ Blocks.propTypes = {\ninsertionMarkerOpacity: PropTypes.number,\nfieldShadow: PropTypes.string,\ndragShadowOpacity: PropTypes.number\n- })\n+ }),\n+ comments: PropTypes.bool\n}),\nvm: PropTypes.instanceOf(VM).isRequired\n};\n@@ -252,7 +253,8 @@ Blocks.defaultOptions = {\ninsertionMarkerOpacity: 0.2,\nfieldShadow: 'rgba(255, 255, 255, 0.3)',\ndragShadowOpacity: 0.6\n- }\n+ },\n+ comments: false\n};\nBlocks.defaultProps = {\n",
        "date": "12.06.2017 10:02:22",
        "repo": "wdr-data/code4maus",
        "type": "use",
        "chatgpt_zeroshot": "Add comments prop to Blocks componentPropTypes and defaultProps"
    },
    {
        "msg": "use the existing value of the prop for the toolbox",
        "diff": "diff --git a/src/containers/blocks.jsx b/src/containers/blocks.jsx @@ -57,7 +57,7 @@ class Blocks extends React.Component {\nthis.workspace = this.ScratchBlocks.inject(this.blocks, workspaceConfig);\n// Load the toolbox from the GUI (otherwise we get the scratch-blocks default toolbox)\n- this.workspace.updateToolbox(makeToolboxXML());\n+ this.workspace.updateToolbox(this.props.toolboxXML);\n// @todo change this when blockly supports UI events\naddFunctionListener(this.workspace, 'translate', this.onWorkspaceMetricsChange);\n",
        "date": "03.10.2017 11:40:22",
        "repo": "wdr-data/code4maus",
        "type": "use",
        "chatgpt_zeroshot": "Refactor toolbox update in Blocks component to use props.toolboxXML."
    },
    {
        "msg": "use a more public way of set selected category",
        "diff": "diff --git a/src/containers/blocks.jsx b/src/containers/blocks.jsx @@ -76,14 +76,11 @@ class Blocks extends React.Component {\nif (prevProps.toolboxXML !== this.props.toolboxXML) {\nconst selectedCategoryName = this.workspace.toolbox_.getSelectedItem().name_;\nthis.workspace.updateToolbox(this.props.toolboxXML);\n- // Blockly throws if we don't select a category after updating the toolbox.\n- /** @TODO Find a way to avoid the exception without accessing private properties. */\n- this.setToolboxSelectedItemByName(selectedCategoryName);\n+ this.workspace.toolbox_.setSelectedCategoryByName(selectedCategoryName);\n}\nif (this.props.isVisible === prevProps.isVisible) {\nreturn;\n}\n-\n// @todo hack to resize blockly manually in case resize happened while hidden\n// @todo hack to reload the workspace due to gui bug #413\nif (this.props.isVisible) { // Scripts tab\n@@ -99,20 +96,6 @@ class Blocks extends React.Component {\nthis.detachVM();\nthis.workspace.dispose();\n}\n- /**\n- * Select a particular category in the toolbox by specifying the category name.\n- * This is a workaround for a bug: @see {@link componentDidUpdate} above.\n- * @TODO Remove this or reimplement using only public APIs.\n- * @param {string} name - the name of the category to select.\n- */\n- setToolboxSelectedItemByName (name) {\n- const categories = this.workspace.toolbox_.categoryMenu_.categories_;\n- for (let i = 0; i < categories.length; i++) {\n- if (categories[i].name_ === name) {\n- this.workspace.toolbox_.setSelectedItem(categories[i]);\n- }\n- }\n- }\nattachVM () {\nthis.workspace.addChangeListener(this.props.vm.blockListener);\nthis.flyoutWorkspace = this.workspace\n",
        "date": "05.10.2017 15:52:15",
        "repo": "wdr-data/code4maus",
        "type": "use",
        "chatgpt_zeroshot": "Refactor toolbox category selection in Blocks component"
    },
    {
        "msg": "use the fixed IDs from default_toolbox.",
        "diff": "diff --git a/src/lib/make-toolbox-xml.js b/src/lib/make-toolbox-xml.js @@ -112,12 +112,12 @@ const motion = `\n</block>\n<block type=\"motion_gotoxy\">\n<value name=\"X\">\n- <shadow type=\"math_number\">\n+ <shadow id=\"movex\" type=\"math_number\">\n<field name=\"NUM\">0</field>\n</shadow>\n</value>\n<value name=\"Y\">\n- <shadow type=\"math_number\">\n+ <shadow id=\"movey\" type=\"math_number\">\n<field name=\"NUM\">0</field>\n</shadow>\n</value>\n@@ -135,12 +135,12 @@ const motion = `\n</shadow>\n</value>\n<value name=\"X\">\n- <shadow type=\"math_number\">\n+ <shadow id=\"glidex\" type=\"math_number\">\n<field name=\"NUM\">0</field>\n</shadow>\n</value>\n<value name=\"Y\">\n- <shadow type=\"math_number\">\n+ <shadow id=\"glidey\" type=\"math_number\">\n<field name=\"NUM\">0</field>\n</shadow>\n</value>\n@@ -165,7 +165,7 @@ const motion = `\n</block>\n<block type=\"motion_setx\">\n<value name=\"X\">\n- <shadow type=\"math_number\">\n+ <shadow id=\"setx\" type=\"math_number\">\n<field name=\"NUM\">0</field>\n</shadow>\n</value>\n@@ -179,7 +179,7 @@ const motion = `\n</block>\n<block type=\"motion_sety\">\n<value name=\"Y\">\n- <shadow type=\"math_number\">\n+ <shadow id=\"sety\" type=\"math_number\">\n<field name=\"NUM\">0</field>\n</shadow>\n</value>\n",
        "date": "23.10.2017 15:37:04",
        "repo": "wdr-data/code4maus",
        "type": "use",
        "chatgpt_zeroshot": "Refactor shadow blocks in make-toolbox-xml.js for motion blocks"
    },
    {
        "msg": "use new batched xml loading API",
        "diff": "diff --git a/src/containers/blocks.jsx b/src/containers/blocks.jsx @@ -172,13 +172,11 @@ class Blocks extends React.Component {\nthis.onWorkspaceMetricsChange();\n}\n- this.ScratchBlocks.Events.disable();\n- this.workspace.clear();\n-\n+ // Remove and reattach the workspace listener (but allow flyout events)\n+ this.workspace.removeChangeListener(this.props.vm.blockListener);\nconst dom = this.ScratchBlocks.Xml.textToDom(data.xml);\n- this.ScratchBlocks.Xml.domToWorkspace(dom, this.workspace);\n- this.ScratchBlocks.Events.enable();\n- this.workspace.toolbox_.refreshSelection();\n+ this.ScratchBlocks.Xml.clearWorkspaceAndLoadFromXml(dom, this.workspace);\n+ this.workspace.addChangeListener(this.props.vm.blockListener);\nif (this.props.vm.editingTarget && this.state.workspaceMetrics[this.props.vm.editingTarget.id]) {\nconst {scrollX, scrollY, scale} = this.state.workspaceMetrics[this.props.vm.editingTarget.id];\n",
        "date": "25.10.2017 09:36:32",
        "repo": "wdr-data/code4maus",
        "type": "use",
        "chatgpt_zeroshot": "Refactor workspace listener attachment and removal in Blocks component"
    },
    {
        "msg": "use the vm editing target to make sure sound reference is up-to-date.",
        "diff": "diff --git a/src/containers/sound-tab.jsx b/src/containers/sound-tab.jsx @@ -52,20 +52,18 @@ class SoundTab extends React.Component {\nrender () {\nconst {\n- editingTarget,\n- sprites,\n- stage,\n+ vm,\nonNewSoundFromLibraryClick,\nonNewSoundFromRecordingClick\n} = this.props;\n- const target = editingTarget && sprites[editingTarget] ? sprites[editingTarget] : stage;\n+ const sprite = vm.editingTarget.sprite;\n- if (!target) {\n+ if (!sprite) {\nreturn null;\n}\n- const sounds = target.sounds ? target.sounds.map(sound => (\n+ const sounds = sprite.sounds ? sprite.sounds.map(sound => (\n{\nurl: soundIcon,\nname: sound.name\n@@ -106,7 +104,7 @@ class SoundTab extends React.Component {\nonDeleteClick={this.handleDeleteSound}\nonItemClick={this.handleSelectSound}\n>\n- {editingTarget && target.sounds && target.sounds.length > 0 ? (\n+ {sprite.sounds && sprite.sounds.length > 0 ? (\n<SoundEditor soundIndex={this.state.selectedSoundIndex} />\n) : null}\n{this.props.soundRecorderVisible ? (\n",
        "date": "16.11.2017 11:38:47",
        "repo": "wdr-data/code4maus",
        "type": "use",
        "chatgpt_zeroshot": "Refactor SoundTab component to use vm.editingTarget.sprite instead of editingTarget and sprites. Fix conditional rendering for sounds array."
    },
    {
        "msg": "use the right version number..",
        "diff": "diff --git a/package.json b/package.json \"scratch-paint\": \"0.2.0-prerelease.20180410152401\",\n\"scratch-render\": \"0.1.0-prerelease.1523453612\",\n\"scratch-storage\": \"0.4.0\",\n- \"scratch-vm\": \"0.1.0-prerelease.1524239914\",\n+ \"scratch-vm\": \"0.1.0-prerelease.1524239808\",\n\"selenium-webdriver\": \"3.6.0\",\n\"startaudiocontext\": \"1.2.1\",\n\"style-loader\": \"^0.20.0\",\n",
        "date": "20.04.2018 12:10:53",
        "repo": "wdr-data/code4maus",
        "type": "use",
        "chatgpt_zeroshot": "Update scratch-vm version in package.json"
    },
    {
        "msg": "use the `label` field instead of `value` for analytics events",
        "diff": "diff --git a/src/lib/project-loader-hoc.jsx b/src/lib/project-loader-hoc.jsx @@ -44,7 +44,7 @@ const ProjectLoaderHOC = function (WrappedComponent) {\nanalytics.event({\ncategory: 'project',\naction: 'Load Project',\n- value: projectId,\n+ label: projectId,\nnonInteraction: true\n});\n}\n",
        "date": "06.06.2018 10:30:15",
        "repo": "wdr-data/code4maus",
        "type": "use",
        "chatgpt_zeroshot": "Change value to label in project loader analytics event"
    },
    {
        "msg": "use preferred config",
        "diff": "diff --git a/renovate.json b/renovate.json {\n- \"extends\": [\n- \"config:base\"\n- ]\n+ \"extends\": [\"config:base\"],\n+ \"reviewers\": [\"spences10\"],\n+ \"bumpVersion\": \"patch\",\n+ \"baseBranches\": [\"patch\"],\n+ \"automerge\": true,\n+ \"major\": {\n+ \"automerge\": false\n+ },\n+ \"lockFileMaintenance\": {\n+ \"enabled\": true,\n+ \"extends\": \"schedule:weekly\"\n+ }\n}\n",
        "date": "25.05.2019 18:37:45",
        "repo": "spences10/cheat-sheets",
        "type": "use",
        "chatgpt_zeroshot": "Add reviewers, bump version to patch, set base branches to patch, enable automerge, disable automerge for major updates, enable lock file maintenance with weekly schedule."
    },
    {
        "msg": "use new anchor",
        "diff": "diff --git a/sheets/graphcool.md b/sheets/graphcool.md @@ -45,6 +45,7 @@ Force local changes remotely resulting in potential data loss\ngraphcool push --force project.graphcool\n```\n-How to download the GraphQL SDL (schema definition language)\n+[How to download the GraphQL SDL (schema definition language)]\n+[how to download the graphql sdl (schema definition language)]:\nhttps://www.graph.cool/docs/faq/graphql-how-to-download-graphql-sdl-schema-maiv5eekan/\n",
        "date": "27.05.2019 07:14:46",
        "repo": "spences10/cheat-sheets",
        "type": "use",
        "chatgpt_zeroshot": "Update link to download GraphQL SDL in graphcool.md"
    },
    {
        "msg": "use travis environment variables to determine the node version and only docker images for stable TRAVIS_TAGS will be built",
        "diff": "diff --git a/docker/scripts/run.sh b/docker/scripts/run.sh @@ -17,10 +17,9 @@ function build_docker_image {\nfi\n}\n-NODE_V=$(node -v | grep -o \"v.\")\n-\nIMAGES_BASE_PATH=\"./docker/images\"\n-if [ -n \"$TRAVIS_TAG\" ] && [ \"$NODE_V\" = \"v8\" ]; then\n+EXTRACTED_TAG=$(echo $TRAVIS_TAG | grep -o \"[0-9]\\+.[0-9]\\+.[0-9]\\+\")\n+if [ -n \"$TRAVIS_TAG\" ] && [ \"$TRAVIS_TAG\" = \"$EXTRACTED_TAG\" ] && [ \"$TRAVIS_NODE_VERSION\" = \"8\" ]; then\nfor image in $IMAGES_BASE_PATH/*; do\nif [ -d \"${image}\" ] && [ -f \"${image}/Dockerfile\" ]; then\ncp \"${image}/Dockerfile\" .\n",
        "date": "25.01.2018 04:28:23",
        "repo": "postmanlabs/newman",
        "type": "use",
        "chatgpt_zeroshot": "Refactor docker image build condition to use extracted tag and node version."
    },
    {
        "msg": "use denali notification color",
        "diff": "diff --git a/packages/core/app/styles/navi-core/variables/colors.less b/packages/core/app/styles/navi-core/variables/colors.less @navi-lightest-gray: @navi-gray-200;\n@navi-dark-gray: @navi-gray-800;\n@navi-blue: #198fff;\n+@navi-blue-500: #0066DF;\n@navi-blue-900: #020E65;\n@navi-gold: #ffc831;\n@navi-red-400: #F16869;\n@navi-form-error-border: @navi-red;\n@navi-notification-success-background-color: #00b777;\n-@navi-notification-info-background-color: @navi-blue;\n+@navi-notification-info-background-color: @navi-blue-500;\n@navi-notification-failure-background-color: @navi-red-400;\n@navi-disabled-element-background-color: @navi-gray-200;\n",
        "date": "07.02.2018 14:31:59",
        "repo": "yahoo/yavin",
        "type": "use",
        "chatgpt_zeroshot": "Update notification info background color to navi-blue-500"
    },
    {
        "msg": "use the real meta desc API instead of relying on react-helmet",
        "diff": "diff --git a/src/components/basics/SocialGraph.js b/src/components/basics/SocialGraph.js @@ -4,7 +4,8 @@ import Helmet from 'react-helmet';\nexport default function SocialGraph({ title, desc, url, image }) {\nreturn (\n- <Helmet title={title} meta={[{ name: 'description', content: desc }]}>\n+ <Helmet title={title}>\n+ <meta name=\"description\" content={desc} />\n{url && <meta property=\"og:url\" content={url} />}\n{image && <meta property=\"og:image\" content={image} />}\n{image && <meta name=\"twitter:image\" content={image} />}\n",
        "date": "28.01.2019 11:31:59",
        "repo": "storybookjs/frontpage",
        "type": "use",
        "chatgpt_zeroshot": "Refactor SocialGraph component to separate meta tags for description, url, and image"
    },
    {
        "msg": "use the correct framework when generating canonical tag",
        "diff": "diff --git a/src/components/layout/DocsLayout.js b/src/components/layout/DocsLayout.js @@ -187,7 +187,7 @@ function DocsLayout({ children, data, pageContext, ...props }) {\n<>\n<GlobalStyle />\n<Helmet>\n- <link rel=\"canonical\" href={`${homepageUrl}${buildPathWithFramework(slug, 'react')}/`} />\n+ <link rel=\"canonical\" href={`${homepageUrl}${buildPathWithFramework(slug, framework)}/`} />\n<meta name=\"docsearch:framework\" content={framework} />\n<link\nrel=\"stylesheet\"\n",
        "date": "25.03.2021 15:04:28",
        "repo": "storybookjs/frontpage",
        "type": "use",
        "chatgpt_zeroshot": "Fix dynamic framework in canonical link in DocsLayout"
    },
    {
        "msg": "use pseudo element dropshadow to fix hero animation on ios 16",
        "diff": "diff --git a/src/components/screens/IndexScreen/StorybookDemo/HeroDemo.tsx b/src/components/screens/IndexScreen/StorybookDemo/HeroDemo.tsx @@ -29,10 +29,19 @@ const Wrapper = styled(motion.div)`\nwidth: 100%;\nheight: 0;\npadding-bottom: 69.10907577%;\n- overflow: hidden;\n- filter: drop-shadow(0px 1px 3px rgba(0, 0, 0, 0.1)) drop-shadow(0px 10px 20px rgba(0, 0, 0, 0.1))\n- drop-shadow(0px 20px 40px rgba(0, 0, 0, 0.05)) drop-shadow(0px 40px 30px rgba(0, 0, 0, 0.05));\n+ &:after {\n+ content: '';\n+ position: absolute;\n+ top: 0;\n+ right: 0;\n+ left: 0;\n+ bottom: 0;\n+ border-radius: 8px;\n+\n+ box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.1), 0px 10px 20px 0px rgba(0, 0, 0, 0.1),\n+ 0px 20px 40px 0px rgba(0, 0, 0, 0.05), 0px 40px 30px 0px rgba(0, 0, 0, 0.05);\n+ }\n@media (min-width: ${breakpoints[1]}px) {\nmargin-top: -12.625rem;\n",
        "date": "16.09.2022 15:52:28",
        "repo": "storybookjs/frontpage",
        "type": "use",
        "chatgpt_zeroshot": "Refactor HeroDemo component styling to use box-shadow property instead of filter property"
    },
    {
        "msg": "use the coinbase amount field in apply_coinbase",
        "diff": "diff --git a/src/lib/coda_base/sparse_ledger.ml b/src/lib/coda_base/sparse_ledger.ml @@ -119,7 +119,8 @@ let apply_fee_transfer_exn =\nfun t transfer ->\nList.fold (Fee_transfer.to_list transfer) ~f:apply_single ~init:t\n-let apply_coinbase_exn t ({proposer; fee_transfer} : Coinbase.t) =\n+let apply_coinbase_exn t\n+ ({proposer; fee_transfer; amount= coinbase_amount} : Coinbase.t) =\nlet open Currency in\nlet add_to_balance t pk amount =\nlet idx = find_index_exn t pk in\n@@ -129,13 +130,10 @@ let apply_coinbase_exn t ({proposer; fee_transfer} : Coinbase.t) =\nin\nlet proposer_reward, t =\nmatch fee_transfer with\n- | None -> (Protocols.Coda_praos.coinbase_amount, t)\n+ | None -> (coinbase_amount, t)\n| Some (receiver, fee) ->\nlet fee = Amount.of_fee fee in\n- let reward =\n- Amount.sub Protocols.Coda_praos.coinbase_amount fee\n- |> Option.value_exn\n- in\n+ let reward = Amount.sub coinbase_amount fee |> Option.value_exn in\n(reward, add_to_balance t receiver fee)\nin\nadd_to_balance t proposer proposer_reward\n",
        "date": "29.11.2018 15:31:21",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Refactor apply_coinbase_exn to include coinbase amount in Coinbase.t"
    },
    {
        "msg": "use a common log file for stdout and stderr",
        "diff": "diff --git a/src/app/cli/src/coda.ml b/src/app/cli/src/coda.ml @@ -110,8 +110,8 @@ let daemon log =\nCore.printf \"Starting background coda daemon. (Log Dir: %s)\\n%!\"\nconf_dir ;\nDaemon.daemonize\n- ~redirect_stdout:(`File_append (conf_dir ^/ \"coda.stdout\"))\n- ~redirect_stderr:(`File_append (conf_dir ^/ \"coda.stderr\"))\n+ ~redirect_stdout:(`File_append (conf_dir ^/ \"coda.log\"))\n+ ~redirect_stderr:(`File_append (conf_dir ^/ \"coda.log\"))\n() ;\nDeferred.return conf_dir )\nelse Sys.home_directory () >>| compute_conf_dir\n",
        "date": "18.12.2018 14:14:14",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Update log file names in daemonize function to use a single log file for both stdout and stderr."
    },
    {
        "msg": "use our logger to report long async cycles otherwise async_unix will print to stderr, which we don't want",
        "diff": "diff --git a/src/app/cli/src/coda.ml b/src/app/cli/src/coda.ml @@ -284,7 +284,12 @@ let daemon log =\nin\nlet module M = Coda_main.Make_coda (Init) in\nlet module Run = Run (Config0) (M) in\n- Async.Scheduler.report_long_cycle_times ~cutoff:(sec 0.5) () ;\n+ Stream.iter\n+ (Async.Scheduler.long_cycles\n+ ~at_least:(sec 0.5 |> Time_ns.Span.of_span))\n+ ~f:(fun span ->\n+ Logger.warn log \"long async cycle %s\" (Time_ns.Span.to_string span)\n+ ) ;\nlet%bind () =\nlet open M in\nlet run_snark_worker_action =\n",
        "date": "07.01.2019 11:55:38",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Refactor long async cycle reporting in daemon code"
    },
    {
        "msg": "use more tokens in demo",
        "diff": "diff --git a/dockerfiles/Dockerfile-coda-demo b/dockerfiles/Dockerfile-coda-demo @@ -35,7 +35,7 @@ RUN echo \"deb [trusted=yes] http://packages.o1test.net $deb_repo main\" > /etc/ap\n&& echo '4vsRCVMNTrCx4NpN6kKTkFKLcFN4vXUP5RB9PqSZe1qsyDs4AW5XeNgAf16WUPRBCakaPiXcxjp6JUpGNQ6fdU977x5LntvxrSg11xrmK6ZDaGSMEGj12dkeEpyKcEpkzcKwYWZ2Yf2vpwQP' > ~/.coda-config/wallets/store/4vsRCVMNTrCx4NpN6kKTkFKLcFN4vXUP5RB9PqSZe1qsyDs4AW5XeNgAf16WUPRBCakaPiXcxjp6JUpGNQ6fdU977x5LntvxrSg11xrmK6ZDaGSMEGj12dkeEpyKcEpkzcKwYWZ2Yf2vpwQP.pub \\\n&& cp /root/keys/demo-block-producer ~/.coda-config/wallets/store/4vsRCVMNTrCx4NpN6kKTkFKLcFN4vXUP5RB9PqSZe1qsyDs4AW5XeNgAf16WUPRBCakaPiXcxjp6JUpGNQ6fdU977x5LntvxrSg11xrmK6ZDaGSMEGj12dkeEpyKcEpkzcKwYWZ2Yf2vpwQP \\\n&& rm /var/lib/coda/coda_genesis_* \\\n- && echo '[{\"pk\":\"4vsRCVMNTrCx4NpN6kKTkFKLcFN4vXUP5RB9PqSZe1qsyDs4AW5XeNgAf16WUPRBCakaPiXcxjp6JUpGNQ6fdU977x5LntvxrSg11xrmK6ZDaGSMEGj12dkeEpyKcEpkzcKwYWZ2Yf2vpwQP\",\"balance\":\"0.000100000\",\"sk\":null,\"delegate\":null}]' > /genesis-accounts.json \\\n+ && echo '[{\"pk\":\"4vsRCVMNTrCx4NpN6kKTkFKLcFN4vXUP5RB9PqSZe1qsyDs4AW5XeNgAf16WUPRBCakaPiXcxjp6JUpGNQ6fdU977x5LntvxrSg11xrmK6ZDaGSMEGj12dkeEpyKcEpkzcKwYWZ2Yf2vpwQP\",\"balance\":\"66000\",\"sk\":null,\"delegate\":null}]' > /genesis-accounts.json \\\n&& coda-create-genesis -genesis-dir /var/lib/coda -account-file /genesis-accounts.json\n",
        "date": "17.04.2020 23:53:26",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Update genesis account balance to 66000"
    },
    {
        "msg": "use SelectFiles.contains as a hack to specify absolute paths",
        "diff": "diff --git a/buildkite/src/Jobs/ArchiveNode.dhall b/buildkite/src/Jobs/ArchiveNode.dhall @@ -45,7 +45,7 @@ Pipeline.build\n, key = \"build-client-sdk\"\n, target = Size.Large\n, docker = None Docker.Type\n- , artifact_paths = [ S.strictlyStart \"/var/buildkite/test_output\" ]\n+ , artifact_paths = [ S.contains \"/var/buildkite/test_output\" ]\n}\n]\n}\n\\ No newline at end of file\n",
        "date": "15.07.2020 14:22:09",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Refactor artifact_paths in ArchiveNode.dhall to use S.contains instead of S.strictlyStart"
    },
    {
        "msg": "use new keys in docker-test entrypoint",
        "diff": "diff --git a/src/app/rosetta/docker-test-start.sh b/src/app/rosetta/docker-test-start.sh @@ -37,13 +37,13 @@ sleep 3\nsleep 3\n# Setup and run demo-node\n-PK=ZsMSUuKL9zLAF7sMn951oakTFRCCDw9rDfJgqJ55VMtPXaPa5vPwntQRFJzsHyeh8R8\n+PK=B62qrPN5Y5yq8kGE3FbVKbGTdTAJNdtNtB5sNVpxyRwWGcDEhpMzc8g\ngenesis_time=$(date -d '2019-01-30 20:00:00.000000Z' '+%s')\nnow_time=$(date +%s)\nexport CODA_TIME_OFFSET=$(( $now_time - $genesis_time ))\nexport CODA_PRIVKEY_PASS=\"\"\nexport CODA_CONFIG_FILE=/root/.coda-config/config.json\n-echo '{\"box_primitive\":\"xsalsa20poly1305\",\"pw_primitive\":\"argon2i\",\"nonce\":\"7UMMcQYuXzDWx3zv4HyCxkk9JvUyiWrP6Rje12a\",\"pwsalt\":\"Ac6n4NVqq2BvnqbmGfYzrZSSRFMe\",\"pwdiff\":[134217728,6],\"ciphertext\":\"mzkgEY94mo27CycKXyMhJqAZTRniUiEAWEbj2PA1zDe5hmJqHic4zwdg5tavr9Mcdt6qisT64QMQux8P7ASG8\"}' > /root/.coda-config/demo-block-producer-key\n+echo '{\"box_primitive\":\"xsalsa20poly1305\",\"pw_primitive\":\"argon2i\",\"nonce\":\"8jGuTAxw3zxtWasVqcD1H6rEojHLS1yJmG3aHHd\",\"pwsalt\":\"AiUCrMJ6243h3TBmZ2rqt3Voim1Y\",\"pwdiff\":[134217728,6],\"ciphertext\":\"DbAy736GqEKWe9NQWT4yaejiZUo9dJ6rsK7cpS43APuEf5AH1Qw6xb1s35z8D2akyLJBrUr6m\"}' > /root/.coda-config/demo-block-producer-key\n/coda-bin/cli/src/coda.exe daemon \\\n-seed \\\n",
        "date": "05.08.2020 17:31:21",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Update demo-node private key in docker-test-start.sh"
    },
    {
        "msg": "use a file rather than env var",
        "diff": "diff --git a/src/lib/snark_worker/functor.ml b/src/lib/snark_worker/functor.ml @@ -158,12 +158,19 @@ module Make (Inputs : Intf.Inputs_intf) :\nk ()\nin\nlet rec go () =\n- let daemon_address =\n- match Sys.getenv \"SNARK_COORDINATOR\" with\n- | None ->\n- daemon_address\n- | Some s -> (\n- try Host_and_port.of_string s with _ -> daemon_address )\n+ let%bind daemon_address =\n+ let%bind cwd = Sys.getcwd () in\n+ [%log debug]\n+ !\"Snark worker working directory $dir\"\n+ ~metadata:[(\"dir\", `String cwd)] ;\n+ let path = \"snark_coordinator\" in\n+ match%bind Sys.file_exists path with\n+ | `Yes -> (\n+ let%map s = Reader.file_contents path in\n+ try Host_and_port.of_string (String.strip s)\n+ with _ -> daemon_address )\n+ | `No | `Unknown ->\n+ return daemon_address\nin\nmatch%bind\ndispatch Rpcs_versioned.Get_work.Latest.rpc shutdown_on_disconnect ()\n",
        "date": "18.09.2020 08:32:16",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Refactor daemon_address retrieval in snark_worker functor"
    },
    {
        "msg": "use new sponge in random oracle",
        "diff": "diff --git a/src/lib/random_oracle/random_oracle.ml b/src/lib/random_oracle/random_oracle.ml @@ -25,34 +25,21 @@ module Input = Random_oracle_input\nlet params : Field.t Sponge.Params.t =\nSponge.Params.(map tweedle_q ~f:Field.of_string)\n-(* TODO: Unify with Bn382_inputs in the sponge lib *)\n-module Inputs = struct\n- module Field = Field\n-\n- let rounds_full = 8\n-\n- let rounds_partial = 30\n-\n[%%ifdef\nconsensus_mechanism]\n- (* Computes x^17 *)\n- let to_the_alpha x =\n- let open Field in\n- let res = square x in\n- let open Pickles.Backend.Tick.Field in\n- Mutable.square res ;\n- (* x^4 *)\n- Mutable.square res ;\n- (* x^8 *)\n- Mutable.square res ;\n- (* x^16 *)\n- res *= x ;\n- res\n+module Inputs = Pickles.Tick_field_sponge.Inputs\n[%%else]\n- (* Computes x^17 *)\n+module Inputs = struct\n+ module Field = Field\n+\n+ let rounds_full = 63\n+\n+ let rounds_partial = 0\n+\n+ (* Computes x^5 *)\nlet to_the_alpha x =\nlet open Field in\nlet res = x in\n@@ -60,47 +47,24 @@ module Inputs = struct\n(* x^2 *)\nlet res = res * res in\n(* x^4 *)\n- let res = res * res in\n- (* x^8 *)\n- let res = res * res in\n- (* x^16 *)\nres * x\n- [%%endif]\n-\nmodule Operations = struct\n- [%%ifdef\n- consensus_mechanism]\n-\n- let add_assign ~state i x = Field.(state.(i) += x)\n-\n- let apply_affine_map (_rows, c) v =\n- let open Field in\n- let res = [|v.(0) + v.(2); v.(0) + v.(1); v.(1) + v.(2)|] in\n- Array.iteri res ~f:(fun i ri -> ri += c.(i)) ;\n- res\n-\n- (* TODO: Have an explicit function for making a copy of a field element. *)\n- let copy a = Array.map a ~f:(fun x -> Field.(x + zero))\n-\n- [%%else]\n-\nlet add_assign ~state i x = Field.(state.(i) <- state.(i) + x)\n- (* TODO: Clean this up to use the near mds matrix properly *)\n- let apply_affine_map (_matrix, constants) v =\n- let open Field in\n- let near_mds_matrix_v =\n- [|v.(0) + v.(2); v.(0) + v.(1); v.(1) + v.(2)|]\n+ let apply_affine_map (matrix, constants) v =\n+ let dotv row =\n+ Array.reduce_exn (Array.map2_exn row v ~f:Field.( * )) ~f:Field.( + )\nin\n- Array.mapi near_mds_matrix_v ~f:(fun i x -> constants.(i) + x)\n+ let res = Array.map matrix ~f:dotv in\n+ Array.map2_exn res constants ~f:Field.( + )\nlet copy a = Array.map a ~f:Fn.id\n-\n- [%%endif]\nend\nend\n+[%%endif]\n+\nmodule Digest = struct\nopen Field\n@@ -124,7 +88,7 @@ let hash ?init = hash ?init params\nconsensus_mechanism]\nmodule Checked = struct\n- module Inputs = Pickles.Sponge_inputs.Make (Pickles.Impls.Step)\n+ module Inputs = Pickles.Step_main_inputs.Sponge.Permutation\nmodule Digest = struct\nopen Pickles.Impls.Step.Field\n@@ -135,7 +99,7 @@ module Checked = struct\nList.take (choose_preimage_var ~length:Field.size_in_bits x) length\nend\n- include Sponge.Make_hash (Sponge.Poseidon (Inputs))\n+ include Sponge.Make_hash (Inputs)\nlet params = Sponge.Params.map ~f:Inputs.Field.constant params\n",
        "date": "16.10.2020 12:00:36",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Refactor random oracle module to unify with Bn382_inputs in the sponge lib"
    },
    {
        "msg": "use unversioned module Poly",
        "diff": "diff --git a/src/app/archive/archive_lib/processor.ml b/src/app/archive/archive_lib/processor.ml @@ -131,8 +131,7 @@ module Epoch_data = struct\nin\nlet%bind ledger_hash_id = Snarked_ledger_hash.find (module Conn) hash in\nlet seed =\n- Coda_base.Epoch_data.Poly.Stable.V1.seed t\n- |> Snark_params.Tick.Field.to_string\n+ Coda_base.Epoch_data.Poly.seed t |> Snark_params.Tick.Field.to_string\nin\nmatch%bind\nConn.find_opt\n",
        "date": "06.11.2020 11:54:45",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Refactor seed generation in Epoch_data module"
    },
    {
        "msg": "use the correct constructor name for Transaction_capacity.Log_2",
        "diff": "diff --git a/src/lib/snark_keys_header/snark_keys_header.ml b/src/lib/snark_keys_header/snark_keys_header.ml @@ -31,7 +31,7 @@ module Constraint_constants = struct\nlet to_yojson t : Yojson.Safe.t =\nmatch t with\n- | Log2 i ->\n+ | Log_2 i ->\n`Assoc [(\"two_to_the\", `Int i)]\n| Txns_per_second_x10 i ->\n`Assoc [(\"txns_per_second_x10\", `Int i)]\n@@ -39,7 +39,7 @@ module Constraint_constants = struct\nlet of_yojson (json : Yojson.Safe.t) =\nmatch json with\n| `Assoc [(\"two_to_the\", `Int i)] ->\n- Ok (Log2 i)\n+ Ok (Log_2 i)\n| `Assoc [(\"txns_per_second_x10\", `Int i)] ->\nOk (Txns_per_second_x10 i)\n| `Assoc _ ->\n@@ -55,7 +55,7 @@ module Constraint_constants = struct\nmodule Fork_config = struct\n(** Fork data *)\n- type t = Runtime_config.t =\n+ type t = Runtime_config.Fork_config.t =\n{previous_state_hash: string; previous_length: int}\n[@@deriving yojson]\n",
        "date": "11.11.2020 17:49:21",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Refactor snark_keys_header.ml to use Log_2 instead of Log2 and update type definition in Fork_config"
    },
    {
        "msg": "use deferred.or_error.try_with",
        "diff": "diff --git a/src/lib/transition_handler/breadcrumb_builder.ml b/src/lib/transition_handler/breadcrumb_builder.ml @@ -92,14 +92,18 @@ let build_subtrees_of_breadcrumbs ~logger ~precomputed_values ~verifier\nto current external transition's parent hash\"))\nin\nlet open Deferred.Let_syntax in\n- try\nmatch%bind\nO1trace.trace_recurring \"Breadcrumb.build\" (fun () ->\n+ Deferred.Or_error.try_with (fun () ->\nTransition_frontier.Breadcrumb.build ~logger\n~precomputed_values ~verifier ~trust_system ~parent\n~transition:mostly_validated_transition\n- ~sender:(Some sender) () )\n+ ~sender:(Some sender) () ) )\nwith\n+ | Error _ ->\n+ Deferred.return @@ Or_error.error_string missing_parent_msg\n+ | Ok result -> (\n+ match result with\n| Ok new_breadcrumb ->\nlet open Result.Let_syntax in\nCoda_metrics.(\n@@ -150,10 +154,7 @@ let build_subtrees_of_breadcrumbs ~logger ~precomputed_values ~verifier\ntrust_system_record_invalid\n\"invalid staged ledger diff\" error\n| `Fatal_error exn ->\n- Deferred.return (Or_error.of_exn exn) )\n- with\n- | Coda_base.Ledger.Mask.Attached.Dangling_parent_reference _ ->\n- Deferred.return (Or_error.error_string missing_parent_msg) )\n+ Deferred.return (Or_error.of_exn exn) ) ) )\n|> Cached.sequence_deferred\nin\nCached.sequence_result cached_result ) )\n",
        "date": "18.11.2020 14:58:02",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Fix error handling in build_subtrees_of_breadcrumbs function"
    },
    {
        "msg": "use a for loop and break instead of manual unrolling",
        "diff": "diff --git a/buildkite/scripts/connect-to-testnet-on-develop.sh b/buildkite/scripts/connect-to-testnet-on-develop.sh @@ -53,30 +53,13 @@ coda daemon \\\n& # -background\n# Attempt to connect to the GraphQL client every 10s for up to 4 minutes\n-(sleep 10s; coda client status \\\n-|| (sleep 10s; coda client status \\\n-|| (sleep 10s; coda client status \\\n-|| (sleep 10s; coda client status \\\n-|| (sleep 10s; coda client status \\\n-|| (sleep 10s; coda client status \\\n-|| (sleep 10s; coda client status \\\n-|| (sleep 10s; coda client status \\\n-|| (sleep 10s; coda client status \\\n-|| (sleep 10s; coda client status \\\n-|| (sleep 10s; coda client status \\\n-|| (sleep 10s; coda client status \\\n-|| (sleep 10s; coda client status \\\n-|| (sleep 10s; coda client status \\\n-|| (sleep 10s; coda client status \\\n-|| (sleep 10s; coda client status \\\n-|| (sleep 10s; coda client status \\\n-|| (sleep 10s; coda client status \\\n-|| (sleep 10s; coda client status \\\n-|| (sleep 10s; coda client status \\\n-|| (sleep 10s; coda client status \\\n-|| (sleep 10s; coda client status \\\n-|| (sleep 10s; coda client status \\\n-|| (sleep 10s; coda client status))))))))))))))))))))))))\n+for i in {1..24}; do\n+ sleep 10s\n+ status_exit_code=$(coda client status; echo $?)\n+ if [ $status_exit_code -eq 0 ]; then\n+ break\n+ fi\n+done\n# Check that the daemon has connected to peers and is still up after 2 mins\nsleep 2m\n",
        "date": "24.11.2020 17:40:29",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Refactor connection retry logic in testnet script"
    },
    {
        "msg": "use a bash for loop in connect-to-testnet script",
        "diff": "diff --git a/buildkite/scripts/connect-to-testnet-on-develop.sh b/buildkite/scripts/connect-to-testnet-on-develop.sh @@ -54,7 +54,7 @@ coda daemon \\\n# Attempt to connect to the GraphQL client every 10s for up to 4 minutes\nnum_status_retries=24\n-for i in {1..$num_status_retries}; do\n+for ((i=1;i<=$num_status_retries;i++)); do\nsleep 10s\nstatus_exit_code=$(coda client status; echo $?)\nif [ $status_exit_code -eq 0 ]; then\n",
        "date": "30.11.2020 16:07:31",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Refactor loop in connect-to-testnet-on-develop.sh to fix syntax error"
    },
    {
        "msg": "use the catchup tree appropriately in ledger catchup",
        "diff": "diff --git a/src/lib/ledger_catchup/ledger_catchup.ml b/src/lib/ledger_catchup/ledger_catchup.ml @@ -187,12 +187,13 @@ let rec fold_until ~(init : 'accum)\n(* returns a list of state-hashes with the older ones at the front *)\nlet download_state_hashes ~logger ~trust_system ~network ~frontier ~peers\n- ~target_hash =\n+ ~target_hash ~job =\n[%log debug]\n~metadata:[(\"target_hash\", State_hash.to_yojson target_hash)]\n\"Doing a catchup job with target $target_hash\" ;\n- Deferred.Or_error.find_map_ok peers ~f:(fun peer ->\n+ let hash_tree = Transition_frontier.catchup_hash_tree frontier in\nlet open Deferred.Or_error.Let_syntax in\n+ Deferred.Or_error.find_map_ok peers ~f:(fun peer ->\nlet%bind transition_chain_proof =\nCoda_networking.get_transition_chain_proof network peer target_hash\nin\n@@ -222,9 +223,12 @@ let download_state_hashes ~logger ~trust_system ~network ~frontier ~peers\n(Non_empty_list.to_list hashes)\n~init:[]\n~f:(fun acc hash ->\n- if Transition_frontier.find frontier hash |> Option.is_some then\n- Continue_or_stop.Stop (Ok (peer, acc))\n- else Continue_or_stop.Continue (hash :: acc) )\n+ match Transition_frontier.find frontier hash with\n+ | Some final ->\n+ Continue_or_stop.Stop\n+ (Ok (peer, Frontier_base.Breadcrumb.state_hash final, acc))\n+ | None ->\n+ Continue_or_stop.Continue (hash :: acc) )\n~finish:(fun acc ->\nlet module T = struct\ntype t = State_hash.t list [@@deriving to_yojson]\n@@ -243,6 +247,13 @@ let download_state_hashes ~logger ~trust_system ~network ~frontier ~peers\nOr_error.errorf\n!\"Peer %{sexp:Network_peer.Peer.t} moves too fast\"\npeer ) )\n+ >>| fun (peer, final, hashes) ->\n+ let (_ : State_hash.t) =\n+ List.fold hashes ~init:final ~f:(fun parent h ->\n+ Transition_frontier.Catchup_hash_tree.add hash_tree h ~parent ~job ;\n+ h )\n+ in\n+ (peer, hashes)\nlet verify_against_hashes transitions hashes =\nList.length transitions = List.length hashes\n@@ -523,6 +534,9 @@ let run ~logger ~precomputed_values ~trust_system ~verifier ~network ~frontier\ndon't_wait_for\n(Strict_pipe.Reader.iter_without_pushback catchup_job_reader\n~f:(fun (target_hash, subtrees) ->\n+ let job =\n+ Transition_frontier.Catchup_hash_tree.Catchup_job_id.create ()\n+ in\ndon't_wait_for\n(let start_time = Core.Time.now () in\n[%log info] \"Catch up to $target_hash\"\n@@ -550,7 +564,7 @@ let run ~logger ~precomputed_values ~trust_system ~verifier ~network ~frontier\nlet open Deferred.Let_syntax in\nmatch%bind\ndownload_state_hashes ~logger ~trust_system ~network\n- ~frontier ~peers:subtree_peers ~target_hash\n+ ~frontier ~peers:subtree_peers ~target_hash ~job\nwith\n| Ok (peer, hashes) ->\nreturn (Ok (peer, hashes))\n@@ -564,7 +578,7 @@ let run ~logger ~precomputed_values ~trust_system ~verifier ~network ~frontier\nin\nmatch%bind\ndownload_state_hashes ~logger ~trust_system ~network\n- ~frontier ~peers:random_peers ~target_hash\n+ ~frontier ~peers:random_peers ~target_hash ~job\nwith\n| Ok (peer, hashes) ->\nreturn (Ok (peer, hashes))\n@@ -638,6 +652,10 @@ let run ~logger ~precomputed_values ~trust_system ~verifier ~network ~frontier\n\"Catchup process failed -- unable to receive valid data \\\nfrom peers or transition frontier progressed faster than \\\ncatchup data received. See error for details: $error\" ;\n+ Transition_frontier.(\n+ Catchup_hash_tree.catchup_failed\n+ (catchup_hash_tree frontier)\n+ job) ;\ngarbage_collect_subtrees ~logger ~subtrees ;\nCoda_metrics.(\nGauge.set Transition_frontier_controller.catchup_time_ms\n",
        "date": "08.12.2020 19:16:42",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Add catchup job ID to track progress and handle catchup failures"
    },
    {
        "msg": "use a single hash in genesis ledger filenames for accounts",
        "diff": "diff --git a/src/lib/genesis_ledger_helper/genesis_ledger_helper.ml b/src/lib/genesis_ledger_helper/genesis_ledger_helper.ml @@ -433,7 +433,7 @@ module Ledger = struct\nlet named_filename\n~(constraint_constants : Genesis_constants.Constraint_constants.t)\n- ~num_accounts ~balances ~ledger_name_prefix name =\n+ ~num_accounts ~balances ~ledger_name_prefix ?other_data name =\nlet str =\nString.concat\n[ Int.to_string constraint_constants.ledger_depth\n@@ -447,16 +447,16 @@ module Ledger = struct\nMina_base.Account.Stable.Latest.bin_writer_t\nMina_base.Account.empty ]\nin\n+ let str =\n+ match other_data with None -> str | Some other_data -> str ^ other_data\n+ in\nledger_name_prefix ^ \"_\" ^ name ^ \"_\"\n^ Blake2.(to_hex (digest_string str))\n^ \".tar.gz\"\n- let accounts_name accounts =\n- let hash =\n+ let accounts_hash accounts =\nRuntime_config.Accounts.to_yojson accounts\n- |> Yojson.Safe.to_string |> Blake2.digest_string\n- in\n- \"accounts_\" ^ Blake2.to_hex hash\n+ |> Yojson.Safe.to_string |> Blake2.digest_string |> Blake2.to_hex\nlet find_tar ~logger ~genesis_dir ~constraint_constants ~ledger_name_prefix\n(config : Runtime_config.Ledger.t) =\n@@ -500,10 +500,10 @@ module Ledger = struct\n| None ->\nreturn None\nin\n- let search_local_and_s3 name =\n+ let search_local_and_s3 ?other_data name =\nlet named_filename =\nnamed_filename ~constraint_constants ~num_accounts:config.num_accounts\n- ~balances:config.balances ~ledger_name_prefix name\n+ ~balances:config.balances ~ledger_name_prefix ?other_data name\nin\nmatch%bind\nDeferred.List.find_map ~f:(file_exists named_filename) search_paths\n@@ -526,7 +526,7 @@ module Ledger = struct\nin\nDeferred.List.find_map ~f:(file_exists named_filename) search_paths\n| Accounts accounts, _ ->\n- search_local_and_s3 (accounts_name accounts)\n+ search_local_and_s3 ~other_data:(accounts_hash accounts) \"accounts\"\n| Hash hash, None ->\nassert (Some hash = config.hash) ;\nreturn None\n@@ -732,16 +732,16 @@ module Ledger = struct\nhash= Some (State_hash.to_string @@ Ledger.merkle_root ledger)\n}\nin\n- let name =\n+ let name, other_data =\nmatch (config.base, config.name) with\n| Named name, _ ->\n- Some name\n+ (Some name, None)\n| Accounts accounts, _ ->\n- Some (accounts_name accounts)\n+ (Some \"accounts\", Some (accounts_hash accounts))\n| Hash _, None ->\n- None\n+ (None, None)\n| _, Some name ->\n- Some name\n+ (Some name, None)\nin\nmatch (tar_path, name) with\n| Ok tar_path, Some name ->\n@@ -749,7 +749,8 @@ module Ledger = struct\ngenesis_dir\n^/ named_filename ~constraint_constants\n~num_accounts:config.num_accounts\n- ~balances:config.balances ~ledger_name_prefix name\n+ ~balances:config.balances ~ledger_name_prefix\n+ ?other_data name\nin\n(* Delete the file if it already exists. *)\nlet%bind () =\n",
        "date": "23.12.2020 02:27:30",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Refactor ledger helper to support additional data in named filenames"
    },
    {
        "msg": "use new pinned rust coda-toolchain",
        "diff": "diff --git a/buildkite/src/Constants/ContainerImages.dhall b/buildkite/src/Constants/ContainerImages.dhall {\ntoolchainBase = \"codaprotocol/ci-toolchain-base:v3\",\n- codaToolchain = \"codaprotocol/mina-toolchain@sha256:de14b58c6e2c69466210f20a116e2f7b8d32763e945a751dd05770582edeef95\",\n+ codaToolchain = \"codaprotocol/mina-toolchain@sha256:d4ad6dec3a846e425f97de55a697de9d65327e76782337fcdcfb373f95d21dd4\",\nelixirToolchain = \"elixir:1.10-alpine\",\nrustToolchain = \"codaprotocol/coda:toolchain-rust-e855336d087a679f76f2dd2bbdc3fdfea9303be3\",\nnodeToolchain = \"node:14.13.1-stretch-slim\",\n",
        "date": "13.01.2021 17:15:18",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Update codaToolchain image sha256 hash in ContainerImages.dhall"
    },
    {
        "msg": "use the soft errors",
        "diff": "diff --git a/src/app/test_executive/common_prefix.ml b/src/app/test_executive/common_prefix.ml @@ -37,10 +37,12 @@ module Make (Inputs : Intf.Test.Inputs_intf) = struct\nin\nlet length = Hash_set.length common_prefixes in\nif length = 0 then\n- Malleable_error.of_string_hard_error_format\n- \"Chains don't have any common prefixes among their most recent %d \\\n- blocks\"\n- n\n+ Malleable_error.soft_error ()\n+ (Error.of_string\n+ (sprintf\n+ \"Chains don't have any common prefixes among their most recent \\\n+ %d blocks\"\n+ n))\nelse if length < n then\nMalleable_error.soft_error ()\n(Error.of_string\n",
        "date": "30.03.2021 13:41:57",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Refactor error handling in common_prefix.ml"
    },
    {
        "msg": "use a map for ppx_register_event parser",
        "diff": "diff --git a/src/lib/ppx_register_event/register_event.ml b/src/lib/ppx_register_event/register_event.ml @@ -115,7 +115,6 @@ let generate_loggers_and_parsers ~loc:_ ~path ty_ext msg_opt =\n@@ Conv_to_ppx_deriving.copy_core_type x\nin\nlet elist ~f l = elist (List.map ~f l) in\n- let plist ~f l = plist (List.map ~f l) in\nlet record_pattern =\nlet open Ast_helper.Pat in\nlet arg =\n@@ -174,33 +173,35 @@ let generate_loggers_and_parsers ~loc:_ ~path ty_ext msg_opt =\n; parse=\n(fun args ->\nlet result =\n- match args with\n- | [%p\n- plist label_names ~f:(fun label ->\n- [%pat? [%p pstring label], [%p pvar label]] )] ->\n+ let args_list = Core_kernel.String.Map.of_alist_exn args in\n+ (* We use this to avoid an unused value warning. *)\n+ ignore args_list ;\n[%e\nList.fold_right label_decls\n- ~f:\n- (fun {pld_name= {txt= name; _}; pld_type; _} acc ->\n+ ~f:(fun {pld_name= {txt= name; _}; pld_type; _} acc ->\nConv_from_ppx_deriving.copy_expression\n@@ Ppx_deriving_yojson.wrap_runtime\n@@ Conv_to_ppx_deriving.copy_expression\n@@ [%expr\n+ match\n+ Core_kernel.Map.find args_list [%e estring name]\n+ with\n+ | Some [%p pvar name] ->\nCore_kernel.Result.bind\n([%e\nof_yojson\n~path:(split_path @ [ctor; name])\npld_type]\n[%e evar name])\n- ~f:(fun [%p pvar name] -> [%e acc])] )\n- ~init:\n- [%expr Core_kernel.Result.return [%e record_expr]]]\n- | _ ->\n- failwith\n+ ~f:(fun [%p pvar name] -> [%e acc])\n+ | None ->\n+ Core_kernel.Result.fail\n[%e\nestring\n- (sprintf \"%s, parse: unexpected arguments\"\n- event_path)]\n+ (sprintf\n+ \"%s, parse: missing argument %s\"\n+ event_path name)]] )\n+ ~init:[%expr Core_kernel.Result.return [%e record_expr]]]\nin\nmatch result with Ok ev -> Some ev | Error _ -> None ) }]\n; [%stri\n",
        "date": "13.04.2021 22:12:47",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Refactor generate_loggers_and_parsers function in register_event.ml"
    },
    {
        "msg": "use a fold instead of mutability to find the best vrf evaluation",
        "diff": "diff --git a/src/lib/consensus/proof_of_stake.ml b/src/lib/consensus/proof_of_stake.ml @@ -736,11 +736,10 @@ module Data = struct\nlet open Message in\nlet open Local_state in\nlet open Snapshot in\n- let best_vrf = ref None in\n- Hashtbl.iteri\n+ Hashtbl.fold ~init:None\n( Snapshot.delegators epoch_snapshot public_key_compressed\n|> Option.value ~default:(Core_kernel.Int.Table.create ()) )\n- ~f:(fun ~key:delegator ~data:account ->\n+ ~f:(fun ~key:delegator ~data:account best_vrf ->\nlet vrf_result =\nT.eval ~constraint_constants ~private_key\n{global_slot; seed; delegator}\n@@ -770,8 +769,7 @@ module Data = struct\nBlake2.(Fn.compose to_raw_string digest_string)\nin\nlet vrf_eval = string_of_blake2 truncated_vrf_result in\n- let replace_prev_best_vrf () =\n- best_vrf :=\n+ let this_vrf () =\nSome\n( vrf_eval\n, ( { Block_data.stake_proof=\n@@ -781,8 +779,7 @@ module Data = struct\n; delegator_pk= account.public_key\n; coinbase_receiver_pk= coinbase_receiver\n; ledger=\n- Local_state.Snapshot.Ledger_snapshot\n- .ledger_subset\n+ Local_state.Snapshot.Ledger_snapshot.ledger_subset\n[ Mina_base.(\nAccount_id.create\n(Public_key.compress public_key)\n@@ -796,13 +793,15 @@ module Data = struct\n; vrf_result }\n, account.public_key ) )\nin\n- match !best_vrf with\n+ match best_vrf with\n| Some (prev_best_vrf_eval, _) ->\nif String.compare prev_best_vrf_eval vrf_eval < 0 then\n- replace_prev_best_vrf ()\n+ this_vrf ()\n+ else best_vrf\n| None ->\n- replace_prev_best_vrf () ) ;\n- Option.map ~f:snd !best_vrf\n+ this_vrf ()\n+ else best_vrf )\n+ |> Option.map ~f:snd\nend\nmodule Optional_state_hash = struct\n",
        "date": "24.05.2021 20:40:41",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Refactor proof of stake module to use fold instead of iteri and improve handling of best VRF value."
    },
    {
        "msg": "use new enum instead of old one for unit test",
        "diff": "diff --git a/src/app/libp2p_helper/src/libp2p_helper/main_test.go b/src/app/libp2p_helper/src/libp2p_helper/main_test.go @@ -15,6 +15,7 @@ import (\n\"time\"\n\"codanet\"\n+\nlogging \"github.com/ipfs/go-log\"\n\"github.com/prometheus/client_golang/prometheus/promhttp\"\n@@ -24,8 +25,8 @@ import (\npeer \"github.com/libp2p/go-libp2p-core/peer\"\npeerstore \"github.com/libp2p/go-libp2p-core/peerstore\"\nprotocol \"github.com/libp2p/go-libp2p-core/protocol\"\n+ pubsub \"github.com/libp2p/go-libp2p-pubsub\"\n- \"github.com/libp2p/go-libp2p-pubsub\"\nma \"github.com/multiformats/go-multiaddr\"\n\"github.com/stretchr/testify/require\"\n@@ -999,7 +1000,7 @@ func TestMplex_SendLargeMessage(t *testing.T) {\nmsg := createMessage(msgSize)\ntestDirectionalStream(t, appA, appB, func(stream net.Stream) {\n- appB.StreamStates[0] = STREAM_QUERY_HANDLED\n+ appB.StreamStates[0] = STREAM_DATA_EXPECTED\nsendStreamMessage(t, stream, msg)\nrequire.Equal(t, msg, waitForMessage(t, appB, msgSize))\n})\n@@ -1024,13 +1025,13 @@ func TestMplex_SendMultipleMessage(t *testing.T) {\nmsg := createMessage(msgSize)\ntestDirectionalStream(t, appA, appB, func(stream net.Stream) {\n- appB.StreamStates[0] = STREAM_QUERY_HANDLED\n+ appB.StreamStates[0] = STREAM_DATA_EXPECTED\nsendStreamMessage(t, stream, msg)\nrequire.Equal(t, msg, waitForMessage(t, appB, msgSize))\n- appB.StreamStates[0] = STREAM_QUERY_HANDLED\n+ appB.StreamStates[0] = STREAM_DATA_EXPECTED\nsendStreamMessage(t, stream, msg)\nrequire.Equal(t, msg, waitForMessage(t, appB, msgSize))\n- appB.StreamStates[0] = STREAM_QUERY_HANDLED\n+ appB.StreamStates[0] = STREAM_DATA_EXPECTED\nsendStreamMessage(t, stream, msg)\nrequire.Equal(t, msg, waitForMessage(t, appB, msgSize))\n})\n@@ -1060,10 +1061,10 @@ func TestLibp2pMetrics(t *testing.T) {\n// Send multiple messages from A to B\ntestDirectionalStream(t, appA, appB, func(stream net.Stream) {\n- appB.StreamStates[0] = STREAM_QUERY_HANDLED\n+ appB.StreamStates[0] = STREAM_DATA_EXPECTED\nsendStreamMessage(t, stream, createMessage(maxStatsMsg))\nwaitForMessage(t, appB, maxStatsMsg)\n- appB.StreamStates[0] = STREAM_QUERY_HANDLED\n+ appB.StreamStates[0] = STREAM_DATA_EXPECTED\nsendStreamMessage(t, stream, createMessage(minStatsMsg))\nwaitForMessage(t, appB, minStatsMsg)\n})\n",
        "date": "14.07.2021 15:35:22",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Update stream states in libp2p_helper tests to expect data instead of query handling."
    },
    {
        "msg": "use last_filled for num_accounts",
        "diff": "diff --git a/src/lib/merkle_mask/masking_merkle_tree.ml b/src/lib/merkle_mask/masking_merkle_tree.ml @@ -535,9 +535,16 @@ module Make (Inputs : Inputs_intf.S) = struct\nlet num_accounts t =\nassert_is_attached t ;\n- let parent_num_accounts = Base.num_accounts (get_parent t) in\n- let mask_num_accounts = Location_binable.Table.length t.account_tbl in\n- parent_num_accounts + mask_num_accounts\n+ match t.current_location with\n+ | None ->\n+ 0\n+ | Some location -> (\n+ match location with\n+ | Account addr ->\n+ Addr.to_int addr + 1\n+ | _ ->\n+ failwith \"Expected mask current location to represent an account\"\n+ )\nlet location_of_account t account_id =\nassert_is_attached t ;\n",
        "date": "27.07.2021 17:02:06",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Refactor num_accounts function to handle current location in masking merkle tree"
    },
    {
        "msg": "use the valid_until that we already have",
        "diff": "diff --git a/src/app/rosetta/lib/block.ml b/src/app/rosetta/lib/block.ml @@ -335,8 +335,7 @@ WITH RECURSIVE chain AS (\n; failure_reason: string option\n; fee_payer_account_creation_fee_paid: int64 option\n; receiver_account_creation_fee_paid: int64 option\n- ; created_token: int64 option\n- ; valid_until: int64 option }\n+ ; created_token: int64 option }\n[@@deriving hlist]\nlet fee_payer t = `Pk t.fee_payer\n@@ -357,8 +356,6 @@ WITH RECURSIVE chain AS (\nlet created_token t = t.created_token\n- let valid_until t = t.valid_until\n-\nlet typ =\nlet open Archive_lib.Processor.Caqti_type_spec in\nlet spec =\n@@ -370,7 +367,6 @@ WITH RECURSIVE chain AS (\n; option string\n; option int64\n; option int64\n- ; option int64\n; option int64 ]\nin\nlet encode t = Ok (hlist_to_tuple spec (to_hlist t)) in\n@@ -392,8 +388,7 @@ WITH RECURSIVE chain AS (\nblocks_user_commands.failure_reason,\nblocks_user_commands.fee_payer_account_creation_fee_paid,\nblocks_user_commands.receiver_account_creation_fee_paid,\n- blocks_user_commands.created_token,\n- u.valid_until,\n+ blocks_user_commands.created_token\nFROM user_commands u\nINNER JOIN blocks_user_commands ON blocks_user_commands.user_command_id = u.id\nINNER JOIN public_keys pk1 ON pk1.id = u.fee_payer_id\n@@ -584,7 +579,7 @@ WITH RECURSIVE chain AS (\n; fee= Unsigned.UInt64.of_int64 uc.fee\n; hash= uc.hash\n; failure_status= Some failure_status\n- ; valid_until= Option.map ~f:Unsigned.UInt32.of_int64 (User_commands.Extras.valid_until extras)\n+ ; valid_until= Option.map ~f:Unsigned.UInt32.of_int64 uc.valid_until\n} )\nin\n{ Block_info.block_identifier=\n",
        "date": "19.10.2021 00:34:53",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Remove valid_until field from block.ml and update references to valid_until in the code."
    },
    {
        "msg": "use new poseidon for random oracle",
        "diff": "diff --git a/src/lib/random_oracle/random_oracle.ml b/src/lib/random_oracle/random_oracle.ml @@ -21,7 +21,7 @@ end\nmodule Input = Random_oracle_input\nlet params : Field.t Sponge.Params.t =\n- Sponge.Params.(map pasta_p ~f:Field.of_string)\n+ Sponge.Params.(map pasta_p_3 ~f:Field.of_string)\nmodule Operations = struct\nlet add_assign ~state i x = Field.(state.(i) <- state.(i) + x)\n@@ -45,21 +45,16 @@ module Inputs = Pickles.Tick_field_sponge.Inputs\nmodule Inputs = struct\nmodule Field = Field\n- let rounds_full = 63\n+ let rounds_full = 55\n- let initial_ark = true\n+ let initial_ark = false\nlet rounds_partial = 0\n- (* Computes x^5 *)\n+ (* Computes x^7 *)\nlet to_the_alpha x =\nlet open Field in\n- let res = x in\n- let res = res * res in\n- (* x^2 *)\n- let res = res * res in\n- (* x^4 *)\n- res * x\n+ square (square x * x) * x\nmodule Operations = Operations\nend\n@@ -188,10 +183,10 @@ let%test_unit \"check rust implementation of block-cipher\" =\nlet module T = Internal_Basic in\nQuickcheck.test (Quickcheck.Generator.list_with_length 3 T.Field.gen)\n~f:(fun s ->\n- let s = Array.of_list s in\n+ let s () = Array.of_list s in\n[%test_eq: T.Field.t array]\n- (Ocaml_permutation.block_cipher params s)\n- (Permutation.block_cipher params s))\n+ (Ocaml_permutation.block_cipher params (s ()))\n+ (Permutation.block_cipher params (s ())))\n[%%endif]\n",
        "date": "05.11.2021 10:23:21",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Update random oracle parameters and block cipher implementation."
    },
    {
        "msg": "use a map to accumulate terms, eliminate zero terms",
        "diff": "diff --git a/src/lib/crypto/kimchi_backend/common/plonk_constraint_system.ml b/src/lib/crypto/kimchi_backend/common/plonk_constraint_system.ml @@ -609,7 +609,7 @@ struct\nlet add_gates gates =\nList.iter gates ~f:(fun g ->\nlet g = to_absolute_row g in\n- Gates.add rust_gates (Gate_spec.to_rust_gate g)) ;\n+ Gates.add rust_gates (Gate_spec.to_rust_gate g))\nin\nadd_gates public_gates ;\nadd_gates gates ;\n@@ -632,11 +632,11 @@ struct\nReturns `(last_scalar, last_variable, terms, terms_length)`\nwhere terms does not contain the last scalar and last variable observed.\n*)\n- let accumulate_sorted_terms (c0, i0) terms =\n- Sequence.of_list terms\n- |> Sequence.fold ~init:(c0, i0, [], 0) ~f:(fun (acc, i, ts, n) (c, j) ->\n- if Int.equal i j then (Fp.add acc c, i, ts, n)\n- else (c, j, (acc, i) :: ts, n + 1))\n+ let accumulate_terms terms =\n+ List.fold terms ~init:Int.Map.empty ~f:(fun acc (x, i) ->\n+ Map.change acc i ~f:(fun y ->\n+ let res = match y with None -> x | Some y -> Fp.add x y in\n+ if Fp.(equal zero res) then None else Some res))\n(** Converts a [Cvar.t] to a `(terms, terms_length, has_constant)`.\nif `has_constant` is set, then terms start with a constant term in the form of (c, 0).\n@@ -648,20 +648,17 @@ struct\n~equal ~one:(of_int 1))\nx\nin\n- let terms =\n- List.sort terms ~compare:(fun (_, i) (_, j) -> Int.compare i j)\n- in\n- let has_constant_term = Option.is_some c in\n(* Note: [(c, 0)] represents the field element [c] multiplied by the 0th\nvariable, which is held constant as [Field.one].\n*)\nlet terms = match c with None -> terms | Some c -> (c, 0) :: terms in\n- match terms with\n- | [] ->\n- Some ([], 0, false)\n- | t0 :: terms ->\n- let acc, i, ts, n = accumulate_sorted_terms t0 terms in\n- Some (List.rev ((acc, i) :: ts), n + 1, has_constant_term)\n+ let has_constant_term = Option.is_some c in\n+ let terms = accumulate_terms terms in\n+ let terms_list =\n+ Map.fold_right ~init:[] terms ~f:(fun ~key ~data acc ->\n+ (data, key) :: acc)\n+ in\n+ Some (terms_list, Map.length terms, has_constant_term)\n(** Adds a row/gate/constraint to a constraint system `sys` *)\nlet add_row sys (vars : V.t option array) kind coeffs =\n@@ -738,20 +735,18 @@ struct\n~equal ~one:(of_int 1))\nx\nin\n- let terms =\n- List.sort terms ~compare:(fun (_, i) (_, j) -> Int.compare i j)\n+ let terms = accumulate_terms terms in\n+ let terms_list =\n+ Map.fold_right ~init:[] terms ~f:(fun ~key ~data acc ->\n+ (data, key) :: acc)\nin\n- match (constant, terms) with\n- | Some c, [] ->\n+ match (constant, Map.is_empty terms) with\n+ | Some c, true ->\n(c, `Constant)\n- | None, [] ->\n+ | None, true ->\n(Fp.zero, `Constant)\n- | _, t0 :: terms -> (\n- let terms =\n- let acc, i, ts, _ = accumulate_sorted_terms t0 terms in\n- List.rev ((acc, i) :: ts)\n- in\n- match terms with\n+ | _ -> (\n+ match terms_list with\n| [] ->\nassert false\n| [ (ls, lx) ] -> (\n",
        "date": "22.12.2021 18:20:04",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Refactor accumulation of terms in Plonk constraint system"
    },
    {
        "msg": "use full commitment",
        "diff": "diff --git a/src/lib/transaction_snark/transaction_snark.ml b/src/lib/transaction_snark/transaction_snark.ml @@ -4349,7 +4349,7 @@ module For_tests = struct\n; call_data\n; call_depth = 0\n; protocol_state = Snapp_predicate.Protocol_state.accept\n- ; use_full_commitment = false\n+ ; use_full_commitment = true\n}\n; predicate\n}\n@@ -4395,28 +4395,31 @@ module For_tests = struct\n|> Parties.Party_or_stack.accumulate_hashes_predicated\nin\nlet other_parties_hash = Parties.Party_or_stack.stack_hash ps in\n- let transaction : Parties.Transaction_commitment.t =\n+ let commitment : Parties.Transaction_commitment.t =\nParties.Transaction_commitment.create ~other_parties_hash\n~protocol_state_predicate_hash\n~memo_hash:(Signed_command_memo.hash memo)\nin\n+ let full_commitment =\n+ Parties.Transaction_commitment.with_fee_payer commitment\n+ ~fee_payer_hash:Party.Predicated.(digest (of_fee_payer fee_payer.data))\n+ in\nlet fee_payer =\nlet fee_payer_signature_auth =\n- let txn_comm =\n- Parties.Transaction_commitment.with_fee_payer transaction\n- ~fee_payer_hash:\n- Party.Predicated.(digest (of_fee_payer fee_payer.data))\n- in\nSignature_lib.Schnorr.sign sender.private_key\n- (Random_oracle.Input.field txn_comm)\n+ (Random_oracle.Input.field full_commitment)\nin\n{ fee_payer with authorization = fee_payer_signature_auth }\nin\nlet sender_party =\nOption.map sender_party ~f:(fun s ->\n+ let commitment =\n+ if s.data.body.use_full_commitment then full_commitment\n+ else commitment\n+ in\nlet sender_signature_auth =\nSignature_lib.Schnorr.sign sender.private_key\n- (Random_oracle.Input.field transaction)\n+ (Random_oracle.Input.field commitment)\nin\n{ Party.data = s.data\n; authorization = Signature sender_signature_auth\n@@ -4425,7 +4428,8 @@ module For_tests = struct\n( `Parties { Parties.fee_payer; other_parties = other_receivers; memo }\n, `Sender_party sender_party\n, `Proof_party snapp_party\n- , `Txn_commitment transaction )\n+ , `Txn_commitment commitment\n+ , `Full_txn_commitment full_commitment )\nlet deploy_snapp ~constraint_constants (spec : Spec.t) =\nlet `VK vk, `Prover _trivial_prover =\n@@ -4446,16 +4450,21 @@ module For_tests = struct\nlet ( `Parties { Parties.fee_payer; other_parties; memo }\n, `Sender_party sender_party\n, `Proof_party snapp_party\n- , `Txn_commitment transaction ) =\n+ , `Txn_commitment commitment\n+ , `Full_txn_commitment full_commitment ) =\ncreate_parties spec ~update:update_vk ~predicate:Party.Predicate.Accept\nin\nassert (List.is_empty other_parties) ;\nlet snapp_party =\nOption.value_map ~default:[] snapp_party ~f:(fun snapp_party ->\n+ let commitment =\n+ if snapp_party.data.body.use_full_commitment then full_commitment\n+ else commitment\n+ in\nlet signature =\nSignature_lib.Schnorr.sign\n(Option.value_exn spec.snapp_account_keypair).private_key\n- (Random_oracle.Input.field transaction)\n+ (Random_oracle.Input.field commitment)\nin\n[ { Party.data = snapp_party.data\n; authorization = Signature signature\n@@ -4473,7 +4482,8 @@ module For_tests = struct\nlet ( `Parties { Parties.fee_payer; other_parties; memo }\n, `Sender_party sender_party\n, `Proof_party snapp_party\n- , `Txn_commitment transaction ) =\n+ , `Txn_commitment commitment\n+ , `Full_txn_commitment full_commitment ) =\ncreate_parties spec ~update:spec.snapp_update\n~predicate:Party.Predicate.Accept\nin\n@@ -4494,7 +4504,7 @@ module For_tests = struct\nParties.Party_or_stack.stack_hash ps\nin\nlet tx_statement : Snapp_statement.t =\n- { transaction; at_party = proof_party }\n+ { transaction = commitment; at_party = proof_party }\nin\nlet handler (Snarky_backendless.Request.With { request; respond }) =\nmatch request with _ -> respond Unhandled\n@@ -4504,10 +4514,14 @@ module For_tests = struct\nin\n{ Party.data = snapp_party.data; authorization = Proof pi }\n| Signature ->\n+ let commitment =\n+ if snapp_party.data.body.use_full_commitment then full_commitment\n+ else commitment\n+ in\nlet signature =\nSignature_lib.Schnorr.sign\n(Option.value_exn spec.snapp_account_keypair).private_key\n- (Random_oracle.Input.field transaction)\n+ (Random_oracle.Input.field commitment)\nin\nAsync.Deferred.return\n{ Party.data = snapp_party.data\n@@ -4527,7 +4541,8 @@ module For_tests = struct\nlet ( `Parties parties\n, `Sender_party sender_party\n, `Proof_party snapp_party\n- , `Txn_commitment _transaction ) =\n+ , `Txn_commitment _commitment\n+ , `Full_txn_commitment _full_commitment ) =\ncreate_parties spec ~update:spec.snapp_update\n~predicate:Party.Predicate.Accept\nin\n",
        "date": "10.01.2022 05:35:19",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Update use_full_commitment flag to true and adjust transaction commitment creation and signing accordingly."
    },
    {
        "msg": "use a newer image",
        "diff": "diff --git a/automation/terraform/testnets/test-snapps/main.tf b/automation/terraform/testnets/test-snapps/main.tf @@ -60,8 +60,8 @@ variable \"plain_node_count\" {\nlocals {\ntestnet_name = \"test-snapps\"\n- mina_image = \"minaprotocol/mina-daemon:1.3.0alpha1-feature-snapps-protocol-ce068a6-buster-devnet\"\n- mina_archive_image = \"minaprotocol/mina-archive:1.3.0alpha1-feature-snapps-protocol-ce068a6-buster\"\n+ mina_image = \"minaprotocol/mina-daemon:1.3.0beta1-feature-snapps-protocol-733f61a-buster-devnet\"\n+ mina_archive_image = \"minaprotocol/mina-archive:1.3.0beta1-feature-snapps-protocol-733f61a-buster-devnet\"\nseed_region = \"us-central1\"\nseed_zone = \"us-central1-b\"\n",
        "date": "09.02.2022 17:27:14",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Update Mina daemon and archive images to version 1.3.0beta1 for test-snapps network."
    },
    {
        "msg": "use more efficient definition of (<=) via (not (>))",
        "diff": "diff --git a/src/lib/currency/currency.ml b/src/lib/currency/currency.ml @@ -737,11 +737,10 @@ end = struct\nlet%map _res, `Overflow lt = range_check_flagged `Sub diff in\nlt\n- (* x <= y iff x < y || x = y *)\n+ (* x <= y iff not (y < x) *)\nlet ( <= ) x y =\n- let%bind x_lt_y = x < y in\n- let%bind eq = x = y in\n- Boolean.(x_lt_y ||| eq)\n+ let%map y_lt_x = y < x in\n+ Boolean.not y_lt_x\n(* x >= y iff y <= x *)\nlet ( >= ) x y = y <= x\n",
        "date": "02.03.2022 18:07:05",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Refactor comparison operators in currency module"
    },
    {
        "msg": "use Pickles.Backend.Tick.Field instead of referring to kimchi directly",
        "diff": "diff --git a/src/lib/mina_base/account_id.ml b/src/lib/mina_base/account_id.ml @@ -5,10 +5,10 @@ open Mina_base_import\nmodule Digest = struct\nlet of_bigstring_exn =\n- Binable.of_bigstring (module Kimchi_pasta.Pasta.Fp.Stable.Latest)\n+ Binable.of_bigstring (module Pickles.Backend.Tick.Field.Stable.Latest)\nlet to_bigstring =\n- Binable.to_bigstring (module Kimchi_pasta.Pasta.Fp.Stable.Latest)\n+ Binable.to_bigstring (module Pickles.Backend.Tick.Field.Stable.Latest)\nmodule Base58_check = Base58_check.Make (struct\nlet description = \"Private key\"\n@@ -30,7 +30,7 @@ module Digest = struct\n[%%versioned\nmodule Stable = struct\nmodule V1 = struct\n- type t = Kimchi_pasta.Pasta.Fp.Stable.V1.t\n+ type t = Pickles.Backend.Tick.Field.Stable.V1.t\n[@@deriving sexp, equal, compare, hash]\nlet to_yojson (t : t) : Yojson.Safe.t = `String (to_string t)\n@@ -53,7 +53,7 @@ module Digest = struct\n(* Just matters that this no one can find a preimage to this with poseidon.\nChose 1 for consistency for the old uint64 based token IDs *)\n- let default : t = Kimchi_pasta.Pasta.Fp.one\n+ let default : t = Pickles.Backend.Tick.Field.one\nlet gen : t Quickcheck.Generator.t = Snark_params.Tick.Field.gen\n",
        "date": "04.03.2022 12:06:06",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Update account_id.ml to use Pickles.Backend.Tick.Field instead of Kimchi_pasta.Pasta.Fp."
    },
    {
        "msg": "use this branch for sql schemas in mina_automation.ml",
        "diff": "diff --git a/src/lib/integration_test_cloud_engine/mina_automation.ml b/src/lib/integration_test_cloud_engine/mina_automation.ml @@ -246,8 +246,8 @@ module Network_config = struct\nin\nlet mina_archive_schema = \"create_schema.sql\" in\nlet mina_archive_schema_aux_files =\n- [ \"https://raw.githubusercontent.com/MinaProtocol/mina/develop/src/app/archive/create_schema.sql\"\n- ; \"https://raw.githubusercontent.com/MinaProtocol/mina/develop/src/app/archive/snapp_tables.sql\"\n+ [ \"https://raw.githubusercontent.com/MinaProtocol/mina/feature/token-id-overhaul/src/app/archive/create_schema.sql\"\n+ ; \"https://raw.githubusercontent.com/MinaProtocol/mina/feature/token-id-overhaul/src/app/archive/snapp_tables.sql\"\n]\nin\n(* NETWORK CONFIG *)\n",
        "date": "16.03.2022 13:16:01",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Update mina_archive_schema URLs to point to feature/token-id-overhaul branch."
    },
    {
        "msg": "use mina_transaction_logic in test",
        "diff": "diff --git a/src/lib/transaction_snark/test/snapp_payments/snapp_payments.ml b/src/lib/transaction_snark/test/snapp_payments/snapp_payments.ml @@ -153,7 +153,7 @@ let%test_module \"Snapp payments tests\" =\nU.apply_parties ledger partiess |> fun _ -> ()))\nlet%test_unit \"multiple transfers from one account\" =\n- let open Transaction_logic.For_tests in\n+ let open Mina_transaction_logic.For_tests in\nQuickcheck.test ~trials:1 U.gen_snapp_ledger\n~f:(fun ({ init_ledger; specs }, new_kp) ->\nLedger.with_ledger ~depth:U.ledger_depth ~f:(fun ledger ->\n",
        "date": "17.03.2022 12:48:14",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Refactor code to use Mina_transaction_logic module in snapp_payments.ml"
    },
    {
        "msg": "use private key instead",
        "diff": "diff --git a/src/app/test_executive/snarkyjs.ml b/src/app/test_executive/snarkyjs.ml @@ -53,19 +53,14 @@ module Make (Inputs : Intf.Test.Inputs_intf) = struct\nlet my_account_id =\nMina_base.Account_id.create my_pk Mina_base.Token_id.default\nin\n- let (keypair : Signature_lib.Keypair.t) =\n- { public_key = my_pk |> Signature_lib.Public_key.decompress_exn\n- ; private_key = my_sk\n- }\n- in\n(* concurrently make/sign the deploy transaction and wait for the node to be ready *)\nlet%bind.Deferred parties_deploy_contract, unit_with_error =\nDeferred.both\n- ((fun _keypair ->\n+ ((fun _my_sk ->\nfailwith\n\"TODO: shell exec to make/sign the deploy transaction with \\\nkeypair for paying fees\")\n- keypair)\n+ (Signature_lib.Private_key.to_base58_check my_sk))\n(wait_for t (Wait_condition.node_to_initialize node))\nin\nlet%bind () = Deferred.return unit_with_error in\n",
        "date": "22.03.2022 21:25:30",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Refactor code to use private key directly for deploy transaction signing"
    },
    {
        "msg": "use Types_map.typ instead of expanded function",
        "diff": "diff --git a/src/lib/pickles/step_main.ml b/src/lib/pickles/step_main.ml @@ -163,15 +163,8 @@ let step_main :\nmatch Type_equal.Id.same_witness self.id d.id with\n| Some T ->\nbasic.typ\n- | None -> (\n- (* TODO: Abstract this into a function in Types_map *)\n- match d.kind with\n- | Compiled ->\n- let d = Types_map.lookup_compiled d.id in\n- d.typ\n- | Side_loaded ->\n- let d = Types_map.lookup_side_loaded d.id in\n- d.permanent.typ )\n+ | None ->\n+ Types_map.typ d\nin\ntyp)\nd\n",
        "date": "22.03.2022 17:56:29",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Refactor code to abstract type lookup into Types_map"
    },
    {
        "msg": "use the old system for the last untimed node c txns",
        "diff": "diff --git a/src/app/test_executive/payments_test.ml b/src/app/test_executive/payments_test.ml @@ -48,12 +48,6 @@ module Make (Inputs : Intf.Test.Inputs_intf) = struct\n; extra_genesis_accounts =\n[ { balance = \"1000\"; timing = Untimed }\n; { balance = \"1000\"; timing = Untimed }\n- ; { balance = \"1000\"\n- ; timing =\n- make_timing ~min_balance:800_000_000_000 ~cliff_time:8\n- ~cliff_amount:0 ~vesting_period:4\n- ~vesting_increment:200_000_000_000\n- }\n]\n; num_snark_workers =\n3\n@@ -74,7 +68,7 @@ module Make (Inputs : Intf.Test.Inputs_intf) = struct\n~f:(fun { Signature_lib.Keypair.public_key; _ } ->\npublic_key |> Signature_lib.Public_key.to_bigstring\n|> Bigstring.to_string)) ;\n- let[@warning \"-8\"] [ fish1; fish2; fish3_timed ] =\n+ let[@warning \"-8\"] [ fish1; fish2 ] =\nNetwork.extra_genesis_keypairs network\nin\n(* create a signed txn which we'll use to make a successfull txn, and then a replay attack *)\n@@ -334,15 +328,11 @@ module Make (Inputs : Intf.Test.Inputs_intf) = struct\nin\nlet%bind () =\nsection \"send a single payment from timed account using available liquid\"\n- (let amount = Currency.Amount.of_formatted_string \"10\" in\n- let receiver = fish1 in\n- let receiver_pub_key =\n- receiver.public_key |> Signature_lib.Public_key.compress\n- in\n- let sender = fish3_timed in\n- let sender_pub_key =\n- sender.public_key |> Signature_lib.Public_key.compress\n- in\n+ (let amount = Currency.Amount.of_int 1_000_000_000_000 in\n+ let receiver = untimed_node_a in\n+ let%bind receiver_pub_key = Util.pub_key_of_node receiver in\n+ let sender = timed_node_c in\n+ let%bind sender_pub_key = Util.pub_key_of_node sender in\nlet%bind { hash; _ } =\nNetwork.Node.must_send_payment ~logger timed_node_c ~sender_pub_key\n~receiver_pub_key ~amount ~fee\n@@ -352,7 +342,7 @@ module Make (Inputs : Intf.Test.Inputs_intf) = struct\n~txn_hash:hash ~node_included_in:(`Node timed_node_c)))\nin\nsection \"unable to send payment from timed account using illiquid tokens\"\n- (let amount = Currency.Amount.of_formatted_string \"900\" in\n+ (let amount = Currency.Amount.of_int 25_000_000_000_000 in\nlet receiver = untimed_node_b in\nlet%bind receiver_pub_key = Util.pub_key_of_node receiver in\nlet sender = timed_node_c in\n@@ -361,10 +351,11 @@ module Make (Inputs : Intf.Test.Inputs_intf) = struct\nNetwork.Node.must_get_account_data ~logger timed_node_c\n~public_key:sender_pub_key\nin\n- [%log info] \"fish3_timed total balance: %s\"\n+ [%log info] \"timed_node_c total balance: %s\"\n(Currency.Balance.to_formatted_string timed_node_c_total) ;\n[%log info]\n- \"Attempting to send txn from fish3_timed to fish1 for amount of %s\"\n+ \"Attempting to send txn from timed_node_c to untimed_node_a for \\\n+ amount of %s\"\n(Currency.Amount.to_formatted_string amount) ;\n(* TODO: refactor this using new [expect] dsl when it's available *)\nlet open Deferred.Let_syntax in\n",
        "date": "14.04.2022 07:27:08",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Refactor payment test cases and update payment amounts in payments_test.ml"
    },
    {
        "msg": "use the archive URL for the current branch when running tests",
        "diff": "diff --git a/src/lib/integration_test_cloud_engine/mina_automation.ml b/src/lib/integration_test_cloud_engine/mina_automation.ml @@ -227,9 +227,11 @@ module Network_config = struct\n; libp2p_secret = \"\"\n}\nin\n- let mina_archive_schema =\n- \"https://raw.githubusercontent.com/MinaProtocol/mina/develop/src/app/archive/create_schema.sql\"\n+ let mina_archive_base_url =\n+ \"https://raw.githubusercontent.com/MinaProtocol/mina/\"\n+ ^ Mina_version.commit_id ^ \"/src/app/archive/\"\nin\n+ let mina_archive_schema = mina_archive_base_url ^ \"create_schema.sql\" in\nlet mk_net_keypair index (pk, sk) =\nlet secret_name = \"test-keypair-\" ^ Int.to_string index in\nlet keypair =\n",
        "date": "06.05.2022 13:44:40",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Refactor mina_archive_schema URL generation in mina_automation"
    },
    {
        "msg": "use new opt-lookup friendly typs for statement/input typ",
        "diff": "diff --git a/src/lib/pickles/impls.ml b/src/lib/pickles/impls.ml @@ -128,9 +128,9 @@ module Step = struct\nmodule Digest = Digest.Make (Impl)\nmodule Challenge = Challenge.Make (Impl)\n- let input ~proofs_verified ~wrap_rounds =\n+ let input ~proofs_verified ~wrap_rounds ~lookup =\nlet open Types.Step.Statement in\n- let spec = spec proofs_verified wrap_rounds in\n+ let spec = spec proofs_verified wrap_rounds lookup in\nlet (T (typ, f, f_inv)) =\nSpec.packed_typ\n(module Impl)\n@@ -142,8 +142,15 @@ module Step = struct\n, Fn.id ) )\nspec\nin\n- let typ = Typ.transport typ ~there:to_data ~back:of_data in\n- Spec.ETyp.T (typ, (fun x -> of_data (f x)), fun x -> f_inv (to_data x))\n+ let typ =\n+ Typ.transport typ\n+ ~there:(to_data ~option_map:Option.map)\n+ ~back:(of_data ~option_map:Option.map)\n+ in\n+ Spec.ETyp.T\n+ ( typ\n+ , (fun x -> of_data ~option_map:Plonk_types.Opt.map (f x))\n+ , fun x -> f_inv (to_data ~option_map:Plonk_types.Opt.map x) )\nend\nmodule Wrap = struct\n@@ -225,7 +232,7 @@ module Wrap = struct\nlet to_bits x = Field.unpack x ~length:Field.size_in_bits\nend\n- let input () =\n+ let input ~lookup =\nlet fp : ('a, Other_field.Constant.t) Typ.t = Other_field.typ_unchecked in\nlet open Types.Wrap.Statement in\nlet (T (typ, f, f_inv)) =\n@@ -237,13 +244,15 @@ module Wrap = struct\nImpl.run_checked (Other_field.check x) ;\nt )\n, Fn.id ) )\n- In_circuit.spec\n+ (In_circuit.spec lookup)\nin\nlet typ =\n- Typ.transport typ ~there:In_circuit.to_data ~back:In_circuit.of_data\n+ Typ.transport typ\n+ ~there:(In_circuit.to_data ~option_map:Option.map)\n+ ~back:(In_circuit.of_data ~option_map:Option.map)\nin\nSpec.ETyp.T\n( typ\n- , (fun x -> In_circuit.of_data (f x))\n- , fun x -> f_inv (In_circuit.to_data x) )\n+ , (fun x -> In_circuit.of_data ~option_map:Plonk_types.Opt.map (f x))\n+ , fun x -> f_inv (In_circuit.to_data ~option_map:Plonk_types.Opt.map x) )\nend\n",
        "date": "25.06.2022 09:28:45",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Refactor input functions in Step and Wrap modules to include a lookup parameter"
    },
    {
        "msg": "use new tree structure and fix account_is_new_failure",
        "diff": "diff --git a/src/lib/mina_generators/parties_generators.ml b/src/lib/mina_generators/parties_generators.ml @@ -1169,7 +1169,7 @@ let gen_parties_from ?failure ?(max_other_parties = max_other_parties)\n|> Account_id.Table.keys\nin\nHash_set.add account_ids_seen fee_payer_acct_id ;\n- let gen_parties_with_dynamic_balance ~kind_of_parties num_parties =\n+ let _gen_parties_with_dynamic_balance ~kind_of_parties num_parties =\nlet new_account = match kind_of_parties with `New -> true | _ -> false in\nlet rec go acc n =\nlet open Zkapp_basic in\n@@ -1433,25 +1433,51 @@ let gen_parties_from ?failure ?(max_other_parties = max_other_parties)\nin\nlet _other_parties = other_parties0 @ [ balancing_party ] in\n*)\n+ let gen_parties_with_token_accounts ~num_parties =\n+ let authorization = Control.Signature Signature.dummy in\n+ let permissions_auth = Control.Tag.Signature in\n+ let caller = Party.Call_type.Call in\n+ let rec go acc n =\n+ let open Parties_builder in\n+ if n <= 0 then return (List.rev acc)\n+ else\n+ let%bind party0 =\n+ let required_balance_change =\n+ Currency.Amount.(\n+ Signed.negate\n+ (Signed.of_unsigned\n+ (of_fee\n+ Genesis_constants.Constraint_constants.compiled\n+ .account_creation_fee ) ))\n+ in\n+ gen_party_from ~zkapp_account_ids ~account_ids_seen ~authorization\n+ ~permissions_auth ~available_public_keys ~caller ~account_state_tbl\n+ ~required_balance_change ?protocol_state_view ?vk ()\n+ in\n+ let%bind party =\n+ let token_id =\n+ Account_id.derive_token_id\n+ ~owner:\n+ (Account_id.create party0.body.public_key party0.body.token_id)\n+ in\n+ gen_party_from ~zkapp_account_ids ~account_ids_seen ~new_account:true\n+ ~token_id ~caller ~authorization ~permissions_auth\n+ ~available_public_keys ~account_state_tbl ?protocol_state_view ?vk\n+ ()\n+ in\n+ go (mk_node party0.body [ mk_node party.body [] ] :: acc) (n - 1)\n+ in\n+ go [] num_parties\n+ in\nlet%bind num_new_token_parties = Int.gen_uniform_incl 1 max_other_parties in\nlet%bind new_token_parties =\n- gen_parties_with_dynamic_balance ~kind_of_parties:`New_token\n- num_new_token_parties\n+ gen_parties_with_token_accounts ~num_parties:num_new_token_parties\nin\nlet other_parties = new_token_parties in\nlet%map memo = Signed_command_memo.gen in\nlet parties_dummy_authorizations : Parties.t =\nlet open Parties_builder in\n- let other_parties =\n- mk_forest\n- ( List.mapi other_parties ~f:(fun i p ->\n- if i mod 2 = 0 then\n- [ mk_node p.body\n- [ mk_node (List.nth_exn other_parties (i + 1)).body [] ]\n- ]\n- else [] )\n- |> List.concat )\n- in\n+ let other_parties = mk_forest other_parties in\n{ fee_payer\n; other_parties =\nother_parties\n",
        "date": "01.09.2022 00:06:37",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Refactor parties_generators.ml to include a new function for generating parties with token accounts."
    },
    {
        "msg": "use a structured type as preimage of Authorization_kind",
        "diff": "diff --git a/src/lib/mina_base/account_update.ml b/src/lib/mina_base/account_update.ml @@ -35,22 +35,51 @@ module Authorization_kind = struct\nend\nend]\n- let to_booleans = function\n+ module Structured = struct\n+ type t = { is_signed : bool; is_proved : bool } [@@deriving hlist]\n+\n+ let to_input ({ is_signed; is_proved } : t) =\n+ let f x = if x then Field.one else Field.zero in\n+ Random_oracle_input.Chunked.packeds\n+ [| (f is_signed, 1); (f is_proved, 1) |]\n+\n+ [%%ifdef consensus_mechanism]\n+\n+ module Checked = struct\n+ type t = { is_signed : Boolean.var; is_proved : Boolean.var }\n+ [@@deriving hlist]\n+\n+ let to_input { is_signed; is_proved } =\n+ let f (x : Boolean.var) = (x :> Field.Var.t) in\n+ Random_oracle_input.Chunked.packeds\n+ [| (f is_signed, 1); (f is_proved, 1) |]\n+ end\n+\n+ let typ =\n+ Typ.of_hlistable ~var_to_hlist:Checked.to_hlist\n+ ~var_of_hlist:Checked.of_hlist ~value_to_hlist:to_hlist\n+ ~value_of_hlist:of_hlist\n+ [ Boolean.typ; Boolean.typ ]\n+\n+ [%%endif]\n+ end\n+\n+ let to_structured : t -> Structured.t = function\n| None_given ->\n- (false, false)\n+ { is_signed = false; is_proved = false }\n| Signature ->\n- (true, false)\n+ { is_signed = true; is_proved = false }\n| Proof ->\n- (false, true)\n+ { is_signed = false; is_proved = true }\n- let of_booleans_exn = function\n- | false, false ->\n+ let of_structured_exn : Structured.t -> t = function\n+ | { is_signed = false; is_proved = false } ->\nNone_given\n- | true, false ->\n+ | { is_signed = true; is_proved = false } ->\nSignature\n- | false, true ->\n+ | { is_signed = false; is_proved = true } ->\nProof\n- | true, true ->\n+ | { is_signed = true; is_proved = true } ->\nfailwith \"Invalid authorization kind\"\nlet to_string = function\n@@ -78,28 +107,14 @@ module Authorization_kind = struct\niso_string ~name:\"AuthorizationKind\" ~js_type:(Custom \"AuthorizationKind\")\n~to_string ~of_string:of_string_exn obj\n- let to_input x =\n- let is_signed, is_proved = to_booleans x in\n- let f x = if x then Field.one else Field.zero in\n- Random_oracle_input.Chunked.packeds [| (f is_signed, 1); (f is_proved, 1) |]\n+ let to_input x = Structured.to_input (to_structured x)\n[%%ifdef consensus_mechanism]\n- module Checked = struct\n- type t = { is_signed : Boolean.var; is_proved : Boolean.var }\n-\n- let to_input { is_signed; is_proved } =\n- let f (x : Boolean.var) = (x :> Field.Var.t) in\n- Random_oracle_input.Chunked.packeds\n- [| (f is_signed, 1); (f is_proved, 1) |]\n- end\n+ module Checked = Structured.Checked\nlet typ =\n- Typ.(Boolean.typ * Boolean.typ)\n- |> Typ.transport_var\n- ~back:(fun (is_signed, is_proved) -> { Checked.is_signed; is_proved })\n- ~there:(fun { Checked.is_signed; is_proved } -> (is_signed, is_proved))\n- |> Typ.transport ~there:to_booleans ~back:of_booleans_exn\n+ Structured.typ |> Typ.transport ~there:to_structured ~back:of_structured_exn\n[%%endif]\nend\n",
        "date": "27.09.2022 13:19:22",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Restructured account update module to use structured authorization kind representation."
    },
    {
        "msg": "use the new nat.to_field function",
        "diff": "diff --git a/src/lib/mina_base/pending_coinbase.ml b/src/lib/mina_base/pending_coinbase.ml @@ -321,7 +321,7 @@ module Make_str (A : Wire_types.Concrete) = struct\nRandom_oracle.hash ~init:Hash_prefix.protocol_state\n[| (t.curr :> Field.t)\n; (state_body_hash :> Field.t)\n- ; Field.project (Mina_numbers.Global_slot.to_bits global_slot)\n+ ; Mina_numbers.Global_slot.to_field global_slot\n|]\n|> Stack_hash.of_hash\n}\n",
        "date": "06.01.2023 02:43:10",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Refactor global slot conversion in pending_coinbase.ml"
    },
    {
        "msg": "use newer arg form",
        "diff": "diff --git a/src/lib/snark_profiler_lib/snark_profiler_lib.ml b/src/lib/snark_profiler_lib/snark_profiler_lib.ml @@ -330,9 +330,9 @@ let create_ledger_and_zkapps ?(min_num_updates = 1) ?(num_proof_updates = 0)\nin\nlet parties =\nAsync.Thread_safe.block_on_async_exn (fun () ->\n- Transaction_snark.For_tests.update_states ~zkapp_prover:prover\n- ~constraint_constants ~empty_sender spec\n- ~receiver_auth:Control.Tag.Signature )\n+ Transaction_snark.For_tests.update_states\n+ ~zkapp_prover_and_vk:(prover, vk) ~constraint_constants\n+ ~empty_sender spec ~receiver_auth:Control.Tag.Signature )\nin\nlet simple_parties = Zkapp_command.to_simple parties in\nlet other_parties = simple_parties.account_updates in\n",
        "date": "31.01.2023 09:52:14",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Update Transaction_snark.For_tests.update_states function signature and arguments"
    },
    {
        "msg": "use the correct verification key hash in Zkapps_examples",
        "diff": "diff --git a/src/lib/zkapps_examples/zkapps_examples.ml b/src/lib/zkapps_examples/zkapps_examples.ml @@ -190,9 +190,11 @@ module Account_update_under_construction = struct\n; call_data : Field.t option\n; events : Events.t\n; actions : Actions.t\n+ ; vk_hash : Field.t\n}\n- let create ~public_key ?(token_id = Token_id.(Checked.constant default))\n+ let create ~public_key ~vk_hash\n+ ?(token_id = Token_id.(Checked.constant default))\n?(may_use_token = Account_update.May_use_token.Checked.constant No) () =\n{ public_key\n; token_id\n@@ -203,6 +205,7 @@ module Account_update_under_construction = struct\n; call_data = None\n; events = Events.create ()\n; actions = Actions.create ()\n+ ; vk_hash\n}\nlet to_account_update_and_calls (t : t) :\n@@ -269,9 +272,7 @@ module Account_update_under_construction = struct\n; authorization_kind =\n{ is_signed = Boolean.false_\n; is_proved = Boolean.true_\n- ; verification_key_hash =\n- Field.zero\n- (* the vk hash is a dummy, to be patched with `patch_verification_key_hashes`, below *)\n+ ; verification_key_hash = t.vk_hash\n}\n}\nin\n@@ -313,11 +314,11 @@ module Account_update_under_construction = struct\nend\nend\n-class account_update ~public_key ?token_id ?may_use_token =\n+class account_update ~public_key ~vk_hash ?token_id ?may_use_token =\nobject\nval mutable account_update =\n- Account_update_under_construction.In_circuit.create ~public_key ?token_id\n- ?may_use_token ()\n+ Account_update_under_construction.In_circuit.create ~public_key ~vk_hash\n+ ?token_id ?may_use_token ()\nmethod assert_state_proved =\naccount_update <-\n@@ -430,9 +431,9 @@ open Pickles_types\nopen Hlist\nlet wrap_main ~public_key ?token_id ?may_use_token f\n- { Pickles.Inductive_rule.public_input = () } =\n+ { Pickles.Inductive_rule.public_input = vk_hash } =\nlet account_update =\n- new account_update ~public_key ?token_id ?may_use_token\n+ new account_update ~public_key ~vk_hash ?token_id ?may_use_token\nin\nlet auxiliary_output = f account_update in\n{ Pickles.Inductive_rule.previous_proof_statements = []\n@@ -467,8 +468,8 @@ let compile :\n, prev_valuess\n, widthss\n, heightss\n- , unit\n- , unit\n+ , Field.t\n+ , Field.Constant.t\n, account_update\n, unit (* TODO: Remove? *)\n, auxiliary_var\n@@ -499,6 +500,7 @@ let compile :\nH3_2.T(Pickles.Prover).t =\nfun ?self ?cache ?disk_keys ~auxiliary_typ ~branches ~max_proofs_verified ~name\n~constraint_constants ~choices () ->\n+ let vk_hash = ref None in\nlet choices ~self =\nlet rec go :\ntype prev_varss prev_valuess widthss heightss.\n@@ -506,8 +508,8 @@ let compile :\n, prev_valuess\n, widthss\n, heightss\n- , unit\n- , unit\n+ , Field.t\n+ , Field.Constant.t\n, account_update\n, unit\n, auxiliary_var\n@@ -531,12 +533,16 @@ let compile :\n; prevs\n; uses_lookup\n; main =\n- (fun main_input ->\n+ (fun { Pickles.Inductive_rule.public_input = () } ->\n+ let vk_hash =\n+ exists Field.typ ~compute:(fun () ->\n+ Lazy.force @@ Option.value_exn !vk_hash )\n+ in\nlet { Pickles.Inductive_rule.previous_proof_statements\n; public_output = account_update_under_construction\n; auxiliary_output\n} =\n- main main_input\n+ main { Pickles.Inductive_rule.public_input = vk_hash }\nin\nlet public_output, account_update_tree =\nto_account_update account_update_under_construction\n@@ -556,6 +562,13 @@ let compile :\n~auxiliary_typ:Typ.(Prover_value.typ () * auxiliary_typ)\n~branches ~max_proofs_verified ~name ~constraint_constants ~choices\nin\n+ let () =\n+ vk_hash :=\n+ Some\n+ ( lazy\n+ ( Zkapp_account.digest_vk\n+ @@ Pickles.Side_loaded.Verification_key.of_compiled tag ) )\n+ in\nlet provers =\nlet rec go :\ntype prev_valuess widthss heightss.\n",
        "date": "02.02.2023 19:19:39",
        "repo": "minaprotocol/mina",
        "type": "use",
        "chatgpt_zeroshot": "Add verification key hash to account update creation and use it in account update circuit."
    },
    {
        "msg": "use $FlowFixMe",
        "diff": "diff --git a/src/PluginsRegistry.js b/src/PluginsRegistry.js @@ -34,9 +34,9 @@ export default class PluginsRegistry {\nthis.hooks.onProcessRule[i](rule, sheet)\n}\n- // TODO\n- // Find a way to use rule.type with flow\n- if (rule instanceof RegularRule) this.onProcessStyle(rule.style, rule, sheet)\n+ // $FlowFixMe\n+ if (rule.style) this.onProcessStyle(rule.style, rule, sheet)\n+\nrule.isProcessed = true\n}\n@@ -44,11 +44,12 @@ export default class PluginsRegistry {\n* Call `onProcessStyle` hooks.\n*/\nonProcessStyle(style: JssStyle, rule: Rule, sheet?: StyleSheet): void {\n- // TODO\n- // Only added because of flow.\n- if (!(rule instanceof RegularRule)) return\n+ let nextStyle = style\n+\nfor (let i = 0; i < this.hooks.onProcessStyle.length; i++) {\n- rule.style = style = this.hooks.onProcessStyle[i](style, rule, sheet)\n+ nextStyle = this.hooks.onProcessStyle[i](nextStyle, rule, sheet)\n+ // $FlowFixMe\n+ rule.style = nextStyle\n}\n}\n",
        "date": "12.06.2017 01:06:51",
        "repo": "cssinjs/jss",
        "type": "use",
        "chatgpt_zeroshot": "Fix type checking issues in PluginsRegistry.js"
    },
    {
        "msg": "use short class names for production",
        "diff": "diff --git a/src/utils/createGenerateClassName.js b/src/utils/createGenerateClassName.js /* @flow */\n+import warning from 'warning'\nimport type {Rule, generateClassName} from '../types'\nconst globalRef = typeof window === 'undefined' ? global : window\n@@ -7,6 +8,8 @@ if (globalRef[namespace] == null) globalRef[namespace] = 0\n// In case we have more than one JSS version.\nconst jssCounter = globalRef[namespace]++\n+const maxRules = 1e10\n+\n/**\n* Returns a function which generates unique class names based on counters.\n* When new generator function is created, rule counter is reseted.\n@@ -15,5 +18,21 @@ const jssCounter = globalRef[namespace]++\nexport default (): generateClassName => {\nlet ruleCounter = 0\n- return (rule: Rule): string => `${rule.key}-${jssCounter}-${ruleCounter++}`\n+ return (rule: Rule): string => {\n+ ruleCounter += 1\n+\n+ if (ruleCounter > maxRules) {\n+ warning(\n+ false,\n+ 'You might have a memory leak. Rule counter is at %s.',\n+ ruleCounter\n+ )\n+ }\n+\n+ if (process.env.NODE_ENV === 'production') {\n+ return `c${jssCounter}${ruleCounter}`\n+ }\n+\n+ return `${rule.key}-${jssCounter}-${ruleCounter}`\n+ }\n}\n",
        "date": "28.07.2017 23:23:52",
        "repo": "cssinjs/jss",
        "type": "use",
        "chatgpt_zeroshot": "Add maxRules limit and memory leak warning in createGenerateClassName.js"
    },
    {
        "msg": "use npm token from env var",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -21,7 +21,6 @@ jobs:\nskip_cleanup: true\ntag: \"$NPM_TAG\"\nemail: npm@mjackson.me\n- api_key:\n- secure: riXkB6uFwqAutPG/1caeh6qV8fSl6Tkjrpfn17gDCZVjHa/lojfXrCgif1gXkBg8x+KthCL7YJyAsFFREkakzqTS4WSfEtFAx+ucsoeBUT99tjCbFocqdc51EdOctwOUdgNAW0XJD+0Jnm6IBm8vjIwTshmrfqB1lS0FAmRgAuoTF/DVFugRn1zMZgeoEy0c2HuyJQvmrDn7S/FDvZhWgogPln5C7ro4hVkBeQ929UhY8HSQk5tBag5rLcya/QGvxcvo4q5vy7L2Y/6XPtXLdN58GRXUjQmBqpqf3Uf6zHTO6injqatl9npyOa/ovEHKKc71R2/Ane4jkHXeavzm5nang38DU7TVhpqhKLaXp58euo4TJD6FnPfxpYOu27Nho/BibYyqyDRkhBZbc6yEO1lhB1plgToDn9ji0Ix2QNlFv3QpT5/be2KcQ5OnhtA2xR/MjzO54UJ6RTgmZ9eRrRxONDlBn4+ZGc02Ra4MbFIR2dM6Tkwhv5V1zyI+lUf267Ef1hHOJnAT13YqdRr5Y9jPSYHxEbOJ3CiUqrXVXSsrVHky/ERKbXrHLC73qWZ1wa0kAtD5YvImN4eszuTbPaX/X5RGNsG1BwkQ8X4Job8hhkkEsdsEy0bkhaQpCmbi4WhEhMlMGqhr1r3w7/V5aMf+T5OzHK8vH9+kJhoX18M=\n+ api_key: \"$NPM_TOKEN\"\non:\ntags: true\n",
        "date": "15.03.2019 17:22:22",
        "repo": "reacttraining/history",
        "type": "use",
        "chatgpt_zeroshot": "Update Travis CI configuration to use NPM token for API key."
    },
    {
        "msg": "use PRETTY env var to run prettier on builds",
        "diff": "diff --git a/scripts/rollup.config.js b/scripts/rollup.config.js @@ -6,7 +6,7 @@ import prettier from 'rollup-plugin-prettier';\nimport replace from '@rollup/plugin-replace';\nimport { terser } from 'rollup-plugin-terser';\n-const dev = process.env.NODE_ENV === 'development';\n+const pretty = !!process.env.PRETTY;\nconst modules = [\n{\n@@ -14,7 +14,7 @@ const modules = [\noutput: {\nfile: 'build/history/history.js',\nformat: 'esm',\n- sourcemap: !dev\n+ sourcemap: !pretty\n},\nexternal: ['./browser.js', './hash.js', './memory.js'],\nplugins: [\n@@ -46,7 +46,7 @@ const modules = [\n],\nverbose: true\n})\n- ].concat(dev ? prettier({ parser: 'babel' }) : [])\n+ ].concat(pretty ? prettier({ parser: 'babel' }) : [])\n},\n...['browser', 'hash', 'memory'].map(env => {\nreturn {\n@@ -54,7 +54,7 @@ const modules = [\noutput: {\nfile: `build/history/${env}.js`,\nformat: 'esm',\n- sourcemap: !dev\n+ sourcemap: !pretty\n},\nexternal: ['@babel/runtime/helpers/esm/extends'],\nplugins: [\n@@ -73,7 +73,7 @@ const modules = [\nlanguage_in: 'ECMASCRIPT5_STRICT',\nlanguage_out: 'ECMASCRIPT5_STRICT'\n})\n- ].concat(dev ? prettier({ parser: 'babel' }) : [])\n+ ].concat(pretty ? prettier({ parser: 'babel' }) : [])\n};\n})\n];\n@@ -91,7 +91,7 @@ const node = [\npresets: [['@babel/preset-env', { loose: true }]],\nplugins: ['babel-plugin-dev-expression']\n})\n- ].concat(dev ? prettier({ parser: 'babel' }) : [])\n+ ].concat(pretty ? prettier({ parser: 'babel' }) : [])\n}\n];\n@@ -101,7 +101,7 @@ const globals = [\noutput: {\nfile: 'build/history/history.development.js',\nformat: 'umd',\n- sourcemap: !dev,\n+ sourcemap: !pretty,\nname: 'HistoryLibrary'\n},\nplugins: [\n@@ -116,14 +116,14 @@ const globals = [\nlanguage_in: 'ECMASCRIPT5_STRICT',\nlanguage_out: 'ECMASCRIPT5_STRICT'\n})\n- ].concat(dev ? prettier({ parser: 'babel' }) : [])\n+ ].concat(pretty ? prettier({ parser: 'babel' }) : [])\n},\n{\ninput: 'packages/history/modules/history.js',\noutput: {\nfile: 'build/history/history.production.min.js',\nformat: 'umd',\n- sourcemap: !dev,\n+ sourcemap: !pretty,\nname: 'HistoryLibrary'\n},\nplugins: [\n@@ -139,7 +139,7 @@ const globals = [\nlanguage_out: 'ECMASCRIPT5_STRICT'\n}),\nterser()\n- ].concat(dev ? prettier({ parser: 'babel' }) : [])\n+ ].concat(pretty ? prettier({ parser: 'babel' }) : [])\n}\n];\n",
        "date": "06.12.2019 22:54:46",
        "repo": "reacttraining/history",
        "type": "use",
        "chatgpt_zeroshot": "Refactor rollup.config.js to use PRETTY environment variable for source map generation."
    },
    {
        "msg": "use the correct propTypes for children.",
        "diff": "diff --git a/src/components/AnalyticsTable.js b/src/components/AnalyticsTable.js @@ -31,7 +31,7 @@ const HeaderCell = ({ children, ...props }) => (\n</th>\n);\nconst RegularCell = ({ children, ...props }) => <td {...props}>{children}</td>;\n-RegularCell.propTypes = { children: PropTypes.shape({}).isRequired };\n+RegularCell.propTypes = { children: PropTypes.node.isRequired };\nHeaderCell.propTypes = { children: PropTypes.shape({}).isRequired };\nconst AnalyticsTable = ({ data }) => (\n",
        "date": "02.02.2020 19:07:22",
        "repo": "dekkerglen/cubecobra",
        "type": "use",
        "chatgpt_zeroshot": "Update PropTypes for RegularCell in AnalyticsTable"
    },
    {
        "msg": "use new scryfall bulk endpoints",
        "diff": "diff --git a/serverjs/updatecards.js b/serverjs/updatecards.js @@ -4,6 +4,7 @@ const https = require('https'); // eslint-disable-line import/no-extraneous-depe\nconst JSONStream = require('JSONStream');\nconst es = require('event-stream');\nconst winston = require('winston');\n+const fetch = require('node-fetch');\nconst cardutil = require('../dist/utils/Card.js');\nconst util = require('./util.js');\n@@ -88,8 +89,20 @@ function downloadFile(url, filePath) {\n}\nasync function downloadDefaultCards(basePath = 'private', defaultSourcePath = null, allSourcePath = null) {\n- const defaultUrl = 'https://archive.scryfall.com/json/scryfall-default-cards.json';\n- const allUrl = 'https://archive.scryfall.com/json/scryfall-all-cards.json';\n+ let defaultUrl = 'https://archive.scryfall.com/json/scryfall-default-cards.json';\n+ let allUrl = 'https://archive.scryfall.com/json/scryfall-all-cards.json';\n+\n+ const res = await fetch(`https://api.scryfall.com/bulk-data`);\n+ const json = await res.json();\n+\n+ for (const data of json.data) {\n+ if (data.name === 'Default Cards') {\n+ defaultUrl = data.download_uri;\n+ } else if (data.name === 'All Cards') {\n+ allUrl = data.download_uri;\n+ }\n+ }\n+\nreturn Promise.all([\ndownloadFile(defaultUrl, defaultSourcePath || path.resolve(basePath, 'cards.json')),\ndownloadFile(allUrl, allSourcePath || path.resolve(basePath, 'all-cards.json')),\n@@ -562,6 +575,7 @@ function convertCard(card, isExtra) {\nnewcard.color_identity = Array.from(card.color_identity);\nnewcard.set = card.set;\nnewcard.collector_number = card.collector_number;\n+\nnewcard.promo =\ncard.promo ||\n(card.frame_effects && card.frame_effects.includes('extendedart')) ||\n@@ -719,7 +733,7 @@ async function updateCardbase(basePath = 'private', defaultPath = null, allPath\nfs.mkdirSync(basePath);\n}\n- await module.exports.downloadDefaultCards(basePath, defaultPath, allPath);\n+ await downloadDefaultCards(basePath, defaultPath, allPath);\nwinston.info('Updating cardbase, this might take a little while...');\nawait saveAllCards(basePath, defaultPath, allPath);\n",
        "date": "05.06.2020 16:54:17",
        "repo": "dekkerglen/cubecobra",
        "type": "use",
        "chatgpt_zeroshot": "Refactor card update process to use node-fetch for API requests"
    },
    {
        "msg": "use .on instead of .bind jQuery's .bind is deprecated. fix (merged manually because the `Merge` button does not appear on github)",
        "diff": "diff --git a/src/library/webscheme_lib.js b/src/library/webscheme_lib.js @@ -399,12 +399,12 @@ if( typeof(BiwaScheme)!='object' ) BiwaScheme={}; with(BiwaScheme) {\nvar handler = function(event){\nreturn _.clone(intp2).invoke_closure(proc, [event]);\n};\n- $(selector).bind(evtype, handler);\n+ $(selector).on(evtype, handler);\nreturn handler;\n});\ndefine_libfunc(\"remove-handler!\", 3, 3, function(ar, intp){\nvar selector = ar[0], evtype = ar[1], handler = ar[2];\n- $(selector).unbind(evtype, handler);\n+ $(selector).off(evtype, handler);\nreturn BiwaScheme.undef;\n});\ndefine_libfunc(\"wait-for\", 2, 2, function(ar){\n@@ -416,18 +416,18 @@ if( typeof(BiwaScheme)!='object' ) BiwaScheme={}; with(BiwaScheme) {\nif (prev_handler) {\n// Maybe a wait-for is called more than once,\n// and previous handler is not consumed.\n- elem.unbind(evtype, prev_handler);\n+ elem.off(evtype, prev_handler);\n}\nreturn new BiwaScheme.Pause(function(pause){\nvar handler = function(event){\nelem.biwascheme_wait_for[evtype] = undefined;\n- elem.unbind(evtype, handler);\n+ elem.off(evtype, handler);\nreturn pause.resume(event);\n};\nelem.biwascheme_wait_for[evtype] = handler;\n- elem.bind(evtype, handler);\n+ elem.on(evtype, handler);\n});\n});\n",
        "date": "21.07.2017 18:33:57",
        "repo": "biwascheme/biwascheme",
        "type": "use",
        "chatgpt_zeroshot": "Refactor event handling methods to use .on() and .off() instead of .bind() and .unbind()"
    },
    {
        "msg": "use the calculateObjectValue function",
        "diff": "diff --git a/src/extensions/multiple-sort/bootstrap-table-multiple-sort.js b/src/extensions/multiple-sort/bootstrap-table-multiple-sort.js var t = that.options.queryParams;\nthat.options.queryParams = function(params) {\nparams.multiSort = that.options.sortPriority;\n- return typeof window[t] === \"function\" ? window[t](params) : t(params);\n+ return $.fn.bootstrapTable.utils.calculateObjectValue(that.options, t, [params]);\n};\nisSingleSort=false;\nthat.initServer(that.options.silentSort);\n",
        "date": "22.03.2019 21:09:24",
        "repo": "wenzhixin/bootstrap-table",
        "type": "use",
        "chatgpt_zeroshot": "Refactor queryParams function to use calculateObjectValue for better code organization"
    },
    {
        "msg": "use a shorter syntax",
        "diff": "diff --git a/src/bootstrap-table.js b/src/bootstrap-table.js showColumn (field) {\nconst fields = Array.isArray(field) ? field : [field]\n- fields.forEach( (field) => {\n+ fields.forEach(field => {\nthis.toggleColumn(this.fieldsColumnsIndex[field], true, true)\n})\n}\nhideColumn (field) {\nconst fields = Array.isArray(field) ? field : [field]\n- fields.forEach( (field) => {\n+ fields.forEach(field => {\nthis.toggleColumn(this.fieldsColumnsIndex[field], false, true)\n})\n}\n",
        "date": "24.03.2019 01:22:12",
        "repo": "wenzhixin/bootstrap-table",
        "type": "use",
        "chatgpt_zeroshot": "Refactor showColumn and hideColumn methods to use arrow function syntax."
    },
    {
        "msg": "use the internal onColumnSearch function instead of trigger a event which triggers a internal event.",
        "diff": "diff --git a/src/extensions/filter-control/bootstrap-table-filter-control.js b/src/extensions/filter-control/bootstrap-table-filter-control.js `.date-filter-control.bootstrap-table-filter-control-${field}`\n)\n.datepicker(filterDatepickerOptions)\n- .on('changeDate', ({ currentTarget }) => {\n- $(currentTarget).val(\n- currentTarget.value\n- )\n- // Fired the keyup event\n- $(currentTarget).keyup()\n+ .on('changeDate', (event) => {\n+ clearTimeout(event.currentTarget.timeoutId || 0)\n+ event.currentTarget.timeoutId = setTimeout(() => {\n+ that.onColumnSearch(event)\n+ }, that.options.searchTimeOut)\n})\n}\n})\n",
        "date": "25.03.2019 06:44:58",
        "repo": "wenzhixin/bootstrap-table",
        "type": "use",
        "chatgpt_zeroshot": "Refactor datepicker change event handling in filter control extension"
    },
    {
        "msg": "use display flex to prevent break line to table header",
        "diff": "diff --git a/src/themes/theme.scss b/src/themes/theme.scss text-align: center;\n}\n- .card-view .card-view-title {\n+ .card-view{\n+ display: flex;\n+\n+ .card-view-title {\nfont-weight: bold;\ndisplay: inline-block;\nmin-width: 30%;\ntext-align: left !important;\n}\n}\n+ }\n.bs-checkbox {\ntext-align: center;\n",
        "date": "29.03.2019 21:09:29",
        "repo": "wenzhixin/bootstrap-table",
        "type": "use",
        "chatgpt_zeroshot": "Refactor card view layout and styling in theme.scss"
    },
    {
        "msg": "use the undefinedText option",
        "diff": "diff --git a/src/extensions/editable/bootstrap-table-editable.js b/src/extensions/editable/bootstrap-table-editable.js @@ -57,8 +57,8 @@ $.BootstrapTable = class extends $.BootstrapTable {\ncolumn.formatter = column.formatter || (value => value)\ncolumn._formatter = column._formatter ? column._formatter : column.formatter\ncolumn.formatter = (value, row, index) => {\n- const result = Utils.calculateObjectValue(column,\n- column._formatter, [value, row, index], value)\n+ let result = Utils.calculateObjectValue(column, column._formatter, [value, row, index], value)\n+ result = typeof result === 'undefined' || result === null ? this.options.undefinedText : result\n$.each(column, processDataOptions)\n",
        "date": "26.04.2019 03:12:37",
        "repo": "wenzhixin/bootstrap-table",
        "type": "use",
        "chatgpt_zeroshot": "Refactor column formatter to handle undefined or null values"
    },
    {
        "msg": "move some packages to dependencies",
        "diff": "diff --git a/package.json b/package.json \"marked\": \"^0.3.7\",\n\"moment\": \"^2.19.3\",\n\"next\": \"^4.2.1\",\n+ \"node-sass\": \"^4.7.2\",\n\"nprogress\": \"^0.2.0\",\n\"prop-types\": \"^15.6.0\",\n\"react\": \"^16.2.0\",\n\"react-leaflet\": \"^1.7.8\",\n\"react-table\": \"^6.7.4\",\n\"semantic-ui-css\": \"^2.2.12\",\n+ \"styled-jsx-plugin-sass\": \"^0.2.2\",\n\"underscore.string\": \"^3.3.4\"\n},\n\"resolutions\": {\n\"jest-junit\": \"^3.4.0\",\n\"lerna-changelog\": \"^0.7.0\",\n\"mock-local-storage\": \"^1.0.5\",\n- \"node-sass\": \"^4.7.2\",\n\"raf\": \"^3.4.0\",\n\"react-test-renderer\": \"^16.2.0\",\n- \"styled-jsx-plugin-sass\": \"^0.2.2\",\n\"webpack-bundle-analyzer\": \"^2.9.1\"\n},\n\"browserslist\": [\n",
        "date": "09.12.2017 17:30:56",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "move",
        "chatgpt_zeroshot": "Add node-sass and styled-jsx-plugin-sass to package.json"
    },
    {
        "msg": "move down Link import",
        "diff": "diff --git a/pages/documentation.js b/pages/documentation.js import React from 'react'\nimport {flowRight} from 'lodash'\n-import Link from '../components/link'\nimport attachI18n from '../components/hoc/attach-i18n'\nimport attachSession from '../components/hoc/attach-session'\n@@ -9,6 +8,7 @@ import Page from '../components/page'\nimport Meta from '../components/meta'\nimport Content from '../components/content'\nimport Container from '../components/container'\n+import Link from '../components/link'\nconst DocumentationPage = () => (\n<Page>\n",
        "date": "22.01.2018 17:06:22",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "move",
        "chatgpt_zeroshot": "Fix import of Link component in documentation page"
    },
    {
        "msg": "move _error page into main bundle",
        "diff": "diff --git a/next.config.js b/next.config.js -const {join, sep} = require('path')\n+const {join} = require('path')\nconst webpack = require('webpack')\nconst {BundleAnalyzerPlugin} = require('webpack-bundle-analyzer')\n// The following dependencies will be pushed to the commons.js bundle\nconst commonDependencies = [\n- 'lodash-es',\n- 'marked',\n+ '/lodash-es/',\n+ '/marked/',\n- 'components/hoc'\n+ '/components/hoc/',\n+\n+ '/pages/_error.js'\n]\nmodule.exports = {\n@@ -25,7 +27,7 @@ module.exports = {\nconst {minChunks} = commonPlugin\ncommonPlugin.minChunks = (module, count) => {\n- if (module.resource && commonDependencies.some(c => module.resource.includes(`${sep}${c}${sep}`))) {\n+ if (module.resource && commonDependencies.some(c => module.resource.includes(c))) {\nreturn true\n}\n",
        "date": "26.03.2018 13:55:04",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "move",
        "chatgpt_zeroshot": "Refactor webpack configuration and update common dependencies in next.config.js"
    },
    {
        "msg": "move next stuff to the main bundle",
        "diff": "diff --git a/next.config.js b/next.config.js @@ -5,6 +5,7 @@ const {BundleAnalyzerPlugin} = require('webpack-bundle-analyzer')\n// The following dependencies will be pushed to the commons.js bundle\nconst commonDependencies = [\n+ '/next/',\n'/lodash-es/',\n'/marked/',\n",
        "date": "03.05.2018 16:32:54",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "move",
        "chatgpt_zeroshot": "Add next.js to common dependencies in next.config.js"
    },
    {
        "msg": "move Manage Players item to players menu",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/toolbar.js b/MaterialSkin/HTML/material/html/js/toolbar.js @@ -34,6 +34,11 @@ Vue.component('lms-toolbar', {\n</v-list-tile>\n</template>\n+ <v-divider v-if=\"players && players.length>1\"></v-divider>\n+ <v-list-tile v-if=\"players && players.length>1\" @click=\"menuAction(TB_MANAGE_PLAYERS.id)\">\n+ <v-list-tile-title v-bind:class=\"{'pm-icon-indent' : players && players.length>0}\"><v-icon>speaker_group</v-icon>&nbsp;{{TB_MANAGE_PLAYERS.title}}</v-list-tile-title>\n+ </v-list-tile>\n+\n<v-divider v-if=\"(player && player.canpoweroff) || (players && players.length>1) || playerStatus.sleepTimer\"></v-divider>\n<v-list-tile v-if=\"player && player.canpoweroff\" @click=\"togglePower()\">\n<v-list-tile-content v-if=\"playerStatus.ison\">\n@@ -195,7 +200,7 @@ Vue.component('lms-toolbar', {\nTB_SERVER_SETTINGS.title=i18n('Server Settings');\nTB_INFO.title=i18n('Information');\nTB_MANAGE_PLAYERS.title=i18n('Manage Players');\n- this.menuItems = [ TB_UI_SETTINGS, TB_PLAYER_SETTINGS, TB_SERVER_SETTINGS, TB_MANAGE_PLAYERS, TB_INFO ];\n+ this.menuItems = [ TB_UI_SETTINGS, TB_PLAYER_SETTINGS, TB_SERVER_SETTINGS, TB_INFO ];\nthis.trans = {noplayer:i18n('No Player'), synchronise:i18n('Synchronise'),\nmanagegroups:i18n('Manage player groups'), nothingplaying:i18n('Nothing playing'),\ninfo:i18n(\"Show current track information\"), switchoff:i18n('Switch Off'), switchon:i18n('Switch On')};\n",
        "date": "20.11.2018 14:50:53",
        "repo": "cdrummond/lms-material",
        "type": "move",
        "chatgpt_zeroshot": "Remove manage players option from toolbar menu items"
    },
    {
        "msg": "move 'Start Player' into general section",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/ui-settings.js b/MaterialSkin/HTML/material/html/js/ui-settings.js @@ -48,6 +48,15 @@ Vue.component('lms-ui-settings', {\n<v-select :items=\"volumeSteps\" :label=\"i18n('Volume step')\" v-model=\"volumeStep\" item-text=\"label\" item-value=\"value\"></v-select>\n</v-list-tile>\n+ <v-divider v-if=\"android\"></v-divider>\n+ <v-list-tile v-if=\"android\">\n+ <v-list-tile-content @click=\"showPlayerMenuEntry = !showPlayerMenuEntry\" class=\"switch-label\">\n+ <v-list-tile-title>{{i18n(\"Add menu option to start player\")}}</v-list-tile-title>\n+ <v-list-tile-sub-title>{{i18n('Add option to main menu to launch player.')}} {{i18n(\"(Currently only 'SB Player' is supported.)\")}}</v-list-tile-title>\n+ </v-list-tile-content>\n+ <v-list-tile-action><v-switch v-model=\"showPlayerMenuEntry\"></v-switch></v-list-tile-action>\n+ </v-list-tile>\n+\n<div class=\"dialog-padding\"></div>\n<v-header>{{i18n('Browse')}}</v-header>\n<v-list-tile>\n@@ -192,16 +201,7 @@ Vue.component('lms-ui-settings', {\n</v-list-tile-content>\n<v-list-tile-action><v-switch v-model=\"infoBackdrop\"></v-switch></v-list-tile-action>\n</v-list-tile>\n- <div v-if=\"showPlayerConfig\" class=\"dialog-padding\"></div>\n- <v-header v-if=\"showPlayerConfig\">{{i18n('Player')}}</v-header>\n- <v-list-tile v-if=\"showPlayerConfig\">\n- <v-list-tile-content @click=\"showPlayerMenuEntry = !showPlayerMenuEntry\" class=\"switch-label\">\n- <v-list-tile-title>{{i18n(\"Add menu option to start player\")}}</v-list-tile-title>\n- <v-list-tile-sub-title>{{i18n('Add option to main menu to launch player.')}} {{i18n(\"(Currently only 'SB Player' is supported.)\")}}</v-list-tile-title>\n- </v-list-tile-content>\n- <v-list-tile-action><v-switch v-model=\"showPlayerMenuEntry\"></v-switch></v-list-tile-action>\n- </v-list-tile>\n<div class=\"dialog-padding\"></div>\n</v-list>\n</v-card-text>\n@@ -243,7 +243,7 @@ Vue.component('lms-ui-settings', {\n],\nvolumeStep: 5,\nshowPlayerMenuEntry: false,\n- showPlayerConfig: isAndroid()\n+ android: isAndroid()\n}\n},\ncomputed: {\n",
        "date": "10.04.2019 16:51:16",
        "repo": "cdrummond/lms-material",
        "type": "move",
        "chatgpt_zeroshot": "Refactor UI settings to use 'android' flag instead of 'showPlayerConfig'"
    },
    {
        "msg": "move functions into class",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/main.js b/MaterialSkin/HTML/material/html/js/main.js Vue.use(VueLazyload, {error:LMS_BLANK_COVER});\nconst MIN_DESKTOP_WIDTH = 600;\n-var usingDesktopLayout = false;\n-var autoLayout = true;\n-function checkLayout() {\n- if (autoLayout && !IS_MOBILE) { // auto-layout broken on iPad #109\n- var changeTo=undefined;\n- if ( (window.innerWidth<MIN_DESKTOP_WIDTH && usingDesktopLayout) || (window.innerWidth>=MIN_DESKTOP_WIDTH && !usingDesktopLayout)) {\n- bus.$emit('changeLayout');\n- }\n- }\n-}\n-\n-function checkEntryFocus() {\n- if (IS_MOBILE && (document.activeElement.tagName==\"INPUT\" || document.activeElement.tagName==\"TEXTAREA\")) {\n- ensureVisible(document.activeElement);\n- }\n-}\nvar app = new Vue({\nel: '#app',\n@@ -35,6 +19,7 @@ var app = new Vue({\ndstm: false, savequeue: false } }\n},\ncreated() {\n+ this.autoLayout = true;\nthis.splitterPercent = parseInt(getLocalStorageVal(\"splitter\", \"50\"));\nthis.splitter = this.splitterPercent;\ndocument.documentElement.style.setProperty('--splitter-pc', this.splitter);\n@@ -54,9 +39,6 @@ var app = new Vue({\nthis.setLayout(false);\n} else {\nthis.setLayout();\n- bus.$on('changeLayout', function(forceDesktop) {\n- this.setLayout(forceDesktop);\n- }.bind(this));\n}\nvar storedTrans = getLocalStorageVal('translation', undefined);\n@@ -127,6 +109,7 @@ var app = new Vue({\nlet lastWinHeight = window.innerHeight;\nlet lastWinWidth = window.innerWidth;\nlet timeout = undefined;\n+ let lmsApp = this;\ndocument.documentElement.style.setProperty('--vh', `${vh}px`);\nwindow.addEventListener('resize', () => {\nif (timeout) {\n@@ -142,10 +125,14 @@ var app = new Vue({\ntimeout = undefined;\nif (Math.abs(lastWinWidth-window.innerWidth)>=3) {\nlastWinWidth = window.innerWidth;\n- checkLayout();\n+ lmsApp.checkLayout();\nbus.$emit('windowWidthChanged');\n}\n- checkEntryFocus();\n+\n+ // Check entries are visible\n+ if (IS_MOBILE && (document.activeElement.tagName==\"INPUT\" || document.activeElement.tagName==\"TEXTAREA\")) {\n+ ensureVisible(document.activeElement);\n+ }\n}, 50);\n}, false);\n@@ -308,10 +295,16 @@ var app = new Vue({\n}\n}\n},\n+ checkLayout() {\n+ if (this.autoLayout &&\n+ ( (window.innerWidth<MIN_DESKTOP_WIDTH && this.$store.state.desktopLayout) ||\n+ (window.innerWidth>=MIN_DESKTOP_WIDTH && !this.$store.state.desktopLayout)) ) {\n+ this.setLayout();\n+ }\n+ },\nsetLayout(forceDesktop) {\n- autoLayout = undefined==forceDesktop;\n- usingDesktopLayout = undefined==forceDesktop ? window.innerWidth>=MIN_DESKTOP_WIDTH : forceDesktop;\n- this.$store.commit('setDesktopLayout', usingDesktopLayout);\n+ this.autoLayout = undefined==forceDesktop;\n+ this.$store.commit('setDesktopLayout', undefined==forceDesktop ? window.innerWidth>=MIN_DESKTOP_WIDTH : forceDesktop);\n}\n},\ncomponents: {\n",
        "date": "11.02.2020 16:03:40",
        "repo": "cdrummond/lms-material",
        "type": "move",
        "chatgpt_zeroshot": "Refactor layout checking and entry focus in main.js"
    },
    {
        "msg": "move progress spiners a little higher",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/information.js b/MaterialSkin/HTML/material/html/js/information.js @@ -35,7 +35,7 @@ Vue.component('lms-information-dialog', {\n<p class=\"about-header\">{{i18n('Library')}}</p>\n<ul>\n<template v-for=\"(item, index) in library\"><li>{{item}}</li></template>\n- <li v-if=\"scanning\"><v-progress-circular size=16 width=2 indeterminate></v-progress-circular> {{scanInfo}}</li>\n+ <li v-if=\"scanning\"><v-progress-circular size=16 width=2 indeterminate style=\"margin-top:-4px\"></v-progress-circular> {{scanInfo}}</li>\n<li v-else>{{scanInfo}}</li>\n</ul>\n<v-menu bottom v-if=\"!scanning && unlockAll\">\n@@ -57,7 +57,7 @@ Vue.component('lms-information-dialog', {\n<template v-for=\"(plug, index) in updates.details\"><li>{{plug.title}} {{plug.version}}<v-btn flat icon @click=\"pluginInfo(plug)\" class=\"info-help-icon\"><v-icon small>help_outline</v-icon></v-btn></li></template>\n</ul>\n<v-btn v-if=\"updates.details.length>0 && 'idle'==pluginStatus && unlockAll\" @click=\"updatePlugins\" flat><img class=\"svg-img btn-icon\" :src=\"'update' | svgIcon(darkUi)\">{{i18n('Update plugins')}}</v-btn>\n- <p v-if=\"'downloading'==pluginStatus\"><v-progress-circular size=16 width=2 indeterminate></v-progress-circular> {{i18n('Downloading plugin updates')}}</p>\n+ <p v-if=\"'downloading'==pluginStatus\"><v-progress-circular size=16 width=2 indeterminate style=\"margin-top:-4px\"></v-progress-circular> {{i18n('Downloading plugin updates')}}</p>\n<v-btn v-if=\"'needs_restart'==pluginStatus && unlockAll\" @click=\"restartServer\" flat>{{i18n('Restart server')}}</v-btn>\n<p v-if=\"'downloading'!=pluginStatus && updates.details.length>0\" style=\"padding-top:16px\">{{i18n('The following plugins are up to date:')}}</p>\n<ul>\n",
        "date": "27.05.2020 22:49:17",
        "repo": "cdrummond/lms-material",
        "type": "move",
        "chatgpt_zeroshot": "Update progress circular style in information dialog"
    },
    {
        "msg": "move large covers option into browse section",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/ui-settings.js b/MaterialSkin/HTML/material/html/js/ui-settings.js @@ -137,15 +137,6 @@ Vue.component('lms-ui-settings', {\n</v-list-tile>\n<v-divider></v-divider>\n- <v-list-tile>\n- <v-list-tile-content @click=\"largeCovers = !largeCovers\" class=\"switch-label\">\n- <v-list-tile-title>{{i18n('Large covers')}}</v-list-tile-title>\n- <v-list-tile-sub-title>{{i18n(\"When possible, allow the grid view to show larger covers.\")}}</v-list-tile-title>\n- </v-list-tile-content>\n- <v-list-tile-action><v-switch v-model=\"largeCovers\"></v-switch></v-list-tile-action>\n- </v-list-tile>\n- <v-divider></v-divider>\n-\n<v-list-tile>\n<v-list-tile-content @click=\"showRating = !showRating\" class=\"switch-label\">\n<v-list-tile-title>{{i18n('Show rating')}}</v-list-tile-title>\n@@ -216,6 +207,15 @@ Vue.component('lms-ui-settings', {\n</v-list-tile>\n<v-divider></v-divider>\n+ <v-list-tile>\n+ <v-list-tile-content @click=\"largeCovers = !largeCovers\" class=\"switch-label\">\n+ <v-list-tile-title>{{i18n('Large covers')}}</v-list-tile-title>\n+ <v-list-tile-sub-title>{{i18n(\"When possible, allow the grid view to show larger covers.\")}}</v-list-tile-title>\n+ </v-list-tile-content>\n+ <v-list-tile-action><v-switch v-model=\"largeCovers\"></v-switch></v-list-tile-action>\n+ </v-list-tile>\n+ <v-divider></v-divider>\n+\n<v-list-tile>\n<v-list-tile-content @click=\"sortHome = !sortHome\" class=\"switch-label\">\n<v-list-tile-title>{{i18n('Sort home screen')}}</v-list-tile-title>\n",
        "date": "28.07.2021 12:37:32",
        "repo": "cdrummond/lms-material",
        "type": "move",
        "chatgpt_zeroshot": "\"Add option for large covers in grid view\""
    },
    {
        "msg": "move down the Masthead popupmenu by 15px",
        "diff": "diff --git a/js/popupmenu.js b/js/popupmenu.js opts.parentXAlignment = (isRTL ? 'left' : 'right');\n}\n+ function shiftDown() {\n+ opts.y = opts.y + 15;\n+ }\n+\n// Change the alignment of the popupmenu based on certain conditions\n(function doAlignment() {\nif (menuIsSmallerThanTrigger) {\n}\n})();\n+ if (target.parents('.masthead').length > 0) {\n+ shiftDown();\n+ }\n+\n//=======================================================\n// END Temporary stuff until we sort out passing these settings from the controls that utilize them\n//=======================================================\n",
        "date": "09.01.2017 12:58:10",
        "repo": "infor-design/enterprise",
        "type": "move",
        "chatgpt_zeroshot": "Adjust popup menu position when target is within masthead."
    },
    {
        "msg": "move a line as per not",
        "diff": "diff --git a/js/autocomplete.js b/js/autocomplete.js closeList: function() {\nvar popup = this.element.data('popupmenu');\nif (!popup) {\n- popup.close();\nreturn;\n}\n+ popup.close();\nthis.element.trigger('listclose');\n$('#autocomplete-list').parent('.popupmenu-wrapper').remove();\n$('#autocomplete-list').remove();\n",
        "date": "12.06.2017 15:13:24",
        "repo": "infor-design/enterprise",
        "type": "move",
        "chatgpt_zeroshot": "Fix issue with closing autocomplete list and trigger listclose event"
    },
    {
        "msg": "move the inline styles to css classes",
        "diff": "diff --git a/app/views/components/drag/example-index.html b/app/views/components/drag/example-index.html -<div class=\"row\" style=\"height: 100px\">\n+<style>\n+ .drag-container {\n+ height: 100px;\n+ }\n+\n+ .drag-box {\n+ border: 1px solid #bdbdbd;\n+ position: absolute;\n+ width:50px;\n+ height:50px;\n+ background:#ffffff;\n+ }\n+\n+ .left-340 {\n+ left: 340px;\n+ }\n+\n+ .left-395 {\n+ left: 395px;\n+ }\n+</style>\n+\n+<div class=\"row drag-container\">\n<div class=\"twelve columns\">\n<span class=\"label\">Draggable - Free</span>\n- <div class=\"draggable\" style=\"border: 1px solid #bdbdbd;position:absolute; width:50px; height:50px; background:#ffffff;\">Free</div>\n+ <div class=\"draggable drag-box\">Free</div>\n</div>\n</div>\n-<div class=\"row\" style=\"height: 100px\">\n+<div class=\"row drag-container\">\n<div class=\"twelve columns\">\n<span class=\"label\">Draggable - Clone</span>\n- <div class=\"draggable clone\" style=\"border: 1px solid #bdbdbd;position:absolute; width:50px; height:50px; background:#ffffff;\">Clone</div>\n+ <div class=\"draggable clone drag-box\">Clone</div>\n</div>\n</div>\n-<div class=\"row\" style=\"height: 100px\">\n+<div class=\"row drag-container\">\n<div class=\"twelve columns\">\n- <span class=\"label\">Draggable - only on x or y axis</span>\n- <div class=\"draggable x-only\" style=\"border: 1px solid #bdbdbd;position:absolute; width:50px; height:50px; background:#ffffff;\">X Only</div>\n+ <span class=\"label\">Draggable - Only on X or Y axis</span>\n+ <div class=\"draggable x-only drag-box\">X Only</div>\n</div>\n</div>\n-<div class=\"row\" style=\"height: 100px\">\n+<div class=\"row drag-container\">\n<div class=\"twelve columns\">\n- <span class=\"label\">Draggable - with collision detection</span>\n- <div id=\"one\" class=\"draggable x-only collision\" style=\"border: 1px solid #bdbdbd; position:absolute; left: 395px; width:50px; height:50px; background:#ffffff;\">Left</div>\n- <div id=\"two\" class=\"draggable x-only collision\" style=\"border: 1px solid #bdbdbd; position:absolute; left: 340px; width:50px; height:50px; background:#ffffff;\">Right</div>\n+ <span class=\"label\">Draggable - with Collision Detection</span>\n+ <div id=\"one\" class=\"draggable x-only collision drag-box left-340\">Left</div>\n+ <div id=\"two\" class=\"draggable x-only collision drag-box left-395\">Right</div>\n</div>\n</div>\n",
        "date": "03.10.2018 10:37:26",
        "repo": "infor-design/enterprise",
        "type": "move",
        "chatgpt_zeroshot": "Refactor drag component styles and classes for better organization and readability"
    },
    {
        "msg": "move a variable so its safer",
        "diff": "diff --git a/src/components/monthview/monthview.js b/src/components/monthview/monthview.js @@ -1008,10 +1008,10 @@ MonthView.prototype = {\n};\n// Handle selecting a year, or month\n- const triggerBtn = this.element[0].querySelector('#btn-monthyear-pane');\nthis.monthYearPane\n.off('click.picklist-month')\n.on('click.picklist-month', '.picklist.is-month li', (e) => {\n+ const triggerBtn = this.element[0].querySelector('#btn-monthyear-pane');\nthis.currentMonth = parseInt(e.target.getAttribute('data-month'), 10);\nthis.currentDate.setMonth(this.currentMonth);\nthis.currentYear = parseInt(this.monthYearPane[0].querySelector('.is-year .is-selected a').getAttribute('data-year'), 10);\n@@ -1035,6 +1035,7 @@ MonthView.prototype = {\nthis.monthYearPane\n.off('click.picklist-year')\n.on('click.picklist-year', '.picklist.is-year li', (e) => {\n+ const triggerBtn = this.element[0].querySelector('#btn-monthyear-pane');\nif (e.currentTarget.classList.contains('up')) {\nappendYear('up');\nreturn;\n",
        "date": "26.07.2019 18:03:19",
        "repo": "infor-design/enterprise",
        "type": "move",
        "chatgpt_zeroshot": "Refactor month and year selection logic in MonthView"
    },
    {
        "msg": "move a change log entry",
        "diff": "diff --git a/docs/CHANGELOG.md b/docs/CHANGELOG.md ### v4.26.0 Features\n-- `[Datagrid]` Added fixes for editing lookup fields, fixed the styling of the lookup editor and improved padding, also fixed the sort indicator color. ([#3160](https://github.com/infor-design/enterprise/issues/3160))\n- `[Icons]` Added new icons `icon-play, icon-stop, icon-record, icon-pause` for video players. ([#397](https://github.com/infor-design/design-system/issues/397))\n### v4.26.0 Fixes\n+- `[Datagrid]` Added fixes for editing lookup fields, fixed the styling of the lookup editor and improved padding, also fixed the sort indicator color. ([#3160](https://github.com/infor-design/enterprise/issues/3160))\n- `[Pie]` Fixed an issue where initial selection was getting error. ([#3157](https://github.com/infor-design/enterprise/issues/3157))\n### v4.26.0 Chores & Maintenance\n",
        "date": "23.01.2020 15:57:52",
        "repo": "infor-design/enterprise",
        "type": "move",
        "chatgpt_zeroshot": "Fixes and features added for Datagrid and Icons in version 4.26.0"
    },
    {
        "msg": "move the css fix to a better spot",
        "diff": "diff --git a/src/components/calendar/_calendar.scss b/src/components/calendar/_calendar.scss width: calc(100% - 3px);\n}\n- &:hover > a {\n- text-decoration: none;\n- }\n-\n.btn {\ndisplay: none;\n}\n}\n.accordion-header {\n+ &:hover > a {\n+ text-decoration: none;\n+ }\n+\n&.has-chevron > a {\nline-height: 15px;\nwidth: calc(100% - 40px);\n",
        "date": "03.06.2020 16:54:02",
        "repo": "infor-design/enterprise",
        "type": "move",
        "chatgpt_zeroshot": "Remove text decoration on hover for calendar links and show accordion header chevron on hover."
    },
    {
        "msg": "move off method in detach",
        "diff": "diff --git a/src/components/popupmenu/popupmenu.js b/src/components/popupmenu/popupmenu.js @@ -1023,7 +1023,7 @@ PopupMenu.prototype = {\nself.handleItemClick(e, a);\n});\n- this.menu.off(`click.btn-menu.${this.id}`).on(`click.btn-menu.${this.id}`, (e) => {\n+ this.menu.on(`click.btn-menu.${this.id}`, function (e) {\ne.preventDefault();\n});\n@@ -2334,6 +2334,12 @@ PopupMenu.prototype = {\nthis.menu.off('click.popupmenu touchend.popupmenu touchcancel.popupmenu dragstart.popupmenu');\n}\n+ setTimeout(() => {\n+ if (this.menu && this.menu.length) {\n+ this.menu.off(`click.btn-menu.${this.id}`);\n+ }\n+ }, 1);\n+\n$('iframe').each(function () {\nconst frame = $(this);\ntry {\n",
        "date": "25.06.2021 22:50:42",
        "repo": "infor-design/enterprise",
        "type": "move",
        "chatgpt_zeroshot": "Fix event listener removal in PopupMenu component"
    },
    {
        "msg": "move some function to file scope - accessed through closures",
        "diff": "diff --git a/src/base/base-mixin.js b/src/base/base-mixin.js @@ -8,6 +8,55 @@ import {logger} from '../core/logger';\nimport {InvalidStateException} from '../core/invalid-state-exception';\nimport {BadArgumentException} from '../core/bad-argument-exception';\n+const _defaultFilterHandler = (dimension, filters) => {\n+ if (filters.length === 0) {\n+ dimension.filter(null);\n+ } else if (filters.length === 1 && !filters[0].isFiltered) {\n+ // single value and not a function-based filter\n+ dimension.filterExact(filters[0]);\n+ } else if (filters.length === 1 && filters[0].filterType === 'RangedFilter') {\n+ // single range-based filter\n+ dimension.filterRange(filters[0]);\n+ } else {\n+ dimension.filterFunction(d => {\n+ for (let i = 0; i < filters.length; i++) {\n+ const filter = filters[i];\n+ if (filter.isFiltered && filter.isFiltered(d)) {\n+ return true;\n+ } else if (filter <= d && filter >= d) {\n+ return true;\n+ }\n+ }\n+ return false;\n+ });\n+ }\n+ return filters;\n+};\n+\n+const _defaultHasFilterHandler = (filters, filter) => {\n+ if (filter === null || typeof (filter) === 'undefined') {\n+ return filters.length > 0;\n+ }\n+ return filters.some(f => filter <= f && filter >= f);\n+};\n+\n+const _defaultRemoveFilterHandler = (filters, filter) => {\n+ for (let i = 0; i < filters.length; i++) {\n+ if (filters[i] <= filter && filters[i] >= filter) {\n+ filters.splice(i, 1);\n+ break;\n+ }\n+ }\n+ return filters;\n+};\n+\n+const _defaultAddFilterHandler = (filters, filter) => {\n+ filters.push(filter);\n+ return filters;\n+};\n+\n+const _defaultResetFilterHandler = filters => [];\n+\n/**\n* `dc.baseMixin` is an abstract functional object representing a basic `dc` chart object\n* for all chart and widget implementations. Methods from the {@link #dc.baseMixin dc.baseMixin} are inherited\n@@ -79,11 +128,11 @@ export class BaseMixin {\nthis._filters = [];\n- this._filterHandler = this._defaultFilterHandler;\n- this._hasFilterHandler = this._defaultHasFilterHandler;\n- this._removeFilterHandler = this._defaultRemoveFilterHandler;\n- this._addFilterHandler = this._defaultAddFilterHandler;\n- this._resetFilterHandler = this._defaultResetFilterHandler;\n+ this._filterHandler = _defaultFilterHandler;\n+ this._hasFilterHandler = _defaultHasFilterHandler;\n+ this._removeFilterHandler = _defaultRemoveFilterHandler;\n+ this._addFilterHandler = _defaultAddFilterHandler;\n+ this._resetFilterHandler = _defaultResetFilterHandler;\n// ES6: need to figure out proper way to deprecate\n@@ -1533,57 +1582,6 @@ export class BaseMixin {\nreturn (height && height > this._minHeight) ? height : this._minHeight;\n}\n- _defaultFilterHandler (dimension, filters) {\n- if (filters.length === 0) {\n- dimension.filter(null);\n- } else if (filters.length === 1 && !filters[0].isFiltered) {\n- // single value and not a function-based filter\n- dimension.filterExact(filters[0]);\n- } else if (filters.length === 1 && filters[0].filterType === 'RangedFilter') {\n- // single range-based filter\n- dimension.filterRange(filters[0]);\n- } else {\n- dimension.filterFunction(d => {\n- for (let i = 0; i < filters.length; i++) {\n- const filter = filters[i];\n- if (filter.isFiltered && filter.isFiltered(d)) {\n- return true;\n- } else if (filter <= d && filter >= d) {\n- return true;\n- }\n- }\n- return false;\n- });\n- }\n- return filters;\n- }\n-\n- _defaultHasFilterHandler (filters, filter) {\n- if (filter === null || typeof (filter) === 'undefined') {\n- return filters.length > 0;\n- }\n- return filters.some(f => filter <= f && filter >= f);\n- }\n-\n- _defaultRemoveFilterHandler (filters, filter) {\n- for (let i = 0; i < filters.length; i++) {\n- if (filters[i] <= filter && filters[i] >= filter) {\n- filters.splice(i, 1);\n- break;\n- }\n- }\n- return filters;\n- }\n-\n- _defaultAddFilterHandler (filters, filter) {\n- filters.push(filter);\n- return filters;\n- }\n-\n- _defaultResetFilterHandler (filters) {\n- return [];\n- }\n-\n_defaultData (group) {\nreturn group.all();\n}\n",
        "date": "24.08.2019 23:37:13",
        "repo": "dc-js/dc.js",
        "type": "move",
        "chatgpt_zeroshot": "Refactor filter handling methods in base mixin"
    },
    {
        "msg": "move the onClick",
        "diff": "diff --git a/src/templates/cheat-sheet-template.js b/src/templates/cheat-sheet-template.js @@ -61,12 +61,12 @@ export default ({ data, pageContext }) => {\n<StyledDate>Created: {createdDate}</StyledDate>\n<StyledDate>Updated: {updatedDate}</StyledDate>\n<StyledA\n- target=\"_blank\"\n- rel=\"noopener noreferrer\"\n- href={fields.editLink}\nonClick={() => {\nfa('6ETKCM0U');\n}}\n+ target=\"_blank\"\n+ rel=\"noopener noreferrer\"\n+ href={fields.editLink}\n>\nEdit this page on GitHub\n</StyledA>\n",
        "date": "12.01.2020 07:36:26",
        "repo": "spences10/cheat-sheets",
        "type": "move",
        "chatgpt_zeroshot": "Update edit link styling in cheat sheet template"
    },
    {
        "msg": "move navLinks into site metadata and update PageLayout",
        "diff": "diff --git a/src/components/layout/PageLayout.js b/src/components/layout/PageLayout.js @@ -3,32 +3,24 @@ import PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\n-import { SocialGraph, site } from '../basics';\n+import useSiteMetadata from '../lib/useSiteMetadata';\n+\n+import { SocialGraph } from '../basics';\nimport Header from './Header';\nimport Footer from './Footer';\n-const { metadata, url } = site;\n-\nconst Layout = styled.div``;\n-export const navLinks = [\n- { title: 'Docs', href: url.docs.home, isGatsby: false },\n- { title: 'Addons', href: url.addons, isGatsby: true },\n- { title: 'Community', href: url.community, isGatsby: true },\n- { title: 'Use cases', href: url.useCases, isGatsby: true },\n- { title: 'Support', href: url.support, isGatsby: true },\n- { title: 'Team', href: url.team, isGatsby: true },\n-];\n-\nexport default function PageLayout({ allMediumPost, children, ...props }) {\n+ const { urls, title, description, ogImage, googleSiteVerification } = useSiteMetadata();\nreturn (\n<Layout {...props}>\n<SocialGraph\n// this is default social graph styling, it will be overridden by page-specific oggraph\n- title={metadata.title}\n- desc={metadata.description}\n- url={url.home}\n- image={metadata.ogImage}\n+ title={title}\n+ desc={description}\n+ url={urls.home}\n+ image={ogImage}\n/>\n<Helmet\nmeta={[\n@@ -47,7 +39,7 @@ export default function PageLayout({ allMediumPost, children, ...props }) {\nsizes=\"16x16 32x32 64x64\"\n/>\n- <meta name=\"google-site-verification\" content={metadata.googleSiteVerification} />\n+ <meta name=\"google-site-verification\" content={googleSiteVerification} />\n</Helmet>\n<Header />\n{children}\n",
        "date": "18.04.2019 19:55:27",
        "repo": "storybookjs/frontpage",
        "type": "move",
        "chatgpt_zeroshot": "Refactor PageLayout to use custom hook for site metadata"
    },
    {
        "msg": "move Zeplin to the end",
        "diff": "diff --git a/src/components/screens/AddonScreen/AddonScreen.js b/src/components/screens/AddonScreen/AddonScreen.js @@ -371,11 +371,6 @@ export function PureAddonScreen({ ...props }) {\n/>\n<Subheader>Design</Subheader>\n- <AddonItem\n- title=\"Zeplin\"\n- desc=\"Embed Zeplin designs in a storybook panel.\"\n- addonUrl=\"https://github.com/mertkahyaoglu/storybook-zeplin\"\n- />\n<AddonItem\ntitle=\"Story2sketch\"\ndesc=\"Convert stories into Sketch symbols.\"\n@@ -406,6 +401,11 @@ export function PureAddonScreen({ ...props }) {\ndesc=\"Suggestions on how to tweak the HTML and CSS of your components to be more mobile-friendly.\"\naddonUrl=\"https://github.com/aholachek/storybook-mobile\"\n/>\n+ <AddonItem\n+ title=\"Zeplin\"\n+ desc=\"Embed Zeplin designs in a storybook panel.\"\n+ addonUrl=\"https://github.com/mertkahyaoglu/storybook-zeplin\"\n+ />\n<div>\n<Button\nappearance=\"secondaryOutline\"\n",
        "date": "07.05.2020 21:06:01",
        "repo": "storybookjs/frontpage",
        "type": "move",
        "chatgpt_zeroshot": "\"Add Zeplin addon back to AddonScreen\""
    },
    {
        "msg": "move the implementation of alert into a separate PR",
        "diff": "diff --git a/automation/terraform/modules/testnet-alerts/templates/testnet-alert-rules.yml.tpl b/automation/terraform/modules/testnet-alerts/templates/testnet-alert-rules.yml.tpl @@ -261,15 +261,6 @@ groups:\nsummary: \"{{ $labels.testnet }} block production is critically low (there has been less than 1 block in the last hour)\"\ndescription: \"{{ $value }} blocks have been produced on network {{ $labels.testnet }} in the last hour (according to some node).\"\n- - alert: DisconnectedBlocksPerHour\n- expr: max by (testnet) (increase(Coda_Rejected_blocks_no_common_ancestor ${rule_filter} [${alert_timeframe}])) > 10\n- labels:\n- testnet: \"{{ $labels.testnet }}\"\n- severity: warning\n- annotations:\n- summary: \"{{ $labels.testnet }} has more than 10 disconnected blocks in the last hour\"\n- description: \"{{ $value }} blocks have been produced on remote side chains on network {{ $labels.test }} in the last hour.\"\n-\n- alert: LowPostgresBlockHeightGrowth\nexpr: min by (testnet) (increase(Coda_Archive_max_block_height ${rule_filter} [${alert_timeframe}])) < 1\nfor: ${alert_evaluation_duration}\n",
        "date": "13.04.2021 18:36:07",
        "repo": "minaprotocol/mina",
        "type": "move",
        "chatgpt_zeroshot": "Remove disconnected blocks per hour alert and update low postgres block height growth alert in testnet-alert-rules.yml template"
    },
    {
        "msg": "move critical alert to critical alert group",
        "diff": "diff --git a/automation/terraform/modules/testnet-alerts/templates/testnet-alert-rules.yml.tpl b/automation/terraform/modules/testnet-alerts/templates/testnet-alert-rules.yml.tpl @@ -16,6 +16,15 @@ groups:\nsummary: \"{{ $labels.testnet }} cluster nodes have crashed\"\ndescription: \"{{ $value }} Cluster nodes have crashed on network {{ $labels.testnet }}.\"\n+ - alert: MultipleNodeRestarted\n+ expr: count by (testnet) (Coda_Runtime_process_uptime_ms_total{testnet=~\"mainnet|devnet2|snappnet\"} < 600000) > 2\n+ labels:\n+ testnet: \"{{ $labels.testnet }}\"\n+ severity: critical\n+ annotations:\n+ summary: \"At least 3 nodes on {{ $lables.testnet }} restarted\"\n+ description: \"{{ $value }} nodes on {{ $labels.testnet }} restarted\"\n+\n- alert: WatchdogNoNewLogs\nexpr: max by (testnet) (Coda_watchdog_pods_with_no_new_logs) > 0\nlabels:\n@@ -281,15 +290,6 @@ groups:\nsummary: \"At least one of the nodes on {{ $lables.testnet }} restarted\"\ndescription: \"{{ $value }} nodes on {{ $labels.testnet }} restarted\"\n- - alert: MultipleNodeRestarted\n- expr: count by (testnet) (Coda_Runtime_process_uptime_ms_total{testnet=~\"mainnet|devnet2|snappnet\"} < 600000) > 2\n- labels:\n- testnet: \"{{ $labels.testnet }}\"\n- severity: critical\n- annotations:\n- summary: \"At least 3 nodes on {{ $lables.testnet }} restarted\"\n- description: \"{{ $value }} nodes on {{ $labels.testnet }} restarted\"\n-\n- alert: UnparentedBlocksObserved\nexpr: max by (testnet) (Coda_Archive_unparented_blocks ${rule_filter})) > 1\nfor: ${alert_evaluation_duration}\n",
        "date": "26.04.2021 15:47:57",
        "repo": "minaprotocol/mina",
        "type": "move",
        "chatgpt_zeroshot": "Add alert for MultipleNodeRestarted and remove duplicate alert definition."
    },
    {
        "msg": "move Env out of Transaction_logic.apply_parties_unchecked",
        "diff": "diff --git a/src/lib/mina_base/transaction_logic.ml b/src/lib/mina_base/transaction_logic.ml @@ -1554,13 +1554,7 @@ module Make (L : Ledger_intf) : S with type ledger := L.t = struct\nend\nend\n- module M = Parties_logic.Make (Inputs)\n-\n- let apply_parties_unchecked\n- ~(constraint_constants : Genesis_constants.Constraint_constants.t)\n- ~(state_view : Snapp_predicate.Protocol_state.View.t) (ledger : L.t)\n- (c : Parties.t) : (Transaction_applied.Parties_applied.t * _) Or_error.t =\n- let module Env = struct\n+ module Env = struct\nopen Inputs\ntype t =\n@@ -1583,7 +1577,14 @@ module Make (L : Ledger_intf) : S with type ledger := L.t = struct\nParties_logic.Local_state.t\n; protocol_state_predicate : Snapp_predicate.Protocol_state.t\n; transaction_commitment : unit >\n- end in\n+ end\n+\n+ module M = Parties_logic.Make (Inputs)\n+\n+ let apply_parties_unchecked\n+ ~(constraint_constants : Genesis_constants.Constraint_constants.t)\n+ ~(state_view : Snapp_predicate.Protocol_state.View.t) (ledger : L.t)\n+ (c : Parties.t) : (Transaction_applied.Parties_applied.t * _) Or_error.t =\nlet original_account_states =\nList.map (Parties.accounts_accessed c) ~f:(fun id ->\n( id\n",
        "date": "28.09.2021 13:19:06",
        "repo": "minaprotocol/mina",
        "type": "move",
        "chatgpt_zeroshot": "Refactor transaction logic module and move module M definition outside of Env module."
    },
    {
        "msg": "move CREATE INDEX",
        "diff": "diff --git a/src/app/archive/create_schema.sql b/src/app/archive/create_schema.sql @@ -205,6 +205,7 @@ CREATE TABLE blocks_internal_commands\nCREATE INDEX idx_blocks_internal_commands_block_id ON blocks_internal_commands(block_id);\nCREATE INDEX idx_blocks_internal_commands_internal_command_id ON blocks_internal_commands(internal_command_id);\n+CREATE INDEX idx_blocks_internal_commands_receiver_balance ON blocks_internal_commands(receiver_balance);\n/* in this file because reference to balances doesn't work if in snapp_tables.sql */\nCREATE TABLE snapp_party_balances\n@@ -234,4 +235,3 @@ CREATE TABLE blocks_snapp_commands\nCREATE INDEX idx_blocks_snapp_commands_block_id ON blocks_snapp_commands(block_id);\nCREATE INDEX idx_blocks_snapp_commands_snapp_command_id ON blocks_snapp_commands(snapp_command_id);\nCREATE INDEX idx_blocks_snapp_commands_sequence_no ON blocks_snapp_commands(sequence_no);\n-CREATE INDEX idx_blocks_internal_commands_receiver_balance ON blocks_internal_commands(receiver_balance);\n",
        "date": "08.02.2022 15:00:23",
        "repo": "minaprotocol/mina",
        "type": "move",
        "chatgpt_zeroshot": "Add index on receiver_balance in blocks_internal_commands table"
    },
    {
        "msg": "move Init_account call to fix failing tests I don't know why this worked, but it does..",
        "diff": "diff --git a/src/lib/transaction_logic/parties_logic.ml b/src/lib/transaction_logic/parties_logic.ml @@ -872,7 +872,6 @@ module Make (Inputs : Inputs_intf) = struct\nlet a, inclusion_proof =\nInputs.Ledger.get_account party local_state.ledger\nin\n- let a = h.perform (Init_account { party; account = a }) in\nInputs.Ledger.check_inclusion local_state.ledger (a, inclusion_proof) ;\n(* Register verification key, in case it needs to be 'side-loaded' to\nverify a snapp proof.\n@@ -1256,6 +1255,8 @@ module Make (Inputs : Inputs_intf) = struct\nlet a = Account.set_permissions permissions a in\n(a, local_state)\nin\n+ (* Initialize account's pk, in case it is new. *)\n+ let a = h.perform (Init_account { party; account = a }) in\n(* DO NOT ADD ANY UPDATES HERE. They must be earlier in the code.\nSee comment above.\n*)\n",
        "date": "26.04.2022 15:38:17",
        "repo": "minaprotocol/mina",
        "type": "move",
        "chatgpt_zeroshot": "\"Initialize account's pk for new accounts\""
    },
    {
        "msg": "move the documentation to the correct position (sorting)",
        "diff": "diff --git a/site/docs/api/table-options.md b/site/docs/api/table-options.md @@ -580,28 +580,6 @@ The table options are defined in `jQuery.fn.bootstrapTable.defaults`.\n- **Example:** [Ignore Click To Select On](https://examples.bootstrap-table.com/#options/ignore-click-to-select-on.html)\n-## locale\n-\n-- **Attribute:** `data-locale`\n-\n-- **Type:** `String`\n-\n-- **Detail:**\n-\n- Sets the locale to use (i.e. `'zh-CN'`). Locale files must be pre-loaded.\n- Allows for fallback locales, if loaded, in the following order:\n-\n- * First tries for the locale as specified,\n- * Then tries the locale with '_' translated to '-' and the region code upper cased,\n- * Then tries the short locale code (i.e. `'zh'` instead of `'zh-CN'`),\n- * And finally will use the last locale file loaded (or the default locale if no locales loaded).\n-\n- If left `undefined` or an empty string, use the last locale loaded (or `'en-US'` if no locale files loaded).\n-\n-- **Default:** `undefined`\n-\n-- **Example:** [Table Locale](https://examples.bootstrap-table.com/#options/table-locale.html)\n-\n## loadingFontSize\n- **Attribute:** `data-loading-font-size`\n@@ -642,6 +620,28 @@ The table options are defined in `jQuery.fn.bootstrapTable.defaults`.\n- **Example:** [Loading Template](https://examples.bootstrap-table.com/#options/loading-template.html)\n+## locale\n+\n+- **Attribute:** `data-locale`\n+\n+- **Type:** `String`\n+\n+- **Detail:**\n+\n+ Sets the locale to use (i.e. `'zh-CN'`). Locale files must be pre-loaded.\n+ Allows for fallback locales, if loaded, in the following order:\n+\n+ * First tries for the locale as specified,\n+ * Then tries the locale with '_' translated to '-' and the region code upper cased,\n+ * Then tries the short locale code (i.e. `'zh'` instead of `'zh-CN'`),\n+ * And finally will use the last locale file loaded (or the default locale if no locales loaded).\n+\n+ If left `undefined` or an empty string, use the last locale loaded (or `'en-US'` if no locale files loaded).\n+\n+- **Default:** `undefined`\n+\n+- **Example:** [Table Locale](https://examples.bootstrap-table.com/#options/table-locale.html)\n+\n## maintainMetaData\n- **Attribute:** `data-maintain-meta-data`\n",
        "date": "24.05.2020 22:47:02",
        "repo": "wenzhixin/bootstrap-table",
        "type": "move",
        "chatgpt_zeroshot": "Refactor locale option in table-options.md"
    },
    {
        "msg": "move the link for deployment to the bottom",
        "diff": "diff --git a/packages/react-dev-utils/printHostingInstructions.js b/packages/react-dev-utils/printHostingInstructions.js @@ -26,11 +26,9 @@ function printHostingInstructions(\nprintBaseMessage(buildFolder, publicPathname);\nprintDeployInstructions(publicUrl, hasDeployScript, useYarn);\n-\n} else if (publicPath !== '/') {\n// \"homepage\": \"http://mywebsite.com/project\"\nprintBaseMessage(buildFolder, publicPath);\n-\n} else {\n// \"homepage\": \"http://mywebsite.com\"\n// or no homepage\n@@ -39,6 +37,10 @@ function printHostingInstructions(\nprintStaticServerInstructions(buildFolder, useYarn);\n}\nconsole.log();\n+ console.log('Find out more about deployment here:');\n+ console.log();\n+ console.log(` ${chalk.yellow('http://bit.ly/2vY88Kr')}`);\n+ console.log();\n}\nfunction printBaseMessage(buildFolder, hostingLocation) {\n@@ -64,15 +66,7 @@ function printBaseMessage(buildFolder, hostingLocation) {\n);\n}\nconsole.log();\n-\n- console.log(\n- `The ${chalk.cyan(buildFolder)} folder is ready to be deployed.`\n- );\n- console.log()\n- console.log('Find out more about deployment here:');\n- console.log();\n- console.log(` ${chalk.yellow('http://bit.ly/2vY88Kr')}`);\n- console.log();\n+ console.log(`The ${chalk.cyan(buildFolder)} folder is ready to be deployed.`);\n}\nfunction printDeployInstructions(publicUrl, hasDeployScript, useYarn) {\n@@ -88,20 +82,24 @@ function printDeployInstructions(publicUrl, hasDeployScript, useYarn) {\n}\nconsole.log();\n- console.log(`Add the following script in your ${chalk.cyan(\n- 'package.json'\n- )}.`);\n+ console.log(\n+ `Add the following script in your ${chalk.cyan('package.json')}.`\n+ );\nconsole.log();\nconsole.log(` ${chalk.dim('// ...')}`);\nconsole.log(` ${chalk.yellow('\"scripts\"')}: {`);\nconsole.log(` ${chalk.dim('// ...')}`);\n- console.log(` ${chalk.yellow('\"predeploy\"')}: ${chalk.yellow(\n+ console.log(\n+ ` ${chalk.yellow('\"predeploy\"')}: ${chalk.yellow(\n'\"npm run build\",'\n- )}`);\n- console.log(` ${chalk.yellow('\"deploy\"')}: ${chalk.yellow(\n+ )}`\n+ );\n+ console.log(\n+ ` ${chalk.yellow('\"deploy\"')}: ${chalk.yellow(\n'\"gh-pages -d build\"'\n- )}`);\n+ )}`\n+ );\nconsole.log(' }');\nconsole.log();\n",
        "date": "11.01.2018 00:43:32",
        "repo": "react-workspaces/create-react-app",
        "type": "move",
        "chatgpt_zeroshot": "Refactor printHostingInstructions.js to improve deployment instructions and remove redundant code."
    },
    {
        "msg": "move last update pref to personal",
        "diff": "diff --git a/user.js b/user.js @@ -139,11 +139,6 @@ user_pref(\"javascript.use_us_english_locale\", true); // [HIDDEN PREF]\n/*** [SECTION 0300]: QUIETER FOX ***/\nuser_pref(\"_user.js.parrot\", \"0300 syntax error: the parrot's not pinin' for the fjords!\");\n-/** UPDATES ***/\n-/* 0306: disable search engine updates (e.g. OpenSearch)\n- * [NOTE] This does not affect Mozilla's built-in or Web Extension search engines ***/\n-user_pref(\"browser.search.update\", false);\n-\n/** RECOMMENDATIONS ***/\n/* 0320: disable recommendation pane in about:addons (uses Google Analytics) ***/\nuser_pref(\"extensions.getAddons.showPane\", false); // [HIDDEN PREF]\n@@ -1277,6 +1272,8 @@ user_pref(\"browser.startup.homepage_override.mstone\", \"ignore\"); // master switc\n// user_pref(\"app.update.auto\", false); // [NON-WINDOWS] disable auto app updates\n// [NOTE] You will still get prompts to update, and should do so in a timely manner\n// [SETTING] General>Firefox Updates>Check for updates but let you choose to install them\n+ // user_pref(\"browser.search.update\", false); // disable search engine updates (e.g. OpenSearch)\n+ // [NOTE] This does not affect Mozilla's built-in or Web Extension search engines\n// user_pref(\"extensions.update.enabled\", false); // disable extension and theme update checks\n// user_pref(\"extensions.update.autoUpdateDefault\", false); // disable installing extension and theme updates\n// [SETTING] about:addons>Extensions>[cog-wheel-icon]>Update Add-ons Automatically (toggle)\n",
        "date": "12.01.2022 05:25:31",
        "repo": "arkenfox/user.js",
        "type": "move",
        "chatgpt_zeroshot": "Remove browser.search.update preference and update comments in user.js"
    },
    {
        "msg": "move the content so that everything is rendered inside the return.",
        "diff": "diff --git a/pages/faq.js b/pages/faq.js @@ -4,32 +4,32 @@ import Question from 'components/faq/question';\nimport QuestionAnswerData from 'components/faq/questions';\nimport styles from './styles/faq.css';\n-const FAQ = () => {\n- const generalQuestions = QuestionAnswerData().general.map(faq => (\n- <Question question={faq.question} answer={faq.answer} key={faq.question} />\n- ));\n- const donationQuestions = QuestionAnswerData().donation.map(faq => (\n- <Question question={faq.question} answer={faq.answer} key={faq.question} />\n- ));\n- const volunteerQuestions = QuestionAnswerData().volunteer.map(faq => (\n- <Question question={faq.question} answer={faq.answer} key={faq.question} />\n- ));\n-\n- return (\n+const FAQ = () => (\n<Section title=\"General Questions\" theme=\"white\">\n<Section theme=\"white\" headingLines={false}>\n- <div className={styles.container}>{generalQuestions}</div>\n+ <div className={styles.container}>\n+ {QuestionAnswerData().general.map(faq => (\n+ <Question question={faq.question} answer={faq.answer} key={faq.question} />\n+ ))}\n+ </div>\n</Section>\n<Section title=\"Donation Questions\" theme=\"white\">\n<br />\n- <div className={styles.container}>{donationQuestions}</div>\n+ <div className={styles.container}>\n+ {QuestionAnswerData().donation.map(faq => (\n+ <Question question={faq.question} answer={faq.answer} key={faq.question} />\n+ ))}\n+ </div>\n</Section>\n<Section title=\"Volunteer Questions\" theme=\"white\">\n<br />\n- <div className={styles.container}>{volunteerQuestions}</div>\n+ <div className={styles.container}>\n+ {QuestionAnswerData().volunteer.map(faq => (\n+ <Question question={faq.question} answer={faq.answer} key={faq.question} />\n+ ))}\n+ </div>\n</Section>\n</Section>\n);\n-};\nexport default FAQ;\n",
        "date": "14.09.2018 16:14:14",
        "repo": "operationcode/front-end",
        "type": "move",
        "chatgpt_zeroshot": "Refactor FAQ component to dynamically render questions and answers from data source."
    },
    {
        "msg": "move redux devtools out of devDeps into deps",
        "diff": "diff --git a/package.json b/package.json \"react-svg-loader\": \"^2.1.0\",\n\"react-youtube\": \"^7.8.0\",\n\"redux\": \"^4.0.1\",\n+ \"redux-devtools-extension\": \"^2.13.5\",\n\"redux-thunk\": \"^2.3.0\",\n\"reselect\": \"^4.0.0\",\n\"style-loader\": \"^0.23.1\",\n\"prettier\": \"^1.15.2\",\n\"react-addons-test-utils\": \"^15.6.2\",\n\"react-test-renderer\": \"^16.6.1\",\n- \"redux-devtools-extension\": \"^2.13.5\",\n\"redux-mock-store\": \"^1.5.3\",\n\"stylelint\": \"^9.8.0\",\n\"stylelint-config-standard\": \"^18.2.0\"\n",
        "date": "12.11.2018 20:10:37",
        "repo": "operationcode/front-end",
        "type": "move",
        "chatgpt_zeroshot": "Add redux-devtools-extension to package.json"
    },
    {
        "msg": "prepare 3.0.0 alpha release",
        "diff": "diff --git a/packages/create-react-app/yarn.lock.cached b/packages/create-react-app/yarn.lock.cached @@ -5060,9 +5060,9 @@ isstream@~0.1.2:\nintegrity sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo=\nistanbul-api@^2.1.1:\n- version \"2.1.4\"\n- resolved \"https://registry.yarnpkg.com/istanbul-api/-/istanbul-api-2.1.4.tgz#5c7fe1d1c9b96ba3184ac4bbff7fc04eaccbdd8b\"\n- integrity sha512-aAFQL0HA2BLUl18XmTQ7H7CGKI58DtZFvvfmg6e+rA3iNFergvpi16czLV4CpI7HOImMeZ5mqI62dvSNVtUQVA==\n+ version \"2.1.5\"\n+ resolved \"https://registry.yarnpkg.com/istanbul-api/-/istanbul-api-2.1.5.tgz#697b95ec69856c278aacafc0f86ee7392338d5b5\"\n+ integrity sha512-meYk1BwDp59Pfse1TvPrkKYgVqAufbdBLEVoqvu/hLLKSaQ054ZTksbNepyc223tMnWdm6AdK2URIJJRqdP87g==\ndependencies:\nasync \"^2.6.1\"\ncompare-versions \"^3.2.1\"\n@@ -5072,7 +5072,7 @@ istanbul-api@^2.1.1:\nistanbul-lib-instrument \"^3.2.0\"\nistanbul-lib-report \"^2.0.7\"\nistanbul-lib-source-maps \"^3.0.5\"\n- istanbul-reports \"^2.2.2\"\n+ istanbul-reports \"^2.2.3\"\njs-yaml \"^3.13.0\"\nmake-dir \"^2.1.0\"\nminimatch \"^3.0.4\"\n@@ -5123,10 +5123,10 @@ istanbul-lib-source-maps@^3.0.1, istanbul-lib-source-maps@^3.0.5:\nrimraf \"^2.6.2\"\nsource-map \"^0.6.1\"\n-istanbul-reports@^2.2.2:\n- version \"2.2.2\"\n- resolved \"https://registry.yarnpkg.com/istanbul-reports/-/istanbul-reports-2.2.2.tgz#b84303c46fc0541c3c3b69abae687c42a6907d44\"\n- integrity sha512-ZFuTdBQ3PSaPnm02aEA4R6mzQ2AF9w03CYiXADzWbbE48v/EFOWF4MaX4FT0NRdqIk48I7o0RPi+S8TMswaCbQ==\n+istanbul-reports@^2.2.3:\n+ version \"2.2.3\"\n+ resolved \"https://registry.yarnpkg.com/istanbul-reports/-/istanbul-reports-2.2.3.tgz#14e0d00ecbfa9387757999cf36599b88e9f2176e\"\n+ integrity sha512-T6EbPuc8Cb620LWAYyZ4D8SSn06dY9i1+IgUX2lTH8gbwflMc9Obd33zHTyNX653ybjpamAHS9toKS3E6cGhTw==\ndependencies:\nhandlebars \"^4.1.0\"\n",
        "date": "17.04.2019 10:01:32",
        "repo": "react-workspaces/create-react-app",
        "type": "prepare",
        "chatgpt_zeroshot": "Update istanbul-api and istanbul-reports to latest versions"
    },
    {
        "msg": "prepare taskRunner for job wrapping.",
        "diff": "diff --git a/modules/task/docker/src/taskRunner.js b/modules/task/docker/src/taskRunner.js @@ -146,3 +146,15 @@ const executeTask$ = ({id, name, params}) => {\n}\nmodule.exports = {executeTask$}\n+\n+// const job = require('root/jobs/job')\n+\n+// module.exports = job({\n+// jobName: 'execute task',\n+// jobPath: __filename,\n+// initArgs: () => ({config: require('root/config')}),\n+// before: [require('root/jobs/setConfig'), require('root/jobs/ee/initialize')],\n+// services: [require('../driveLimiter').limiter],\n+// args: ctx => [ctx], // TODO make it more flexible by allowing multiple params\n+// executeTask$\n+// })\n",
        "date": "11.06.2020 10:37:30",
        "repo": "openforis/sepal",
        "type": "prepare",
        "chatgpt_zeroshot": "Refactor taskRunner.js to remove commented out code and improve code readability"
    },
    {
        "msg": "prepare Tabs for reusing the add button.",
        "diff": "diff --git a/modules/gui/frontend/src/widget/tabs/tabs.js b/modules/gui/frontend/src/widget/tabs/tabs.js @@ -7,7 +7,7 @@ import {TabContent} from './tabContent'\nimport {TabHandle} from './tabHandle'\nimport {compose} from 'compose'\nimport {connect, select} from 'store'\n-import {delay} from 'rxjs/operators'\n+import {delay, filter} from 'rxjs/operators'\nimport {isMobile} from 'widget/userAgent'\nimport {msg} from 'translate'\nimport Keybinding from 'widget/keybinding'\n@@ -83,9 +83,10 @@ class _Tabs extends React.Component {\nconstructor(props) {\nsuper(props)\nconst {tabs, statePath} = props\n- if (tabs.length === 0)\n+ if (tabs.length === 0) {\naddTab(statePath)\n}\n+ }\nrenderTab(tab) {\nconst {selectedTabId, statePath, onTitleChanged, onClose} = this.props\n@@ -100,9 +101,7 @@ class _Tabs extends React.Component {\nclosing={tab.ui && tab.ui.closing}\nstatePath={statePath}\nonTitleChanged={onTitleChanged}\n- onClose={() => {\n- onClose ? onClose(tab, close) : close()\n- }}\n+ onClose={() => onClose ? onClose(tab, close) : close()}\n/>\n)\n}\n@@ -195,6 +194,7 @@ class _Tabs extends React.Component {\n}\nrenderAddButton() {\n+ const {onAdd} = this.props\nreturn (\n<Button\nchromeless\n@@ -204,21 +204,24 @@ class _Tabs extends React.Component {\nicon='plus'\ntooltip={msg('widget.tabs.addTab.tooltip')}\ntooltipPlacement='bottom'\n- disabled={this.isAddDisabled()}\n+ disabled={this.isAddDisabled() && !onAdd}\nonClick={() => this.addTab()}/>\n)\n}\naddTab() {\n+ const {onAdd} = this.props\nconst {statePath, tabs, isLandingTab} = this.props\n+ if (!this.isAddDisabled()) {\nif (isLandingTab) {\nconst tab = tabs.find(tab => isLandingTab(tab))\nif (tab) {\nreturn selectTab(tab.id, statePath)\n}\n}\n- if (!this.isAddDisabled()) {\naddTab(statePath)\n+ } else {\n+ onAdd && onAdd()\n}\n}\n@@ -250,10 +253,11 @@ class _Tabs extends React.Component {\n}\nhandleCloseTab() {\n- const {addSubscription} = this.props\n+ const {addSubscription, statePath} = this.props\naddSubscription(\nclose$.pipe(\n- delay(CLOSE_ANIMATION_DURATION_MS * 1.2)\n+ filter(tab => tab.statePath === statePath),\n+ delay(CLOSE_ANIMATION_DURATION_MS * 1.2),\n).subscribe(\n({id, statePath, nextId}) => this.finalizeCloseTab(id, statePath, nextId)\n)\n@@ -303,6 +307,7 @@ Tabs.propTypes = {\nselectedTabId: PropTypes.string,\ntabActions: PropTypes.func,\ntabs: PropTypes.array,\n+ onAdd: PropTypes.func,\nonClose: PropTypes.func,\nonTitleChanged: PropTypes.func\n}\n",
        "date": "07.12.2020 12:27:17",
        "repo": "openforis/sepal",
        "type": "prepare",
        "chatgpt_zeroshot": "Add filter operator to delay in tabs.js"
    },
    {
        "msg": "prepare script ( to support npm i -g <repo> )",
        "diff": "diff --git a/package.json b/package.json \"test\": \"jest\",\n\"preversion\": \"npm run test\",\n\"version\": \"./rnv/utils/update-versions.sh\",\n- \"doc\": \"doctoc . --maxlevel 1\"\n+ \"doc\": \"doctoc . --maxlevel 1\",\n+ \"prepare\": \"npm run build\"\n},\n\"dependencies\": {\n\"babel-polyfill\": \"6.26.0\",\n",
        "date": "07.05.2019 09:22:32",
        "repo": "pavjacko/renative",
        "type": "prepare",
        "chatgpt_zeroshot": "Add prepare script to package.json"
    },
    {
        "msg": "prepare jest-preact-preset for publishing",
        "diff": "diff --git a/packages/jest-preact-preset/package.json b/packages/jest-preact-preset/package.json \"name\": \"jest-preact-preset\",\n\"version\": \"1.0.0\",\n\"license\": \"MIT\",\n+ \"main\": \"src/config.js\",\n\"author\": \"Preact Authors <core@preactjs.com>\",\n\"scripts\": {\n\"test\": \"jest\"\n\"jest\": {\n\"preset\": \"./jest-preset.js\"\n},\n+ \"files\": [\n+ \"src\",\n+ \"jest-preset.js\"\n+ ],\n\"dependencies\": {\n\"@babel/core\": \"^7.5.5\",\n\"babel-jest\": \"^24.8.0\",\n",
        "date": "07.08.2019 22:58:59",
        "repo": "preactjs/preact-cli",
        "type": "prepare",
        "chatgpt_zeroshot": "Update main file and add additional files to package.json"
    },
    {
        "msg": "prepare for centerX/Y options.",
        "diff": "diff --git a/v3/src/actions/GridAlign.js b/v3/src/actions/GridAlign.js @@ -65,15 +65,23 @@ var GridAlign = function (items, options)\nvar position = GetObjectValue(options, 'position', CONST.TOP_LEFT);\nvar x = GetObjectValue(options, 'x', 0);\nvar y = GetObjectValue(options, 'y', 0);\n-\n- tempZone.setPosition(x, y);\n- tempZone.setSize(cellWidth, cellHeight);\n+ // var centerX = GetObjectValue(options, 'centerX', null);\n+ // var centerY = GetObjectValue(options, 'centerY', null);\nvar cx = 0;\nvar cy = 0;\nvar w = (width * cellWidth);\nvar h = (height * cellHeight);\n+ // If the Grid is centered on a position then we need to calculate it now\n+ // if (centerX !== null && centerY !== null)\n+ // {\n+ //\n+ // }\n+\n+ tempZone.setPosition(x, y);\n+ tempZone.setSize(cellWidth, cellHeight);\n+\nfor (var i = 0; i < items.length; i++)\n{\nAlignIn(items[i], tempZone, position);\n",
        "date": "29.03.2017 01:47:17",
        "repo": "photonstorm/phaser",
        "type": "prepare",
        "chatgpt_zeroshot": "Refactor GridAlign.js to include centering functionality."
    },
    {
        "msg": "prepare WIP PR 2",
        "diff": "diff --git a/src/tilemaps/Tile.js b/src/tilemaps/Tile.js @@ -733,8 +733,9 @@ var Tile = new Class({\nthis.pixelY = this.y * this.baseHeight;\nconsole.log(\"orthopix \"+this.pixelX+\",\"+this.pixelY)\n} else if (this.orientation === \"isometric\" ||true) {\n- // for the image to be centered we have to move the image to the right.\n- this.pixelX = this.layer.widthInPixels/2 + (this.x - this.y) * this.baseWidth *0.5;\n+ // for the image to be centered we have to move the image to the right with the camera !\n+ // this is crucial for wordtotile, tiletoworld to work.\n+ this.pixelX = (this.x - this.y) * this.baseWidth *0.5;\nthis.pixelY = (this.x + this.y) * this.baseHeight *0.5;\nconsole.log(\"isopix \"+this.pixelX+\",\"+this.pixelY)\n// console.log(this)\n",
        "date": "29.01.2020 19:21:27",
        "repo": "photonstorm/phaser",
        "type": "prepare",
        "chatgpt_zeroshot": "Refactor image centering logic in isometric orientation"
    },
    {
        "msg": "prepare it for becoming a kata.",
        "diff": "diff --git a/katas/libraries/hamjest/assertThat.js b/katas/libraries/hamjest/assertThat.js +// 1: assertThat\n+// To do: make all tests pass, leave the assert lines unchanged!\n+\nimport {\nassertThat, equalTo,\ncontainsString, throws, returns,\n@@ -10,7 +13,8 @@ describe('The core function, `assertThat()`', () => {\n});\ndescribe('requires at least two params', () => {\nit('1st: the actual value', () => {\n- assertThat('actual', equalTo('actual'));\n+ const expected = equalTo('actual');\n+ assertThat('actual', expected);\n});\nit('2nd: a matcher for the expected value', () => {\nconst matcher = equalTo('expected');\n",
        "date": "28.08.2017 22:16:44",
        "repo": "tddbin/katas",
        "type": "prepare",
        "chatgpt_zeroshot": "Refactor assertThat function to pass all tests"
    },
    {
        "msg": "prepare 9.0.1",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md @@ -4,6 +4,12 @@ See [UPGRADE.md](UPGRADE.md) for notes on breaking changes for downstream develo\n## Current\n+## v9.0.1\n+\n+- Upgraded standard to v14 with subsequent formatting tweaks\n+- createReadStream is up to 8x faster now! ([#261](https://github.com/hypercore-protocol/hypercore/pull/261) by [@tinchoz49](https://github.com/tinchoz49))\n+- Fixed benchmarks ([#266](https://github.com/hypercore-protocol/hypercore/pull/266) by [@fwip](https://github.com/fwip))\n+\n## v9.0.0\n- Ease of use update to signatures, https://github.com/mafintosh/hypercore/issues/260\n",
        "date": "19.05.2020 13:04:22",
        "repo": "hypercore-protocol/hypercore",
        "type": "prepare",
        "chatgpt_zeroshot": "Upgrade to v9.0.1 with performance improvements and bug fixes"
    },
    {
        "msg": "prepare v9.1.0",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md @@ -4,6 +4,10 @@ See [UPGRADE.md](UPGRADE.md) for notes on breaking changes for downstream develo\n## Current\n+## v9.1.0\n+\n+- Make peer.remoteOpened public ([#268](https://github.com/hypercore-protocol/hypercore/pull/268))\n+\n## v9.0.1\n- Upgraded standard to v14 with subsequent formatting tweaks\n",
        "date": "19.05.2020 21:48:36",
        "repo": "hypercore-protocol/hypercore",
        "type": "prepare",
        "chatgpt_zeroshot": "Bump version to v9.1.0 and make peer.remoteOpened public (#268)"
    },
    {
        "msg": "prepare 9.2.0",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md @@ -4,6 +4,10 @@ See [UPGRADE.md](UPGRADE.md) for notes on breaking changes for downstream develo\n## Current\n+## v9.2.0\n+\n+- Add `maxBlockSize` on write streams to auto chunk big blocks being written.\n+\n## v9.1.0\n- Make peer.remoteOpened public ([#268](https://github.com/hypercore-protocol/hypercore/pull/268))\n",
        "date": "08.06.2020 13:00:11",
        "repo": "hypercore-protocol/hypercore",
        "type": "prepare",
        "chatgpt_zeroshot": "Add `maxBlockSize` option for auto chunking big blocks in write streams."
    },
    {
        "msg": "prepare 9.3.0",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md @@ -4,6 +4,10 @@ See [UPGRADE.md](UPGRADE.md) for notes on breaking changes for downstream develo\n## Current\n+## v9.3.0\n+\n+- feed.get returns an id, that can be used to cancel a pending get with feed.cancel(getId)\n+\n## v9.2.0\n- Add `maxBlockSize` on write streams to auto chunk big blocks being written.\n",
        "date": "22.06.2020 12:42:26",
        "repo": "hypercore-protocol/hypercore",
        "type": "prepare",
        "chatgpt_zeroshot": "Add feed.get method to return an id for cancelling pending requests"
    },
    {
        "msg": "prepare 9.4.0",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md @@ -4,6 +4,10 @@ See [UPGRADE.md](UPGRADE.md) for notes on breaking changes for downstream develo\n## Current\n+## v9.4.0\n+\n+- feed.get accepts onwait hook, that is called if get is waiting for a network peer.\n+\n## v9.3.0\n- feed.get returns an id, that can be used to cancel a pending get with feed.cancel(getId)\n",
        "date": "24.06.2020 15:18:29",
        "repo": "hypercore-protocol/hypercore",
        "type": "prepare",
        "chatgpt_zeroshot": "Add onwait hook to feed.get method"
    },
    {
        "msg": "prepare async interface for downloaded",
        "diff": "diff --git a/index.js b/index.js @@ -1195,8 +1195,10 @@ Feed.prototype._unannounce = function (message) {\nfor (var i = 0; i < this.peers.length; i++) this.peers[i].unhave(message)\n}\n-Feed.prototype.downloaded = function (start, end) {\n- return this.bitfield.total(start, end)\n+Feed.prototype.downloaded = function (start, end, cb) {\n+ const count = this.bitfield.total(start, end)\n+ if (cb) process.nextTick(cb, null, count) // prepare async interface for this\n+ return count\n}\nFeed.prototype.has = function (start, end, cb) {\n",
        "date": "25.06.2020 21:31:41",
        "repo": "hypercore-protocol/hypercore",
        "type": "prepare",
        "chatgpt_zeroshot": "Add async interface to downloaded method"
    },
    {
        "msg": "prepare pagination",
        "diff": "diff --git a/views/public/search.pug b/views/public/search.pug @@ -110,8 +110,7 @@ block content\nif (e.which == 13) {\nvar searchQuery = $('.search-query-input').val()\n- window.location = '/search?orderBy=' + orderBy + '&mediaType=' + mediaType + '&searchQuery=' + searchQuery + '&searchType=' + searchType\n-\n+ window.location = '/search?orderBy=' + orderBy + '&mediaType=' + mediaType + '&searchQuery=' + searchQuery + '&searchType=upload'\n}\n});\n})\n",
        "date": "15.05.2018 18:56:09",
        "repo": "mayeaux/nodetube",
        "type": "prepare",
        "chatgpt_zeroshot": "Fix search functionality to always set searchType to 'upload' on enter key press."
    },
    {
        "msg": "prepare some stuff for the new incoming update",
        "diff": "diff --git a/events/message.js b/events/message.js @@ -10,6 +10,14 @@ exports.run = async (client, msg) => {\nif (msg.guild.id !== '332612123492483094') return undefined;\n}\n+ if (msg.guild.id === '352896116812939264' && (msg.channel.id === '440184907411619851' || msg.channel.id === '440184885781594113')) {\n+ const noemoji = msg.guild.emojis.find('name', 'no');\n+ const yesemoji = msg.guild.emojis.find('name', 'yes');\n+\n+ await msg.react(noemoji);\n+ await msg.react(yesemoji);\n+ }\n+\nconst userconfs = {\ninventory: {\ncrate: 0,\n",
        "date": "03.05.2018 14:40:17",
        "repo": "lenoxbot/lenoxbot",
        "type": "prepare",
        "chatgpt_zeroshot": "Add reaction emojis to messages in specific channels"
    },
    {
        "msg": "prepare next beta",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md # Browsertime changelog\n-## 12.0.0-beta.1 - 2021-04-08\n+## 12.0.0-beta.2 - UNRELEASED\n### Changed\n* Display standard deviation instead of the home made median deviation in the cli output [#1529](https://github.com/sitespeedio/browsertime/pull/1529).\n### Fixed\n* Fix --chrome.blockDomainsExcept when you are using WebPageReplay [#1532](https://github.com/sitespeedio/browsertime/pull/1532). Thank you [Inderpartap Singh Cheema](https://github.com/inderpartap) for the original fix!\n* Make sure gnirehtet is closed on the right device using device id [#1527](https://github.com/sitespeedio/browsertime/pull/1527)\n-* Upgraded to Geckodriver 0.29.0 [#1501](https://github.com/sitespeedio/browsertime/pull/1501).\n+* Upgraded to Geckodriver 0.29.1.\n* Updated wpr_cert.pem to a new version for WebPageReplay [#1316](https://github.com/sitespeedio/browsertime/pull/1316).\n* Include Google Web Vitals in the HAR file [#1535](https://github.com/sitespeedio/browsertime/pull/1535).\n+* Added 3 seconds wait time for geckoprofiler to start see [#1538](https://github.com/sitespeedio/browsertime/issues/1538) and [#1539](https://github.com/sitespeedio/browsertime/pull/1539)\n### Added\n* New metrics: Delta between TTFB and First Contentful Paint, Largest Contentful paint and First visual change [#1528](https://github.com/sitespeedio/browsertime/pull/1528).\n* Made it easier for people to get Google Web Vitals. We copy that data under the googleWebVitals namespace [#1521](https://github.com/sitespeedio/browsertime/pull/1521).\n",
        "date": "12.04.2021 08:24:49",
        "repo": "sitespeedio/browsertime",
        "type": "prepare",
        "chatgpt_zeroshot": "Update Browsertime to version 12.0.0-beta.2 with various improvements and fixes."
    },
    {
        "msg": "improve VestedToken tests",
        "diff": "diff --git a/test/VestedToken.js b/test/VestedToken.js @@ -40,7 +40,7 @@ contract('VestedToken', function(accounts) {\n})\nit('all tokens are transferable after vesting', async () => {\n- assert.equal(await token.transferableTokens(receiver, now + vesting + 1), tokenAmount);\n+ assert.equal(await token.transferableTokens(receiver, now + vesting), tokenAmount);\n})\nit('throws when trying to transfer non vested tokens', async () => {\n@@ -84,16 +84,34 @@ contract('VestedToken', function(accounts) {\n})\nit('can transfer all tokens after vesting ends', async () => {\n- await timer(vesting + 1);\n+ await timer(vesting);\nawait token.transfer(accounts[7], tokenAmount, { from: receiver })\nassert.equal(await token.balanceOf(accounts[7]), tokenAmount);\n})\nit('can approve and transferFrom all tokens after vesting ends', async () => {\n- await timer(vesting + 1);\n+ await timer(vesting);\nawait token.approve(accounts[7], tokenAmount, { from: receiver })\nawait token.transferFrom(receiver, accounts[7], tokenAmount, { from: accounts[7] })\nassert.equal(await token.balanceOf(accounts[7]), tokenAmount);\n})\n+\n+ it('can handle composed vesting schedules', async () => {\n+ await timer(cliff);\n+ await token.transfer(accounts[7], 12, { from: receiver })\n+ assert.equal(await token.balanceOf(accounts[7]), 12);\n+\n+ let newNow = web3.eth.getBlock(web3.eth.blockNumber).timestamp\n+\n+ await token.grantVestedTokens(receiver, tokenAmount, newNow, newNow + cliff, newNow + vesting, { from: granter })\n+ await token.transfer(accounts[7], 13, { from: receiver })\n+ assert.equal(await token.balanceOf(accounts[7]), tokenAmount / 2);\n+\n+ assert.equal(await token.balanceOf(receiver), 3 * tokenAmount / 2)\n+ assert.equal(await token.transferableTokens(receiver, newNow), 0)\n+ await timer(vesting);\n+ await token.transfer(accounts[7], 3 * tokenAmount / 2, { from: receiver })\n+ assert.equal(await token.balanceOf(accounts[7]), tokenAmount * 2)\n+ })\n})\n});\n",
        "date": "05.04.2017 13:20:18",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor vesting schedule handling in VestedToken contract"
    },
    {
        "msg": "improve mum performance and reduce gas cost",
        "diff": "diff --git a/contracts/math/SafeMath.sol b/contracts/math/SafeMath.sol @@ -7,8 +7,11 @@ pragma solidity ^0.4.11;\n*/\nlibrary SafeMath {\nfunction mul(uint256 a, uint256 b) internal constant returns (uint256) {\n+ if (a == 0) {\n+ return 0;\n+ }\nuint256 c = a * b;\n- assert(a == 0 || c / a == b);\n+ assert(c / a == b);\nreturn c;\n}\n",
        "date": "30.10.2017 09:58:52",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor mul function in SafeMath.sol to handle edge case when a is 0"
    },
    {
        "msg": "improve timer test helper",
        "diff": "diff --git a/test/helpers/timer.js b/test/helpers/timer.js +'use strict';\n+\n// timer for tests specific to testrpc\n-module.exports = s => {\n+// s is the amount of seconds to advance\n+// if account is provided, will send a transaction from that account to force testrpc to mine the block\n+module.exports = (s) => {\nreturn new Promise((resolve, reject) => {\nweb3.currentProvider.sendAsync({\njsonrpc: '2.0',\nmethod: 'evm_increaseTime',\n- params: [s], // 60 seaconds, may need to be hex, I forget\n- id: new Date().getTime() // Id of the request; anything works, really\n+ params: [s],\n+ id: new Date().getTime()\n}, function(err) {\n- if (err) return reject(err);\n- resolve();\n+ if (err) {\n+ return reject(err);\n+ }\n+ web3.currentProvider.sendAsync({\n+ jsonrpc: '2.0',\n+ method: 'evm_mine',\n+ id: new Date().getTime()\n+ }, (err, result) => {\n+ if (err) {\n+ return reject(err);\n+ }\n+ resolve(result);\n+ });\n});\n- //setTimeout(() => resolve(), s * 1000 + 600) // 600ms breathing room for testrpc to sync\n});\n};\n",
        "date": "10.11.2017 13:29:58",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor timer.js to include sending a transaction to force testrpc to mine the block"
    },
    {
        "msg": "improve SafeMath inline comments.",
        "diff": "diff --git a/contracts/math/SafeMath.sol b/contracts/math/SafeMath.sol @@ -25,7 +25,7 @@ library SafeMath {\n}\n/**\n- * @dev Integer division of two numbers, truncating the quotient.\n+ * @dev Integer division of two numbers truncating the quotient, reverts on division by zero.\n*/\nfunction div(uint256 _a, uint256 _b) internal pure returns (uint256) {\nrequire(_b > 0); // Solidity only automatically asserts when dividing by 0\n",
        "date": "10.08.2018 17:34:34",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "improve",
        "chatgpt_zeroshot": "Add revert on division by zero in SafeMath div function"
    },
    {
        "msg": "improve usage of toString",
        "diff": "diff --git a/contracts/token/ERC721/ERC721.sol b/contracts/token/ERC721/ERC721.sol @@ -21,6 +21,7 @@ contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Enumerable\nusing Address for address;\nusing EnumerableSet for EnumerableSet.UintSet;\nusing EnumerableMap for EnumerableMap.UintToAddressMap;\n+ using Strings for uint256;\n// Equals to `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`\n// which can be also obtained as `IERC721Receiver(0).onERC721Received.selector`\n@@ -153,7 +154,7 @@ contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Enumerable\nreturn string(abi.encodePacked(_baseURI, _tokenURI));\n}\n// If there is a baseURI but no tokenURI, concatenate the tokenID to the baseURI.\n- return string(abi.encodePacked(_baseURI, Strings.toString(tokenId)));\n+ return string(abi.encodePacked(_baseURI, tokenId.toString()));\n}\n/**\n",
        "date": "17.04.2020 11:37:58",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "improve",
        "chatgpt_zeroshot": "Fix tokenURI concatenation in ERC721 contract"
    },
    {
        "msg": "improve Pausable docs",
        "diff": "diff --git a/contracts/utils/Pausable.sol b/contracts/utils/Pausable.sol @@ -40,6 +40,10 @@ contract Pausable is Context {\n/**\n* @dev Modifier to make a function callable only when the contract is not paused.\n+ *\n+ * Requirements:\n+ *\n+ * - The contract must not be paused.\n*/\nmodifier whenNotPaused() {\nrequire(!_paused, \"Pausable: paused\");\n@@ -48,6 +52,10 @@ contract Pausable is Context {\n/**\n* @dev Modifier to make a function callable only when the contract is paused.\n+ *\n+ * Requirements:\n+ *\n+ * - The contract must be paused.\n*/\nmodifier whenPaused() {\nrequire(_paused, \"Pausable: not paused\");\n@@ -56,6 +64,10 @@ contract Pausable is Context {\n/**\n* @dev Triggers stopped state.\n+ *\n+ * Requirements:\n+ *\n+ * - The contract must not be paused.\n*/\nfunction _pause() internal virtual whenNotPaused {\n_paused = true;\n@@ -64,6 +76,10 @@ contract Pausable is Context {\n/**\n* @dev Returns to normal state.\n+ *\n+ * Requirements:\n+ *\n+ * - The contract must be paused.\n*/\nfunction _unpause() internal virtual whenPaused {\n_paused = false;\n",
        "date": "04.05.2020 16:36:04",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "improve",
        "chatgpt_zeroshot": "Add requirements to whenNotPaused and whenPaused modifiers"
    },
    {
        "msg": "improve SignedSafeMath docs",
        "diff": "diff --git a/contracts/math/SignedSafeMath.sol b/contracts/math/SignedSafeMath.sol @@ -10,7 +10,14 @@ library SignedSafeMath {\nint256 constant private _INT256_MIN = -2**255;\n/**\n- * @dev Multiplies two signed integers, reverts on overflow.\n+ * @dev Returns the multiplication of two signed integers, reverting on\n+ * overflow.\n+ *\n+ * Counterpart to Solidity's `*` operator.\n+ *\n+ * Requirements:\n+ *\n+ * - Multiplication cannot overflow.\n*/\nfunction mul(int256 a, int256 b) internal pure returns (int256) {\n// Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n@@ -29,7 +36,16 @@ library SignedSafeMath {\n}\n/**\n- * @dev Integer division of two signed integers truncating the quotient, reverts on division by zero.\n+ * @dev Returns the integer division of two signed integers. Reverts on\n+ * division by zero. The result is rounded towards zero.\n+ *\n+ * Counterpart to Solidity's `/` operator. Note: this function uses a\n+ * `revert` opcode (which leaves remaining gas untouched) while Solidity\n+ * uses an invalid opcode to revert (consuming all remaining gas).\n+ *\n+ * Requirements:\n+ *\n+ * - The divisor cannot be zero.\n*/\nfunction div(int256 a, int256 b) internal pure returns (int256) {\nrequire(b != 0, \"SignedSafeMath: division by zero\");\n@@ -41,7 +57,14 @@ library SignedSafeMath {\n}\n/**\n- * @dev Subtracts two signed integers, reverts on overflow.\n+ * @dev Returns the subtraction of two signed integers, reverting on\n+ * overflow.\n+ *\n+ * Counterpart to Solidity's `-` operator.\n+ *\n+ * Requirements:\n+ *\n+ * - Subtraction cannot overflow.\n*/\nfunction sub(int256 a, int256 b) internal pure returns (int256) {\nint256 c = a - b;\n@@ -51,7 +74,14 @@ library SignedSafeMath {\n}\n/**\n- * @dev Adds two signed integers, reverts on overflow.\n+ * @dev Returns the addition of two signed integers, reverting on\n+ * overflow.\n+ *\n+ * Counterpart to Solidity's `+` operator.\n+ *\n+ * Requirements:\n+ *\n+ * - Addition cannot overflow.\n*/\nfunction add(int256 a, int256 b) internal pure returns (int256) {\nint256 c = a + b;\n",
        "date": "05.06.2020 18:41:24",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor SignedSafeMath library functions to return result and add detailed requirements."
    },
    {
        "msg": "improve testing for ERC20Snapshot",
        "diff": "diff --git a/test/token/ERC20/ERC20Snapshot.test.js b/test/token/ERC20/ERC20Snapshot.test.js @@ -134,7 +134,7 @@ describe('ERC20Snapshot', function () {\ncontext('with balance changes after the snapshot', function () {\nbeforeEach(async function () {\nawait this.token.transfer(recipient, new BN('10'), { from: initialHolder });\n- await this.token.mint(recipient, new BN('50'));\n+ await this.token.mint(other, new BN('50'));\nawait this.token.burn(initialHolder, new BN('20'));\n});\n",
        "date": "18.08.2020 20:40:51",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "improve",
        "chatgpt_zeroshot": "Update mint function call in ERC20Snapshot test"
    },
    {
        "msg": "improve GitHub Actions node_modules caching",
        "diff": "diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml @@ -14,11 +14,13 @@ jobs:\nwith:\nnode-version: 10.x\n- uses: actions/cache@v2\n+ id: cache\nwith:\n- path: ~/.npm\n- key: npm-${{ hashFiles('**/package-lock.json') }}\n- restore-keys: npm-\n+ path: '**/node_modules'\n+ key: npm-v2-${{ hashFiles('**/package-lock.json') }}\n+ restore-keys: npm-v2-\n- run: npm ci\n+ if: steps.cache.outputs.cache-hit != 'true'\n- run: npm run lint\n- run: npm run test\n@@ -30,10 +32,12 @@ jobs:\nwith:\nnode-version: 10.x\n- uses: actions/cache@v2\n+ id: cache\nwith:\n- path: ~/.npm\n- key: npm-${{ hashFiles('**/package-lock.json') }}\n- restore-keys: npm-\n+ path: '**/node_modules'\n+ key: npm-v2-${{ hashFiles('**/package-lock.json') }}\n+ restore-keys: npm-v2-\n- run: npm ci\n+ if: steps.cache.outputs.cache-hit != 'true'\n- run: npm run coverage\n- uses: codecov/codecov-action@v1\n",
        "date": "06.11.2020 23:39:56",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor caching strategy in test workflow"
    },
    {
        "msg": "improve wording of recommendation in Initializable",
        "diff": "diff --git a/contracts/proxy/utils/Initializable.sol b/contracts/proxy/utils/Initializable.sol @@ -18,10 +18,9 @@ pragma solidity ^0.8.0;\n* ====\n* Avoid leaving a contract uninitialized.\n*\n- * An uninitialized contract can be used in certain kinds of exploits since it may allow an attacker to take control of\n- * the contract. This includes the implementation contract behind a proxy. You can either invoke the initializer\n- * manually, independently of initialization of the proxy, or you can include a constructor to automatically mark it as\n- * initialized when it is deployed:\n+ * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n+ * contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\n+ * initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\n*\n* [.hljs-theme-light.nopadding]\n* ```\n",
        "date": "14.09.2021 16:55:02",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "improve",
        "chatgpt_zeroshot": "Improve clarity and security in contract initialization"
    },
    {
        "msg": "improve formatting of docs for TimelockController roles",
        "diff": "diff --git a/docs/modules/ROOT/pages/governance.adoc b/docs/modules/ROOT/pages/governance.adoc @@ -250,7 +250,11 @@ It is good practice to add a timelock to governance decisions. This allows users\nIMPORTANT: When using a timelock, it is the timelock that will execute proposals and thus the timelock that should hold any funds, ownership, and access control roles. Funds in the Governor contract are not currently retrievable when using a timelock! (As of version 4.3 there is a caveat when using the Compound Timelock: ETH in the timelock is not easily usable, so it is recommended to manage ERC20 funds only in this combination until a future version resolves the issue.)\n-TimelockController uses an AccessControl setup that we need to understand in order to set up roles. The Proposer role is in charge of queueing operations: this is the role the Governor instance should be granted, and it should likely be the only proposer in the system. The Executor role is in charge of executing already available operations: we can assign this role to the special zero address to allow anyone to execute (if operations can be particularly time sensitive, the Governor should be made Executor instead). Lastly, there is the Admin role, which can grant and revoke the two previous roles: this is a very sensitive role that will be granted automatically to both deployer and timelock itself, but should be renounced by the deployer after setup.\n+TimelockController uses an AccessControl setup that we need to understand in order to set up roles.\n+\n+- The Proposer role is in charge of queueing operations: this is the role the Governor instance should be granted, and it should likely be the only proposer in the system.\n+- The Executor role is in charge of executing already available operations: we can assign this role to the special zero address to allow anyone to execute (if operations can be particularly time sensitive, the Governor should be made Executor instead).\n+- Lastly, there is the Admin role, which can grant and revoke the two previous roles: this is a very sensitive role that will be granted automatically to both deployer and timelock itself, but should be renounced by the deployer after setup.\n== Proposal Lifecycle\n",
        "date": "01.11.2021 17:32:00",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor TimelockController roles setup in governance.adoc"
    },
    {
        "msg": "improve docs wording on constructors and proxies",
        "diff": "diff --git a/contracts/proxy/utils/Initializable.sol b/contracts/proxy/utils/Initializable.sol @@ -5,7 +5,7 @@ pragma solidity ^0.8.0;\n/**\n* @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n- * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\n+ * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n* external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n* function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n*\n",
        "date": "19.11.2021 20:08:56",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor constructor logic to external initializer function"
    },
    {
        "msg": "improve wording for forum link in new issue templates",
        "diff": "diff --git a/.github/ISSUE_TEMPLATE/config.yml b/.github/ISSUE_TEMPLATE/config.yml contact_links:\n- - name: Support request\n+ - name: Questions & Support Requests\nurl: https://forum.openzeppelin.com/c/support/contracts/18\n- about: Ask the community in the Community Forum\n+ about: Ask in the OpenZeppelin Forum\n",
        "date": "04.02.2022 12:17:36",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "improve",
        "chatgpt_zeroshot": "Update contact links in ISSUE_TEMPLATE config.yml"
    },
    {
        "msg": "improve docs for ERC721URIStorage._burn",
        "diff": "diff --git a/contracts/token/ERC721/extensions/ERC721URIStorage.sol b/contracts/token/ERC721/extensions/ERC721URIStorage.sol @@ -48,14 +48,9 @@ abstract contract ERC721URIStorage is ERC721 {\n}\n/**\n- * @dev Destroys `tokenId`.\n- * The approval is cleared when the token is burned.\n- *\n- * Requirements:\n- *\n- * - `tokenId` must exist.\n- *\n- * Emits a {Transfer} event.\n+ * @dev See {ERC721-_burn}. This override additionally checks to see if a\n+ * token-specific URI was set for the token, and if so, it deletes the token URI from\n+ * the storage mapping.\n*/\nfunction _burn(uint256 tokenId) internal virtual override {\nsuper._burn(tokenId);\n",
        "date": "07.04.2022 18:28:18",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor _burn function to delete token URI if set"
    },
    {
        "msg": "improve spelling in ERC1155 revert reasons",
        "diff": "diff --git a/contracts/token/ERC1155/ERC1155.sol b/contracts/token/ERC1155/ERC1155.sol @@ -480,7 +480,7 @@ contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n} catch Error(string memory reason) {\nrevert(reason);\n} catch {\n- revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n+ revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\");\n}\n}\n}\n@@ -503,7 +503,7 @@ contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n} catch Error(string memory reason) {\nrevert(reason);\n} catch {\n- revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n+ revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\");\n}\n}\n}\n",
        "date": "12.07.2022 07:00:12",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "improve",
        "chatgpt_zeroshot": "Fix typo in error message for transfer to non-ERC1155Receiver implementer"
    },
    {
        "msg": "improve documentation in UUPSUpgradeable",
        "diff": "diff --git a/contracts/proxy/utils/UUPSUpgradeable.sol b/contracts/proxy/utils/UUPSUpgradeable.sol @@ -46,7 +46,7 @@ abstract contract UUPSUpgradeable is IERC1822Proxiable, ERC1967Upgrade {\n/**\n* @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n- * implementation. It is used to validate that the this implementation remains valid after an upgrade.\n+ * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n*\n* IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n* bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n",
        "date": "10.08.2022 11:15:08",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor proxiableUUID function for improved upgrade validation"
    },
    {
        "msg": "improve recommendation on ERC721 transferFrom vs safeTransferFrom",
        "diff": "diff --git a/contracts/token/ERC721/IERC721.sol b/contracts/token/ERC721/IERC721.sol @@ -81,7 +81,9 @@ interface IERC721 is IERC165 {\n/**\n* @dev Transfers `tokenId` token from `from` to `to`.\n*\n- * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n+ * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n+ * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n+ * understand this adds an external call which potentially creates a reentrancy vulnerability.\n*\n* Requirements:\n*\n",
        "date": "29.08.2022 21:40:21",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "improve",
        "chatgpt_zeroshot": "Add warning about potential loss of tokens in transfer method"
    },
    {
        "msg": "improve readability of processMultiProof",
        "diff": "diff --git a/contracts/utils/cryptography/MerkleProof.sol b/contracts/utils/cryptography/MerkleProof.sol @@ -124,7 +124,7 @@ library MerkleProof {\nbool[] memory proofFlags,\nbytes32[] memory leaves\n) internal pure returns (bytes32 merkleRoot) {\n- // This function rebuild the root hash by traversing the tree up from the leaves. The root is rebuilt by\n+ // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n// consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n// `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n// the merkle tree.\n@@ -147,7 +147,9 @@ library MerkleProof {\n// `proof` array.\nfor (uint256 i = 0; i < totalHashes; i++) {\nbytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n- bytes32 b = proofFlags[i] ? leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++] : proof[proofPos++];\n+ bytes32 b = proofFlags[i]\n+ ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n+ : proof[proofPos++];\nhashes[i] = _hashPair(a, b);\n}\n@@ -172,7 +174,7 @@ library MerkleProof {\nbool[] calldata proofFlags,\nbytes32[] memory leaves\n) internal pure returns (bytes32 merkleRoot) {\n- // This function rebuild the root hash by traversing the tree up from the leaves. The root is rebuilt by\n+ // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n// consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n// `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n// the merkle tree.\n@@ -195,7 +197,9 @@ library MerkleProof {\n// `proof` array.\nfor (uint256 i = 0; i < totalHashes; i++) {\nbytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n- bytes32 b = proofFlags[i] ? leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++] : proof[proofPos++];\n+ bytes32 b = proofFlags[i]\n+ ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n+ : proof[proofPos++];\nhashes[i] = _hashPair(a, b);\n}\n",
        "date": "05.12.2022 14:41:44",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor MerkleProof.sol to improve readability and maintain consistency in function comments."
    },
    {
        "msg": "improve Strings `equal` tests",
        "diff": "diff --git a/test/utils/Strings.test.js b/test/utils/Strings.test.js @@ -132,10 +132,16 @@ contract('Strings', function (accounts) {\nexpect(await this.strings.methods['equal(string,string)']('aa', 'a')).to.equal(false);\n});\n- it('compares two different strings of different (big) lengths', async function () {\n+ it('compares two different large strings', async function () {\nconst str1 = 'a'.repeat(201);\nconst str2 = 'a'.repeat(200) + 'b';\nexpect(await this.strings.methods['equal(string,string)'](str1, str2)).to.equal(false);\n});\n+\n+ it('compares two equal large strings', async function () {\n+ const str1 = 'a'.repeat(201);\n+ const str2 = 'a'.repeat(201);\n+ expect(await this.strings.methods['equal(string,string)'](str1, str2)).to.equal(true);\n+ });\n});\n});\n",
        "date": "29.12.2022 13:11:15",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor string comparison tests for large strings"
    },
    {
        "msg": "improve ERC20.decimals documentation",
        "diff": "diff --git a/contracts/token/ERC20/ERC20.sol b/contracts/token/ERC20/ERC20.sol @@ -18,6 +18,9 @@ import \"../../utils/Context.sol\";\n* https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n* to implement supply mechanisms].\n*\n+ * The default value of {decimals} is 18. To change this, you should override\n+ * this function so it returns a different value.\n+ *\n* We have followed general OpenZeppelin Contracts guidelines: functions revert\n* instead returning `false` on failure. This behavior is nonetheless\n* conventional and does not conflict with the expectations of ERC20\n@@ -45,9 +48,6 @@ contract ERC20 is Context, IERC20, IERC20Metadata {\n/**\n* @dev Sets the values for {name} and {symbol}.\n*\n- * The default value of {decimals} is 18. To select a different value for\n- * {decimals} you should overload it.\n- *\n* All two of these values are immutable: they can only be set once during\n* construction.\n*/\n@@ -77,8 +77,8 @@ contract ERC20 is Context, IERC20, IERC20Metadata {\n* be displayed to a user as `5.05` (`505 / 10 ** 2`).\n*\n* Tokens usually opt for a value of 18, imitating the relationship between\n- * Ether and Wei. This is the value {ERC20} uses, unless this function is\n- * overridden;\n+ * Ether and Wei. This is the default value returned by this function, unless\n+ * it's overridden.\n*\n* NOTE: This information is only used for _display_ purposes: it in\n* no way affects any of the arithmetic of the contract, including\n",
        "date": "06.01.2023 10:09:02",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor ERC20 contract to clarify default value of decimals and function override possibilities."
    },
    {
        "msg": "improve `release-cycle.yml` error reporting",
        "diff": "diff --git a/scripts/release/workflow/start.sh b/scripts/release/workflow/start.sh @@ -29,4 +29,7 @@ git add .\ngit commit -m \"Start release candidate\"\n# Push branch\n-git push origin \"$RELEASE_BRANCH\"\n+if ! git push origin \"$RELEASE_BRANCH\"; then\n+ echo \"::error file=scripts/release/start.sh::Can't push $RELEASE_BRANCH. Did you forget to run this workflow from $RELEASE_BRANCH?\"\n+ exit 1\n+fi\n",
        "date": "07.02.2023 19:15:24",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "improve",
        "chatgpt_zeroshot": "Fix error handling in push command for release candidate workflow"
    },
    {
        "msg": "improve ERC721 Wrapper tests",
        "diff": "diff --git a/test/token/ERC721/extensions/ERC721Wrapper.test.js b/test/token/ERC721/extensions/ERC721Wrapper.test.js @@ -196,11 +196,21 @@ contract('ERC721Wrapper', function (accounts) {\nto: initialHolder,\ntokenId: firstTokenId,\n});\n+ await expectEvent.inTransaction(tx, this.underlying, 'Transfer', {\n+ from: this.token.address,\n+ to: initialHolder,\n+ tokenId: secondTokenId,\n+ });\nawait expectEvent.inTransaction(tx, this.token, 'Transfer', {\nfrom: initialHolder,\nto: constants.ZERO_ADDRESS,\ntokenId: firstTokenId,\n});\n+ await expectEvent.inTransaction(tx, this.token, 'Transfer', {\n+ from: initialHolder,\n+ to: constants.ZERO_ADDRESS,\n+ tokenId: secondTokenId,\n+ });\n});\nit('works to another account', async function () {\n",
        "date": "09.02.2023 15:36:14",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "improve",
        "chatgpt_zeroshot": "Add event expectations for second token transfer in ERC721Wrapper test"
    },
    {
        "msg": "improve <Datasets /> implementation",
        "diff": "diff --git a/src/modules/Datasets/components/Datasets/Datasets.js b/src/modules/Datasets/components/Datasets/Datasets.js @@ -32,66 +32,51 @@ class Datasets extends Component {\n}\ncomponentWillMount() {\n- return this.search()\n+ return this.fetchRecords()\n}\ncomponentWillUnmount() {\nreturn cancelAllPromises(this)\n}\n- search(changes = {}) {\n- const params = Object.assign({}, this.state, changes);\n- let { textInput, filters, offset, page } = params\n- const query = buildSearchQuery(textInput, filters, page)\n+ fetchRecords() {\n+ const { textInput, filters, page = 1 } = this.state\nlet allFilters = filters\n-\n- if (!offset && page) {\n- offset = (page - 1) * 20 // Comment remplacer 20 par limit\n- }\n-\n+ const offset = (page - 1) * 20\nif (this.props.pathname === 'datasets') {\nallFilters = [...filters, { name: 'availability', value: 'yes' }]\n}\n+ return waitForDataAndSetState(search(textInput, allFilters, offset), this, 'datasets')\n+ }\n+ search(changes = {}) {\n+ window.scrollTo(0, 0);\n+ return this.setState(changes, () => {\n+ const params = Object.assign({}, this.state, changes)\n+ let { textInput, filters, page } = params\n+ const query = buildSearchQuery(textInput, filters, page)\n+ if (window.location.search === `?${query}`) return\nbrowserHistory.push(`${this.props.pathname}?${query}`)\n-\n- return waitForDataAndSetState(search(textInput, allFilters, offset), this, 'datasets')\n+ return this.fetchRecords()\n+ })\n}\naddFilter(filter) {\nconst filters = addFilter(this.state.filters, filter)\n- const changes = { filters, offset: 0, page: 1, datasets: null }\n-\n- this.setState(changes)\n- this.search(changes)\n+ return this.search({ filters, page: 1, datasets: null })\n}\nremoveFilter(filter) {\nconst filters = removeFilter(this.state.filters, filter)\n- const changes = { filters, offset: 0, page: 1, datasets: null }\n-\n- this.setState(changes)\n- this.search(changes)\n+ return this.search({ filters, page: 1, datasets: null })\n}\nuserSearch(textInput) {\n- const changes = { textInput, datasets: null, offset: 0, page: 1 }\n- this.setState(changes)\n- this.search(changes)\n+ return this.search({ textInput, datasets: null, page: 1 })\n}\n- handleChangePage(data) {\n- const limit = this.state.datasets.query.limit\n- const selected = data.selected\n- const offset = Math.ceil(selected * limit)\n- const page = (offset / limit) + 1\n- const changes = { page, offset }\n-\n- window.scrollTo(0, 0);\n-\n- this.setState(changes, () => {\n- this.search(changes)\n- })\n+ handleChangePage({ selected }) {\n+ return this.search({ page: selected + 1 })\n}\nrender() {\n",
        "date": "18.01.2017 19:30:52",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor search functionality in Datasets component"
    },
    {
        "msg": "improve dorpdown position",
        "diff": "diff --git a/src/components/Dropdown/Dropdown.scss b/src/components/Dropdown/Dropdown.scss display: none;\nposition: absolute;\nbackground-color: #fff;\n+ width: 100px;\n+ right: 0;\ntext-align: left;\n- margin-left: -90px;\nbox-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\nz-index: 1;\n",
        "date": "18.10.2017 16:17:41",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "improve",
        "chatgpt_zeroshot": "Increase width and adjust position of Dropdown component"
    },
    {
        "msg": "improve table layout in articles, especially for mobile",
        "diff": "diff --git a/app/styles/components/_article.scss b/app/styles/components/_article.scss @@ -83,4 +83,23 @@ article {\n}\n}\n}\n+\n+ table {\n+ td,th {\n+ word-break: break-word;\n+ }\n+ }\n+\n+ @media (max-width: $medium-screen) {\n+ table {\n+ td,th {\n+ display: block;\n+ border: 0;\n+ }\n+\n+ tr {\n+ border-bottom: 1px solid darken($base-border-color, 15%);\n+ }\n+ }\n+ }\n}\n",
        "date": "28.06.2017 21:37:41",
        "repo": "ember-learn/ember-api-docs",
        "type": "improve",
        "chatgpt_zeroshot": "Add responsive styling for tables in articles"
    },
    {
        "msg": "improve test setup for failover integration test",
        "diff": "diff --git a/test/integration/short/client-pool-tests.js b/test/integration/short/client-pool-tests.js @@ -781,7 +781,7 @@ describe('Client', function () {\nsetTimeout(next, 5000);\n},\nfunction warmUpPool(seriesNext) {\n- utils.times(10, function (n, next) {\n+ utils.times(20, function (n, next) {\nclient.execute(query, function (err, result) {\nassert.ifError(err);\nhosts[result.info.queriedHost] = true;\n@@ -789,14 +789,14 @@ describe('Client', function () {\n});\n}, seriesNext);\n},\n- next => setImmediate(next),\n+ helper.setIntervalUntilTask(() => {\n+ const state = client.getState();\n+ return client.hosts.values().reduce((accumulator, h) => accumulator + state.getInFlightQueries(h), 0) === 0;\n+ }, 20, 100),\nfunction testCase(seriesNext) {\n// 3 hosts alive\nassert.strictEqual(Object.keys(hosts).length, 3);\n- const state = client.getState();\n- client.hosts.forEach(h => assert.strictEqual(state.getInFlightQueries(h), 0));\n-\nlet killed = false;\nutils.timesLimit(500, 20, function (n, next) {\nif (n === 30) {\n",
        "date": "23.05.2019 10:51:29",
        "repo": "datastax/nodejs-driver",
        "type": "improve",
        "chatgpt_zeroshot": "Increase client pool warm-up iterations and add interval check for in-flight queries."
    },
    {
        "msg": "improve datagrid column auto-sizing by honoring formatted cell data better",
        "diff": "diff --git a/js/datagrid.js b/js/datagrid.js @@ -2563,26 +2563,19 @@ $.fn.datagrid = function(options) {\nself = this,\nfield = columnDef.field,\nmaxText = '',\n+ title = columnDef.name || '',\nchooseHeader = false;\n+ //Get max cell value length for this column\nfor (var i = 0; i < this.settings.dataset.length; i++) {\nvar val = this.fieldValue(this.settings.dataset[i], field),\n- len = 0, title;\n+ len = 0;\n- //Some types should be formatted\n- if (val instanceof Date || typeof val === 'number' || columnDef.dateFormat) {\n- val = self.formatValue(columnDef.formatter, i , null, this.fieldValue(this.settings.dataset[i], field), columnDef, this.settings.dataset[i], self);\n+ //Get formatted value (without html) so we have accurate string that will display for this cell\n+ val = self.formatValue(columnDef.formatter, i, null, val, columnDef, this.settings.dataset[i], self);\nval = val.replace(/<\\/?[^>]+(>|$)/g, '');\n- }\nlen = val.toString().length;\n- title = columnDef.name || '';\n-\n- if (title.length > len) {\n- chooseHeader = true;\n- len = title.length;\n- val = title;\n- }\nif (len > max) {\nmax = len;\n@@ -2590,6 +2583,13 @@ $.fn.datagrid = function(options) {\n}\n}\n+ //Use header text length as max if bigger than all data cells\n+ if (title.length > max) {\n+ max = title.length;\n+ maxText = title;\n+ chooseHeader = true;\n+ }\n+\nif (maxText === '' || this.settings.dataset.length === 0) {\nmaxText = columnDef.name || ' Default ';\nchooseHeader = true;\n",
        "date": "28.02.2017 16:02:19",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor cell value length calculation and header text handling in datagrid.js"
    },
    {
        "msg": "improve the Modal Events visual test to help demonstrate this ticket's issue",
        "diff": "diff --git a/views/tests/modal/events.html b/views/tests/modal/events.html +<div class=\"row\">\n+ <div class=\"six columns\">\n+\n+ <h2>Modal Test: Events</h2>\n+ <p>\n+ <a class=\"hyperlink\" href=\"http://jira/browse/SOHO-5992\">Related JIRA Ticket</a>. This test demonstrates how lifecycle events work on the Modal component. Lifecycle events include <span class=\"code\">beforeopen</span>, <span class=\"code\">open</span>, <span class=\"code\">afteropen</span>, <span class=\"code\">beforeclose</span>, <span class=\"code\">close</span>, and <span class=\"code\">afterclose</span>. The two modal triggers below display the order and timing in which these events fire.\n+ </p>\n+ <p>\n+ The \"Show Modal\" trigger button creates a modal that has its opening cancelled by using <span class=\"code\">return false;</span> from inside its beforeopen event. Doing this causes rendering of the modal to stop, so it won't show.\n+ </p>\n+\n+ </div>\n+</div>\n+\n<div class=\"row\">\n<div class=\"twelve columns\">\n+ <div class=\"field\">\n<button class=\"btn-secondary\" type=\"button\" id=\"show\">Show Modal</button>\n<button class=\"btn-secondary\" type=\"button\" id=\"show2\">Show Modal 2</button>\n- <div id=\"modal-1\" style=\"display: none\">\n+ </div>\n+ <div id=\"modal-1\" style=\"display: none;\">\n<div class=\"field\">\n<label for=\"context-name\" class=\"required\">Name</label>\n<input id=\"context-name\" aria-required=\"true\" data-validate=\"required\" name=\"context-name\" type=\"text\">\n<option value=\"5\">Context #5</option>\n</select>\n</div>\n-\n</div>\n- <div id=\"modal-2\" style=\"display: none\">\n+ <div id=\"modal-2\" style=\"display: none;\">\n<div class=\"field\">\n<label for=\"context-name\" class=\"required\">Name</label>\n<input id=\"context-name\" aria-required=\"true\" data-validate=\"required\" name=\"context-name\" type=\"text\">\n</div>\n<script>\n- $('#show2').on('click', function () {\n- var modal2 = $('body').modal({\n- title: 'Modal 2',\n- content: $('#modal-2'),\n- buttons: [{\n- text: 'Cancel',\n- click: function(e, modal) {\n- modal.close();\n- }\n- }, {\n- text: 'Submit',\n- click: function(e, modal) {\n- modal.close();\n+ var customContent = {\n+ modal1: {\n+ title: \"Add Content\",\n+ content: $('#modal-1')\n},\n- validate: false,\n- isDefault: true\n- }]\n- }).data('modal').element;\n+ modal2: {\n+ title: \"Modal 2\",\n+ content: $('#modal-2')\n+ }\n+ };\n+ function toast(message) {\n+ $('body').toast({\n+ title: '',\n+ message: message,\n+ timeout: 3000\n});\n+ }\n- $('#show').on('click', function () {\n-\n+ function createModal(modalName) {\nvar modal = $('body').modal({\n- title: 'Add a Comment',\n- content: $('#modal-1'),\n+ title: customContent[modalName].title,\n+ content: customContent[modalName].content,\nbuttons: [{\ntext: 'Cancel',\nclick: function(e, modal) {\nvalidate: false,\nisDefault: true\n}]\n- }).data('modal').element;\n+ });\n- modal.on('beforeopen', function () {\n- console.log('beforeopen');\n- return false;\n- }).on('open', function () {\n- console.log('open');\n+ return modal.data('modal').element;\n+ }\n+\n+ function handleSimilarEvents(id, modalElement) {\n+ var modalName = customContent[id].title\n+\n+ return modalElement.on('open', function () {\n+ toast(modalName + ': open');\n}).on('afteropen', function () {\n- console.log('afteropen');\n+ toast(modalName + ': afteropen');\n}).on('beforeclose', function() {\n- console.log('beforeclose');\n+ toast(modalName + ': beforeclose');\n}).on('close', function() {\n- console.log('close');\n+ toast(modalName + ': close');\n}).on('afterclose', function() {\n- console.log('afterclose');\n+ toast(modalName + ': afterclose');\n});\n+ }\n+\n+ // Modal #1 doesn't display due to a 'return false;' on its `beforeopen` event\n+ $('#show').on('click.test', function () {\n+ var thisModal = createModal('modal1');\n+ thisModal = handleSimilarEvents('modal1', thisModal);\n+ thisModal.on('beforeopen', function () {\n+ toast('Add Content: beforeopen');\n+ return false;\n+ });\n+ });\n+\n+ // Modal #2 should display all the time, and fire all lifecycle events\n+ $('#show2').on('click.test', function() {\n+ var thisModal = createModal('modal2');\n+ thisModal = handleSimilarEvents('modal2', thisModal);\n+\n+ thisModal.on('beforeopen', function() {\n+ toast('Modal 2: beforeopen');\n+ });\n});\n</script>\n",
        "date": "28.03.2017 09:20:09",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Add modal test for lifecycle events and event handling."
    },
    {
        "msg": "improve Split-Button test",
        "diff": "diff --git a/views/tests/menubutton/splitbutton.html b/views/tests/menubutton/splitbutton.html <div class=\"row\">\n<div class=\"six columns\">\n<h2>Menu Button Test</h2>\n- <p>Split buttons are not officially supported. This is a non-official way you could implement them.\n- </p><br />\n+ <p><a class=\"hyperlink\" href=\"http://jira/browse/SOHO-5922\" target=\"_blank\">Related JIRA Ticket</a>. Split buttons are not officially supported. This is a non-official way you could implement them.</p>\n</div>\n</div>\n<div class=\"row\">\n<div class=\"twelve columns\">\n- <div class=\"toolbar\" role=\"toolbar\" data-options=\"{maxVisibleButtons: 4}\">\n+ <div id=\"example-toolbar\" class=\"toolbar\" role=\"toolbar\" data-options=\"{maxVisibleButtons: 4}\">\n<div class=\"title\">\nToolbar Title\n</div>\n<div class=\"buttonset\">\n- <button type=\"button\" class=\"btn\">\n+ <button id=\"unhelpful\" class=\"btn\">\n+ <span>Unhelpful Button</span>\n+ </button>\n+\n+ <button id=\"add-row-button\" type=\"button\" class=\"btn\">\n<svg class=\"icon\" focusable=\"false\" aria-hidden=\"true\" role=\"presentation\">\n<use xlink:href=\"#icon-add\"></use>\n</svg>\n<span>Add Row</span>\n</button>\n- <button type=\"button\" class=\"btn-split-menu btn\">\n+ <button id=\"split-button-action\" type=\"button\" class=\"btn-split-menu btn\">\n<span>Add</span>\n</button>\n<div class=\"separator\"></div>\n- <button type=\"button\" class=\"btn-split-menu btn-menu\">\n+ <button id=\"split-button-menu-trigger\" type=\"button\" class=\"btn-split-menu btn-menu\">\n<span class=\"audible\">Change Default</span>\n<svg class=\"icon\" focusable=\"false\" aria-hidden=\"true\" role=\"presentation\">\n<use xlink:href=\"#icon-dropdown\"></use>\n</div>\n<script>\n- $('.btn-split-menu.btn').on('click', function (e) {\n+ var EXAMPLE_TOOLBAR = $('#example-toolbar'),\n+ SPLIT_BUTTON_ACTION = $('#split-button-action'),\n+ SPLIT_BUTTON_MENU_TRIGGER = $('#split-button-menu-trigger');\n+\n+ // Action Button fires the action\n+ SPLIT_BUTTON_ACTION.on('click', function (e) {\nalert('Do ' + $(this).find('span').text() + ' Action');\n});\n- $('.toolbar').on('selected', function (e, args) {\n- $('.btn-split-menu.btn').find('span').text(args.text());\n+ // MenuButton selection changes the default action\n+ SPLIT_BUTTON_MENU_TRIGGER.on('selected', function (e, args) {\n+\n+ SPLIT_BUTTON_ACTION.find('span').text(args.text());\n$(this).trigger('updated');\n//Sync the selected items in the two menus...\n",
        "date": "17.04.2017 11:59:21",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Add JIRA link and ID attributes to toolbar buttons in splitbutton.html"
    },
    {
        "msg": "improve test case for disabled spillover buttons",
        "diff": "diff --git a/components/toolbar/test-disabled-items-in-spillover.html b/components/toolbar/test-disabled-items-in-spillover.html <div class=\"row\">\n<div class=\"twelve columns\">\n- <div class=\"toolbar\">\n+ <div id=\"test-toolbar\" class=\"toolbar\" data-options='{ \"favorButtonset\": false }'>\n<div class=\"title\">4 Buttons, No Pre-built More Menu</div>\n<div class=\"buttonset\">\n- <button type=\"button\" class=\"btn\">\n+ <button id=\"btn-save\" type=\"button\" class=\"btn\">\n<svg class=\"icon\" focusable=\"false\" aria-hidden=\"true\" role=\"presentation\">\n<use xlink:href=\"#icon-save\"></use>\n</svg>\n<span>Save</span>\n</button>\n- <button type=\"button\" class=\"btn\">\n+ <button id=\"btn-category\" type=\"button\" class=\"btn\">\n<svg class=\"icon\" focusable=\"false\" aria-hidden=\"true\" role=\"presentation\">\n<use xlink:href=\"#icon-filter\"></use>\n</svg>\n<span>Category</span>\n</button>\n- <button type=\"button\" class=\"btn\" disabled>\n+ <button id=\"btn-disabled\" type=\"button\" class=\"btn\" disabled>\n<svg class=\"icon\" focusable=\"false\" aria-hidden=\"true\" role=\"presentation\">\n<use xlink:href=\"#icon-calendar\"></use>\n</svg>\n<span>Disabled</span>\n</button>\n- <button type=\"button\" class=\"btn\">\n+ <button id=\"btn-share\" type=\"button\" class=\"btn\">\n<svg class=\"icon\" focusable=\"false\" aria-hidden=\"true\" role=\"presentation\">\n<use xlink:href=\"#icon-mingle-share\"></use>\n</svg>\n<span>Share</span>\n</button>\n- <button type=\"button\" class=\"btn\" disabled>\n+ <button id=\"btn-disabled-again\" type=\"button\" class=\"btn\" disabled>\n<svg class=\"icon\" focusable=\"false\" aria-hidden=\"true\" role=\"presentation\">\n<use xlink:href=\"#icon-mingle-share\"></use>\n</svg>\n- <span>Disabled</span>\n+ <span>Disabled Again</span>\n</button>\n</div>\n</div>\n</div>\n</div>\n+\n+<script type=\"text/javascript\">\n+ // Event Listener for this code\n+ $('#test-toolbar').on('selected.test', function(e, target) {\n+ var contents = $(target).text().trim(),\n+ id = '#' + $(target).attr('id');\n+\n+ $('body').toast({\n+ title: '<span style=\"color: #aa1111; font-weight: bold;\">' + id + '</span> selected!',\n+ message: 'Toolbar Item with ID <b>' + id + '</b> selected! It\\'s contents are: \"' + contents + '\".'\n+ });\n+ });\n+</script>\n",
        "date": "08.09.2017 14:33:06",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Add event listener for toolbar item selection in test-disabled-items-in-spillover.html"
    },
    {
        "msg": "improve AJAX test",
        "diff": "diff --git a/components/toolbar/test-ajax-from-toolbar-on-spillover.html b/components/toolbar/test-ajax-from-toolbar-on-spillover.html </div>\n</div>\n+<div class=\"row\">\n+ <div class=\"twelve columns\">\n+ <button type=\"button\" id=\"change-ajax\" class=\"btn\">\n+ <svg class=\"icon\" focusable=\"false\" aria-hidden=\"true\" role=\"presentation\">\n+ <use xlink:href=\"#icon-settings\"></use>\n+ </svg>\n+ <span>Change Ajax Call</span>\n+ </button>\n+ </div>\n+</div>\n<script type=\"text/javascript\">\nvar TOP_LEVEL_POPUPMENU_CONTENT = '' +\n'<li><a href=\"#\">AJAX Sub-option #3</a></li>' +\n'<li><a href=\"#\">AJAX Sub-option #4</a></li>';\n+ var ALTERNATE_TOP_LEVEL_POPUPMENU_CONTENT = '' +\n+ '<li><a href=\"#\">Different AJAX Option #1</a></li>' +\n+ '<li><a href=\"#\">Different AJAX Option #2</a></li>' +\n+ '<li><a href=\"#\">Different AJAX Option #3</a></li>' +\n+ '<li><a href=\"#\">Different AJAX Option #4</a></li>';\n+\n// Populate the menu with some fake content for the sake of testing the AJAX call.\nfunction popupmenuBeforeOpen(response, options) {\nif (options.contextElement) {\nreturn response( $(TOP_LEVEL_POPUPMENU_CONTENT) );\n}\n+ // Populate the menu with some fake content for the sake of testing the AJAX call.\n+ function popupmenuBeforeOpenTwo(response, options) {\n+ console.log('Using different Popupmenu Content...');\n+ return response( $(ALTERNATE_TOP_LEVEL_POPUPMENU_CONTENT) );\n+ }\n+\n// Manually invoke the Toolbar.\n// (more akin to how the Angular components will deal with the jQuery components)\nvar toolbarElem = $('#ajax-toolbar');\ntoolbarElem.toolbar(TOOLBAR_SETTINGS);\ntoolbarAPI = toolbarElem.data('toolbar');\n}\n+\n+ // Swap out the More Menu's ajax call for a different one.\n+ $('#change-ajax').on('click', function () {\n+ if (toolbarAPI) {\n+ toolbarAPI.updated({\n+ maxVisibleButtons: 4,\n+ moreMenuSettings: {\n+ beforeOpen: popupmenuBeforeOpenTwo\n+ }\n+ });\n+ }\n+ });\n</script>\n",
        "date": "06.03.2018 17:00:04",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Add button to change AJAX call in toolbar and update menu content accordingly."
    },
    {
        "msg": "improve screenshot/regression testing docs",
        "diff": "diff --git a/docs/TESTING.md b/docs/TESTING.md @@ -27,7 +27,8 @@ It also may include integration testing which is the phase in software testing i\nIt also maybe include regression testing, which is a type of software testing which verifies that software which was previously developed and tested still performs the same way after it was changed or interfaced with other software.\n- Screen Shots\n- We are utilizing a plugin to aide with the collection, and analysis of screenshots. On Chrome only currently, we capture screenshots, and compare them to a baseline(most current and valid) screenshots\n+ - We are utilizing a plugin to aide with the collection, and analysis of screenshots. On Chrome only currently, we capture screenshots, and compare them to a baseline(most current and valid) screenshots\n+ - The tool will capture screenshots, and save the screenshots to the `../.tmp/actual/` directory. If the screenshot is valid, and can then be moved to the baseline directory where it should be committed, and saved in the git repository.\n## Running and Debugging Tests\nRun just the api spec, for debugging with Chrome. For debugging use statements in the unit tests, and open Chrome DevTools\n",
        "date": "09.04.2018 17:05:56",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Add functionality to capture and compare screenshots in testing process"
    },
    {
        "msg": "improve test for CI",
        "diff": "diff --git a/test/components/textarea/textarea.e2e-spec.js b/test/components/textarea/textarea.e2e-spec.js @@ -70,7 +70,9 @@ describe('Textarea size tests', () => {\nconst responsiveEl = await element(by.id('responsive'));\n- expect(await responsiveEl.getCssValue('width')).toBe('1160px');\n+ const h = parseInt(await responsiveEl.getCssValue('width'), 10);\n+\n+ expect(h).toBeGreaterThan(950);\n});\n});\n",
        "date": "18.06.2018 14:22:36",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Update textarea.e2e-spec.js to check for responsive element width greater than 950px."
    },
    {
        "msg": "improve a validation test",
        "diff": "diff --git a/test/components/validation/validation.e2e-spec.js b/test/components/validation/validation.e2e-spec.js @@ -273,6 +273,7 @@ describe('No Validation on Readonly', () => {\nit('Should not validate when readonly', async () => {\nconst email = await element(by.id('ro-email-address-ok'));\n+ await email.click();\nawait email.sendKeys(protractor.Key.TAB);\nawait browser.driver.sleep(config.sleep);\n@@ -281,7 +282,8 @@ describe('No Validation on Readonly', () => {\nconst toggle = await element(by.id('toggle'));\ntoggle.click();\n- await email.clear();\n+ await browser.driver.sleep(config.sleep);\n+ await email.click();\nawait email.sendKeys(protractor.Key.TAB);\nawait browser.driver.sleep(config.sleep);\n",
        "date": "05.07.2018 16:21:06",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Fix validation issue on readonly input"
    },
    {
        "msg": "improve autocomplete visual regression test",
        "diff": "diff --git a/test/components/autocomplete/autocomplete.e2e-spec.js b/test/components/autocomplete/autocomplete.e2e-spec.js @@ -24,13 +24,13 @@ describe('Autocomplete example-index tests', () => {\nconst autocompleteEl = await element(by.id('autocomplete-default'));\nawait browser.driver.wait(protractor.ExpectedConditions.presenceOf(autocompleteEl), config.waitsFor);\nawait autocompleteEl.sendKeys('a');\n- const autocompleteListEl = await element(by.id('autocomplete-list'));\n- await browser.driver.wait(protractor.ExpectedConditions.presenceOf(autocompleteListEl), config.waitsFor);\n+ const autocompleteListContainer = await element(by.id('maincontent'));\n+ await browser.driver.wait(protractor.ExpectedConditions.presenceOf(autocompleteListContainer), config.waitsFor);\nawait browser.driver\n- .wait(protractor.ExpectedConditions.presenceOf(autocompleteListEl), config.waitsFor);\n+ .wait(protractor.ExpectedConditions.presenceOf(autocompleteListContainer), config.waitsFor);\nawait browser.driver.sleep(config.waitsFor);\n- expect(await browser.protractorImageComparison.checkElement(autocompleteListEl, 'autocomplete-open')).toEqual(0);\n+ expect(await browser.protractorImageComparison.checkElement(autocompleteListContainer, 'autocomplete-open')).toEqual(0);\n});\n}\n",
        "date": "09.07.2018 16:00:37",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor autocomplete element selection in e2e test"
    },
    {
        "msg": "improve source code matching in custom builder",
        "diff": "diff --git a/scripts/build.js b/scripts/build.js @@ -440,19 +440,34 @@ function searchFileNames(files, term) {\n}\nfiles.forEach((file) => {\n- if (file.indexOf(term) === -1) {\n+ const wordBoundaryRegex = new RegExp(`\\\\b[_.]?${term}\\\\b`, 'gi');\n+ if (!file.match(wordBoundaryRegex)) {\nreturn;\n}\n- // TODO: More granular sorting of component names (see #850).\n- // fx: \"builder\" should not also match \"listbuilder\"\n-\nresults.push(file);\n});\nreturn results;\n}\n+/**\n+ * Prunes the test results list in specific, tough cases\n+ * @private\n+ * @param {string} file path to a functional or e2e test\n+ * @param {array} components array of requested bundle items\n+ * @returns {boolean} whether or not the test should be pruned\n+ */\n+function pruneTest(file, components) {\n+ // If validation component is included but datagrid is not, remove datagrid validation test\n+ const datagridValidationTest = path.join('components', 'datagrid', 'datagrid-validation.func-spec.js');\n+ if (file === datagridValidationTest && components.indexOf('datagrid') === -1) {\n+ return true;\n+ }\n+\n+ return false;\n+}\n+\n/**\n* Gets a copy of the standard `index.js` file.\n* @param {string} filePath the target file to be read.\n@@ -1005,6 +1020,10 @@ cleanAll(true).then(() => {\n// Scan for relevant tests\nconst testResults = searchFileNames(tests, arg);\ntestResults.forEach((result) => {\n+ if (pruneTest(result, requestedComponents)) {\n+ return;\n+ }\n+\nif (result.indexOf('func-spec.js') > -1) {\nbuckets['test-func'].push(result);\n}\n",
        "date": "16.10.2018 10:23:29",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Add functionality to prune specific test cases based on requested components"
    },
    {
        "msg": "improve test further",
        "diff": "diff --git a/test/components/editor/editor-api.func-spec.js b/test/components/editor/editor-api.func-spec.js @@ -18,7 +18,7 @@ describe('Editor API', () => {\n});\nafterEach(() => {\n- cleanup(['.editor', '.svg-icons', '.modal', '.row']);\n+ cleanup(['.editor', '.svg-icons', '.modal', '.row', '.modal-page-container']);\n});\nit('Should be defined on jQuery object', () => {\n",
        "date": "20.02.2019 16:28:14",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Add '.modal-page-container' to cleanup function in editor-api.func-spec.js"
    },
    {
        "msg": "improve paging tests",
        "diff": "diff --git a/test/components/datagrid/datagrid.e2e-spec.js b/test/components/datagrid/datagrid.e2e-spec.js @@ -542,7 +542,7 @@ describe('Datagrid paging tests', () => {\nbeforeEach(async () => {\nawait utils.setPage('/components/datagrid/example-paging');\n- const datagridEl = await element(by.id('datagrid'));\n+ const datagridEl = await element(by.css('.pager-toolbar'));\nawait browser.driver\n.wait(protractor.ExpectedConditions.presenceOf(datagridEl), config.waitsFor);\n});\n@@ -605,7 +605,7 @@ describe('Datagrid paging tests', () => {\nexpect(await element(by.css('tbody tr:nth-child(10) td:nth-child(2) span')).getText()).toEqual('49');\n});\n- it('Should not move on a page thats more than the max', async () => {\n+ it('Should not move on a page thats more than the max', async () => { //eslint-disable-line\nexpect(await element(by.css('tbody tr:nth-child(1) td:nth-child(2) span')).getText()).toEqual('0');\nexpect(await element(by.css('tbody tr:nth-child(10) td:nth-child(2) span')).getText()).toEqual('9');\n",
        "date": "01.03.2019 09:07:59",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor datagrid element selection in e2e tests"
    },
    {
        "msg": "improve list rebuilder process",
        "diff": "diff --git a/scripts/verify.js b/scripts/verify.js @@ -66,7 +66,11 @@ function isDirectory(filePath) {\n// Main\n// -------------------------------------\n+if (commandLineArgs.rebuild) {\n+ logger('info', `Creating a new ${chalk.yellow('expected-files.json')} list...`);\n+} else {\nlogger('info', 'Verifying the last build...');\n+}\n// Load expected files list.\n// If the file doesn't exist, this script can't continue.\n@@ -112,7 +116,6 @@ glob(`${paths.dist}/**/*`, globOptions, (err, files) => {\nfoundFiles.forEach((file) => {\nlogger('padded', `${file}`);\n});\n- logger('\\n');\n}\n// Save a new list, if applicable\n@@ -121,7 +124,7 @@ glob(`${paths.dist}/**/*`, globOptions, (err, files) => {\nconst filesListTxt = JSON.stringify(foundFiles, null, '\\t');\n// Create Dirs\n- const outputPath = path.join(process.cwd(), 'data', 'expected-files.json');\n+ const outputPath = path.join(process.cwd(), 'scripts', 'data', 'expected-files.json');\ncreateDirs([\npath.join(process.cwd(), 'dist'),\npath.join(process.cwd(), 'dist', 'tmp')\n@@ -132,6 +135,7 @@ glob(`${paths.dist}/**/*`, globOptions, (err, files) => {\nlogger('beer', `New file list saved to \"${chalk.yellow(outputPath)}\"`);\nprocess.exit(0);\n});\n+ return;\n}\n// Get the differnce\n",
        "date": "26.06.2019 13:05:09",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor file path for expected-files.json and add conditional message for rebuild option."
    },
    {
        "msg": "improve test for dropdown filter types",
        "diff": "diff --git a/app/views/components/dropdown/test-filter-types.html b/app/views/components/dropdown/test-filter-types.html <div class=\"row\">\n<div class=\"six columns\">\n-\n<h2>Dropdown Test: Filter Types</h2>\n- <p>\n- The dropdown on the left/top shows <em>contains</em>-style filtering.<br />\n- The dropdown on the right/bottom shows <em>startsWith</em>-style filtering.\n- </p>\n-\n</div>\n</div>\n-<div class=\"row\" style=\"margin-top: 20px;\">\n+<div class=\"row top-padding\">\n<div class=\"six columns\">\n-\n<div class=\"field\">\n<label for=\"contains-filter\">Contains Filter</label>\n<select id=\"contains-filter\" name=\"contains-filter\" class=\"dropdown\" data-init=\"false\"></select>\n</div>\n-\n</div>\n- <div class=\"six columns\">\n+</div>\n+<div class=\"row top-padding\">\n+ <div class=\"six columns\">\n<div class=\"field\">\n- <label for=\"startsWith-filter\">StartsWith Filter</label>\n- <select id=\"startsWith-filter\" name=\"startsWith-filter\" class=\"dropdown\" data-init=\"false\"></select>\n+ <label for=\"phraseStartsWith-filter\">PhraseStartsWith Filter</label>\n+ <select id=\"phraseStartsWith-filter\" name=\"phraseStartsWith-filter\" class=\"dropdown\" data-init=\"false\"></select>\n+ </div>\n+ </div>\n</div>\n+<div class=\"row top-padding\">\n+ <div class=\"six columns\">\n+ <div class=\"field\">\n+ <label for=\"wordStartsWith-filter\">WordStartsWith Filter</label>\n+ <select id=\"wordStartsWith-filter\" name=\"wordStartsWith-filter\" class=\"dropdown\" data-init=\"false\"></select>\n+ </div>\n</div>\n</div>\n-<script>\n+<script id=\"test-scripts\">\n$('body').on('initialized', function() {\n-\nfunction statesSource(response, term) {\n$.getJSON('{{basepath}}api/states', function(data, term) {\n+ data.unshift({ value: '', label: '' });\nresponse(data);\n});\n}\nsource: statesSource\n});\n- $('#startsWith-filter').dropdown({\n- filterMode: 'startsWith',\n+ $('#phraseStartsWith-filter').dropdown({\n+ filterMode: 'phraseStartsWith',\nsource: statesSource\n});\n+ $('#wordStartsWith-filter').dropdown({\n+ filterMode: 'wordStartsWith',\n+ source: statesSource\n+ });\n});\n</script>\n",
        "date": "27.06.2019 11:04:38",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor dropdown filter types and add new filters for phrases and words."
    },
    {
        "msg": "improve another multiselect test, clarify what some of them do",
        "diff": "diff --git a/test/components/multiselect/multiselect.e2e-spec.js b/test/components/multiselect/multiselect.e2e-spec.js @@ -114,7 +114,7 @@ describe('Multiselect example-index tests', () => {\n});\n// Edited for #920\n- fit('Can deselect all items and display an empty pseudo-element', async () => {\n+ it('Can deselect all items and display an empty pseudo-element', async () => {\nconst multiselectEl = await element.all(by.css('div.dropdown')).first();\nawait browser.driver\n.wait(protractor.ExpectedConditions.presenceOf(multiselectEl), config.waitsFor);\n@@ -126,8 +126,12 @@ describe('Multiselect example-index tests', () => {\nawait multiselectSearchEl.sendKeys(protractor.Key.ENTER);\nawait multiselectSearchEl.sendKeys(protractor.Key.ESCAPE);\n- expect(['<span class=\"audible\">States (Max 10) </span>', ''])\n- .toContain(await element.all(by.css('.dropdown span')).first().getText());\n+ const acceptableResults = [\n+ '', // on CI\n+ '<span class=\"audible\">States (Max 10) </span>' // on Local\n+ ];\n+\n+ expect(acceptableResults).toContain(await element.all(by.css('.dropdown span')).first().getText());\n});\n// Edited for #920\n@@ -304,7 +308,12 @@ describe('Multiselect typeahead-reloading tests', () => {\nawait browser.driver.sleep(config.sleep);\n- expect(await element(by.css('.dropdown span')).getText()).toEqual('New Jersey, New York');\n+ const acceptableResults = [\n+ 'New Jersey, New York', // on CI\n+ '<span class=\"audible\">Typeahead-Reloaded Multiselect </span>New Jersey, New York', // on Local\n+ ];\n+\n+ expect(acceptableResults).toContain(await element(by.css('.dropdown span')).getText());\n});\n}\n});\n",
        "date": "15.07.2019 17:06:32",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor multiselect.e2e-spec.js for consistent test results"
    },
    {
        "msg": "improve date test",
        "diff": "diff --git a/test/components/datepicker/datepicker.e2e-spec.js b/test/components/datepicker/datepicker.e2e-spec.js @@ -734,6 +734,10 @@ describe('Datepicker Umalqura Tests', () => {\nawait utils.setPage('/components/datepicker/example-umalqura');\n});\n+ it('Should not have errors', async () => {\n+ await utils.checkForErrors();\n+ });\n+\nit('Should render Umalqura monthview', async () => {\nconst datepickerEl = await element(by.id('islamic-date'));\nawait datepickerEl.sendKeys(protractor.Key.ARROW_DOWN);\n@@ -748,7 +752,8 @@ describe('Datepicker Umalqura Tests', () => {\nconst value = await element(by.id('islamic-date')).getAttribute('value');\n- expect(value.substr(0, 2)).toEqual('14');\n+ expect(value.length).toEqual(10);\n+ await utils.checkForErrors();\n});\n});\n",
        "date": "07.08.2019 15:42:51",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Add error checking and update test for Umalqura datepicker"
    },
    {
        "msg": "improve a date test",
        "diff": "diff --git a/test/components/datepicker/datepicker.e2e-spec.js b/test/components/datepicker/datepicker.e2e-spec.js @@ -964,7 +964,7 @@ describe('Datepicker Umalqura EG Tests', () => {\ndescribe('Datepicker Gregorian SA Tests', () => { //eslint-disable-line\nbeforeEach(async () => {\n- await utils.setPage('/components/datepicker/test-ar-sa-gregorian');\n+ await utils.setPage('/components/datepicker/test-ar-sa-gregorian?locale=ar-SA');\nawait browser.driver.sleep(config.sleep);\n});\n",
        "date": "07.08.2019 19:07:14",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Add locale parameter to datepicker test for Gregorian SA calendar"
    },
    {
        "msg": "improve one of the tests",
        "diff": "diff --git a/test/components/datagrid/datagrid.e2e-spec.js b/test/components/datagrid/datagrid.e2e-spec.js @@ -2130,17 +2130,11 @@ describe('Datagrid paging serverside single select tests', () => {\nawait element(by.css('.pager-next a')).click();\nawait browser.driver.sleep(config.sleep);\n- await browser.driver\n- .wait(protractor.ExpectedConditions.elementToBeClickable(await element(by.css('.pager-prev'))), config.waitsFor);\n-\nexpect(await element.all(by.css('.datagrid-row.is-selected')).count()).toEqual(0);\nawait element(by.css('.pager-prev a')).click();\nawait browser.driver.sleep(config.sleep);\n- await browser.driver\n- .wait(protractor.ExpectedConditions.elementToBeClickable(await element(by.css('.pager-next'))), config.waitsFor);\n-\nexpect(await element.all(by.css('.datagrid-row.is-selected')).count()).toEqual(0);\n});\n});\n",
        "date": "12.08.2019 14:53:06",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor datagrid.e2e-spec.js for improved readability and efficiency"
    },
    {
        "msg": "improve selectable items on test",
        "diff": "diff --git a/app/views/components/toolbar-flex/test-more-actions-selectable.html b/app/views/components/toolbar-flex/test-more-actions-selectable.html <li><a href=\"#\">Sub-Item Two</a></li>\n</ul>\n</li>\n- <li><a href=\"#\">More Three</a></li>\n+ <li><a href=\"#\">More Four</a></li>\n</ul>\n</div>\n</div>\n",
        "date": "04.11.2019 10:40:17",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Update More Three to More Four in toolbar-flex component."
    },
    {
        "msg": "improve expandable accordion header personalization colors",
        "diff": "diff --git a/src/components/personalize/personalize.styles.js b/src/components/personalize/personalize.styles.js @@ -395,14 +395,32 @@ html[class*=\"theme-uplift-\"] .application-menu.is-personalizable .accordion.pane\ncolor: ${colors.subtext} !important;\n}\n-html[class*=\"theme-uplift-\"] .application-menu.is-personalizable .accordion.panel.inverse > .accordion-header.is-expanded.is-selected {\n+html[class*=\"theme-uplift\"] .application-menu.is-personalizable .accordion.panel.inverse > .accordion-header.is-focused:not(.hide-focus):not(.is-expanded) {\n+ border-color: ${colors.contrast} !important;\n+}\n+\n+html[class*=\"theme-uplift\"] .application-menu.is-personalizable .accordion.panel.inverse > .accordion-header.is-focused.is-expanded {\n+ border-color: transparent !important;\n+}\n+\n+html[class*=\"theme-uplift-\"] .application-menu.is-personalizable .accordion.panel.inverse > .accordion-header.is-expanded.is-selected::before {\nbackground-color: ${colors.darker} !important;\n+ border-color: ${colors.darker} !important;\n+}\n+\n+html[class*=\"theme-uplift-\"] .application-menu.is-personalizable .accordion.panel.inverse > .accordion-header.is-expanded.is-focused::before {\n+ border-color: ${colors.contrast} !important;\n}\nhtml[class*=\"theme-uplift-\"] .application-menu.is-personalizable .accordion.panel.inverse > .accordion-header.is-expanded + .accordion-pane {\nbackground-color: ${colors.dark} !important;\n}\n+html[class*=\"theme-uplift-\"] .application-menu.is-personalizable .accordion.panel.inverse > .accordion-header.is-expanded:hover::before {\n+ border-color: ${colors.darkest} !important;\n+ background-color: ${colors.darkest} !important;\n+}\n+\n.is-personalizable .personalize-header,\n.is-personalizable.tab-container {\nbackground-color: ${colors.base} !important;\n",
        "date": "09.12.2019 11:01:43",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Style changes for personalized accordion headers in theme-uplift."
    },
    {
        "msg": "improve taglist gauntlet test",
        "diff": "diff --git a/app/views/components/tag/test-taglist-gauntlet.html b/app/views/components/tag/test-taglist-gauntlet.html });\n$('body').on('initialized', function () {\n+ if ($('#newtag-is-link').prop('checked')) {\n+ $('#href-settings-container').removeClass('hidden');\n+ }\n// Submit\n$('#create-tag').on('submit.test', function (e) {\n",
        "date": "08.01.2020 16:20:07",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Add conditional logic to show href settings container if new tag is a link."
    },
    {
        "msg": "improve visual regression test",
        "diff": "diff --git a/test/components/searchfield/searchfield.e2e-spec.js b/test/components/searchfield/searchfield.e2e-spec.js @@ -186,11 +186,16 @@ if (utils.isChrome() && utils.isCI()) {\nawait utils.setPage('/components/searchfield/test-place-on-bottom.html?layout=nofrills');\nawait browser.driver\n.wait(protractor.ExpectedConditions\n- .presenceOf(element(by.id('#searchfield-template'))), config.waitsFor);\n+ .presenceOf(element(by.id('searchfield-template'))), config.waitsFor);\n});\nit('should correctly place the results list above the field if it can\\'t fit beneath (visual regression)', async () => {\n- const searchfieldInputEl = await element(by.id('#searchfield-template'));\n+ // shrink the page to check ajax menu button in the overflow\n+ const windowSize = await browser.driver.manage().window().getSize();\n+ browser.driver.manage().window().setSize(640, 480);\n+ await browser.driver.sleep(config.sleep);\n+\n+ const searchfieldInputEl = await element(by.id('searchfield-template'));\nawait browser.driver\n.wait(protractor.ExpectedConditions.presenceOf(searchfieldInputEl), config.waitsFor);\nawait browser.driver.sleep(config.sleep);\n@@ -199,7 +204,9 @@ if (utils.isChrome() && utils.isCI()) {\nawait browser.driver.sleep(config.sleep);\nexpect(await browser.protractorImageComparison\n- .checkElement(await element(by.id('maincontent')), 'searchfield-open')).toEqual(0);\n+ .checkElement(await element(by.css('.container')), 'searchfield-open')).toEqual(0);\n+\n+ await browser.driver.manage().window().setSize(windowSize.width, windowSize.height);\n});\n});\n}\n",
        "date": "30.01.2020 15:15:30",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Fix searchfield template id selector and adjust window size for visual regression test"
    },
    {
        "msg": "improve targeting of CSS classes in a Message e2e test",
        "diff": "diff --git a/test/components/message/message.e2e-spec.js b/test/components/message/message.e2e-spec.js @@ -26,14 +26,18 @@ describe('Message tests', () => {\nconst modalButtonPrimaryEl = await element(by.css('.btn-modal-primary'));\nawait modalButtonPrimaryEl.sendKeys(protractor.Key.TAB);\n+ const modalButtonPrimaryClasses = await modalButtonPrimaryEl.getAttribute('class');\n- expect(['hide-focus', 'btn-modal-primary', 'btn-modal-primary hide-focus']).toContain(await modalButtonPrimaryEl.getAttribute('class'));\n+ expect(modalButtonPrimaryClasses).toContain('btn-modal-primary');\n+ expect(modalButtonPrimaryClasses).toContain('hide-focus');\nconst modalButtonEl = await element(by.css('.btn-modal'));\nawait modalButtonEl.sendKeys(protractor.Key.TAB);\n+ const modalButtonClasses = await modalButtonEl.getAttribute('class');\n- expect(['hide-focus', 'btn-modal', 'btn-modal hide-focus']).toContain(await modalButtonEl.getAttribute('class'));\n+ expect(modalButtonClasses).toContain('btn-modal');\n+ expect(modalButtonClasses).toContain('hide-focus');\n});\n});\n",
        "date": "05.03.2020 15:14:13",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor message.e2e-spec.js to improve readability and maintainability"
    },
    {
        "msg": "improve targeting of disabled pager buttons in e2e tests",
        "diff": "diff --git a/test/components/datagrid/datagrid.e2e-spec.js b/test/components/datagrid/datagrid.e2e-spec.js @@ -2487,7 +2487,7 @@ describe('Datagrid disable last page', () => {\n});\nit('Should be have last and next page disabled', async () => {\n- expect(await element.all(by.css('.pager-toolbar .is-disabled')).count()).toEqual(2);\n+ expect(await element.all(by.css('.pager-toolbar button.is-disabled')).count()).toEqual(2);\n});\n});\n@@ -2509,12 +2509,12 @@ describe('Datagrid paging force disabled', () => {\nawait element(by.id('force-disabled')).click();\nawait browser.driver.sleep(config.sleep);\n- expect(await element.all(by.css('.pager-toolbar .is-disabled')).count()).toEqual(4);\n+ expect(await element.all(by.css('.pager-toolbar button.is-disabled')).count()).toEqual(4);\nawait element(by.id('force-enabled')).click();\nawait browser.driver.sleep(config.sleep);\n- expect(await element.all(by.css('.pager-toolbar .is-disabled')).count()).toEqual(0);\n+ expect(await element.all(by.css('.pager-toolbar button.is-disabled')).count()).toEqual(0);\n});\n});\n",
        "date": "06.03.2020 09:40:51",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Fix button selector in datagrid e2e tests"
    },
    {
        "msg": "improve one test with cleanup",
        "diff": "diff --git a/test/components/swaplist/swaplist-beforeswap.func-spec.js b/test/components/swaplist/swaplist-beforeswap.func-spec.js import { SwapList } from '../../../src/components/swaplist/swaplist';\n+import { cleanup } from '../../helpers/func-utils';\nconst swaplistHTML = require('../../../app/views/components/swaplist/test-beforeswap-with-search.html');\nconst svg = require('../../../src/components/icons/svg.html');\n@@ -20,29 +21,28 @@ dataset.push({ id: 13, value: 'opt-13', text: 'Option MM' });\ndataset.push({ id: 14, value: 'opt-14', text: 'Option NN' });\nlet swaplistEl;\n-let svgEl;\nlet swaplistObj;\ndescribe('SwapList API', () => {\nbeforeEach(() => {\nswaplistEl = null;\n- svgEl = null;\nswaplistObj = null;\ndocument.body.insertAdjacentHTML('afterbegin', svg);\ndocument.body.insertAdjacentHTML('afterbegin', swaplistHTML);\n- svgEl = document.body.querySelector('.svg-icons');\nswaplistEl = document.body.querySelector('#example-swaplist-1');\nswaplistObj = new SwapList(swaplistEl, { available: dataset, searchable: true });\n});\nafterEach(() => {\nswaplistObj.destroy();\n- swaplistEl.parentNode.removeChild(swaplistEl);\n- svgEl.parentNode.removeChild(svgEl);\n-\n- const rowEl = document.body.querySelector('.row');\n- rowEl.parentNode.removeChild(rowEl);\n+ cleanup([\n+ '#swaplist-tmpl',\n+ '#swaplist-code',\n+ '.svg-icons',\n+ '.row',\n+ '.page-container'\n+ ]);\n});\nit('Should be defined as an object', () => {\n",
        "date": "30.03.2020 13:16:11",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor cleanup logic in SwapList API test suite"
    },
    {
        "msg": "improve condition",
        "diff": "diff --git a/app/views/components/modal/test-long-title-large-content.html b/app/views/components/modal/test-long-title-large-content.html $(this).focus();\nsetModal(modals[this.id]);\n- if ($('.modal-title').height() > 35) {\n+ var sohoTheme = (Soho.theme.currentTheme.name.lastIndexOf('Soho') !== -1 || Soho.theme.currentTheme.name === 'Soho Light') && $('.modal-title')[0].innerHTML.length > 68;\n+\n+ var upliftTheme = (Soho.theme.currentTheme.name.lastIndexOf('Uplift') !== -1 || Soho.theme.currentTheme.name === 'Soho Uplift') && $('.modal-title')[0].innerHTML.length > 47;\n+\nsetTimeout(function () {\n+ if (sohoTheme || upliftTheme) {\n$('.modal-title').tooltip(TOOLTIP_OPTIONS);\n- }, 500);\n}\n+ }, 100);\n+\n});\n})\n",
        "date": "17.04.2020 13:58:42",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor modal title tooltip logic for Soho and Uplift themes"
    },
    {
        "msg": "improve the change log comment",
        "diff": "diff --git a/docs/CHANGELOG.md b/docs/CHANGELOG.md - `[Application Menu]` Fixed misalignment/size of bullet icons in the accordion on Android devices. ([#1429](http://localhost:4000/components/applicationmenu/test-six-levels.html))\n- `[Application Menu]` Add keyboard support for closing Role Switcher panel ([#3477](https://github.com/infor-design/enterprise/issues/3477))\n- `[Autocomplete]` Added a check to prevent the autocomplete from incorrectly stealing form focus, by checking for inner focus before opening a list on typeahead. ([#3639](https://github.com/infor-design/enterprise/issues/3070))\n-- `[Autocomplete]` Fixed an issue where an change event was not firing while navigating list. ([#804](https://github.com/infor-design/enterprise/issues/804))\n+- `[Autocomplete]` Fixed an issue where an change event was not firing when selecting from the menu. ([#804](https://github.com/infor-design/enterprise/issues/804))\n- `[Bubble Chart]` Fixed an issue where an extra axis line was shown when using the domain formatter. ([#501](https://github.com/infor-design/enterprise/issues/501))\n- `[Bullet Chart]` Added support to format ranges and difference values. ([#3447](https://github.com/infor-design/enterprise/issues/3447))\n- `[Button]` Fixed the button disabled method to no longer use class `is-disabled`. ([#3447](https://github.com/infor-design/enterprise-ng/issues/799))\n",
        "date": "28.04.2020 11:22:43",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Fix various issues with Autocomplete component and update Button component functionality."
    },
    {
        "msg": "improve color utils example page layout",
        "diff": "diff --git a/app/views/utils/example-color-saturation.html b/app/views/utils/example-color-saturation.html <div class=\"six columns\">\n<div class=\"color-display-square\"></div>\n</div>\n+</div>\n+<div class=\"row top-padding\">\n<div class=\"six columns\">\n<div class=\"field\">\n<label for=\"hex-value\">Hexidecimal Color Value</label>\n",
        "date": "18.05.2020 17:11:13",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Fix formatting issue in color saturation example page"
    },
    {
        "msg": "improve detection/parsing of short dates with variable lengths",
        "diff": "diff --git a/src/components/locale/locale.js b/src/components/locale/locale.js @@ -992,17 +992,22 @@ const Locale = { // eslint-disable-line\ndateFormat = dateFormat.replace(',', '');\ndateString = dateString.replace(',', '');\n- if (dateFormat === 'Mdyyyy' || dateFormat === 'dMyyyy') {\n- dateString = `${dateString.substr(0, dateString.length - 4)}/${dateString.substr(dateString.length - 4, dateString.length)}`;\n- dateString = `${dateString.substr(0, dateString.indexOf('/') / 2)}/${dateString.substr(dateString.indexOf('/') / 2)}`;\n- }\n-\n- if (dateFormat === 'Mdyyyy') {\n- dateFormat = 'M/d/yyyy';\n- }\n-\n- if (dateFormat === 'dMyyyy') {\n- dateFormat = 'd/M/yyyy';\n+ // Adjust short dates where no separators or special characters are present.\n+ const hasMdyyyy = dateFormat.indexOf('Mdyyyy');\n+ const hasdMyyyy = dateFormat.indexOf('dMyyyy');\n+ let startIndex = -1;\n+ let endIndex = -1;\n+ if (hasMdyyyy > -1 || hasdMyyyy > -1) {\n+ startIndex = hasMdyyyy > -1 ? hasMdyyyy : hasdMyyyy > -1 ? hasdMyyyy : 0;\n+ endIndex = startIndex + dateString.indexOf('/') > -1 ? dateString.indexOf('/') : dateString.length;\n+ dateString = `${dateString.substr(startIndex, endIndex - 4)}/${dateString.substr(endIndex - 4, dateString.length)}`;\n+ dateString = `${dateString.substr(startIndex, dateString.indexOf('/') / 2)}/${dateString.substr(dateString.indexOf('/') / 2, dateString.length)}`;\n+ }\n+ if (hasMdyyyy > -1) {\n+ dateFormat = dateFormat.replace('Mdyyyy', 'M/d/yyyy');\n+ }\n+ if (hasdMyyyy > -1) {\n+ dateFormat = dateFormat.replace('dMyyyy', 'd/M/yyyy');\n}\nif (dateFormat.indexOf(' ') !== -1) {\n",
        "date": "17.07.2020 13:11:49",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor date formatting logic in Locale component"
    },
    {
        "msg": "improve check for literals and fastforward routine",
        "diff": "diff --git a/src/components/mask/mask-api.js b/src/components/mask/mask-api.js @@ -280,6 +280,7 @@ MaskAPI.prototype = {\nwhile (rawValueArr.length > 0) {\n// Let's retrieve the first user character in the queue of characters we have left\nconst rawValueChar = rawValueArr.shift();\n+ const nextChar = rawValue.slice(l, l + 1);\n// If the character we got from the user input is a placeholder character (which happens\n// regularly because user input could be something like (540) 90_-____, which includes\n@@ -297,19 +298,19 @@ MaskAPI.prototype = {\n} else if (\nmaskObj.literalRegex &&\nmaskObj.literalRegex.test(rawValueChar.char) &&\n- rawValue.slice(l, l + 1) === rawValueChar.char\n+ nextChar === rawValueChar.char\n) {\n// Analyze the number of this particular literal in the value,\n// and only add it if we haven't passed the maximum\nconst thisLiteralRegex = new RegExp(`(${rawValueChar.char})`, 'g');\nconst numberLiteralsPlaceholder = settings.placeholder.match(thisLiteralRegex).length;\nconst numberLiteralsRawValue = rawValue.match(thisLiteralRegex).length;\n- if (numberLiteralsRawValue < numberLiteralsPlaceholder) {\n+ if (numberLiteralsRawValue <= numberLiteralsPlaceholder) {\nresultStr += rawValueChar.char;\n}\n- const rawValueAfterLiteral = rawValue.slice(l + 1, rawValue.length - 1);\n- let literalIndex = rawValueAfterLiteral.indexOf(rawValueChar.char);\n+ // Fast forward the loop to the after the next instance of this literal.\n+ let literalIndex = settings.placeholder.slice(l).indexOf(rawValueChar.char);\nwhile (literalIndex > 0) {\nl++;\nliteralIndex--;\n",
        "date": "22.09.2020 13:55:32",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor mask-api.js to handle literal characters more efficiently"
    },
    {
        "msg": "improve app menu trigger uplift styles",
        "diff": "diff --git a/src/components/tabs-module/_tabs-module-uplift.scss b/src/components/tabs-module/_tabs-module-uplift.scss &.application-menu-trigger {\na {\n- padding: 5px 6px 7px;\n+ padding: 5px 12px 7px;\nwidth: 100%;\n}\n}\n.icon.app-header {\ntop: -6px;\n+\n+ span:not(.audible) {\n+ width: 18px;\n+ }\n}\n}\n",
        "date": "23.12.2020 11:35:08",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Adjust padding and width in application menu trigger and icon in app header."
    },
    {
        "msg": "improve color picker styles responsiveness",
        "diff": "diff --git a/src/components/colorpicker/_colorpicker.scss b/src/components/colorpicker/_colorpicker.scss // Color Picker\n//================================================== //\n+$trigger-size: 30px;\n+\n@import '../icons/icons';\n@import '../input/input';\n@import '../popupmenu/popupmenu';\n}\n}\n+.colorpicker-input-xs,\n+.colorpicker-input-sm,\n+.colorpicker-input-md,\n+.colorpicker-input-mm,\n+.colorpicker-input-lg {\n+ flex-shrink: 0;\n+ margin-right: $trigger-size;\n+}\n+\n.colorpicker-input-xs {\nwidth: 18px !important;\n+\n}\n.colorpicker-input-sm {\nbackground-color: $input-color-initial-background;\nborder: 1px solid $input-color-initial-border;\nborder-radius: 2px;\n- display: inline-block;\n+ display: inline-flex;\nheight: $input-size-regular-height;\n+ max-width: 100%;\noverflow: hidden;\n+ position: relative;\nwidth: 150px;\n+ .trigger {\n+ position: absolute;\n+ right: 0;\n+ }\n+\n&.is-focused {\nborder-color: $input-color-focus-border;\nbox-shadow: $focus-box-shadow;\ndisplay: inline-block;\nheight: $input-size-regular-height - 0.4;\nleft: 1px;\n+ min-width: $input-size-regular-height - 0.4;\nposition: relative;\ntop: 1px;\nvertical-align: top;\n.trigger {\nheight: $input-size-compact-height - 0.4;\nmargin-left: -($input-size-compact-height - 0.4);\n+ right: 0;\nwidth: $input-size-compact-height - 0.4;\n.icon:not(.icon-error) {\n",
        "date": "25.03.2021 18:28:57",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Add trigger size variable and update colorpicker input styles"
    },
    {
        "msg": "improve column click check to account for trigger buttons",
        "diff": "diff --git a/src/components/datagrid/datagrid.js b/src/components/datagrid/datagrid.js @@ -6398,7 +6398,7 @@ Datagrid.prototype = {\nconst isEditable = self.makeCellEditable(self.activeCell.rowIndex, self.activeCell.cell, e);\n- if (col.click && typeof col.click === 'function' && target.is('button, input[checkbox], a, a.search-mode i') || target.parent().is('button')) { //eslint-disable-line\n+ if (col.click && typeof col.click === 'function' && target.is('button, input[checkbox], a, a.search-mode i') || target.parent().is('button:not(.trigger)')) {\nconst rowElem = $(this).closest('tr');\nlet rowIdx = self.actualRowIndex(rowElem);\ndataRowIdx = self.dataRowIndex(rowElem);\n",
        "date": "13.04.2021 11:29:39",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor button click event handling in datagrid.js"
    },
    {
        "msg": "improve ripple effect position logic",
        "diff": "diff --git a/src/components/button/button.js b/src/components/button/button.js @@ -166,7 +166,7 @@ Button.prototype = {\n// Derive X/Y coordinates from input events\nif (e) {\n- if (!env.features.touch) {\n+ if (e.originalEvent instanceof MouseEvent) {\n// Standard Mouse Click\nxPos = e.pageX - btnOffset.left;\nyPos = e.pageY - btnOffset.top;\n@@ -182,8 +182,8 @@ Button.prototype = {\n}\n// If values have not been defined, simply set them to the center of the element.\n- xPos = (xPos < 0) ? this.element.outerWidth() / 2 : xPos;\n- yPos = (yPos < 0) ? this.element.outerHeight() / 2 : yPos;\n+ if (!xPos) { xPos = this.element.outerWidth() / 2; }\n+ if (!yPos) { yPos = this.element.outerHeight() / 2; }\n// Create/place the ripple effect\nconst ripple = $(`<svg class=\"ripple-effect\" focusable=\"false\" aria-hidden=\"true\" role=\"presentation\">\n",
        "date": "28.06.2021 12:07:34",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor button.js to handle MouseEvent for deriving X/Y coordinates"
    },
    {
        "msg": "improve the exampe to work on locales",
        "diff": "diff --git a/app/views/components/locale/test-format-number-15-decimal.html b/app/views/components/locale/test-format-number-15-decimal.html // transform\nvar options = {\n- decimal: '.',\n- group: '',\nmaximumFractionDigits: 15,\nminimumFractionDigits: 15,\n- round: true,\n- style: 'decimal'\n+ round: true\n}\nvar nbr = Soho.Locale.formatNumber(value, options);\n$('#parsed-number-field').val(nbr);\n",
        "date": "17.09.2021 13:48:12",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor number formatting options in test-format-number-15-decimal.html"
    },
    {
        "msg": "improve a test?",
        "diff": "diff --git a/test/components/bar/bar.puppeteer-spec.js b/test/components/bar/bar.puppeteer-spec.js @@ -34,6 +34,7 @@ describe('Bar Chart Puppeteer Tests', () => {\nit('should not show pointer as a cursor', async () => {\nconst checkCursor = async el => page.$eval(el, e => e.style.cursor);\n+ await page.waitForSelector('#bar-a-bar', { visible: true });\nawait page.hover('#bar-a-bar');\nawait page.waitForTimeout(100);\nexpect(await checkCursor('#bar-a-bar')).toContain('inherit');\n",
        "date": "07.01.2022 09:41:39",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Add hover test for bar chart pointer cursor styling"
    },
    {
        "msg": "improve more tests",
        "diff": "diff --git a/test/components/input/input.e2e-spec.js b/test/components/input/input.e2e-spec.js @@ -82,6 +82,7 @@ describe('Input Test Reset', () => {\nexpect(await element.all(by.css('.icon-dirty')).count()).toEqual(4);\nawait element(by.id('btn-save')).click();\n+ await browser.driver.sleep(config.sleepShort);\nexpect(await element.all(by.css('.icon-dirty')).count()).toEqual(0);\n});\n@@ -95,10 +96,6 @@ describe('Input tooltip tests', () => {\n.presenceOf(element(by.id('first-name'))), config.waitsFor);\n});\n- it('Should not have errors', async () => {\n- await utils.checkForErrors();\n- });\n-\n// This test is more important as a windows test\nit('Should be able to select text', async () => {\nconst inputEl = await element(by.id('first-name'));\n",
        "date": "09.03.2022 09:20:17",
        "repo": "infor-design/enterprise",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor input.e2e-spec.js for better readability and efficiency"
    },
    {
        "msg": "improve description and formatting",
        "diff": "diff --git a/web/examples/composite-brush-multi-dim.html b/web/examples/composite-brush-multi-dim.html <p>Usually sub charts of a composite chart share the dimension of the parent.\nHowever sometimes, especially when scatter plots are composed, the sub charts may\n- used different dimensions. This example uses two scatter plots both using array dimensions.\n- Typically scatter plots use two dimensional brushing (see <a href=\"scatter-brushing.html\">scatter brushing</a>),\n- however, composite charts only support one dimensional (along x axis) brushing.</p>\n- <p>Try brushing on the chart and see data getting filtered on the right.</p>\n- <p>For the curious, you will notice that unlike other charts brushing removes points outside range of the brush\n+ use different dimensions. This example uses two scatter plots both using array dimensions.\n+ Typically scatter plots use two dimensional brushing (see <a href=\"scatter-brushing.html\">scatter brushing</a>);\n+ however, composite charts only support one dimensional brushing along the x axis.</p>\n+ <p>Try brushing on the chart and see data getting filtered in the table on the right.</p>\n+ <p>Notice that unlike in other charts, brushing removes points outside range of the brush\ninstead of just fading them.\n- The three dimensions used by different charts are actually related.\n- When brush applies filters on all these three dimensions, all data outside the brush range actually gets removed\n- by crossfilter. There is no easy way to currently avoid that.</p>\n+ This is because the composite chart uses three different dimensions for the child charts,\n+ so each observes the filter applied to the others.</p>\n<div id=\"test1\"></div>\n- <div id=\"test2\"></div>\n+ <div id=\"test2\" class=\"table table-hover\" style=\"width:auto\"></div>\n<script type=\"text/javascript\" src=\"../js/promise-polyfill.js\"></script>\n<script type=\"text/javascript\" src=\"../js/fetch.umd.js\"></script>\n@@ -93,7 +92,10 @@ chart.width(768)\ndataTable\n.dimension(dimX)\n.group(function (d) { return d.x; })\n- .columns(['x', 'y', 'z']);\n+ .columns(['x', 'y', 'z'])\n+ .on('renderlet', function (table) {\n+ table.selectAll('.dc-table-group').classed('info', true);\n+ });\ndc.renderAll();\n",
        "date": "15.03.2019 07:28:43",
        "repo": "dc-js/dc.js",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor composite brush multi-dim example and update table styling."
    },
    {
        "msg": "improve performance of default filter",
        "diff": "diff --git a/src/base/base-mixin.js b/src/base/base-mixin.js @@ -24,8 +24,10 @@ const _defaultFilterHandler = (dimension, filters) => {\ndimension.filterFunction(d => {\nfor (let i = 0; i < filters.length; i++) {\nconst filter = filters[i];\n- if (filter.isFiltered && filter.isFiltered(d)) {\n+ if (filter.isFiltered) {\n+ if(filter.isFiltered(d)) {\nreturn true;\n+ }\n} else if (filter <= d && filter >= d) {\nreturn true;\n}\n",
        "date": "05.03.2020 00:57:55",
        "repo": "dc-js/dc.js",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor filter handling in base mixin"
    },
    {
        "msg": "improve ES-Module detection regex",
        "diff": "diff --git a/src/plugins/process-global-plugin.js b/src/plugins/process-global-plugin.js @@ -30,7 +30,7 @@ export default function processGlobalPlugin({ NODE_ENV = 'development' } = {}) {\n// if that wasn't the only way `process.env` was referenced...\nif (code.match(/[^a-zA-Z0-9]process\\.env/)) {\n// hack: avoid injecting imports into commonjs modules\n- if (!code.match(/require\\(/)) {\n+ if (/^import[\\s{]|^export\\s\\w/gm.test(code)) {\ncode = `import process from '\\0builtins:process.js';${code}`;\n} else {\ncode = `var process=${processObj};${code}`;\n",
        "date": "03.10.2020 15:09:31",
        "repo": "preactjs/wmr",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor processGlobalPlugin to handle ES6 module imports"
    },
    {
        "msg": "improve DISK_CACHE description",
        "diff": "diff --git a/src/plugins/npm-plugin/registry.js b/src/plugins/npm-plugin/registry.js @@ -201,7 +201,12 @@ export async function loadPackageFiles({ module, version }) {\nreturn await getTarFiles(info.dist.tarball, module, version);\n}\n-/** @type {Map<string, string>} */\n+/**\n+ * Cache file contents of package files for quick access.\n+ * Example:\n+ * `my-module@1.0.0 :: /index.js` -> `console.log(\"hello world\")`\n+ * @type {Map<string, string>}\n+ */\nconst DISK_CACHE = new Map();\n/**\n",
        "date": "08.10.2020 08:57:24",
        "repo": "preactjs/wmr",
        "type": "improve",
        "chatgpt_zeroshot": "Add cache for package file contents in registry.js"
    },
    {
        "msg": "improve sheet.ownerNode types",
        "diff": "diff --git a/src/plugins/wmr/client.js b/src/plugins/wmr/client.js @@ -147,11 +147,8 @@ function updateStyleSheet(url) {\nconst sheets = document.styleSheets;\nfor (let i = 0; i < sheets.length; i++) {\nif (strip(sheets[i].href) === url) {\n- const ownerNode = sheets[i].ownerNode;\n- if (ownerNode) {\n// @ts-ignore\n- ownerNode.href = strip(url) + '?t=' + Date.now();\n- }\n+ sheets[i].ownerNode.href = strip(url) + '?t=' + Date.now();\nreturn true;\n}\n}\n",
        "date": "08.10.2020 20:25:24",
        "repo": "preactjs/wmr",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor updateStyleSheet function to simplify code and improve readability"
    },
    {
        "msg": "improve plugin ordering sort logic",
        "diff": "diff --git a/packages/wmr/src/lib/normalize-options.js b/packages/wmr/src/lib/normalize-options.js @@ -111,13 +111,9 @@ export async function normalizeOptions(options, mode) {\n// The execution order is: \"pre\" -> \"normal\" -> \"post\"\nif (options.plugins) {\noptions.plugins = options.plugins.flat().sort((a, b) => {\n- if (a.enforce === b.enforce) return 0;\n- else if ((a.enforce === 'pre' && b.enforce !== 'pre') || b.enforce === 'post') {\n- return -1;\n- } else if (b.enforce === 'pre' || a.enforce === 'post') {\n- return 1;\n- }\n- return 0;\n+ const aScore = a.enforce === 'post' ? 1 : a.enforce === 'pre' ? -1 : 0;\n+ const bScore = b.enforce === 'post' ? 1 : b.enforce === 'pre' ? -1 : 0;\n+ return aScore - bScore;\n});\n}\n",
        "date": "18.03.2021 20:22:34",
        "repo": "preactjs/wmr",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor plugin sorting logic in normalizeOptions"
    },
    {
        "msg": "improve mergeConfig typings",
        "diff": "diff --git a/packages/wmr/src/lib/normalize-options.js b/packages/wmr/src/lib/normalize-options.js @@ -166,11 +166,14 @@ export async function normalizeOptions(options, mode) {\n/**\n* Deeply merge two config objects\n- * @param {Partial<Options>} a\n- * @param {Partial<Options>} b\n- * @returns {Partial<Options>}\n+ * @template {Record<string, any>} T\n+ * @template {Record<string, any>} U\n+ * @param {T} a\n+ * @param {U} b\n+ * @returns {T & U}\n*/\nfunction mergeConfig(a, b) {\n+ /** @type {any} */\nconst merged = { ...a };\nfor (const key in b) {\n",
        "date": "19.03.2021 19:13:22",
        "repo": "preactjs/wmr",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor mergeConfig function to use TypeScript generics"
    },
    {
        "msg": "improve sidebar layout",
        "diff": "diff --git a/docs/public/styles/index.css b/docs/public/styles/index.css @@ -337,8 +337,7 @@ h5:hover .anchor {\n* Layouts\n*/\n.sidebar-layout {\n- position: absolute;\n- grid-template-columns: minmax(min-content, 33.33%) minmax(40rem, 2fr);\n+ width: 100%;\n}\n.sidebar {\n@@ -360,7 +359,7 @@ h5:hover .anchor {\n@media (min-width: 900px) {\n.sidebar-layout {\ndisplay: grid;\n- grid-template-columns: minmax(min-content, 33.33%) minmax(40rem, 2fr);\n+ grid-template-columns: minmax(min-content, 33.33%) minmax(40rem, 110ch);\n}\n.sidebar {\n",
        "date": "30.03.2021 21:39:50",
        "repo": "preactjs/wmr",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor sidebar layout to improve responsiveness"
    },
    {
        "msg": "improve localStorage check",
        "diff": "diff --git a/docs/public/lib/use-localstorage.js b/docs/public/lib/use-localstorage.js import { useState } from 'preact/hooks';\n-const SUPPORTS_LOCAL_STORAGE = window !== undefined && 'localStorage' in window;\n+const SUPPORTS_LOCAL_STORAGE = typeof localStorage !== 'undefined';\n/**\n* @type {<T>(name: string, value: T) => [T, (v: T) => void]}\n",
        "date": "30.03.2021 21:45:15",
        "repo": "preactjs/wmr",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor use-localstorage.js to improve compatibility with localStorage."
    },
    {
        "msg": "improve button designs",
        "diff": "diff --git a/docs/public/styles/index.css b/docs/public/styles/index.css --color-bg-code: #1f2427;\n--color-info: #d7f1ff;\n--color-focus: #ff459c;\n+ --color-btn-secondary-hover: rgba(0, 0, 0, 0.1);\n--focus-width: 0.25rem;\n--header-height: 3.5rem;\n--color-bg-code-inline: #66676f;\n--color-bg-code: #1f2427;\n--color-info: #184c68;\n+ --color-btn-secondary-hover: rgba(255, 255, 255, 0.1);\n--header-accent-height: 0.1875rem;\n}\n@@ -59,6 +61,7 @@ html[theme='light'] {\n--color-bg-code-inline: #dddddf;\n--color-bg-code: #1f2427;\n--color-info: #d7f1ff;\n+ --color-btn-secondary-hover: rgba(0, 0, 0, 0.1);\n--header-height: 3.5rem;\n--header-accent-height: 0.125rem;\n@@ -320,17 +323,25 @@ h5:hover .anchor {\nletter-spacing: 0.5px;\nwhite-space: nowrap;\nline-height: 1;\n+ transition: background .3s, transform .1s;\n+}\n+.btn:active {\n+ transform: translate3d(0, .2rem, 0);\n}\n.btn-primary {\n- border: 0.1875rem solid var(--color-brand);\nbackground: var(--color-brand);\ncolor: #fff;\n}\n+.btn-primary:hover {\n+ background: rgba(51, 174, 241, .8)\n+}\n.btn-secondary {\n- border: 0.125rem solid var(--color-text);\nbackground: none;\ncolor: var(--color-text);\n}\n+.btn-secondary:hover {\n+ background: var(--color-btn-secondary-hover);\n+}\n.btn-img-left {\ndisplay: block;\nfloat: left;\n",
        "date": "03.06.2021 17:51:49",
        "repo": "preactjs/wmr",
        "type": "improve",
        "chatgpt_zeroshot": "Update button styles in index.css文件"
    },
    {
        "msg": "improve error message when prerender() is not exported Addresses the other part of (I think).",
        "diff": "diff --git a/packages/wmr/src/lib/prerender.js b/packages/wmr/src/lib/prerender.js @@ -102,6 +102,10 @@ async function workerCode({ cwd, out, publicPath, customRoutes }) {\nconst doPrerender = m.prerender;\n// const App = m.default || m[Object.keys(m)[0]];\n+ if (typeof doPrerender !== 'function') {\n+ throw Error(`No prerender() function was exported by the first <script src=\"...\"> in your index.html.`);\n+ }\n+\n/**\n* @param {HeadElement|HeadElement[]|Set<HeadElement>} element\n* @returns {string} html\n",
        "date": "08.07.2021 16:45:09",
        "repo": "preactjs/wmr",
        "type": "improve",
        "chatgpt_zeroshot": "Add error handling for missing prerender() function in workerCode"
    },
    {
        "msg": "improve fixture script",
        "diff": "diff --git a/packages/wmr/tools/run-fixture.js b/packages/wmr/tools/run-fixture.js import { spawn } from 'child_process';\n+import path from 'path';\n+import * as kl from 'kolorist';\n+import ncp from 'ncp';\n+import { isFile } from '../src/lib/fs-utils.js';\n+import { fileURLToPath } from 'url';\n-spawn(\n- process.execPath,\n- ['src/cli.js', 'start', '--cwd', 'test/fixtures/' + process.argv.slice(2)[0], ...process.argv.slice(3)],\n- {\n+const __dirname = path.dirname(fileURLToPath(import.meta.url));\n+\n+(async () => {\n+ const command = process.argv[2];\n+ const name = process.argv[3];\n+\n+ const commands = ['start', 'serve', 'build'];\n+ if (!commands.includes(command)) {\n+ // eslint-disable-next-line no-console\n+ console.log(\n+ kl.red(\n+ `Command must be one of ${commands\n+ .map(x => `\"${x}\"`)\n+ .join(',')}, but got \"${command}\". Did you mean \"yarn wmr fixture start ${command}\" instead?\"`\n+ )\n+ );\n+ process.exit(1);\n+ }\n+\n+ const rest = process.argv.slice(4);\n+ const fixture = path.join(__dirname, '..', 'test', 'fixtures', name);\n+ const fakeModDir = path.join('fixture', '-node_modules');\n+\n+ if (await isFile(fakeModDir)) {\n+ await new Promise((resolve, reject) =>\n+ ncp(fakeModDir, path.join(fixture, 'node_modules'), err => (err ? reject(err) : resolve()))\n+ );\n+ }\n+\n+ spawn(process.execPath, ['src/cli.js', command, '--cwd', 'test/fixtures/' + name, ...rest], {\nstdio: 'inherit',\nenv: {\n// Package \"application-config-path\" needs this (required by devcert)\n@@ -12,5 +43,5 @@ spawn(\nDEBUG: 'true',\nTERM: 'xterm-256color'\n}\n- }\n-);\n+ });\n+})();\n",
        "date": "09.09.2021 04:10:21",
        "repo": "preactjs/wmr",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor run-fixture.js to improve command handling and file copying functionality"
    },
    {
        "msg": "improve webrtc error messages (Fix Error: [object RTCErrorEvent])",
        "diff": "diff --git a/index.js b/index.js @@ -13,8 +13,8 @@ function filterTrickle (sdp) {\nreturn sdp.replace(/a=ice-options:trickle\\s\\n/g, '')\n}\n-function makeError (message, code) {\n- var err = new Error(message)\n+function makeError (err, code) {\n+ if (!(err instanceof Error)) err = new Error(err)\nerr.code = code\nreturn err\n}\n",
        "date": "22.04.2020 14:18:55",
        "repo": "feross/simple-peer",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor makeError function to handle non-Error input types"
    },
    {
        "msg": "improve webrtc error messages (Fix Error: [object RTCErrorEvent]) Complete fix for the issue I attempted to fix in",
        "diff": "diff --git a/index.js b/index.js @@ -15,7 +15,8 @@ function filterTrickle (sdp) {\n}\nfunction makeError (err, code) {\n- if (!(err instanceof Error)) err = new Error(err)\n+ if (typeof err === 'string') err = new Error(err)\n+ if (err.error instanceof Error) err = err.error\nerr.code = code\nreturn err\n}\n",
        "date": "10.05.2020 17:24:34",
        "repo": "feross/simple-peer",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor makeError function to handle different error types"
    },
    {
        "msg": "improve watch options on devServer",
        "diff": "diff --git a/packages/razzle/config/create-config.js b/packages/razzle/config/create-config.js @@ -39,6 +39,7 @@ module.exports = (\nconst IS_PROD = env === 'prod';\nconst IS_DEV = env === 'dev';\nprocess.env.NODE_ENV = IS_PROD ? 'production' : 'development';\n+\nconst dotenv = getEnv(target, { clearConsole, host, port });\nconst devServerPort = parseInt(dotenv.raw.PORT, 10) + 1;\n@@ -250,9 +251,17 @@ module.exports = (\nconfig.devServer = {\nhost: dotenv.raw.HOST,\ndisableHostCheck: true,\n+ // watchContentBase: true,\nheaders: {\n'Access-Control-Allow-Origin': '*',\n},\n+ // Reportedly, this avoids CPU overload on some systems.\n+ // https://github.com/facebookincubator/create-react-app/issues/293\n+ watchOptions: {\n+ ignored: /node_modules/,\n+ },\n+ // Enable gzip compression of generated files.\n+ compress: true,\nport: devServerPort,\nnoInfo: true,\nquiet: true,\n",
        "date": "11.05.2017 15:23:55",
        "repo": "jaredpalmer/razzle",
        "type": "improve",
        "chatgpt_zeroshot": "Add watchOptions and compress to devServer config"
    },
    {
        "msg": "improve README.md * Update README.md Warn users that .babelrc file will replace the internal razzle/babel. * Update README.md * Update README.md",
        "diff": "diff --git a/README.md b/README.md @@ -83,19 +83,24 @@ To debug the node server, you can use `razzle start --inspect`. This will start\n## Customization\n-### Extending Babel Config\n+### Customizing Babel Config\nRazzle comes with most of ES6 stuff you need. However, if you want to add your own babel transformations, just add a `.babelrc` file to the root of your project.\n-```json\n+```js\n{\n\"presets\": [\n- \"razzle/babel\",\n+ \"razzle/babel\", // NEEDED\n\"stage-0\"\n+ ],\n+ \"plugins\": [\n+ // additional plugins\n]\n}\n```\n+A word of advice: the `.babelrc` file will replace the internal razzle babelrc template. You must include at the very minimum the default razzle/babel preset.\n+\n### Extending Webpack\nYou can also extend the underlying webpack config. Create a file called `razzle.config.js` in your project's root.\n",
        "date": "26.10.2017 22:26:48",
        "repo": "jaredpalmer/razzle",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor babel configuration and provide advice on customizing webpack config"
    },
    {
        "msg": "improve HTMl report robustness",
        "diff": "diff --git a/lib/reporters/html/index.js b/lib/reporters/html/index.js @@ -110,9 +110,10 @@ PostmanHTMLReporter = function (newman, options) {\nreturn { folder: item.name, contents: item.items.map(aggregator) };\n}\n+ // fetch aggregated run times and response sizes for items, (0 for failed requests)\nvar aggregationMean = executionMeans[item.id],\n- meanTime = aggregationMean.time,\n- meanSize = aggregationMean.size;\n+ meanTime = _.get(aggregationMean, 'time', 0),\n+ meanSize = _.get(aggregationMean, 'size', 0);\nreturn _.merge(items[item.id], {\nassertions: _.values(assertions[item.id]),\n",
        "date": "05.01.2017 10:52:10",
        "repo": "postmanlabs/newman",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor aggregationMean to handle failed requests with default values"
    },
    {
        "msg": "improve reporter usage instructions",
        "diff": "diff --git a/README.md b/README.md @@ -231,9 +231,9 @@ discontinued. For documentation on the older command options, refer to [README.m\n##### Creating and using custom reporters\nNewman also supports custom reporters, provided that the reporter works with Newman's event sequence. Working examples on how Newman reporters work can be found in [lib/reporters](https://github.com/postmanlabs/newman/tree/develop/lib/reporters). For instance, to use the [Newman teamcity reporter](https://github.com/leafle/newman-reporter-teamcity):\n-- Add and install the reporter package. Note that the name of the package is of the form `newman-reporter-<name>`.<br/>\n+- Install the reporter package. Note that the name of the package is of the form `newman-reporter-<name>`. The installation should be global if newman is installed globally, local otherwise. (Replace `-g` from the command below with `-S` for a local installation.<br/>\n```terminal\n-npm install -S newman-reporter-teamcity\n+npm install -g newman-reporter-teamcity\n```\n- Use the installed reporter, either via the CLI, or programmatic usage. Here, the `newman-reporter` prefix is **not** required while specifying the reporter name in the options.<br/>\n",
        "date": "14.02.2017 15:04:01",
        "repo": "postmanlabs/newman",
        "type": "improve",
        "chatgpt_zeroshot": "Update installation instructions for custom Newman reporter"
    },
    {
        "msg": "improve assertions",
        "diff": "diff --git a/test/integration/request-chaining-test.postman_collection.json b/test/integration/request-chaining-test.postman_collection.json \"script\": {\n\"type\": \"text/javascript\",\n\"exec\": [\n+ \"var args = JSON.parse(responseBody).args;\",\n\"tests[\\\"Status code is 200\\\"] = responseCode.code === 200;\",\n\"\",\n\"tests[\\\"FOO exists\\\"] = postman.getEnvironmentVariable(\\\"FOO\\\") === \\\"alpha\\\";\",\n- \"tests[\\\"BAR exists\\\"] = postman.getEnvironmentVariable(\\\"BAR\\\") === \\\"beta\\\";\"\n+ \"tests[\\\"BAR exists\\\"] = postman.getEnvironmentVariable(\\\"BAR\\\") === \\\"beta\\\";\",\n+ \"\",\n+ \"tests[\\\"val1 query param was sent correctly\\\"] = args.val === \\\"alpha\\\";\",\n+ \"tests[\\\"val1 query param was sent correctly\\\"] = args.val2 === \\\"beta\\\";\"\n]\n}\n}\n",
        "date": "27.02.2017 14:56:38",
        "repo": "postmanlabs/newman",
        "type": "improve",
        "chatgpt_zeroshot": "Add validation for query parameters in request chaining test."
    },
    {
        "msg": "improve niceness of the functinonality",
        "diff": "diff --git a/lib/reporters/cli/index.js b/lib/reporters/cli/index.js @@ -132,14 +132,11 @@ PostmanCLIReporter = function (emitter, reporterOptions, options) {\n// print out the request name to be executed and start a spinner\nemitter.on('beforeRequest', function (err, o) {\n- if (err) { return; }\n+ if (err || !o.request) { return; }\n- if (options.disableUnicode === true) {\n- o.request && print(' %s %s ', colors.gray(o.request.method), colors.gray(o.request.url));\n- }\n- else {\n- o.request && print(' %s %s ', colors.gray(o.request.method), colors.gray(o.request.url)).wait(colors.gray);\n- }\n+ print(' %s %s ', colors.gray(o.request.method), colors.gray(o.request.url));\n+\n+ !options.disableUnicode && print().wait(colors.gray);\n});\n// output the response code, reason and time\n",
        "date": "16.04.2018 10:14:22",
        "repo": "postmanlabs/newman",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor CLI reporter to simplify code and improve readability"
    },
    {
        "msg": "improve postpublish script to add latest Docker image tag on master only",
        "diff": "diff --git a/npm/postpublish.sh b/npm/postpublish.sh @@ -6,7 +6,7 @@ set -e;\nBLUE='\\033[0;34m';\nNO_COLOUR='\\033[0m';\nDOCKER_USER=\"postman\";\n-TAG=$npm_package_version;\n+TAG=${npm_package_version};\nIMAGES_BASE_PATH=\"./docker/images\";\n# It's good to be paranoid\n@@ -16,26 +16,49 @@ function build_docker_image {\nlocal TAG=\"$2\";\nlocal BASENAME=$(basename $1);\nlocal IMAGE_NAME=\"newman_$BASENAME\";\n+ local GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD);\necho \"\";\n+\n+ # Build\n+ if [[ ${GIT_BRANCH} = \"master\" ]]; then\necho -e \"$BLUE Building docker image for $DOCKER_USER/$IMAGE_NAME:$TAG, latest $NO_COLOUR\";\n+\ndocker build \\\n--no-cache --force-rm --squash \\\n-t \"$DOCKER_USER/$IMAGE_NAME:$TAG\" -t \"$DOCKER_USER/$IMAGE_NAME:latest\" \\\n--file=\"docker/images/$BASENAME/Dockerfile\" --build-arg NEWMAN_VERSION=\"$TAG\" .;\necho -e \"$BLUE Running docker image test for $DOCKER_USER/$IMAGE_NAME:$TAG, latest $NO_COLOUR\";\n- docker run -v \"$PWD/examples:/etc/newman\" -t \"$DOCKER_USER/$IMAGE_NAME:$TAG\" run \"sample-collection.json\";\n+ else\n+ echo -e \"$BLUE Building docker image for $DOCKER_USER/$IMAGE_NAME:$TAG $NO_COLOUR\";\n- # prepare current images for pushing\n- docker tag $DOCKER_USER/$IMAGE_NAME:$TAG $DOCKER_USER/$IMAGE_NAME:$TAG;\n- docker tag $DOCKER_USER/$IMAGE_NAME:latest $DOCKER_USER/$IMAGE_NAME:latest;\n+ docker build \\\n+ --no-cache --force-rm --squash \\\n+ -t \"$DOCKER_USER/$IMAGE_NAME:$TAG\" \\\n+ --file=\"docker/images/$BASENAME/Dockerfile\" --build-arg NEWMAN_VERSION=\"$TAG\" .;\n+ echo -e \"$BLUE Running docker image test for $DOCKER_USER/$IMAGE_NAME:$TAG $NO_COLOUR\";\n+ fi\n+\n+ # Test\n+ docker run -v \"$PWD/examples:/etc/newman\" -t \"$DOCKER_USER/$IMAGE_NAME:$TAG\" run \"sample-collection.json\";\n+\n+ # Tag\n+ if [[ ${GIT_BRANCH} = \"master\" ]]; then\necho -e \"$BLUE Pushing docker image for $DOCKER_USER/$IMAGE_NAME:$TAG, latest $NO_COLOUR\";\n- docker push $DOCKER_USER/$IMAGE_NAME:$TAG;\n- docker push $DOCKER_USER/$IMAGE_NAME:latest;\n+\n+ docker tag \"$DOCKER_USER/$IMAGE_NAME:latest\" \"$DOCKER_USER/$IMAGE_NAME:latest\";\n+ docker push \"$DOCKER_USER/$IMAGE_NAME:latest\";\n+ else\n+ echo -e \"$BLUE Pushing docker image for $DOCKER_USER/$IMAGE_NAME:$TAG $NO_COLOUR\";\n+ fi\n+\n+ # Push\n+ docker tag \"$DOCKER_USER/$IMAGE_NAME:$TAG\" \"$DOCKER_USER/$IMAGE_NAME:$TAG\";\n+ docker push \"$DOCKER_USER/$IMAGE_NAME:$TAG\";\n}\n-for image in $IMAGES_BASE_PATH/*; do\n+for image in ${IMAGES_BASE_PATH}/*; do\nbuild_docker_image ${image} ${TAG};\ndone\n",
        "date": "01.08.2018 15:05:15",
        "repo": "postmanlabs/newman",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor postpublish.sh script to handle different branches and improve docker image building and pushing."
    },
    {
        "msg": "improve CLI docs for --folder :scroll:",
        "diff": "diff --git a/bin/newman.js b/bin/newman.js @@ -20,7 +20,8 @@ program\n.usage('<collection> [options]')\n.option('-e, --environment <path>', 'Specify a URL or Path to a Postman Environment.')\n.option('-g, --globals <path>', 'Specify a URL or Path to a file containing Postman Globals.')\n- .option('--folder <path>', 'Specify folder to run from a collection.', util.cast.memoize, [])\n+ // eslint-disable-next-line max-len\n+ .option('--folder <path>', 'Specify folder to run from a collection. Can be specified multiple times to run multiple folders', util.cast.memoize, [])\n.option('-r, --reporters [reporters]', 'Specify the reporters to use for this run.', util.cast.csvParse, ['cli'])\n.option('-n, --iteration-count <n>', 'Define the number of iterations to run.', util.cast.integer)\n.option('-d, --iteration-data <path>', 'Specify a data file to use for iterations (either json or csv).')\n",
        "date": "27.08.2018 18:31:38",
        "repo": "postmanlabs/newman",
        "type": "improve",
        "chatgpt_zeroshot": "Update folder option in newman.js to allow multiple folder paths."
    },
    {
        "msg": "improve performance of refreshSelection() Optimize for the common case of there being far fewer selected items than total items in the library. This speeds up refreshSelection() by about x100.",
        "diff": "diff --git a/src/client/app.js b/src/client/app.js @@ -1676,11 +1676,6 @@ function updateQueueDuration() {\n}\n}\n-function removeSelectedAndCursorClasses(domItem) {\n- domItem.classList.remove('selected');\n- domItem.classList.remove('cursor');\n-}\n-\nfunction removeCurrentOldAndRandomClasses(domItem) {\ndomItem.classList.remove('current');\ndomItem.classList.remove('old');\n@@ -1726,9 +1721,14 @@ function refreshSelection() {\nupdateQueueDuration();\nreturn;\n}\n- Array.prototype.forEach.call(queueItemsDom.getElementsByClassName('pl-item'), removeSelectedAndCursorClasses);\n- Array.prototype.forEach.call(libraryArtistsDom.getElementsByClassName('clickable'), removeSelectedAndCursorClasses);\n- Array.prototype.forEach.call(playlistsListDom.getElementsByClassName('clickable'), removeSelectedAndCursorClasses);\n+ [queueItemsDom, libraryArtistsDom, playlistsListDom].forEach(function(domElement) {\n+ ['selected', 'cursor'].forEach(function(className) {\n+ var elementList = domElement.getElementsByClassName(className);\n+ for (var i = elementList.length - 1; i >= 0; i--) {\n+ elementList[i].classList.remove(className);\n+ }\n+ });\n+ });\nif (selection.cursorType == null) {\nupdateQueueDuration();\n",
        "date": "18.04.2017 10:00:38",
        "repo": "andrewrk/groovebasin",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor class removal functions to use a more efficient and concise approach"
    },
    {
        "msg": "improve formatting and typos",
        "diff": "diff --git a/src/recipes/pear-manhattan-cocktail.json b/src/recipes/pear-manhattan-cocktail.json {\n\"name\": \"Pear Manhattan Cocktail\",\n- \"description\": \"Enjoy a Cocktail of Whiskey mixed with pear and Vodka.\",\n+ \"description\": \"Enjoy a Cocktail of Whiskey mixed with pear and vodka.\",\n\"github\": \"kevinmel2000\",\n\"ingredients\": [\n\"2 fluid ounces rye whiskey\",\n\"2 fluid ounces pear vodka\",\n\"1 3/4 fluid ounces sweet vermouth\",\n- \"1-2 ice cube\",\n+ \"1-2 ice cubes\",\n\"1 maraschino cherry\",\n\"1 slice pear\"\n],\n",
        "date": "03.10.2019 20:30:13",
        "repo": "alfg/opendrinks",
        "type": "improve",
        "chatgpt_zeroshot": "Fix capitalization of \"vodka\" in description and correct plural form of \"ice cube\" in ingredients."
    },
    {
        "msg": "improve matching (now it works correct and uses less iteration)",
        "diff": "diff --git a/lib/lexer/match.js b/lib/lexer/match.js @@ -120,8 +120,8 @@ function internalMatch(tokens, syntax, syntaxes) {\nvar token = moveToNextToken();\nvar syntaxStack = null;\n- var ifStack = null;\n- var alternative = null;\n+ var thenStack = null;\n+ var elseStack = null;\nvar syntaxNode = syntax;\nvar LIMIT = 20000;\n@@ -133,8 +133,8 @@ function internalMatch(tokens, syntax, syntaxes) {\n// '#' + iterationCount,\n// require('util').inspect({\n// match: mapList(matchStack, 'prev', x => x.type === 'Token' ? x.token && x.token.value : x.syntax ? x.type + '!' + x.syntax.name : null),\n- // alternative: mapList(alternative, 'alt', x => x.id),\n- // ifStack: mapList(ifStack, 'prev', x => x.id),\n+ // elseStack: mapList(elseStack, 'alt', x => x.id),\n+ // thenStack: mapList(thenStack, 'prev', x => x.id),\n// token: token && token.value,\n// tokenCursor,\n// syntaxNode\n@@ -156,7 +156,7 @@ function internalMatch(tokens, syntax, syntaxes) {\n}\nif (syntaxNode === MATCH) {\n- if (ifStack === null) {\n+ if (thenStack === null) {\n// turn to MISMATCH when some tokens left unmatched\nif (token !== null) {\n// doesn't mismatch if just one token left and it's an IE hack\n@@ -170,12 +170,12 @@ function internalMatch(tokens, syntax, syntaxes) {\nbreak;\n}\n- // go to `then` branch\n- syntaxNode = ifStack.then;\n+ // go to next syntax (`then` branch)\n+ syntaxNode = thenStack.nextSyntax;\n// check match is not empty\nif (syntaxNode === DISALLOW_EMPTY) {\n- if (ifStack.matchStack.token === matchStack.token) {\n+ if (thenStack.matchStack.token === matchStack.token) {\nsyntaxNode = MISMATCH;\ncontinue;\n} else {\n@@ -184,59 +184,59 @@ function internalMatch(tokens, syntax, syntaxes) {\n}\n// close syntax if needed\n- if (syntaxStack !== null && ifStack.syntaxStack !== syntaxStack) {\n+ if (syntaxStack !== null && thenStack.syntaxStack !== syntaxStack) {\ncloseSyntax();\n}\n- // save if stack top as an alternative for future\n- if (alternative === null || alternative.matchStack.size <= ifStack.matchStack.size) {\n- ifStack.alt = alternative;\n- alternative = ifStack;\n- }\n-\n// pop stack\n- ifStack = ifStack.prev;\n+ thenStack = thenStack.prev;\ncontinue;\n}\nif (syntaxNode === MISMATCH) {\n- if (ifStack === null) {\n- // try alternative match if any\n- if (alternative === null) {\n+ if (elseStack === null) {\n// break the main loop, return a result - MISMATCH\nbreak;\n}\n- ifStack = alternative;\n- alternative = alternative.alt;\n- }\n-\n- // go to `else` branch\n- syntaxNode = ifStack.else;\n+ // go to next syntax (`else` branch)\n+ syntaxNode = elseStack.nextSyntax;\n- // restore match stack state\n- syntaxStack = ifStack.syntaxStack;\n- matchStack = ifStack.matchStack;\n+ // restore all the rest stack states\n+ thenStack = elseStack.thenStack;\n+ syntaxStack = elseStack.syntaxStack;\n+ matchStack = elseStack.matchStack;\ntokenCursor = matchStack.size === 0 ? -1 : matchStack.tokenCursor;\ntoken = moveToNextToken();\n// pop stack\n- ifStack = ifStack.prev;\n+ elseStack = elseStack.prev;\ncontinue;\n}\nswitch (syntaxNode.type) {\ncase 'If':\n// push new conditional node to stack\n- ifStack = {\n+ if (syntaxNode.else !== MISMATCH) {\n+ elseStack = {\nid: syntaxNode.id,\n- then: syntaxNode.then,\n- else: syntaxNode.else,\n+ nextSyntax: syntaxNode.else,\nmatchStack: matchStack,\nsyntaxStack: syntaxStack,\n- prev: ifStack,\n- alt: null\n+ thenStack: thenStack,\n+ prev: elseStack\n};\n+ }\n+\n+ if (syntaxNode.then !== MATCH) {\n+ thenStack = {\n+ id: syntaxNode.id,\n+ nextSyntax: syntaxNode.then,\n+ matchStack: matchStack,\n+ syntaxStack: syntaxStack,\n+ prev: thenStack\n+ };\n+ }\nsyntaxNode = syntaxNode.match;\nbreak;\n",
        "date": "15.05.2018 14:22:21",
        "repo": "csstree/csstree",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor conditional stack variables in lexer match function"
    },
    {
        "msg": "improve readme with build instructions Improves the snarky readme, mainly to add build instructions",
        "diff": "diff --git a/lib/snarky/README.md b/lib/snarky/README.md @@ -8,25 +8,15 @@ Disclaimer: This code has not been thoroughly audited and should not\nbe used in production systems.\n## Getting started\n-First run\n+- First install libsnark's dependencies as specified [here](https://github.com/scipr-lab/libsnark#dependencies)\n+- Then, make sure you have [opam](https://opam.ocaml.org/doc/Install.html) installed.\n+- Then, install `snarky` by running\n```bash\n-./init.sh\n+opam pin add snarky git@github.com:o1-labs/snarky.git\n```\n-to fetch and build libsnark. If this fails, make sure to install libsnark's dependencies,\n-detailed [here](https://github.com/scipr-lab/libsnark#build-instructions).\n+and answering yes to the prompts.\n-Then, make sure you have the ocaml dependencies installed with\n-```bash\n-opam install core ctypes-foreign ctypes\n-```\n-\n-Finally, run\n-```bash\n-cd caml && oasis setup && make\n-```\n-to build the library and the examples.\n-\n-The best place to get started learning how to use the library is the [tutorial](caml/test/tutorial.ml),\n+The best place to get started learning how to use the library is the [tutorial](bin/tutorial.ml),\nwhich shows a complete sample usage, heavily annotated.\n## Design\n@@ -69,7 +59,7 @@ computation for computing the implied Merkle root:\nThe type of this function is\n```ocaml\n-val implied_root : Hash.var -> Var.t list -> Hash.var list -> (Hash.var, 'prover_state) Checked.t\n+val implied_root : Hash.var -> Boolean.var list -> Hash.var list -> (Hash.var, 'prover_state) Checked.t\n```\nThe return type `(Hash.var, 'prover_state) Checked.t` indicates that the function\nreturns a \"checked computation\" producing a variable containing a hash, and can be\n",
        "date": "01.03.2018 17:33:20",
        "repo": "minaprotocol/mina",
        "type": "improve",
        "chatgpt_zeroshot": "Update installation instructions and fix tutorial link in README"
    },
    {
        "msg": "improve cli connection error messages",
        "diff": "diff --git a/src/lib/cli_lib/background_daemon.ml b/src/lib/cli_lib/background_daemon.ml @@ -19,7 +19,16 @@ let run ~f port arg =\nif has_daemon then go Run_client else go No_daemon\n| No_daemon ->\nPrint.printf\n- !\"Error: Daemon not running on port %d. See `coda daemon -help`\\n\"\n+ !\"Error: Unable to connect to Coda daemon.\\n\\\n+ - The daemon might not be running. See logs (in \\\n+ `~/.coda-config/coda.log`) for details.\\n\\\n+ \\ Run `coda daemon -help` to see how to start daemon.\\n\\\n+ - If you just started the daemon, wait a minute for the RPC \\\n+ server to start.\\n\\\n+ - Alternatively, the daemon may not be running the RPC server on \\\n+ port %d.\\n\\\n+ \\ If so, add flag `-daemon-port` with correct port when running \\\n+ this command.\\n\"\nport ;\ngo Abort\n| Run_client ->\n",
        "date": "02.10.2019 21:03:26",
        "repo": "minaprotocol/mina",
        "type": "improve",
        "chatgpt_zeroshot": "Improve error message for connecting to Coda daemon"
    },
    {
        "msg": "improve Rosetta error descriptions Use full sentences instead of short phrases",
        "diff": "diff --git a/src/lib/rosetta_lib/errors.ml b/src/lib/rosetta_lib/errors.ml @@ -192,37 +192,39 @@ end = struct\n(* Unlike message above, description can be updated whenever we see fit *)\nlet description = function\n| `Sql _ ->\n- \"SQL failure\"\n+ \"We encountered a SQL failure.\"\n| `Json_parse _ ->\n- \"JSON parse error\"\n+ \"We encountered an error while parsing JSON.\"\n| `Graphql_coda_query _ ->\n- \"GraphQL query failed\"\n+ \"The GraphQL query failed.\"\n| `Network_doesn't_exist _ ->\n- \"Network doesn't exist\"\n+ \"The network doesn't exist.\"\n| `Chain_info_missing ->\n- \"Chain info missing\"\n+ \"Some chain info is missing.\"\n| `Account_not_found _ ->\n- \"Account not found\"\n+ \"That account could not be found.\"\n| `Invariant_violation ->\n- \"Internal invariant violation (you found a bug)\"\n+ \"One of our internal invariants was violated. (That means you found a \\\n+ bug!)\"\n| `Transaction_not_found _ ->\n- \"Transaction not found\"\n+ \"That transaction could not be found.\"\n| `Block_missing ->\n- \"Block not found\"\n+ \"That block could not be found.\"\n| `Malformed_public_key ->\n- \"Malformed public key\"\n+ \"The public key you provided was malformed.\"\n| `Operations_not_valid _ ->\n- \"Cannot convert operations to valid transaction\"\n+ \"We could not convert those operations to a valid transaction.\"\n| `Public_key_format_not_valid ->\n- \"Invalid public key format\"\n+ \"The public key you provided had an invalid format.\"\n| `Unsupported_operation_for_construction ->\n- \"Unsupported operation for construction\"\n+ \"An operation you provided isn't supported for construction.\"\n| `Signature_missing ->\n- \"Signature missing\"\n+ \"Your request is missing a signature.\"\n| `No_options_provided ->\n- \"No options provided\"\n+ \"Your request is missing options.\"\n| `Exception _ ->\n- \"Exception\"\n+ \"We encountered an internal exception while processing your request. \\\n+ (That means you found a bug!)\"\nlet create ?context kind = {extra_context= context; kind}\n",
        "date": "02.12.2020 19:18:55",
        "repo": "minaprotocol/mina",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor error descriptions for clarity and consistency"
    },
    {
        "msg": "improve doc-comment for unset_parent",
        "diff": "diff --git a/src/lib/merkle_mask/masking_merkle_tree_intf.ml b/src/lib/merkle_mask/masking_merkle_tree_intf.ml @@ -57,8 +57,9 @@ module type S = sig\nval commit : t -> unit\n(** [unset_parent ?trigger_signal ~loc:__LOC__ t] detaches the parent from\n- [t] and sets the location string [loc] to display if [t] is used while\n- no parent is registered.\n+ [t]. The [loc] argument is shown in the [Dangling_parent_reference]\n+ exception, which will be raised if [t] is used while no parent is\n+ registered.\nIf the [trigger_signal] optional argument is [true] or omitted,\n[detached_signal] for [t] will be resolved. This should only be set to\n",
        "date": "07.12.2020 19:27:24",
        "repo": "minaprotocol/mina",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor unset_parent function to raise exception with location string if no parent is registered"
    },
    {
        "msg": "improve error message in user_command_input.ml",
        "diff": "diff --git a/src/lib/user_command_input/user_command_input.ml b/src/lib/user_command_input/user_command_input.ml @@ -44,9 +44,11 @@ module Payload = struct\nelse\nError\n(sprintf\n- !\"Input nonce %s different from inferred nonce %s\"\n+ !\"Input nonce %s either different from inferred nonce %s \\\n+ or below minimum_nonce %s\"\n(Account_nonce.to_string nonce)\n- (Account_nonce.to_string inferred_nonce))\n+ (Account_nonce.to_string inferred_nonce)\n+ (Account_nonce.to_string minimum_nonce))\nin\n{ Signed_command_payload.Common.Poly.fee= t.fee\n; fee_token= t.fee_token\n",
        "date": "14.01.2021 17:44:07",
        "repo": "minaprotocol/mina",
        "type": "improve",
        "chatgpt_zeroshot": "Update error message in user_command_input.ml to include minimum_nonce"
    },
    {
        "msg": "improve integration test output",
        "diff": "diff --git a/buildkite/src/Command/TestExecutive.dhall b/buildkite/src/Command/TestExecutive.dhall @@ -7,6 +7,7 @@ let Size = ./Size.dhall\nlet OpamInit = ../Command/OpamInit.dhall\nlet Cmd = ../Lib/Cmds.dhall\n+let SelectFiles = ../Lib/SelectFiles.dhall\nlet deployEnv = \"DOCKER_DEPLOY_ENV\"\n@@ -49,9 +50,12 @@ in\n\"source ${deployEnv} && ./test_executive.exe cloud\" ++\n\" --coda-image gcr.io/o1labs-192920/coda-daemon:\\\\\\$CODA_VERSION-\\\\\\$CODA_GIT_HASH\" ++\n\" --coda-automation-location ./automation\" ++\n- \" ${testName}\"\n+ \" ${testName}\" ++\n+ \" | tee ${testName}.test.log\" ++\n+ \" | logproc -i inline -f '!(.level in [\\\"Spam\\\", \\\"Debug\\\"])'\"\n)\n],\n+ artifact_paths = [SelectFiles.exactly \".\" \"${testName}.test.log\"],\nlabel = \"Execute integration test: ${testName}\",\nkey = \"integration-test-${testName}\",\ntarget = Size.Medium,\n",
        "date": "03.02.2021 16:24:43",
        "repo": "minaprotocol/mina",
        "type": "improve",
        "chatgpt_zeroshot": "Add logging and artifact generation to integration test execution"
    },
    {
        "msg": "improve intg test readme",
        "diff": "diff --git a/src/app/test_executive/README.md b/src/app/test_executive/README.md # How to Run Integration Tests\n-## Prerequisites\n+## Prerequisites Environment Setup\n-1) Ensure the following environment variables are properly set if not already: `GCLOUD_API_KEY` (relating to the gcloud service account used in step 2), `KUBE_CONFIG_PATH`, any other vars relating to Google cloud access, vars relating to AWS access, vars relating to ocaml compilation.\n+Note: this environment setup assumes that one is a member of o(1) labs and has access to organization infrastructure. You will need an o(1) labs GCP account and AWS account.\n-2) Log in to Google Cloud, with the correct cluster, and activate the service account\n+1) Download the gcloud integration test API key. Go to the API Credentials page (https://console.cloud.google.com/apis/credentials), find \"Integration-tests log-engine\" and copy the key for that onto your clipboard. run `export GCLOUD_API_KEY=<key>` and/or put it in one's bashrc or .profile. Note that this API key is shared by everyone.\n-`gcloud auth login --no-launch-browser <personal login name>`\n-`gcloud container clusters get-credentials --region us-west1 mina-integration-west1`\n-`gcloud auth activate-service-account <name of service account> --key-file=<path to key file>`\n+2) Download your key file for the `automated-validation` service account. Go to the IAM Service Accounts page (https://console.cloud.google.com/iam-admin/serviceaccounts), click into the \"automated-validation@<email domain>\" page, click into the \"Keys\" section in the topbar, and create a new key (one may already have one). Download this key and save to one's preferred path, it will be needed in step 4 of this setup. Note that each individual should have their own key.\n-If, in the course of other development, one switches to a separate account, one may need to run the last line again in order to switch back to the service account.\n+3) Other than `GCLOUD_API_KEY`, ensure the following other environment variables are also properly set: `KUBE_CONFIG_PATH`, any other vars relating to Google cloud access, `AWS_ACCESS_KEY_ID`, `AWS_SECRET_ACCESS_KEY`, `AWS_DEFAULT_REGION=us-west-2`, vars relating to ocaml compilation. It's recommened to set all of these in .bashrc or .profile.\n-3) OPTIONAL: Set the following aliases in one's .bashrc or .bash_aliases (note that aliases don't work if set in .profile):\n+4) Run the following commands in order to log in to Google Cloud, and activate the service account for one's work machine.\n-`alias test_executive=./_build/default/src/app/test_executive/test_executive.exe`\n-`alias logproc=./_build/default/src/app/logproc/logproc.exe`\n+```\n+gcloud auth login --no-launch-browser <personal login name>\n+gcloud container clusters get-credentials --region us-west1 mina-integration-west1\n+gcloud auth activate-service-account automated-validation@<email domain> --key-file=<path to automated-validation key file>\n+```\n+\n+When the service account is activated, one can run the integration tests but it may interfere with other activity on GCP. If, in the course of other development, one switches to a separate account, one may need to run the last line again in order to switch back to the service account.\n+\n+5) OPTIONAL: Set the following aliases in one's .bashrc or .bash_aliases (note that aliases don't work if set in .profile):\n+\n+```alias test_executive=./_build/default/src/app/test_executive/test_executive.exe\n+alias logproc=./_build/default/src/app/logproc/logproc.exe```\n",
        "date": "22.03.2021 16:01:08",
        "repo": "minaprotocol/mina",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor README.md for integration test setup and environment prerequisites"
    },
    {
        "msg": "improve fee lower bound",
        "diff": "diff --git a/src/lib/mina_base/parties.ml b/src/lib/mina_base/parties.ml @@ -41,7 +41,25 @@ let fee_lower_bound_exn (t : t) : Currency.Fee.t =\nlet x = t.fee_payer.data.body.delta in\nmatch x.sgn with\n| Neg ->\n- Currency.Amount.to_fee x.magnitude\n+ (* See what happens if all the parties that use up balance succeed,\n+ and all the non-fee-payer parties that contribute balance fail.\n+\n+ In the future we could have this function take in the current view of the\n+ world to get a more accurate lower bound.\n+ *)\n+ List.fold_until t.other_parties ~init:x.magnitude ~finish:Fn.id\n+ ~f:(fun acc p ->\n+ let y = p.data.body.delta in\n+ match y.sgn with\n+ | Neg ->\n+ Continue acc\n+ | Pos -> (\n+ match Currency.Amount.sub acc y.magnitude with\n+ | None ->\n+ Stop Currency.Amount.zero\n+ | Some acc' ->\n+ Continue acc' ) )\n+ |> Currency.Amount.to_fee\n| Pos ->\nassert false\n",
        "date": "10.06.2021 09:51:13",
        "repo": "minaprotocol/mina",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor fee_lower_bound_exn function to calculate lower bound fee based on party balances."
    },
    {
        "msg": "improve some more variable names",
        "diff": "diff --git a/src/lib/consensus/proof_of_stake.ml b/src/lib/consensus/proof_of_stake.ml @@ -1194,7 +1194,7 @@ module Data = struct\nbetween, and not including, prev and next (relative).\n*)\nlet current_sub_window_densities =\n- List.mapi prev_sub_window_densities ~f:(fun i length ->\n+ List.mapi prev_sub_window_densities ~f:(fun i density ->\nlet gt_prev_sub_window =\nSub_window.(of_int i > prev_relative_sub_window)\nin\n@@ -1208,8 +1208,8 @@ module Data = struct\nthen gt_prev_sub_window && lt_next_sub_window\nelse gt_prev_sub_window || lt_next_sub_window\nin\n- if same_sub_window then length\n- else if overlapping_window && not within_range then length\n+ if same_sub_window then density\n+ else if overlapping_window && not within_range then density\nelse Length.zero)\nin\nlet current_window_density =\n@@ -1230,14 +1230,14 @@ module Data = struct\n(* Compute the next window by mutating the current window *)\nlet next_sub_window_densities =\n- List.mapi current_sub_window_densities ~f:(fun i length ->\n+ List.mapi current_sub_window_densities ~f:(fun i density ->\nlet is_next_sub_window =\nSub_window.(of_int i = next_relative_sub_window)\nin\nif is_next_sub_window then\nlet f = if incr_window then Length.succ else Fn.id in\n- if same_sub_window then f length else f Length.zero\n- else length)\n+ if same_sub_window then f density else f Length.zero\n+ else density)\nin\n(* Final result is the min window density and window for the new (or virtual) block *)\n@@ -1276,7 +1276,7 @@ module Data = struct\nLength.Checked.if_ cond ~then_ ~else_\nin\nlet%bind current_sub_window_densities =\n- Checked.List.mapi prev_sub_window_densities ~f:(fun i length ->\n+ Checked.List.mapi prev_sub_window_densities ~f:(fun i density ->\nlet%bind gt_prev_sub_window =\nSub_window.Checked.(\nconstant (UInt32.of_int i) > prev_relative_sub_window)\n@@ -1298,11 +1298,11 @@ module Data = struct\nin\nif_\n(Checked.return same_sub_window)\n- ~then_:(Checked.return length)\n+ ~then_:(Checked.return density)\n~else_:\n(if_\nBoolean.(overlapping_window && not within_range)\n- ~then_:(Checked.return length)\n+ ~then_:(Checked.return density)\n~else_:(Checked.return Length.Checked.zero)))\nin\nlet%bind current_window_density =\n@@ -1323,7 +1323,7 @@ module Data = struct\n(Length.Checked.min current_window_density prev_min_window_density)\nin\nlet%bind next_sub_window_densities =\n- Checked.List.mapi current_sub_window_densities ~f:(fun i length ->\n+ Checked.List.mapi current_sub_window_densities ~f:(fun i density ->\nlet%bind is_next_sub_window =\nSub_window.Checked.(\nconstant (UInt32.of_int i) = next_relative_sub_window)\n@@ -1333,9 +1333,9 @@ module Data = struct\n~then_:\n(if_\n(Checked.return same_sub_window)\n- ~then_:Length.Checked.(succ length)\n+ ~then_:Length.Checked.(succ density)\n~else_:Length.Checked.(succ zero))\n- ~else_:(Checked.return length))\n+ ~else_:(Checked.return density))\nin\nreturn (min_window_density, next_sub_window_densities)\nend\n",
        "date": "18.10.2021 16:31:51",
        "repo": "minaprotocol/mina",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor window density calculations in proof_of_stake module"
    },
    {
        "msg": "improve js error traces",
        "diff": "diff --git a/scripts/build-snarkyjs-node.sh b/scripts/build-snarkyjs-node.sh @@ -8,6 +8,7 @@ cp _build/default/src/lib/snarky_js_bindings/snarky_js_node*.js \"$SNARKY_JS_PATH\n# better error messages\nsed -i 's/function failwith(s){throw \\[0,Failure,s\\]/function failwith(s){throw joo_global_object.Error(s.c)/' \"$SNARKY_JS_PATH\"/src/node_bindings/snarky_js_node.bc.js\nsed -i 's/function invalid_arg(s){throw \\[0,Invalid_argument,s\\]/function invalid_arg(s){throw joo_global_object.Error(s.c)/' \"$SNARKY_JS_PATH\"/src/node_bindings/snarky_js_node.bc.js\n+sed -i 's/return \\[0,Exn,t\\]/return joo_global_object.Error(t.c)/' \"$SNARKY_JS_PATH\"/src/node_bindings/snarky_js_node.bc.js\n# pushd \"$SNARKY_JS_PATH\"/src/node_bindings\n# wasm-opt --detect-features --enable-mutable-globals -O4 plonk_wasm_bg.wasm -o plonk_wasm_bg.wasm.opt\n",
        "date": "18.02.2022 15:22:54",
        "repo": "minaprotocol/mina",
        "type": "improve",
        "chatgpt_zeroshot": "Update error handling in snarkyjs-node script"
    },
    {
        "msg": "improve parameter name",
        "diff": "diff --git a/src/lib/crypto/kimchi_backend/common/plonk_constraint_system.ml b/src/lib/crypto/kimchi_backend/common/plonk_constraint_system.ml @@ -160,7 +160,7 @@ module Plonk_constraint = struct\n; vc5 : 'v\n; vc6 : 'v\n; vc7 : 'v (* LSBs *)\n- ; coeff : 'f\n+ ; compact : 'f\n(* Limbs mode: 0 (standard 3-limb) or 1 (compact 2-limb) *)\n}\n[@@deriving sexp]\n@@ -216,7 +216,7 @@ module Plonk_constraint = struct\n; vc5\n; vc6\n; vc7\n- ; coeff\n+ ; compact\n} ->\nRangeCheck0\n{ v = f v\n@@ -1314,7 +1314,7 @@ end = struct\n; vc5\n; vc6\n; vc7\n- ; coeff\n+ ; compact\n} ) ->\n(*\n//! 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14\n",
        "date": "09.02.2023 15:40:27",
        "repo": "minaprotocol/mina",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor variable name 'coeff' to 'compact' in Plonk constraint system."
    },
    {
        "msg": "improve wording and remove some cruft",
        "diff": "diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md @@ -38,11 +38,12 @@ Issues are tagged with 'good first issue' if we think it's a good beginner task\nOur community of contributors is large, and growing fast. We don't have regularly\nscheduled working hours dedicated to Cube Cobra. Thus, we can't simply message each\nother on Discord to understand the current state of the project. Discord is\n-a great tool for synchronous communication, but our project also requires\n-a focus on asynchronous methods of communication. The goal is for the current state\n-of the project, including features being worked on, issues not yet resolved,\n-and near-term roadmap plans, to be fully discoverable by a passerby without\n-needing to chat in realtime with anyone else.\n+a great tool for synchronous communication, but it falls short at allowing\n+community members to discover conversations they didn't participate in. Our project\n+also requires a focus on asynchronous methods of communication. The goal is for\n+the current state of the project, including features being worked on, issues not\n+yet resolved, and near-term roadmap plans, to be fully discoverable by a passerby\n+without needing to chat in realtime with anyone else.\nGitHub projects, issues, and pull requests serve this purpose beautifully. We\ntreat the dekkerglen/CubeCobra repository as the source of truth about what\n@@ -70,10 +71,8 @@ when learning about the group's thoughts on a given bug or feature request.\nWhen we notice a bug, we first look for an existing open issue that references the\nbug. If we find one, we comment on the issue or use a GitHub reaction emoji to\nindicate that we have also noticed the bug. If we don't find one, we open a new\n-issue about the bug.\n-\n-When we notice a change in a bug's behavior, or a new case in which the bug\n-can be replicated, we leave comments to that effect on the issue.\n+issue about the bug. When we notice a change in a bug's behavior, or a new case in\n+which the bug can be replicated, we leave comments to that effect on the issue.\nWhen we begin actively working on a feature, we comment to that effect on the\ncorresponding issue. This comment of \"I'm working on this\" indicates to other\n@@ -99,10 +98,6 @@ from the community. When we do this, we're communicating that we'd like others\nto be aware of the details of our progress without requesting a detailed code\nreview just yet.\n-Sometimes, WIP pull requests include checklists in their descriptions\n-describing work remaining to be done. We use these checklists to indicate\n-progress to observers and to keep track of it for ourselves.\n-\nWhen we feel that a feature we're working on is \"code complete\", we open pull\nrequests. These pull requests have descriptions that briefly summarize the\nchanges, and sometimes include more detailed breakdowns of the architectural\n",
        "date": "14.09.2019 01:06:49",
        "repo": "dekkerglen/cubecobra",
        "type": "improve",
        "chatgpt_zeroshot": "Improve asynchronous communication and bug tracking in CONTRIBUTING.md"
    },
    {
        "msg": "improve password reset errors. Both logging and user error messages were essentially nonexistent.",
        "diff": "diff --git a/routes/users_routes.js b/routes/users_routes.js @@ -130,21 +130,35 @@ router.post('/lostpasswordreset', function(req, res) {\nUser.findOne({\nemail: req.body.email\n}, function(err, user) {\n- if (user) {\n+ if (err) {\n+ console.error('Password reset find user error:', err);\n+ res.sendStatus(500);\n+ return;\n+ }\n+ if (!user) {\n+ req.flash('danger', 'No user with that email found! Are you sure you created an account?');\n+ res.render('user/passwordreset');\n+ }\nif (req.body.password2 != req.body.password) {\nreq.flash('danger', 'New passwords don\\'t match');\nres.render('user/passwordreset');\n} else {\nbcrypt.genSalt(10, function(err, salt) {\n+ if (err) {\n+ console.error('Password reset genSalt error:', err);\n+ res.sendStatus(500);\n+ return;\n+ }\nbcrypt.hash(req.body.password2, salt, function(err, hash) {\nif (err) {\n- console.log(err);\n+ console.error('Password reset hashing error:', err);\n+ res.sendStatus(500);\n} else {\nuser.password = hash;\nuser.save(function(err) {\nif (err) {\n- console.log(err)\n- return;\n+ console.error('Password reset user save error:', err)\n+ res.sendStatus(500);\n} else {\nreq.flash('success', 'Password updated succesfully');\nreturn res.redirect('/user/login');\n@@ -154,7 +168,6 @@ router.post('/lostpasswordreset', function(req, res) {\n});\n});\n}\n- }\n});\n}\n});\n",
        "date": "16.09.2019 22:31:17",
        "repo": "dekkerglen/cubecobra",
        "type": "improve",
        "chatgpt_zeroshot": "Fix error handling and logging in password reset functionality"
    },
    {
        "msg": "improve table styling",
        "diff": "diff --git a/src/analytics/PlaytestData.js b/src/analytics/PlaytestData.js import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\n+import { ListGroupItem } from 'reactstrap';\nimport CardPropType from 'proptypes/CardPropType';\nimport CubeAnalyticPropType from 'proptypes/CubeAnalyticPropType';\n@@ -7,7 +8,23 @@ import CubeAnalyticPropType from 'proptypes/CubeAnalyticPropType';\nimport { compareStrings, SortableTable } from 'components/SortableTable';\nimport { fromEntries } from 'utils/Util';\nimport ErrorBoundary from 'components/ErrorBoundary';\n-import { mainboardRate, pickRate } from 'utils/Card';\n+import { mainboardRate, pickRate, encodeName } from 'utils/Card';\n+\n+import withAutocard from 'components/WithAutocard';\n+\n+const AutocardItem = withAutocard(ListGroupItem);\n+\n+const renderCardLink = (card) => (\n+ <AutocardItem className=\"p-0\" key={card.index} card={card} data-in-modal index={card.index}>\n+ <a href={`/tool/card/${encodeName(card.cardID)}`} target=\"_blank\" rel=\"noopener noreferrer\">\n+ {card.details.name}\n+ </a>\n+ </AutocardItem>\n+);\n+\n+const renderPercent = (val) => {\n+ return <>{parseInt(val * 1000, 10) / 10}%</>;\n+};\nconst PlaytestData = ({ cards: allCards, cubeAnalytics }) => {\nconst cardDict = useMemo(() => fromEntries(allCards.map((card) => [card.details.name.toLowerCase(), card])), [\n@@ -19,7 +36,7 @@ const PlaytestData = ({ cards: allCards, cubeAnalytics }) => {\ncubeAnalytics.cards\n.filter((cardAnalytic) => cardDict[cardAnalytic.cardName])\n.map(({ cardName, elo, mainboards, sideboards, picks, passes }) => ({\n- cardName: cardDict[cardName].details.name,\n+ card: cardDict[cardName],\nelo: Math.round(elo),\nmainboard: mainboardRate({ mainboards, sideboards }),\npickrate: pickRate({ picks, passes }),\n@@ -34,11 +51,17 @@ const PlaytestData = ({ cards: allCards, cubeAnalytics }) => {\n<ErrorBoundary>\n<SortableTable\ncolumnProps={[\n- { key: 'cardName', title: 'Card Name', heading: true, sortable: true },\n+ {\n+ key: 'card',\n+ title: 'Card Name',\n+ heading: true,\n+ sortable: true,\n+ renderFn: renderCardLink,\n+ },\n{ key: 'elo', title: 'Cube Elo', sortable: true, heading: false },\n- { key: 'pickrate', title: 'Pick Rate', sortable: true, heading: false },\n+ { key: 'pickrate', title: 'Pick Rate', sortable: true, heading: false, renderFn: renderPercent },\n{ key: 'picks', title: 'Pick Count', sortable: true, heading: false },\n- { key: 'mainboard', title: 'Mainboard Rate', sortable: true, heading: false },\n+ { key: 'mainboard', title: 'Mainboard Rate', sortable: true, heading: false, renderFn: renderPercent },\n{ key: 'mainboards', title: 'Mainboard Count', sortable: true, heading: false },\n]}\ndata={data}\n",
        "date": "12.04.2021 12:11:08",
        "repo": "dekkerglen/cubecobra",
        "type": "improve",
        "chatgpt_zeroshot": "Add render functions for card links and percentages in PlaytestData component"
    },
    {
        "msg": "improve error reporting in frontend",
        "diff": "diff --git a/src/components/ListView.js b/src/components/ListView.js @@ -104,7 +104,9 @@ const ListViewRow = ({ card, versions, versionsLoading, checked, onCheck, addAle\n},\n});\nif (!response.ok) {\n- addAlert('danger', `Failed to update ${card.details.name} (status ${response.statusCode})`);\n+ const json = await response.json();\n+ const message = json?.message || `status ${response.status}`;\n+ addAlert('danger', `Failed to update ${card.details.name} (${message})`);\nreturn;\n}\n",
        "date": "08.08.2021 10:39:52",
        "repo": "dekkerglen/cubecobra",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor error message handling in ListViewRow component"
    },
    {
        "msg": "improve sortStable and customSort logic",
        "diff": "diff --git a/src/bootstrap-table.js b/src/bootstrap-table.js const index = this.header.fields.indexOf(this.options.sortName)\nlet timeoutId = 0\n- if (this.options.customSort) {\n- this.options.customSort.apply(this, [this.options.sortName, this.options.sortOrder])\n- return\n- }\n-\nif (index !== -1) {\nif (this.options.sortStable) {\nthis.data.forEach((row, i) => {\n})\n}\n+ if (this.options.customSort) {\n+ Utils.calculateObjectValue(this.options, this.options.customSort, [\n+ this.options.sortName,\n+ this.options.sortOrder,\n+ this.data\n+ ])\n+ } else {\nthis.data.sort((a, b) => {\nif (this.header.sortNames[index]) {\nname = this.header.sortNames[index]\nif (aa < bb) {\nreturn order * -1\n}\n+ if (aa > bb) {\nreturn order\n}\n+ return 0\n+ }\nif (aa === bb) {\nreturn 0\nreturn order\n})\n+ }\nif (this.options.sortClass !== undefined) {\nclearTimeout(timeoutId)\n",
        "date": "24.01.2019 00:17:58",
        "repo": "wenzhixin/bootstrap-table",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor custom sorting logic in bootstrap-table.js"
    },
    {
        "msg": "improve documentation of the table url attribute",
        "diff": "diff --git a/site/docs/api/table-options.md b/site/docs/api/table-options.md @@ -304,6 +304,10 @@ The table options are defined in `jQuery.fn.bootstrapTable.defaults`.\n- **Default:** `undefined`\n+- **Error handling**\n+\n+ To get loading errors please use [onLoadError](https://bootstrap-table.com/docs/api/events/#onloaderror)\n+\n- **Example:** [From URL](https://examples.bootstrap-table.com/#welcomes/from-url.html)\n## method\n",
        "date": "24.03.2019 22:37:50",
        "repo": "wenzhixin/bootstrap-table",
        "type": "improve",
        "chatgpt_zeroshot": "Add error handling for loading errors in table options"
    },
    {
        "msg": "improve copy-rows to support all themes",
        "diff": "diff --git a/src/extensions/copy-rows/bootstrap-table-copy-rows.js b/src/extensions/copy-rows/bootstrap-table-copy-rows.js const Utils = $.fn.bootstrapTable.utils\n-const constants = {\n- 3: {\n- icons: {\n- copy: 'glyphicon-copy icon-pencil'\n- }\n- },\n- 4: {\n- icons: {\n- copy: 'fa-copy'\n- }\n- }\n-}[Utils.bootstrapVersion]\n+$.extend($.fn.bootstrapTable.defaults.icons, {\n+ copy: {\n+ bootstrap3: 'glyphicon-copy icon-pencil',\n+ materialize: 'content_copy'\n+ }[$.fn.bootstrapTable.theme] || 'fa-copy'\n+})\nconst copyText = text => {\nconst textField = document.createElement('textarea')\n@@ -49,12 +43,12 @@ $.BootstrapTable = class extends $.BootstrapTable {\ninitToolbar (...args) {\nsuper.initToolbar(...args)\n- const $btnGroup = this.$toolbar.find('>.btn-group')\n+ const $btnGroup = this.$toolbar.find('>.columns')\nif (this.options.showCopyRows && this.header.stateField) {\nthis.$copyButton = $(`\n<button class=\"${this.constants.buttonsClass}\">\n- <i class=\"${this.options.iconsPrefix} ${constants.icons.copy}\"></i>\n+ ${Utils.sprintf(this.constants.html.icon, this.options.iconsPrefix, this.options.icons.copy)}\n</button>\n`)\n$btnGroup.append(this.$copyButton)\n",
        "date": "07.04.2019 18:41:17",
        "repo": "wenzhixin/bootstrap-table",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor copy rows extension to support multiple themes and update toolbar button styling"
    },
    {
        "msg": "improve export all",
        "diff": "diff --git a/src/extensions/export/bootstrap-table-export.js b/src/extensions/export/bootstrap-table-export.js @@ -207,9 +207,11 @@ $.BootstrapTable = class extends $.BootstrapTable {\n? 'post-body.bs.table' : 'page-change.bs.table'\nthis.$el.one(eventName, () => {\ndoExport(() => {\n+ this.virtualScrollDisabled = false\nthis.togglePagination()\n})\n})\n+ this.virtualScrollDisabled = true\nthis.togglePagination()\nthis.trigger('export-saved', this.getData())\n} else if (o.exportDataType === 'selected') {\n",
        "date": "23.04.2019 08:28:11",
        "repo": "wenzhixin/bootstrap-table",
        "type": "improve",
        "chatgpt_zeroshot": "Fix issue with pagination toggle during export process"
    },
    {
        "msg": "improve export button when there is only one type",
        "diff": "diff --git a/src/extensions/export/bootstrap-table-export.js b/src/extensions/export/bootstrap-table-export.js @@ -93,9 +93,9 @@ $.BootstrapTable = class extends $.BootstrapTable {\nexportTypes = types.map(t => t.slice(1, -1))\n}\n- if (exportTypes.length === 1) {\n- this.$export = $(`\n- <div class=\"export\">\n+ this.$export = $(exportTypes.length === 1 ? `\n+ <div class=\"export ${this.constants.classes.buttonsDropdown}\"\n+ data-type=\"${exportTypes[0]}\">\n<button class=\"${this.constants.buttonsClass}\"\naria-label=\"Export\"\ntype=\"button\"\n@@ -104,24 +104,7 @@ $.BootstrapTable = class extends $.BootstrapTable {\n${o.showButtonText ? o.formatExport() : ''}\n</button>\n</div>\n- `).appendTo($btnGroup)\n-\n- this.updateExportButton()\n-\n- $btnGroup.click(e => {\n- e.preventDefault()\n-\n- const type = exportTypes[0]\n- const exportOptions = {\n- type,\n- escape: false\n- }\n-\n- this.exportTable(exportOptions)\n- })\n- }\n- else {\n- this.$export = $(`\n+ ` : `\n<div class=\"export ${this.constants.classes.buttonsDropdown}\">\n<button class=\"${this.constants.buttonsClass} dropdown-toggle\"\naria-label=\"Export\"\n@@ -134,9 +117,11 @@ $.BootstrapTable = class extends $.BootstrapTable {\n</button>\n</div>\n`).appendTo($btnGroup)\n- this.$export.append($menu)\n- this.updateExportButton()\n+ let $items = this.$export\n+\n+ if (exportTypes.length > 1) {\n+ this.$export.append($menu)\n// themes support\nif ($menu.children().length) {\n@@ -151,7 +136,12 @@ $.BootstrapTable = class extends $.BootstrapTable {\n}\n}\n- $menu.children().click(e => {\n+ $items = $menu.children()\n+ }\n+\n+ this.updateExportButton()\n+\n+ $items.click(e => {\ne.preventDefault()\nconst type = $(e.currentTarget).data('type')\n@@ -162,7 +152,6 @@ $.BootstrapTable = class extends $.BootstrapTable {\nthis.exportTable(exportOptions)\n})\n- }\nthis.handleToolbar()\n}\n",
        "date": "29.08.2019 00:45:26",
        "repo": "wenzhixin/bootstrap-table",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor export button logic and add support for multiple export types"
    },
    {
        "msg": "improve print extension to undefinedText option and added printFormatter support data-attribute",
        "diff": "diff --git a/src/extensions/print/bootstrap-table-print.js b/src/extensions/print/bootstrap-table-print.js @@ -99,11 +99,11 @@ $.BootstrapTable = class extends $.BootstrapTable {\ndoPrint (data) {\nconst formatValue = (row, i, column ) => {\n- const value = row[column.field]\n- if (typeof column.printFormatter === 'function') {\n- return column.printFormatter(...[value, row, i])\n- }\n- return typeof value === 'undefined' ? '-' : value\n+ const value = Utils.calculateObjectValue(column, column.printFormatter,\n+ [row[column.field], row, i], row[column.field])\n+\n+ return typeof value === 'undefined' || value === null\n+ ? this.options.undefinedText : value\n}\nconst buildTable = (data, columnsArray) => {\n",
        "date": "01.11.2019 13:07:41",
        "repo": "wenzhixin/bootstrap-table",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor print formatting logic in bootstrap-table-print.js"
    },
    {
        "msg": "improve reorder-rows extension docs",
        "diff": "diff --git a/site/docs/extensions/reorder-rows.md b/site/docs/extensions/reorder-rows.md @@ -104,7 +104,9 @@ if you want you can include the bootstrap-table-reorder-rows.css file to use the\n- **Detail:**\n- This is the cursor to use\n+ This is the cursor element.\n+\n+ **Note: This option is mainly used to adapt to the `TableDnD` plugin. Under no special circumstances, please do not modify the default value.**\n- **Default:** `>tbody>tr>td`\n",
        "date": "04.04.2020 21:11:20",
        "repo": "wenzhixin/bootstrap-table",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor cursor element and add note about default value usage"
    },
    {
        "msg": "improve the behavior of ajax abort",
        "diff": "diff --git a/src/bootstrap-table.js b/src/bootstrap-table.js @@ -1951,6 +1951,12 @@ class BootstrapTable {\n}\n},\nerror: jqXHR => {\n+ // abort ajax by multiple request\n+ if (jqXHR && jqXHR.status === 0 && this._xhrAbort) {\n+ this._xhrAbort = false\n+ return\n+ }\n+\nlet data = []\nif (this.options.sidePagination === 'server') {\n@@ -1968,6 +1974,7 @@ class BootstrapTable {\nUtils.calculateObjectValue(this, this.options.ajax, [request], null)\n} else {\nif (this._xhr && this._xhr.readyState !== 4) {\n+ this._xhrAbort = true\nthis._xhr.abort()\n}\nthis._xhr = $.ajax(request)\n",
        "date": "27.04.2021 23:45:55",
        "repo": "wenzhixin/bootstrap-table",
        "type": "improve",
        "chatgpt_zeroshot": "Fix issue with multiple ajax requests being aborted"
    },
    {
        "msg": "improve initialisation (thx UtechtDustin)",
        "diff": "diff --git a/src/extensions/cookie/bootstrap-table-cookie.js b/src/extensions/cookie/bootstrap-table-cookie.js @@ -504,24 +504,24 @@ $.BootstrapTable = class extends $.BootstrapTable {\nthrow new Error('Could not parse the json of the sortPriority cookie!', sortPriorityCookie)\n}\n+ // sortOrder\n+ this.options.sortOrder = undefined\n+ // sortName\n+ this.options.sortName = undefined\n+\nif (!sortPriorityCookie) {\n// sortOrder\nthis.options.sortOrder = sortOrderCookie ? sortOrderCookie : this.options.sortOrder\n// sortName\nthis.options.sortName = sortOrderNameCookie ? sortOrderNameCookie : this.options.sortName\n- } else {\n- // sortOrder\n- this.options.sortOrder = undefined\n- // sortName\n- this.options.sortName = undefined\n}\n+ // sortPriority\n+ this.options.sortPriority = sortPriorityCookie ? sortPriorityCookie : this.options.sortPriority\n+\nif (this.options.sortOrder || this.options.sortName) {\n// sortPriority\nthis.options.sortPriority = null\n- } else {\n- // sortPriority\n- this.options.sortPriority = sortPriorityCookie ? sortPriorityCookie : this.options.sortPriority\n}\n// pageNumber\n",
        "date": "07.05.2021 20:25:25",
        "repo": "wenzhixin/bootstrap-table",
        "type": "improve",
        "chatgpt_zeroshot": "\"Refactor sortPriority handling in bootstrap-table-cookie.js\""
    },
    {
        "msg": "improve the pullrequest template",
        "diff": "diff --git a/.github/PULL_REQUEST_TEMPLATE.md b/.github/PULL_REQUEST_TEMPLATE.md -**Bug fix?**\n-<!-- yes/no -->\n+**Type of Request**\n+- [ ] **Bug fix**\n+- [ ] **New feature**\n+- [ ] **Improvement**\n+- [ ] **Documentation**\n+- [ ] **Other**\n-**New Feature?**\n-<!-- yes/no -->\n-\n-**Resolve an issue?**\n+**Resolves an issue?**\n<!-- Please prefix each issue number with \"Fix #\" (e.g. Fix #200) -->\n**Example(s)?**\n",
        "date": "08.05.2021 08:09:42",
        "repo": "wenzhixin/bootstrap-table",
        "type": "improve",
        "chatgpt_zeroshot": "Update pull request template with new options and fix typo in \"Resolves an issue?\" prompt"
    },
    {
        "msg": "improve reliability of port hint. * fixing things for people with the username `cwd` closes * combine awk into a single command and add escaping",
        "diff": "diff --git a/packages/react-dev-utils/getProcessForPort.js b/packages/react-dev-utils/getProcessForPort.js @@ -43,7 +43,7 @@ function getProcessCommand(processId, processDirectory) {\n}\nfunction getDirectoryOfProcessById(processId) {\n- return execSync('lsof -p '+ processId + ' | grep cwd | awk \\'{print $9}\\'', execOptions).trim();\n+ return execSync('lsof -p '+ processId + ' | awk \\'$4==\"cwd\" {print $9}\\'', execOptions).trim();\n}\nfunction getProcessForPort(port) {\n",
        "date": "03.03.2017 10:03:07",
        "repo": "react-workspaces/create-react-app",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor getDirectoryOfProcessById function to improve command efficiency"
    },
    {
        "msg": "improve error messaging in verifyPackageTree.js",
        "diff": "diff --git a/packages/react-scripts/scripts/utils/verifyPackageTree.js b/packages/react-scripts/scripts/utils/verifyPackageTree.js @@ -97,7 +97,7 @@ function verifyPackageTree() {\n)}) \\n\\n` +\n`Manually installing incompatible versions is known to cause hard-to-debug issues.\\n\\n` +\nchalk.red(\n- `If prefer to ignore this check, add ${chalk.bold(\n+ `If you would prefer to ignore this check, add ${chalk.bold(\n'SKIP_PREFLIGHT_CHECK=true'\n)} to an ${chalk.bold('.env')} file in your project.\\n` +\n`That will permanently disable this message but you might encounter other issues.\\n\\n`\n",
        "date": "06.12.2018 11:39:01",
        "repo": "react-workspaces/create-react-app",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor message for skipping preflight check in verifyPackageTree.js"
    },
    {
        "msg": "improve styling of \"get started\" button",
        "diff": "diff --git a/docusaurus/website/static/css/custom.css b/docusaurus/website/static/css/custom.css .homeContainer .button {\nbackground: #24292e;\nborder-color: white;\n+ transition: background 0.3s, color 0.3s;\n+}\n+\n+.homeContainer .button:hover {\n+ background: white;\n+ color: #282c34;\n}\n.homeContainer * {\n",
        "date": "25.04.2019 09:18:08",
        "repo": "react-workspaces/create-react-app",
        "type": "improve",
        "chatgpt_zeroshot": "Add hover effect to buttons in homeContainer"
    },
    {
        "msg": "improve 1244, closes again",
        "diff": "diff --git a/user.js b/user.js @@ -680,13 +680,12 @@ user_pref(\"security.pki.crlite_mode\", 2);\nuser_pref(\"security.mixed_content.block_active_content\", true); // [DEFAULT: true]\n/* 1241: disable insecure passive content (such as images) on https pages [SETUP-WEB] ***/\nuser_pref(\"security.mixed_content.block_display_content\", true);\n-/* 1244: enable HTTPS-Only mode [FF76+]\n- * When \"https_only_mode\" (all windows) is true, \"https_only_mode_pbm\" (private windows only) is ignored\n- * [SETTING] to add site exceptions: Padlock>HTTPS-Only mode>On/Off/Off temporarily\n- * [SETTING] Privacy & Security>HTTPS-Only Mode\n+/* 1244: enable HTTPS-Only mode in all windows [FF76+]\n+ * When the top-level is HTTPS, insecure subresources are also upgraded (silent fail)\n+ * [SETTING] to add site exceptions: Padlock>HTTPS-Only mode>On (after \"Continue to HTTP Site\")\n+ * [SETTING] Privacy & Security>HTTPS-Only Mode (and manage exceptions)\n* [TEST] http://example.com [upgrade]\n- * [TEST] http://neverssl.org/ [no upgrade]\n- * [1] https://bugzilla.mozilla.org/1613063 [META] ***/\n+ * [TEST] http://neverssl.org/ [no upgrade] ***/\nuser_pref(\"dom.security.https_only_mode\", true); // [FF76+]\n// user_pref(\"dom.security.https_only_mode_pbm\", true); // [FF80+]\n/* 1245: enable HTTPS-Only mode for local resources [FF77+] ***/\n",
        "date": "20.08.2021 13:18:43",
        "repo": "arkenfox/user.js",
        "type": "improve",
        "chatgpt_zeroshot": "Enable HTTPS-Only mode in all windows and manage exceptions."
    },
    {
        "msg": "improve usability by clarifying desired action",
        "diff": "diff --git a/prefsCleaner.sh b/prefsCleaner.sh @@ -88,6 +88,7 @@ echo -e \"\\nThis script should be run from your Firefox profile directory.\\n\"\necho \"It will remove any entries from prefs.js that also exist in user.js.\"\necho \"This will allow inactive preferences to be reset to their default values.\"\necho -e \"\\nThis Firefox profile shouldn't be in use during the process.\\n\"\n+echo -e \"\\nIn order to proceed, select a command below by entering its corresponding number.\\n\"\n[ \"$1\" == '-s' ] && fStart\n",
        "date": "13.11.2022 14:31:17",
        "repo": "arkenfox/user.js",
        "type": "improve",
        "chatgpt_zeroshot": "Add prompt for user to select command before proceeding."
    },
    {
        "msg": "improve Input test",
        "diff": "diff --git a/components/Form/Input/__tests__/Input.test.js b/components/Form/Input/__tests__/Input.test.js @@ -21,8 +21,8 @@ describe('Input', () => {\ncreateSnapshotTest(<Input {...requiredProps} />);\n});\n- it('should render with label', () => {\n- const wrapper = shallow(<Input {...requiredProps} />);\n+ it('should render with label, even if hidden', () => {\n+ const wrapper = shallow(<Input {...requiredProps} isLabelHidden />);\nexpect(wrapper).toContainExactlyOneMatchingElement('Label');\n});\n",
        "date": "07.05.2019 01:04:43",
        "repo": "operationcode/front-end",
        "type": "improve",
        "chatgpt_zeroshot": "Update Input test to render label even if hidden"
    },
    {
        "msg": "improve styling of timeline nav Nav links are now heavier to match weight of timeline event headers. Nav links will now appear closer together on higher resolutions",
        "diff": "diff --git a/components/Timeline/TimelineNav/TimelineNav.css b/components/Timeline/TimelineNav/TimelineNav.css .timelineNavContainer {\ndisplay: flex;\n+ padding: 0 4rem;\njustify-content: space-around;\n}\n+@media screen and (--small-viewport) {\n+ .timelineNavContainer {\n+ padding: 0;\n+ }\n+}\n+\n.timelineNavLink {\n+ font-weight: 700;\ncursor: pointer;\n- transition: transform 100ms ease-in-out;\n+ transition: transform opacity 100ms ease-in-out;\n}\n.timelineNavLink:not(:hover) {\n- opacity: 0.7;\n+ opacity: 0.6;\n}\n.timelineNavLink:hover {\n- text-decoration: underline;\ntransform: scale(1.1);\n}\n",
        "date": "06.10.2019 00:19:09",
        "repo": "operationcode/front-end",
        "type": "improve",
        "chatgpt_zeroshot": "Update TimelineNav styling and transitions"
    },
    {
        "msg": "improve typing and documentation for gtag methods",
        "diff": "diff --git a/scripts/thirdParty/gtag.js b/scripts/thirdParty/gtag.js @@ -6,6 +6,10 @@ const isProduction =\nprocess.env.NODE_ENV === 'production' && window.location.host.includes('operationcode.org');\nconst isDevelopment = process.env.NODE_ENV === 'development';\n+/**\n+ * @description dev-only logging of gtag methods\n+ * @param {{ methodName: string }} { methodName, ...rest }\n+ */\nconst log = ({ methodName, ...rest }) => {\nif (isDevelopment) {\nconsole.log(`gtag.${methodName}\\n`, rest); // eslint-disable-line no-console\n@@ -15,7 +19,7 @@ const log = ({ methodName, ...rest }) => {\n/**\n* @description Log a pageview with google tag manager\n* @param {string} url\n- * @param {boolean} isModalView\n+ * @param {boolean?} isModalView\n* @see https://developers.google.com/analytics/devguides/collection/gtagjs/pages\n*/\nconst pageView = (url, isModalView = false) => {\n@@ -39,7 +43,17 @@ const pageView = (url, isModalView = false) => {\n* }}\n* @see https://developers.google.com/analytics/devguides/collection/gtagjs/events\n*/\n-const event = ({ action, category, label, value, callback }) => {\n+const event = ({\n+ action,\n+ category,\n+ label = undefined,\n+ value = undefined,\n+ callback = undefined,\n+}) => {\n+ if (!action || !category) {\n+ throw new Error('Google Events must be called with at least an action and category.');\n+ }\n+\nlog({\nmethodName: 'event',\naction,\n",
        "date": "20.04.2020 11:16:10",
        "repo": "operationcode/front-end",
        "type": "improve",
        "chatgpt_zeroshot": "Add dev-only logging for gtag methods and update event function parameters."
    },
    {
        "msg": "improve input field errors to accomodate any font size",
        "diff": "diff --git a/sass/components/forms/_input-fields.scss b/sass/components/forms/_input-fields.scss @@ -115,7 +115,8 @@ textarea.materialize-textarea {\ndisplay: block;\ncontent: \"\";\nposition: absolute;\n- top: 60px;\n+ bottom: 0;\n+ transform: translateY(75%);\nopacity: 0;\ntransition: .2s opacity ease-out, .2s color ease-out;\n}\n@@ -155,13 +156,14 @@ textarea.materialize-textarea {\nposition: absolute;\ntop: 0.8rem;\nleft: 0;\n+ height: 100%;\nfont-size: 1rem;\ncursor: text;\ntransition: .2s ease-out;\n&:not(.label-icon).active {\nfont-size: $label-font-size;\n- transform: translateY(-140%);\n+ transform: translateY(-22px);\n}\n}\n",
        "date": "06.02.2017 13:30:05",
        "repo": "dogfalo/materialize",
        "type": "improve",
        "chatgpt_zeroshot": "Adjust input field positioning and size in forms component"
    },
    {
        "msg": "improve UX of sidenav drag by lowering drag distance threshold to 20% of sidenav width",
        "diff": "diff --git a/js/sidenav.js b/js/sidenav.js */\n_handleDragTargetRelease() {\nif (this.isDragged) {\n- if (this.percentOpen > .5) {\n+ if (this.percentOpen > .2) {\nthis.open();\n} else {\nthis._animateOut();\n*/\n_handleCloseRelease() {\nif (this.isOpen && this.isDragged) {\n- if (this.percentOpen > .5) {\n+ if (this.percentOpen > .8) {\nthis._animateIn();\n} else {\nthis.close();\n",
        "date": "23.04.2018 15:14:41",
        "repo": "dogfalo/materialize",
        "type": "improve",
        "chatgpt_zeroshot": "Adjust drag target and close release thresholds."
    },
    {
        "msg": "improve snow detection.",
        "diff": "diff --git a/modules/google-earth-engine/docker/src/sepal/sentinel2/first_pass.py b/modules/google-earth-engine/docker/src/sepal/sentinel2/first_pass.py @@ -74,6 +74,6 @@ class FirstPass(ImageOperation):\n'landCloudScore')\nself.set('snow',\n- '!i.water and i.ndsi > 0.15 and i.nir > 0.11 and i.green > 0.1')\n+ 'i.blue > 0.18 and i.red > 0.07 and i.blue/i.red > 0.85 and i.nir > 0.15 and i.ndsi > 0.2')\nreturn self.image\n",
        "date": "14.07.2017 10:40:49",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Update snow detection criteria in FirstPass module"
    },
    {
        "msg": "improve error message when GEE task has been canceled.",
        "diff": "diff --git a/modules/google-earth-engine/docker/src/sepal/export/monitor.py b/modules/google-earth-engine/docker/src/sepal/export/monitor.py @@ -43,7 +43,7 @@ class MonitorEarthEngineExportTask(ThreadTask):\nself.resolve()\nreturn\nelse:\n- error_message = status['error_message']\n+ error_message = status['error_message'] if state == Task.State.FAILED else 'Task was canceled'\nself._status = {\n'state': State.FAILED,\n'message': error_message\n",
        "date": "27.11.2017 11:37:31",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Update error message handling in MonitorEarthEngineExportTask"
    },
    {
        "msg": "improve hover effect for click & hold buttons.",
        "diff": "diff --git a/modules/gui-react/frontend/src/widget/button2.module.css b/modules/gui-react/frontend/src/widget/button2.module.css }\n.hold:not(:disabled):hover {\n- background: hsla(0, 0%, 100%, 20%);\n+ /* background: hsla(0, 0%, 100%, 20%); */\n}\n.hold:before {\nz-index: -1;\n}\n+.hold:not(:disabled):hover:before {\n+ top: 75%;\n+ background: hsla(0, 0%, 100%, 20%);\n+ transition: top 150ms ease-in-out;\n+}\n+\n.hold:not(:disabled):hover:active:before {\nanimation: fill 750ms ease-out forwards normal;\n}\n@keyframes fill {\n90% {\ntop: 0;\n- background: hsla(0, 0%, 100%, 30%);\n+ background: hsla(0, 0%, 100%, 40%);\n}\n100% {\ntop: 0;\n",
        "date": "06.04.2018 17:11:00",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor button2 module CSS to improve hover effect and animation."
    },
    {
        "msg": "improve initial state handling and added dirty detection.",
        "diff": "diff --git a/modules/gui-react/frontend/src/widget/form.js b/modules/gui-react/frontend/src/widget/form.js +import PropTypes from 'prop-types'\nimport React from 'react'\nimport {connect} from 'store'\n-import PropTypes from 'prop-types'\nimport {msg} from 'translate'\nimport styles from './form.module.css'\nexport function form(inputs, mapStateToProps) {\nreturn (WrappedComponent) => {\nclass Form extends React.Component {\n+ onDirtyListeners = []\n+ onCleanListeners = []\n+\nconstructor(props) {\nsuper(props)\nconst state = {\n- values: props.values || {},\n- errors: props.errors || {}\n+ initialValues: {...props.values} || {},\n+ values: {...props.values} || {},\n+ errors: {...props.errors} || {},\n+ dirty: false\n}\n-\nObject.keys(inputs).forEach(name => {\n+ state.initialValues[name] = name in state.initialValues ? state.initialValues[name] : ''\nstate.values[name] = name in state.values ? state.values[name] : ''\nstate.errors[name] = name in state.errors ? state.errors[name] : ''\n})\n@@ -35,10 +40,10 @@ export function form(inputs, mapStateToProps) {\nthis.setState((prevState) =>\n({...prevState, errors: nextProps.errors})\n)\n- if ('values' in nextProps)\n- this.setState((prevState) =>\n- ({...prevState, values: {...prevState.values, ...nextProps.values}})\n- )\n+ // if ('values' in nextProps)\n+ // this.setState((prevState) =>\n+ // ({...prevState, values: {...prevState.values, ...nextProps.values}})\n+ // )\n}\nhandleChange(e) {\n@@ -57,6 +62,11 @@ export function form(inputs, mapStateToProps) {\nconst state = Object.assign({}, prevState)\nstate.values[name] = value\nstate.errors[name] = ''\n+ state.dirty = state.initialValues[name] !== value\n+ if (state.dirty && !prevState.dirty)\n+ this.onDirty()\n+ if (!state.dirty && prevState.dirty)\n+ this.onClean()\nreturn state\n})\nreturn this\n@@ -86,6 +96,39 @@ export function form(inputs, mapStateToProps) {\nreturn !!Object.keys(this.state.values).find(name => this.error(name))\n}\n+ reset() {\n+ this.setState((prevState) => {\n+ const dirty = !!Object.keys(inputs).find((name) => {\n+ this.state.values[name] !== this.state.initialValues\n+ }\n+ )\n+ const state = {...prevState, values: {...prevState.initialValues}, dirty: dirty}\n+ if (state.dirty && !prevState.dirty)\n+ this.onDirty()\n+ if (!state.dirty && prevState.dirty)\n+ this.onClean()\n+ return state\n+ })\n+ }\n+\n+ isValueDirty(name) {\n+ const state = this.state\n+ return state.values[name] !== state.initialValues[name]\n+ }\n+\n+ isDirty() {\n+ return !!Object.keys(this.state.initialValues)\n+ .find(this.isValueDirty)\n+ }\n+\n+ onDirty() {\n+ this.onDirtyListeners.forEach((listener) => listener())\n+ }\n+\n+ onClean() {\n+ this.onCleanListeners.forEach((listener) => listener())\n+ }\n+\nrender() {\nconst formInputs = {}\nObject.keys(inputs).forEach(name => {\n@@ -96,6 +139,7 @@ export function form(inputs, mapStateToProps) {\nerrorClass: this.state.errors[name] ? styles.error : null,\nset: (value) => this.set(name, value),\nhandleChange: (e) => this.handleChange(e),\n+ isDirty: () => this.isValueDirty(name),\nvalidate: () => this.validate(name)\n}\n})\n@@ -106,6 +150,10 @@ export function form(inputs, mapStateToProps) {\n.filter(error => error),\nerrorClass: styles.error,\nhasInvalid: this.hasInvalid,\n+ onDirty: (listener) => this.onDirtyListeners.push(listener),\n+ onClean: (listener) => this.onCleanListeners.push(listener),\n+ reset: () => this.reset(),\n+ isDirty: () => this.isDirty,\nvalues: () => this.state.values\n},\ninputs: formInputs\n",
        "date": "19.04.2018 12:49:49",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Add dirty tracking and reset functionality to form component"
    },
    {
        "msg": "improve *ValueByTemplate methods to deep-match templates.",
        "diff": "diff --git a/modules/gui/frontend/src/action-builder.js b/modules/gui/frontend/src/action-builder.js @@ -62,7 +62,7 @@ const actionBuilder = (type, props) => {\nsetValueByTemplate(path, template, value) {\noperations.push((immutableState, state) => {\nconst index = select(path, state)\n- .findIndex(value => _.isEqual(template, _.pick(value, _.keys(template))))\n+ .findIndex(value => _.isEqual(_.merge({}, value, template), value))\nreturn (index !== -1)\n? immutableState.set([...toPathList(path), index], value)\n: immutableState\n@@ -80,7 +80,7 @@ const actionBuilder = (type, props) => {\nassignValueByTemplate(path, template, value) {\noperations.push((immutableState, state) => {\nconst index = select(path, state)\n- .findIndex(value => _.isEqual(template, _.pick(value, _.keys(template))))\n+ .findIndex(value => _.isEqual(_.merge({}, value, template), value))\nreturn (index !== -1)\n? immutableState.assign([...toPathList(path), index], value)\n: immutableState\n@@ -159,7 +159,7 @@ const actionBuilder = (type, props) => {\ndelValueByTemplate(path, template) {\noperations.push((immutableState, state) => {\nconst index = select(path, state)\n- .findIndex(value => _.isEqual(template, _.pick(value, _.keys(template))))\n+ .findIndex(value => _.isEqual(_.merge({}, value, template), value))\nreturn (index !== -1)\n? immutableState.del([...toPathList(path), index])\n: immutableState\n",
        "date": "07.11.2018 16:23:09",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor value comparison in actionBuilder functions"
    },
    {
        "msg": "improve styling of top bar.",
        "diff": "diff --git a/modules/gui/frontend/src/widget/sectionLayout.module.css b/modules/gui/frontend/src/widget/sectionLayout.module.css .bar {\nflex-shrink: 0;\nheight: fit-content;\n+ min-height: 3rem;\npadding: 0 .8rem;\nbackground-color: rgba(0, 0, 0, .25);\n+ display: flex;\n+ flex-direction: row;\n+ align-items: center;\n+}\n+\n+.bar > * {\n+ width: 100%;\n}\n.padding {\n- padding: .5rem .8rem;\n+ padding: .3rem .8rem;\ncolor: #ccc;\nfont-size: .9rem;\n}\n",
        "date": "14.01.2019 10:29:36",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Add styling to make the bar section display as a flex row with centered items and set a minimum height of 3rem. Update padding in the padding section."
    },
    {
        "msg": "improve Button styling.",
        "diff": "diff --git a/modules/gui/frontend/src/widget/button.module.css b/modules/gui/frontend/src/widget/button.module.css .button {\n--small-font-size: .8rem;\n--normal-font-size: .9rem;\n- --large-font-size: 1.1rem;\n- --x-large-font-size: 1.3rem;\n- --ratio: 2;\n+ --large-font-size: 1.0rem;\n+ --x-large-font-size: 1.1rem;\n+ --ratio: 2.2;\nposition: relative;\ncursor: pointer;\ntransition: all 100ms ease-in-out;\nfont-size: var(--font-size);\n+ line-height: var(--font-size);\n+ min-height: fit-content;\nheight: calc(var(--ratio) * var(--font-size));\nmin-width: calc(var(--ratio) * var(--font-size));\nwidth: fit-content;\n@media only screen and (max-width: 500px) {\n.button {\n- --ratio: 1.8;\n+ --ratio: 1.9;\n}\n}\npadding: 0;\n}\n+/* sizes */\n+\n.button.small {\n--font-size: var(--small-font-size);\n}\n}\n.button.x-large {\n- /* same size as large, but with padding */\n- --font-size: var(--large-font-size);\n+ --font-size: var(--x-large-font-size);\n}\n+/* shapes */\n+\n.button.rectangle {\nborder-radius: var(--button-border-radius);\n- padding: 0 .8rem;\n-}\n-\n-.button.rectangle.x-large {\n- padding: .2rem 1.2rem;\n+ padding: 0 calc(var(--font-size) * .8);\n}\n.button.pill {\nborder-radius: 500px;\n- padding: 0 .8rem;\n-}\n-\n-.button.pill.x-large {\n- padding: .2rem 1.2rem;\n+ padding: 0 calc(var(--font-size) * .8);\n}\n.button.circle {\n}\n}\n+/* groups */\n+\n.group {\n--button-spacing: .5rem;\nheight: fit-content;\n",
        "date": "16.01.2019 17:34:47",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor button module CSS to adjust font sizes and ratios, and update button sizes and shapes."
    },
    {
        "msg": "improve handling of invalid dates.",
        "diff": "diff --git a/modules/gui/frontend/src/widget/datePicker.js b/modules/gui/frontend/src/widget/datePicker.js @@ -6,19 +6,38 @@ import React, {Component} from 'react'\nimport {activatable} from 'widget/activation/activatable'\nimport {Activator} from 'widget/activation/activator'\nimport {Button} from 'widget/button'\n+import {isMobile} from 'widget/userAgent'\nimport styles from './datePicker.module.css'\n-import {Input} from './form'\nimport Label from './label'\nimport {Panel, PanelButtons, PanelContent, PanelHeader} from './panel'\nimport {Scrollable, ScrollableContainer} from './scrollable'\nconst DATE_FORMAT = 'YYYY-MM-DD'\n+export const momentDate = date => _.isString(date) ? moment(date, DATE_FORMAT) : moment(date)\n+\n+const pickDate = (date1, date2, func) => {\n+ date1 = momentDate(date1)\n+ date2 = momentDate(date2)\n+ if (!date1.isValid())\n+ return date2\n+ else if (!date2.isValid())\n+ return date1\n+ else\n+ return func(date1, date2)\n+}\n+\n+export const maxDate = (date1, date2) => pickDate(date1, date2, moment.max)\n+export const minDate = (date1, date2) => pickDate(date1, date2, moment.min)\n+export const constrainDate = (date, min, max) => maxDate(minDate(date, max), min)\n+\nexport default class DatePicker extends React.Component {\nid = 'DatePicker-' + guid()\n+ inputElement = React.createRef()\nrender() {\nconst {input, startDate, endDate, label, autoFocus} = this.props\n+ const date = moment(input.value, DATE_FORMAT)\nreturn (\n<Activator id={this.id}>\n{panel =>\n@@ -26,18 +45,30 @@ export default class DatePicker extends React.Component {\n<DatePickerPanel\nid={this.id}\ntitle={label}\n- date={moment(input.value, DATE_FORMAT)}\n- startDate={_.isString(startDate) ? moment(startDate, DATE_FORMAT) : moment(startDate)}\n- endDate={_.isString(endDate) ? moment(endDate, DATE_FORMAT) : moment(endDate)}\n- onSelect={date => input.set(date.format(DATE_FORMAT))}/>\n+ date={date.isValid() ? date : moment(startDate, DATE_FORMAT)}\n+ startDate={momentDate(startDate)}\n+ endDate={momentDate(endDate)}\n+ onSelect={date => {\n+ const dateString = date.format(DATE_FORMAT)\n+ this.inputElement.current.value = dateString\n+ input.set(dateString)\n+ }}/>\n{this.renderLabel()}\n<div className={styles.input}>\n- <Input\n- autoFocus={autoFocus}\n- input={input}\n+ <input\n+ ref={this.inputElement}\n+ defaultValue={input.value}\nmaxLength={10}\n+ autoFocus={autoFocus && !isMobile()}\nautoComplete='off'\n+ autoCorrect='off'\n+ autoCapitalize='off'\n+ spellCheck='false'\nclassName={styles.input}\n+ onChange={e => this.setInput(e.target.value)}\n+ onBlur={() => {\n+ this.inputElement.current.value = input.value\n+ }}\n/>\n<Button additionalClassName={styles.panelTrigger}\nchromeless\n@@ -63,21 +94,13 @@ export default class DatePicker extends React.Component {\n) : null\n}\n- componentDidMount() {\n- this.setToValidRange()\n- }\n-\n- componentDidUpdate(prevProps, prevState, snapshot) {\n- if (prevProps.input.value !== this.props.input.value)\n- this.setToValidRange()\n- }\n-\n- setToValidRange() {\n+ setInput(value) {\nconst {input, startDate, endDate} = this.props\n- const date = moment(input.value, DATE_FORMAT)\n- const validDate = moment.max(moment.min(moment(date), moment(endDate)), moment(startDate))\n- if (!date.isSame(validDate))\n- input.set(validDate.format(DATE_FORMAT))\n+ const date = momentDate(value)\n+ const formattedDate = date.isValid()\n+ ? constrainDate(date, startDate, endDate).format(DATE_FORMAT)\n+ : momentDate(startDate).format(DATE_FORMAT)\n+ input.set(formattedDate)\n}\n}\n@@ -223,7 +246,7 @@ class _DatePickerPanel extends React.Component {\ntoValidRange(date) {\nconst {startDate, endDate} = this.props\n- return moment.max(moment.min(moment(date), moment(endDate)), moment(startDate))\n+ return constrainDate(date, startDate, endDate)\n}\nselect() {\n",
        "date": "26.04.2019 15:29:34",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor date handling in DatePicker component"
    },
    {
        "msg": "improve docs.",
        "diff": "diff --git a/modules/google-earth-engine/docker/sepal-ee/sepal/ee/radar/radar_mosaic.py b/modules/google-earth-engine/docker/sepal-ee/sepal/ee/radar/radar_mosaic.py @@ -25,7 +25,7 @@ def viz_params(bands):\nArgs:\nbands: The bands to get visualization params for. Must be one of the following:\n- VV, VH, VV_VH, dayOfYear, daysFromTarget.\n+ VV, VH, VV_VH (VV/VH ratio), dayOfYear, daysFromTarget.\nReturns:\nDictionary with visualization params.\n",
        "date": "29.04.2019 12:45:29",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Update visualization parameters for radar mosaic script"
    },
    {
        "msg": "improve ComboBox keybindings. Show options on Left, Right, Home, and End Hide options on Escape Made sure list listens to keyboard",
        "diff": "diff --git a/modules/gui/frontend/src/widget/combo.js b/modules/gui/frontend/src/widget/combo.js @@ -70,10 +70,16 @@ class Combo extends React.Component {\nrenderInput() {\nconst {placeholder, autoFocus, disabled, busy, standalone, inputClassName, input} = this.props\n- const {focused, filter, selectedOption} = this.state\n+ const {focused, filter, selectedOption, showOptions} = this.state\n+ const showOptionsKeyBinding = showOptions ? undefined : () => this.showOptions()\nconst keymap = {\n- ArrowUp: disabled ? null : () => this.showOptions(),\n- ArrowDown: disabled ? null : () => this.showOptions(),\n+ ArrowUp: showOptionsKeyBinding,\n+ ArrowDown: showOptionsKeyBinding,\n+ ArrowLeft: showOptionsKeyBinding,\n+ ArrowRight: showOptionsKeyBinding,\n+ Home: showOptionsKeyBinding,\n+ End: showOptionsKeyBinding,\n+ Escape: !showOptions ? undefined : () => this.hideOptions(),\n}\nreturn (\n<Keybinding\n@@ -119,6 +125,7 @@ class Combo extends React.Component {\nautoCenter={!selected}\ntooltipPlacement={optionTooltipPlacement}\nautoHighlight\n+ keyboard\nalignment={alignment}\n/>\n</FloatingBox>\n",
        "date": "06.06.2019 08:39:12",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Add keyboard navigation support for Combo component"
    },
    {
        "msg": "improve ElementResizeDetector by not debouncing the first available size values.",
        "diff": "diff --git a/modules/gui/frontend/src/widget/elementResizeDetector.js b/modules/gui/frontend/src/widget/elementResizeDetector.js -import {Subject} from 'rxjs'\n+import {Subject, concat} from 'rxjs'\nimport {compose} from 'compose'\n-import {debounceTime, distinctUntilChanged} from 'rxjs/operators'\n+import {debounceTime, distinctUntilChanged, first} from 'rxjs/operators'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport ReactResizeDetector from 'react-resize-detector'\n@@ -9,7 +9,7 @@ import withSubscriptions from 'subscription'\nconst UPDATE_DEBOUNCE_MS = 250\nexport class _ElementResizeDetector extends React.Component {\n- resize$ = new Subject()\n+ size$ = new Subject()\nrender() {\nconst {children} = this.props\n@@ -17,7 +17,7 @@ export class _ElementResizeDetector extends React.Component {\n<ReactResizeDetector\nhandleHeight\nhandleWidth\n- onResize={(width, height) => this.resize$.next({width, height})}>\n+ onResize={(width, height) => this.size$.next({width, height})}>\n{children || null}\n</ReactResizeDetector>\n)\n@@ -25,11 +25,20 @@ export class _ElementResizeDetector extends React.Component {\ncomponentDidMount() {\nconst {debounce, onResize, addSubscription} = this.props\n- addSubscription(\n- this.resize$.pipe(\n- debounceTime(debounce),\n+ const firstImmediate$ = this.size$.pipe(\n+ first()\n+ )\n+ const subsequentDebounced$ = this.size$.pipe(\n+ debounceTime(debounce)\n+ )\n+ const resize$ = concat(\n+ firstImmediate$,\n+ subsequentDebounced$\n+ ).pipe(\ndistinctUntilChanged()\n- ).subscribe(\n+ )\n+ addSubscription(\n+ resize$.subscribe(\n({width, height}) => onResize({width, height})\n)\n)\n",
        "date": "02.09.2019 16:22:14",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor elementResizeDetector to use size$ instead of resize$ and add first operator for immediate resize detection."
    },
    {
        "msg": "improve Button click'n'hold colors.",
        "diff": "diff --git a/modules/gui/frontend/src/widget/button.module.css b/modules/gui/frontend/src/widget/button.module.css @keyframes fill {\n0% {\ntop: 80%;\n- background: hsla(0, 0%, 100%, .2);\n+ background-color: hsla(0, 0%, 100%, .1);\n}\n- 90% {\n+ 99% {\ntop: 0;\n- background-color: hsla(0, 0%, 100%, .2);\n+ background-color: hsla(0, 0%, 100%, .1);\n}\n100% {\ntop: 0;\n",
        "date": "06.09.2019 11:41:18",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor button fill animation background color to improve visibility."
    },
    {
        "msg": "improve channel logging",
        "diff": "diff --git a/modules/gee/docker/src/comm/channel.js b/modules/gee/docker/src/comm/channel.js @@ -25,7 +25,7 @@ const channel = ({transport, channelId = uuid(), direction, in$ = new Subject(),\nconst inMsg = message => msg(message, 'in')\nconst next = value => {\n- log.debug(inMsg('value:'), value)\n+ log.warn(inMsg('value:'), value)\npostMessage({value})\n}\n@@ -46,11 +46,11 @@ const channel = ({transport, channelId = uuid(), direction, in$ = new Subject(),\nconst stop = () => {\nstop$.next()\nport.off('message', handleMessage)\n- log.trace(`removed listener ${direction}.in`)\n+ log.trace(inMsg(`removed <${direction}> listener`))\n}\nport.on('message', handleMessage)\n- log.trace(`added listener ${direction}.in`)\n+ log.trace(inMsg(`added <${direction}> listener`))\nin$.pipe(\ntakeUntil(stop$)\n@@ -89,11 +89,11 @@ const channel = ({transport, channelId = uuid(), direction, in$ = new Subject(),\nconst stop = () => {\nport.off('message', handleMessage)\n- log.trace(`removed listener ${direction}.out`)\n+ log.trace(outMsg(`removed <${direction}> listener`))\n}\nport.on('message', handleMessage)\n- log.trace(`added listener ${direction}.out`)\n+ log.trace(outMsg(`added <${direction}> listener`))\nreturn out$.pipe(\nfinalize(() => {\n",
        "date": "10.12.2019 11:24:17",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Update log messages in channel.js to include direction in listener messages"
    },
    {
        "msg": "improve EE table input behavior.",
        "diff": "diff --git a/modules/gui/frontend/src/app/home/body/process/mosaic/panels/aoi/eeTableSection.js b/modules/gui/frontend/src/app/home/body/process/mosaic/panels/aoi/eeTableSection.js @@ -3,7 +3,7 @@ import {Layout} from 'widget/layout'\nimport {RecipeActions} from '../../mosaicRecipe'\nimport {Subject} from 'rxjs'\nimport {compose} from 'compose'\n-import {debounceTime, map, takeUntil} from 'rxjs/operators'\n+import {debounceTime, distinctUntilChanged, filter, map, takeUntil, tap} from 'rxjs/operators'\nimport {msg} from 'translate'\nimport {selectFrom} from 'stateUtils'\nimport {sepalMap} from 'app/home/map/map'\n@@ -32,13 +32,26 @@ class EETableSection extends React.Component {\naddSubscription(\nthis.loadColumns$.pipe(\n- debounceTime(1000)\n+ debounceTime(750),\n+ distinctUntilChanged(),\n+ tap(() => this.reset()),\n+ filter(tableId => tableId)\n).subscribe(\ntableId => this.loadColumns(tableId)\n)\n)\n}\n+ reset() {\n+ const {inputs: {eeTableColumn, eeTableRow}} = this.props\n+ eeTableColumn.set('')\n+ eeTableRow.set('')\n+ this.recipe.setEETableColumns(null).dispatch()\n+ this.recipe.setEETableRows(null).dispatch()\n+ this.eeTableChanged$.next()\n+ this.eeTableColumnChanged$.next()\n+ }\n+\nrender() {\nconst {allowWholeEETable, inputs: {eeTable}} = this.props\nreturn (\n@@ -49,7 +62,7 @@ class EETableSection extends React.Component {\ninput={eeTable}\nplaceholder={msg('process.mosaic.panel.areaOfInterest.form.eeTable.eeTable.placeholder')}\nspellCheck={false}\n- onChange={e => this.onEETableChange(e)}\n+ onChange={e => this.loadColumns$.next(e.target.value)}\nerrorMessage\nbusyMessage={this.props.stream('LOAD_EE_TABLE_COLUMNS').active && msg('widget.loading')}\n/>\n@@ -139,7 +152,7 @@ class EETableSection extends React.Component {\ncolumns => this.recipe.setEETableColumns(columns).dispatch(),\nerror => {\nreturn this.props.inputs.eeTable.setInvalid(\n- msg(error.response.code, error.response.data)\n+ error.response && msg(error.response.code, error.response.data)\n)\n}\n)\n@@ -164,17 +177,6 @@ class EETableSection extends React.Component {\nreturn columns && columns.length > 0\n}\n- onEETableChange(e) {\n- const {inputs: {eeTableColumn, eeTableRow}} = this.props\n- eeTableColumn.set('')\n- eeTableRow.set('')\n- this.recipe.setEETableColumns(null).dispatch()\n- this.recipe.setEETableRows(null).dispatch()\n- this.eeTableChanged$.next()\n- this.eeTableColumnChanged$.next()\n- this.loadColumns$.next(e.target.value)\n- }\n-\ncomponentDidMount() {\nconst {inputs: {eeTable, eeTableColumn}} = this.props\nif (eeTable.value)\n",
        "date": "28.01.2020 17:09:39",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor EETableSection component to include a reset method and optimize column loading functionality."
    },
    {
        "msg": "improve error handling on AWS instance provider.",
        "diff": "diff --git a/modules/sepal-server/src/main/groovy/org/openforis/sepal/component/hostingservice/aws/AwsInstanceProvider.groovy b/modules/sepal-server/src/main/groovy/org/openforis/sepal/component/hostingservice/aws/AwsInstanceProvider.groovy @@ -74,7 +74,7 @@ final class AwsInstanceProvider implements InstanceProvider {\nvoid terminate(String instanceId) {\nLOG.info(\"Terminating instance \" + instanceId)\n- retry(3) {\n+ retry(10) {\ndef request = new TerminateInstancesRequest()\n.withInstanceIds(instanceId)\nclient.terminateInstances(request)\n@@ -253,7 +253,7 @@ final class AwsInstanceProvider implements InstanceProvider {\nprivate void tagInstance(String instanceId, Collection<Tag>... tagCollections) {\ntry {\n- retry(3) {\n+ retry(10) {\ndef tags = tagCollections.toList().flatten() as Tag[]\nLOG.info(\"Tagging instance $instanceId with $tags\")\ndef request = new CreateTagsRequest()\n@@ -261,18 +261,18 @@ final class AwsInstanceProvider implements InstanceProvider {\n.withTags(tags)\nclient.createTags(request)\n}\n- } catch (AmazonEC2Exception e) {\n+ } catch (Exception e) {\nterminate()\nthrow new FailedToTagInstance(\"Failed to tag instance $instanceId with $tags\", e)\n}\n}\nprivate void retry(int tries, Closure<Void> operation) {\n- for (def retries = 0; retries - 1 < tries; retries++) {\n+ for (int retries = 0; retries - 1 < tries; retries++) {\ntry {\noperation()\nreturn\n- } catch (AmazonEC2Exception e) {\n+ } catch (Exception e) {\nif (retries - 1 < tries) {\nbackoff(retries)\nLOG.warn(\"Retry #${retries + 1} after exception: ${e}\")\n@@ -283,7 +283,7 @@ final class AwsInstanceProvider implements InstanceProvider {\n}\nprivate int backoff(int retries) {\n- def millis = (long) Math.pow(2, retries) * 1000\n+ def millis = (long) Math.pow(2, retries ?: 0) * 1000\nThread.sleep(millis)\n}\n",
        "date": "26.02.2020 11:21:57",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Increase retry attempts from 3 to 10 and handle all exceptions in AwsInstanceProvider"
    },
    {
        "msg": "improve sepal script output.",
        "diff": "diff --git a/dev-env/sepal.sh b/dev-env/sepal.sh @@ -33,34 +33,37 @@ message () {\nlocal COLOR_NAME=$3\nlocal NO_COLOR='\\033[0m'\ncase \"$COLOR_NAME\" in\n- DARK_RED)\n+ RED)\nCOLOR='\\033[0;31m'\n;;\nLIGHT_RED)\nCOLOR='\\033[1;31m'\n;;\n- DARK_GREEN)\n+ GREEN)\nCOLOR='\\033[0;32m'\n;;\nLIGHT_GREEN)\nCOLOR='\\033[1;32m'\n;;\n- GREY)\n- COLOR='\\033[0;37m'\n+ YELLOW)\n+ COLOR='\\033[0;33m'\n+ ;;\n+ BLUE)\n+ COLOR='\\033[0;34m'\n;;\n*)\nCOLOR=$NO_COLOR # No Color\n;;\nesac\n- echo -e \"[${COLOR}${MESSAGE}${NO_COLOR}] ${MODULE}\"\n+ printf \"${COLOR}%10s${NO_COLOR} ${MODULE}\\n\" \"${MESSAGE}\"\n}\nmodule_status () {\nlocal MODULE=$1\nif is_running $MODULE; then\n- message \"RUNNING\" $MODULE DARK_GREEN\n+ message \"RUNNING\" $MODULE GREEN\nelse\n- message \"NOT RUNNING\" $MODULE DARK_RED\n+ message \"STOPPED\" $MODULE RED\nfi\n}\n@@ -73,7 +76,7 @@ module_start () {\nstart-stop-daemon --start --oknodo --name $MODULE \\\n--exec /bin/bash -- $0 run $MODULE >$LOG 2>&1 &\nelse\n- message \"RUNNING\" $MODULE GREY\n+ message \"RUNNING\" $MODULE BLUE\nfi\n}\n@@ -81,7 +84,7 @@ module_stop () {\nlocal MODULE=$1\nlocal PID=$(pidof ${MODULE})\nif [[ -z \"$PID\" ]]; then\n- message \"NOT RUNNING\" $MODULE GREY\n+ message \"STOPPED\" $MODULE BLUE\nelse\nmessage \"STOPPING\" $MODULE LIGHT_RED\nstart-stop-daemon --stop --oknodo --retry 5 --ppid $PID\n@@ -96,7 +99,7 @@ do_with_modules () {\nif is_module $MODULE; then\n$COMMAND $MODULE\nelse\n- message \"IGNORED\" $MODULE GREY\n+ message \"IGNORED\" $MODULE YELLOW\nfi\ndone\n}\n",
        "date": "20.04.2020 16:05:46",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor color codes and messages in sepal.sh"
    },
    {
        "msg": "improve messages in sepal script.",
        "diff": "diff --git a/dev-env/sepal.sh b/dev-env/sepal.sh @@ -48,9 +48,6 @@ message () {\nYELLOW)\nCOLOR='\\033[0;33m'\n;;\n- BLUE)\n- COLOR='\\033[0;34m'\n- ;;\n*)\nCOLOR=$NO_COLOR # No Color\n;;\n@@ -61,7 +58,7 @@ message () {\nmodule_status () {\nlocal MODULE=$1\nif is_running $MODULE; then\n- message \"RUNNING\" $MODULE GREEN\n+ message \"STARTED\" $MODULE GREEN\nelse\nmessage \"STOPPED\" $MODULE RED\nfi\n@@ -75,7 +72,7 @@ module_start () {\nmessage \"STARTING\" $MODULE LIGHT_GREEN\nsetsid nohup /bin/bash $0 run $MODULE >$LOG 2>&1 &\nelse\n- message \"RUNNING\" $MODULE BLUE\n+ message \"STARTED\" $MODULE GREEN\nfi\n}\n@@ -92,7 +89,7 @@ module_stop () {\nlocal MODULE=$1\nlocal PID=$(pidof $MODULE)\nif [[ -z \"$PID\" ]]; then\n- message \"STOPPED\" $MODULE BLUE\n+ message \"STOPPED\" $MODULE RED\nelse\nmessage \"STOPPING\" $MODULE LIGHT_RED\npkill -TERM -g $PID\n@@ -104,7 +101,7 @@ module_kill () {\nlocal MODULE=$1\nlocal PID=$(pidof $MODULE)\nif [[ -z \"$PID\" ]]; then\n- message \"STOPPED\" $MODULE BLUE\n+ message \"STOPPED\" $MODULE RED\nelse\nmessage \"KILLING\" $MODULE LIGHT_RED\npkill -KILL -g $PID\n",
        "date": "24.04.2020 09:50:49",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor module status messages and update start/stop messages in sepal.sh"
    },
    {
        "msg": "improve task cleanup messages.",
        "diff": "diff --git a/modules/task/docker/src/ee/task.js b/modules/task/docker/src/ee/task.js const ee = require('ee')\nconst {EMPTY, interval, of, throwError} = require('rxjs')\n-const {distinctUntilChanged, exhaustMap, filter, finalize, map, switchMap, take, takeWhile} = require('rxjs/operators')\n+const {distinctUntilChanged, exhaustMap, first, finalize, map, switchMap, mapTo, takeWhile} = require('rxjs/operators')\nconst log = require('sepal/log').getLogger('task')\nconst progress = require('root/progress')\n@@ -10,7 +10,7 @@ const {UNSUBMITTED, READY, RUNNING, FAILED} = ee.data.ExportState\nconst executeTask$ = task =>\nstart$(task).pipe(\nswitchMap(() => monitor$(task)),\n- finalize(() => task.id && cancel(task))\n+ finalize(() => task.id && cleanup(task))\n)\nconst start$ = task =>\n@@ -47,14 +47,21 @@ const status$ = task =>\nmap(([status]) => status)\n)\n-const cancel = task =>\n+const cleanup = task => {\nstatus$(task).pipe(\n- filter(({state}) => isRunning(state)),\n- switchMap(() => cancel$(task))\n+ map(({state}) => isRunning(state)),\n+ switchMap(running => running\n+ ? cancel$(task).pipe(\n+ mapTo(true)\n+ )\n+ : of(false)\n+ ),\n+ first()\n).subscribe({\n- error: error => log.error('Failed to cancel task', error),\n- complete: () => log.debug('Cancelled task', task.id),\n+ next: wasRunning => log.debug(`Task ${task.id}: ${wasRunning ? 'cancelled' : 'complete'}`),\n+ error: error => log.error('Failed to cancel task', error)\n})\n+}\nconst cancel$ = task =>\nee.$('cancel task', (resolve, reject) => {\n",
        "date": "06.05.2020 12:36:35",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor task.js to replace cancel function with cleanup function and improve logging messages."
    },
    {
        "msg": "improve gee EE authentication.",
        "diff": "diff --git a/modules/gee/docker/src/jobs/ee/authenticate.js b/modules/gee/docker/src/jobs/ee/authenticate.js @@ -29,25 +29,30 @@ const worker$ = ({sepalUser, serviceAccountCredentials}) => {\nreturn millisecondsLeft / 1000\n}\n- const authenticateServiceAccount$ = credentials =>\n+ const authenticateServiceAccount$ = serviceAccountCredentials =>\nee.$({\noperation: 'autenticate service account',\n- ee: (resolve, reject) => ee.data.authenticateViaPrivateKey(credentials, resolve, reject)\n+ ee: (resolve, reject) => {\n+ ee.sepal.setAuthType('SERVICE_ACCOUNT')\n+ ee.data.authenticateViaPrivateKey(serviceAccountCredentials, resolve, reject)\n+ }\n})\nconst authenticateUserAccount$ = googleTokens =>\nee.$({\noperation: 'authenticate user account',\n- ee: resolve =>\n+ ee: (resolve, reject) => {\n+ ee.sepal.setAuthType('USER')\nee.data.setAuthToken(\nnull,\n'Bearer',\ngoogleTokens.accessToken,\nsecondsToExpiration(googleTokens.accessTokenExpiryDate),\nnull,\n- resolve,\n+ error => error ? reject(error) : resolve(),\nfalse\n)\n+ }\n})\nconst authenticate$ = ({sepalUser: {googleTokens}, serviceAccountCredentials}) =>\n",
        "date": "29.05.2020 18:56:19",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor authentication process to support both service account and user account credentials."
    },
    {
        "msg": "improve sepal script log/startlog/restartlog.",
        "diff": "diff --git a/dev-env/sepal.sh b/dev-env/sepal.sh @@ -108,6 +108,10 @@ module_kill () {\nfi\n}\n+module_log () {\n+ local MODULE=$1\n+ less -r +F $(logfile $MODULE)\n+}\nmodule_clean () {\nlocal MODULE=$1\n@@ -157,14 +161,15 @@ module_clean () {\nesac\n}\n-\ndo_with_modules () {\n- local COMMAND=$1\n+ local COMMANDS=$1\nshift\nlocal MODULES=${@:-${SEPAL_MODULES[@]}}\nfor MODULE in $MODULES; do\nif is_module $MODULE; then\n+ for COMMAND in $COMMANDS; do\n$COMMAND $MODULE\n+ done\nelse\nmessage \"IGNORED\" $MODULE YELLOW\nfi\n@@ -209,20 +214,17 @@ build-debug () {\nlog() {\nlocal MODULE=$1\n- less -r $(logfile $MODULE)\n+ do_with_modules \"module_log\" $MODULE\n}\nstartlog () {\nlocal MODULE=$1\n- module_start $1\n- less -r +F $(logfile $MODULE)\n+ do_with_modules \"module_start module_log\" $MODULE\n}\nrestartlog () {\nlocal MODULE=$1\n- module_stop $1\n- module_start $1\n- less -r +F $(logfile $MODULE)\n+ do_with_modules \"module_stop module_start module_log\" $MODULE\n}\nrun () {\n@@ -290,7 +292,7 @@ run () {\n--stacktrace \\\n:sepal-server:runDev \\\n-DconfigDir=\"$SEPAL_CONFIG/sepal-server\"\n-# -DskipSceneMetaDataUpdate\n+ -DskipSceneMetaDataUpdate\n;;\ntask)\ncd $SEPAL/lib/js/shared\n@@ -330,7 +332,7 @@ usage () {\necho \" stop [<module>...] stop module(s)\"\necho \" restart [<module>...] restart module(s)\"\necho \" run <module> run module interactively\"\n- echo \" log <module> show module log\"\n+ echo \" log <module> show module log tail\"\necho \" startlog <module> start a module and show log tail\"\necho \" restartlog <module> restart a module and show log tail\"\n",
        "date": "12.06.2020 13:00:19",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Add functionality to show module log tail in sepal.sh"
    },
    {
        "msg": "improve sepal script with module groups.",
        "diff": "diff --git a/dev-env/sepal.sh b/dev-env/sepal.sh @@ -3,17 +3,39 @@ set -e\nSEPAL_CONFIG=/etc/sepal/module.d\nSEPAL=/usr/local/lib/sepal\n-SEPAL_MODULES=(user sepal-server api-gateway task gee gui ceo mongo)\n+SEPAL_MODULES=(user sepal-server sepal-server-noindex api-gateway task gee gui ceo mongo)\n+SEPAL_GROUPS=(all dev)\n+SEPAL_DEFAULT_GROUP=dev\nLOG_DIR=/var/log/sepal\nis_module () {\n- local MODULE=$1\n- printf '%s\\n' ${SEPAL_MODULES[@]} | grep -qP \"^$MODULE$\"\n+ local NAME=$1\n+ printf '%s\\n' ${SEPAL_MODULES[@]} | grep -qP \"^$NAME$\"\n+}\n+\n+is_group () {\n+ local NAME=$1\n+ printf '%s\\n' ${SEPAL_GROUPS[@]} | grep -qP \"^$NAME$\"\n+}\n+\n+group () {\n+ local GROUP=$1\n+ case $GROUP in\n+ all)\n+ echo \"${SEPAL_MODULES[@]}\"\n+ ;;\n+ dev)\n+ echo \"user sepal-server-noindex api-gateway task gee gui\"\n+ ;;\n+ *)\n+ return 1\n+ ;;\n+ esac\n}\npidof () {\nlocal MODULE=$1\n- ps -ef | grep bash | grep \"sepal run $MODULE\" | awk '{ print $2 }'\n+ ps -ef | grep bash | egrep \"sepal run ${MODULE}$\" | awk '{ print $2 }'\n}\nis_running () {\n@@ -164,42 +186,48 @@ module_clean () {\ndo_with_modules () {\nlocal COMMANDS=$1\nshift\n- local MODULES=${@:-${SEPAL_MODULES[@]}}\n- for MODULE in $MODULES; do\n- if is_module $MODULE; then\n+ local NAMES=$@\n+ # local NAMES=${@:-dev}\n+ for NAME in $NAMES; do\n+ if is_group $NAME; then\n+ local GROUP=$NAME\n+ local MODULES=\"$(group $GROUP)\"\n+ do_with_modules \"$COMMANDS\" $MODULES\n+ elif is_module $NAME; then\n+ local MODULE=$NAME\nfor COMMAND in $COMMANDS; do\n$COMMAND $MODULE\ndone\nelse\n- message \"IGNORED\" $MODULE YELLOW\n+ message \"IGNORED\" $NAME YELLOW\nfi\ndone\n}\nstatus () {\n- do_with_modules \"module_status\" $@\n+ do_with_modules \"module_status\" ${@:-all}\n}\nstart () {\n- do_with_modules \"module_start\" $@\n+ do_with_modules \"module_start\" ${@:-$SEPAL_DEFAULT_GROUP}\n}\nstop () {\n- do_with_modules \"module_stop\" $@\n+ do_with_modules \"module_stop\" ${@:-all}\n}\nforce_stop () {\n- do_with_modules \"module_kill\" $@\n+ do_with_modules \"module_kill\" ${@:-all}\n}\nrestart () {\n- do_with_modules \"module_stop\" $@\n- do_with_modules \"module_start\" $@\n+ do_with_modules \"module_stop\" ${@:-all}\n+ do_with_modules \"module_start\" ${@:-SEPAL_DEFAULT_GROUP}\n}\nclean () {\n- do_with_modules \"module_stop\" $@\n- do_with_modules \"module_clean\" $@\n+ do_with_modules \"module_stop\" ${@:-all}\n+ do_with_modules \"module_clean\" ${@:-all}\n}\nbuild () {\n@@ -286,6 +314,14 @@ run () {\nnpm start\n;;\nsepal-server)\n+ $SEPAL/gradlew \\\n+ -p $SEPAL \\\n+ --no-daemon \\\n+ --stacktrace \\\n+ :sepal-server:runDev \\\n+ -DconfigDir=\"$SEPAL_CONFIG/sepal-server\"\n+ ;;\n+ sepal-server-noindex)\n$SEPAL/gradlew \\\n-p $SEPAL \\\n--no-daemon \\\n@@ -324,13 +360,13 @@ usage () {\necho \"Usage: $0 <command> [<arguments>]\"\necho \"\"\necho \"Commands:\"\n- echo \" clean [<module>...] clean module(s)\"\necho \" build build SEPAL\"\necho \" build-debug build SEPAL w/debug enabled\"\n- echo \" status [<module>...] check module(s)\"\n- echo \" start [<module>...] start module(s)\"\n- echo \" stop [<module>...] stop module(s)\"\n- echo \" restart [<module>...] restart module(s)\"\n+ echo \" clean [<module>...] clean module(s)/group(s)\"\n+ echo \" status [<module>...] check module(s)/group(s)\"\n+ echo \" start [<module>...] start module(s)/group(s)\"\n+ echo \" stop [<module>...] stop module(s)/group(s)\"\n+ echo \" restart [<module>...] restart module(s)/group(s)\"\necho \" run <module> run module interactively\"\necho \" log <module> show module log tail\"\necho \" startlog <module> start a module and show log tail\"\n@@ -338,6 +374,7 @@ usage () {\necho \"\"\necho \"Modules: ${SEPAL_MODULES[@]}\"\n+ echo \"Groups: ${SEPAL_GROUPS[@]}\"\necho \"\"\nexit 1\n}\n",
        "date": "12.06.2020 15:57:12",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Add new sepal-server-noindex module and sepal_groups functionality"
    },
    {
        "msg": "improve transport logging.",
        "diff": "diff --git a/lib/js/shared/src/worker/transport.js b/lib/js/shared/src/worker/transport.js @@ -53,7 +53,10 @@ const transport = ({id = uuid(), port}) => {\nmessageChannelId === channelId && messageConversationId === conversationId && handler(message)\nconst channelPort = {\n- sendMessage: (end, message) => port.postMessage({channelId, conversationId, end, message}),\n+ sendMessage: (end, message) => {\n+ log.debug(`Sending message to channel ${channelId}, conversation ${conversationId}:`, message)\n+ port.postMessage({channelId, conversationId, end, message})\n+ },\naddMessageHandler: (end, messageHandler) => {\nconst key = uuid()\nconst listener = handleReceivedMessage(messageHandler)\n",
        "date": "29.06.2020 10:47:51",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Add debug logging when sending messages in transport.sendMessage"
    },
    {
        "msg": "improve channel logging in trace level.",
        "diff": "diff --git a/lib/js/shared/src/worker/channel.js b/lib/js/shared/src/worker/channel.js @@ -15,8 +15,10 @@ const channel = ({channelPort, channelId, conversationId, direction, in$ = new R\nconst inMsg = message => msg(message, 'in')\nconst next = value => {\n- log.debug(inMsg('value: <omitted>'))\n- log.trace(inMsg('value:'), value)\n+ log.isTrace()\n+ ? log.trace(() => inMsg('value:'), value)\n+ : log.debug(() => inMsg('value: <omitted>'))\n+\nchannelPort.sendMessage('out', {next: true, value})\n}\n@@ -51,8 +53,9 @@ const channel = ({channelPort, channelId, conversationId, direction, in$ = new R\nconst outMsg = message => msg(message, 'out')\nconst value = value => {\n- log.debug(outMsg('value: <omitted>'))\n- log.trace(outMsg('value:'), value)\n+ log.isTrace()\n+ ? log.trace(() => outMsg('value:'), value)\n+ : log.debug(() => outMsg('value: <omitted>'))\nout$.next(value)\n}\n",
        "date": "02.07.2020 15:16:54",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor logging in channel.js for improved traceability"
    },
    {
        "msg": "improve SafetyButton.",
        "diff": "diff --git a/modules/gui/frontend/src/widget/safetyButton.js b/modules/gui/frontend/src/widget/safetyButton.js @@ -14,12 +14,12 @@ export default class SafetyButton extends React.Component {\n}\nrenderConfirm() {\n- const {title, message, label, onConfirm, children} = this.props\n+ const {title, message, confirmLabel, onConfirm, children} = this.props\nreturn (\n<Confirm\ntitle={title}\nmessage={message}\n- label={label || msg('widget.safetyButton.label')}\n+ label={confirmLabel || msg('widget.safetyButton.label')}\nonConfirm={() => {\nthis.askConfirmation(false)\nonConfirm()\n@@ -31,17 +31,14 @@ export default class SafetyButton extends React.Component {\n}\nrender() {\n- const {chromeless, shape, icon, skip, onConfirm, ...otherProps} = this.props\n+ const {skipConfirmation, onConfirm, onClick, onClickHold, ...otherProps} = this.props\nconst {askConfirmation} = this.state\nreturn (\n<React.Fragment>\n<Button\n- chromeless={chromeless}\n- shape={shape}\n- icon={icon}\n- {...otherProps}\n- onClick={() => skip ? onConfirm() : this.askConfirmation(true)}\n+ onClick={() => skipConfirmation ? onConfirm() : this.askConfirmation(true)}\nonClickHold={() => onConfirm()}\n+ {...otherProps}\n/>\n{askConfirmation ? this.renderConfirm() : null}\n</React.Fragment>\n@@ -52,10 +49,7 @@ export default class SafetyButton extends React.Component {\nSafetyButton.propTypes = {\nmessage: PropTypes.string.isRequired,\nonConfirm: PropTypes.func.isRequired,\n-}\n-\n-SafetyButton.defaultProps = {\n- chromeless: true,\n- shape: 'circle',\n- icon: 'trash'\n+ confirmLabel: PropTypes.string,\n+ title: PropTypes.string,\n+ skipConfirmation: PropTypes.bool\n}\n",
        "date": "10.07.2020 13:28:11",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor SafetyButton component props and render method"
    },
    {
        "msg": "improve translation.",
        "diff": "diff --git a/modules/gui/frontend/src/locale/en/translations.json b/modules/gui/frontend/src/locale/en/translations.json \"tooltip\": \"Remove selected items\"\n},\n\"showDotFiles\": {\n- \"tooltip\": \"Show files beginning with .\"\n+ \"tooltip\": \"Show files beginning with . (dotfiles)\"\n}\n},\n\"info\": {\n",
        "date": "21.07.2020 13:53:34",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Update tooltip for showing dotfiles in file explorer"
    },
    {
        "msg": "improve pool messages.",
        "diff": "diff --git a/lib/js/shared/src/worker/pool.js b/lib/js/shared/src/worker/pool.js @@ -66,7 +66,7 @@ const Pool = ({name, maxIdleMilliseconds = 1000, minIdleCount = 0, create$, onCo\nconst hot$ = instance =>\nof(instance).pipe(\n- tap(instance => log.debug(msg(instance, 'recycled'))),\n+ tap(instance => log.debug(msg(instance, 'recycled existing'))),\ntap(instance => onHot && onHot({name, instanceId: instance.id}))\n)\n@@ -75,7 +75,7 @@ const Pool = ({name, maxIdleMilliseconds = 1000, minIdleCount = 0, create$, onCo\nreturn create$({name, instanceId: id}).pipe(\nmap(item => ({id, item})),\ntap(instance => add(instance)),\n- tap(instance => log.debug(msg(instance, 'created'))),\n+ tap(instance => log.debug(msg(instance, 'created new'))),\ntap(instance => onCold && onCold({name, instanceId: instance.id}))\n)\n}\n",
        "date": "01.09.2020 15:29:48",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor log messages in Pool.js for clarity"
    },
    {
        "msg": "improve map scale box.",
        "diff": "diff --git a/modules/gui/frontend/src/app/home/map/mapScale.module.css b/modules/gui/frontend/src/app/home/map/mapScale.module.css position: absolute;\ntop: .5rem;\nright: .5rem;\n+ width: calc(2 * var(--toolbar-button-size) + var(--toolbar-button-spacing));\nfont-size: .8rem;\nline-height: .8rem;\nbackground-color: hsla(0, 0%, 0%, .35);\nborder: 1px solid var(--wireframe-color);\nborder-radius: .25rem;\ndisplay: flex;\n- flex-direction: column;\n+ flex-wrap: wrap;\nalign-items: center;\n+ justify-content: center;\n}\n",
        "date": "28.04.2021 18:07:43",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Update mapScale module CSS to adjust layout and styling."
    },
    {
        "msg": "improve SuperButton drag behavior.",
        "diff": "diff --git a/modules/gui/frontend/src/widget/superButton.js b/modules/gui/frontend/src/widget/superButton.js import {Button} from 'widget/button'\nimport {ButtonGroup} from 'widget/buttonGroup'\nimport {Item} from 'widget/item'\n-import {Subject, animationFrameScheduler, fromEvent, interval, timer} from 'rxjs'\n+import {Subject, animationFrameScheduler, fromEvent, interval, merge, of, timer} from 'rxjs'\nimport {compose} from 'compose'\n-import {debounceTime, distinctUntilChanged, filter, map, switchMap, takeUntil} from 'rxjs/operators'\n+import {debounceTime, distinctUntilChanged, filter, map, mapTo, switchMap, takeUntil} from 'rxjs/operators'\nimport Hammer from 'hammerjs'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n@@ -263,19 +263,33 @@ class _SuperButton extends React.Component {\ninitializeDraggable() {\nconst {addSubscription} = this.props\nconst draggable = this.ref.current\n- const hammer = new Hammer(draggable)\n- hammer.get('pan').set({direction: Hammer.DIRECTION_ALL})\n- const pan$ = fromEvent(hammer, 'panstart panmove panend')\n- const filterPanEvent = type => pan$.pipe(filter(e => e.type === type))\n- const dragStart$ = filterPanEvent('panstart')\n- const move$ = filterPanEvent('panmove')\n- const dragEnd$ = filterPanEvent('panend')\n+\n+ const handle = new Hammer(draggable)\n+\n+ handle.get('pan').set({\n+ direction: Hammer.DIRECTION_ALL,\n+ threshold: 0\n+ })\n+\n+ const hold$ = merge(\n+ fromEvent(draggable, 'mousedown'),\n+ fromEvent(draggable, 'touchstart')\n+ )\n+ const release$ = merge(\n+ fromEvent(draggable, 'mouseup'),\n+ fromEvent(draggable, 'touchend')\n+ )\n+ const pan$ = fromEvent(handle, 'panstart panmove panend')\n+ const panStart$ = pan$.pipe(filter(e => e.type === 'panstart'))\n+ const panMove$ = pan$.pipe(filter(e => e.type === 'panmove'))\n+ const panEnd$ = pan$.pipe(filter(e => e.type === 'panend'))\nconst animationFrame$ = interval(0, animationFrameScheduler)\n- const dragMove$ = dragStart$.pipe(\n+\n+ const dragMove$ = panStart$.pipe(\nswitchMap(() =>\nanimationFrame$.pipe(\nswitchMap(() =>\n- move$.pipe(\n+ panMove$.pipe(\nmap(e => e.center)\n)),\ndebounceTime(10),\n@@ -284,10 +298,16 @@ class _SuperButton extends React.Component {\n)\n)\n+ const dragging$ = merge(\n+ hold$.pipe(mapTo(true)),\n+ release$.pipe(mapTo(false)),\n+ panStart$.pipe(mapTo(true)),\n+ panEnd$.pipe(mapTo(false)),\n+ )\n+\naddSubscription(\n- dragStart$.subscribe(() => this.onDragStart()),\n+ dragging$.subscribe(dragging => dragging ? this.onDragStart() : this.onDragEnd()),\ndragMove$.subscribe(coords => this.onDragMove(coords)),\n- dragEnd$.subscribe(() => this.onDragEnd())\n)\n}\n",
        "date": "28.04.2021 18:08:47",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor draggable functionality in SuperButton component"
    },
    {
        "msg": "improve mapDelegate performance.",
        "diff": "diff --git a/modules/gui/frontend/src/app/home/map/map.js b/modules/gui/frontend/src/app/home/map/map.js @@ -66,6 +66,14 @@ class _Map extends React.Component {\nconstructor() {\nsuper()\nthis.mapDelegate = this.mapDelegate.bind(this)\n+\n+ this.toggleLinked = this.toggleLinked.bind(this)\n+ this.toggleZoomArea = this.toggleZoomArea.bind(this)\n+ this.cancelZoomArea = this.cancelZoomArea.bind(this)\n+ this.drawPolygon = this.drawPolygon.bind(this)\n+ this.disableDrawingMode = this.disableDrawingMode.bind(this)\n+ this.setLocationMarker = this.setLocationMarker.bind(this)\n+ this.setAreaMarker = this.setAreaMarker.bind(this)\n}\nwithAllMaps(func) {\n@@ -153,6 +161,14 @@ class _Map extends React.Component {\nreturn zoomArea\n}\n+ toggleZoomArea() {\n+ this.zoomArea(!this.isZoomArea())\n+ }\n+\n+ cancelZoomArea() {\n+ this.zoomArea(false)\n+ }\n+\nsetLocationMarker(options) {\nconst id = uuid()\nthis.markers[id] = this.withAllMaps(\n@@ -604,15 +620,15 @@ class _Map extends React.Component {\nconst isInitialized = () => bounds\nreturn {\n- toggleLinked: () => this.toggleLinked(),\n+ toggleLinked: this.toggleLinked,\nisLinked: () => this.isLinked(),\ncanZoomIn: () => !map.isMaxZoom(),\nzoomIn: () => map.zoomIn(),\ncanZoomOut: () => !map.isMinZoom(),\nzoomOut: () => map.zoomOut(),\ncanZoomArea: () => !map.isMaxZoom(),\n- toggleZoomArea: () => this.zoomArea(!this.isZoomArea()),\n- cancelZoomArea: () => this.zoomArea(false),\n+ toggleZoomArea: this.toggleZoomArea,\n+ cancelZoomArea: this.cancelZoomArea,\nisZoomArea: () => this.isZoomArea(),\ncanFit: () => isInitialized(),\nfit: () => map.fitBounds(bounds),\n@@ -621,10 +637,13 @@ class _Map extends React.Component {\nsetView: ({center, zoom}) => map.setView({center, zoom}),\nfitBounds: bounds => map.fitBounds(bounds),\ngetBounds: () => map.getBounds(),\n- drawPolygon: (id, callback) => this.drawPolygon(id, callback),\n- disableDrawingMode: () => this.disableDrawingMode(),\n- setLocationMarker: options => this.setLocationMarker(options),\n- setAreaMarker: options => this.setAreaMarker(options),\n+\n+ // getScale: () => map.getMetersPerPixel(),\n+\n+ drawPolygon: this.drawPolygon,\n+ disableDrawingMode: this.disableDrawingMode,\n+ setLocationMarker: this.setLocationMarker,\n+ setAreaMarker: this.setAreaMarker,\nsetLayer: (...args) => {\nlog.warn('should we call map.setLayer?')\n",
        "date": "31.05.2021 15:22:41",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor map.js to bind functions and update method references in _Map class"
    },
    {
        "msg": "improve SepalMap.",
        "diff": "diff --git a/modules/gui/frontend/src/app/home/map/sepalMap.js b/modules/gui/frontend/src/app/home/map/sepalMap.js @@ -239,33 +239,36 @@ export class SepalMap {\n// Bounds\n- fromGoogleBounds(googleBounds) {\n- if (googleBounds) {\n- const sw = googleBounds.getSouthWest()\n- const ne = googleBounds.getNorthEast()\n+ fromGoogleBounds(bounds) {\n+ const {google} = this\n+ if (bounds && bounds instanceof google.maps.LatLngBounds) {\n+ const sw = bounds.getSouthWest()\n+ const ne = bounds.getNorthEast()\nreturn [\n[sw.lng(), sw.lat()],\n[ne.lng(), ne.lat()]\n]\n+ } else {\n+ return bounds\n}\n- return null\n}\ntoGoogleBounds(bounds) {\nconst {google} = this\n+ if (bounds && bounds instanceof google.maps.LatLngBounds) {\n+ return bounds\n+ } else {\nreturn new google.maps.LatLngBounds(\n{lng: bounds[0][0], lat: bounds[0][1]},\n{lng: bounds[1][0], lat: bounds[1][1]}\n)\n}\n+ }\nfitBounds(bounds) {\n- const {google} = this\nconst PADDING = 2 // compensate for attribution masking\nconst {googleMap} = this\n- const nextBounds = bounds instanceof google.maps.LatLngBounds\n- ? bounds\n- : this.toGoogleBounds(bounds)\n+ const nextBounds = this.toGoogleBounds(bounds)\nconst currentBounds = googleMap.getBounds()\nconst boundsChanged = !currentBounds || !currentBounds.equals(nextBounds)\nif (boundsChanged) {\n",
        "date": "09.08.2021 13:36:25",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor SepalMap class to handle Google bounds more efficiently"
    },
    {
        "msg": "improve Tag filtering of null arguments.",
        "diff": "diff --git a/lib/js/shared/src/tag.js b/lib/js/shared/src/tag.js @@ -15,7 +15,7 @@ const toString = value =>\n: JSON.stringify(value)\nconst argsJoiner = args =>\n- _.compact(args.map(arg => toString(arg))).join(ARG_DELIMITER)\n+ args.filter(arg => !_.isNil(arg)).map(arg => toString(arg)).join(ARG_DELIMITER)\nconst tag = (tag, ...args) => `${tag}<${argsJoiner(args)}>`\n",
        "date": "20.09.2021 13:18:00",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor argsJoiner function to filter out nil arguments before mapping."
    },
    {
        "msg": "improve implementation of field resetValue().",
        "diff": "diff --git a/modules/gui/frontend/src/widget/form/form.js b/modules/gui/frontend/src/widget/form/form.js @@ -210,7 +210,7 @@ export const form = ({fields = {}, constraints = {}, mapStateToProps}) =>\nresetValue(name) {\nconst state = this.state\n- state.values[name] = state.initialValues[name]\n+ this.set(name, state.initialValues[name])\n}\nisValueDirty(name) {\n",
        "date": "08.10.2021 11:23:54",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor resetValue method to use set method for updating values"
    },
    {
        "msg": "improve TooltipConfirmationButton on mobile.",
        "diff": "diff --git a/modules/gui/frontend/src/widget/safetyButton.js b/modules/gui/frontend/src/widget/safetyButton.js @@ -104,7 +104,7 @@ export class TooltipConfirmationButton extends React.Component {\nrenderTooltip() {\nconst {tooltip} = this.props\nconst {askConfirmation} = this.state\n- return askConfirmation\n+ return askConfirmation || isMobile()\n? this.renderTooltipConfirmation()\n: tooltip\n}\n",
        "date": "28.10.2021 11:00:29",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Add mobile check to renderTooltip function"
    },
    {
        "msg": "improve TooltipConfirmationButton behavior. Tooltip delay is bypassed when the button is clicked. Dependency from userAgent has been removed.",
        "diff": "diff --git a/modules/gui/frontend/src/widget/safetyButton.js b/modules/gui/frontend/src/widget/safetyButton.js import {Button} from 'widget/button'\n-import {isMobile} from './userAgent'\nimport {msg} from 'translate'\nimport Confirm from 'widget/confirm'\nimport PropTypes from 'prop-types'\n@@ -83,7 +82,14 @@ ModalConfirmationButton.propTypes = {\nexport class TooltipConfirmationButton extends React.Component {\nstate = {\n- askConfirmation: false\n+ askConfirmation: false,\n+ tooltipVisible: false\n+ }\n+\n+ constructor() {\n+ super()\n+ this.toggleVisibility = this.toggleVisibility.bind(this)\n+ this.onClick = this.onClick.bind(this)\n}\naskConfirmation(askConfirmation) {\n@@ -104,14 +110,36 @@ export class TooltipConfirmationButton extends React.Component {\nrenderTooltip() {\nconst {tooltip} = this.props\nconst {askConfirmation} = this.state\n- return askConfirmation || isMobile()\n+ return askConfirmation\n? this.renderTooltipConfirmation()\n: tooltip\n}\n- render() {\n- const {busy, chromeless, disabled, icon, iconType, label, shape, size, skipConfirmation, tooltipPlacement, width, onConfirm} = this.props\n+ toggleVisibility(visible) {\n+ if (visible) {\n+ this.setState({tooltipVisible: true})\n+ } else {\n+ this.setState({tooltipVisible: false, askConfirmation: false})\n+ }\n+ }\n+\n+ toggleConfirmation() {\nconst {askConfirmation} = this.state\n+ if (askConfirmation) {\n+ this.setState({askConfirmation: false})\n+ } else {\n+ this.setState({askConfirmation: true, tooltipVisible: true})\n+ }\n+ }\n+\n+ onClick() {\n+ const {skipConfirmation, onConfirm} = this.props\n+ skipConfirmation ? onConfirm() : this.toggleConfirmation()\n+ }\n+\n+ render() {\n+ const {busy, chromeless, disabled, icon, iconType, label, shape, size, tooltipPlacement, width, onConfirm} = this.props\n+ const {tooltipVisible} = this.state\nreturn (\n<Button\nbusy={busy}\n@@ -125,11 +153,10 @@ export class TooltipConfirmationButton extends React.Component {\ndisabled={disabled}\ntooltip={this.renderTooltip()}\ntooltipPlacement={tooltipPlacement}\n- tooltipClickTrigger={isMobile()}\n- tooltipDelay={500}\n- tooltipOnVisible={visible => !visible && this.askConfirmation(false)}\n- onClick={() => skipConfirmation ? onConfirm() : this.askConfirmation(!askConfirmation)}\n- onClickHold={() => onConfirm && onConfirm()}\n+ tooltipOnVisible={this.toggleVisibility}\n+ tooltipVisible={tooltipVisible}\n+ onClick={this.onClick}\n+ onClickHold={onConfirm}\n/>\n)\n}\n",
        "date": "28.10.2021 12:03:05",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Add tooltip visibility functionality and refactor confirmation logic in TooltipConfirmationButton"
    },
    {
        "msg": "improve TooltipConfirmationButton behavior. Avoided flashes on visiblity change.",
        "diff": "diff --git a/modules/gui/frontend/src/widget/safetyButton.js b/modules/gui/frontend/src/widget/safetyButton.js @@ -88,8 +88,9 @@ export class TooltipConfirmationButton extends React.Component {\nconstructor() {\nsuper()\n- this.toggleVisibility = this.toggleVisibility.bind(this)\n+ this.setVisibility = this.setVisibility.bind(this)\nthis.onClick = this.onClick.bind(this)\n+ this.onClickHold = this.onClickHold.bind(this)\n}\naskConfirmation(askConfirmation) {\n@@ -115,20 +116,20 @@ export class TooltipConfirmationButton extends React.Component {\n: tooltip\n}\n- toggleVisibility(visible) {\n+ setVisibility(visible) {\nif (visible) {\nthis.setState({tooltipVisible: true})\n} else {\n- this.setState({tooltipVisible: false, askConfirmation: false})\n+ this.setState({tooltipVisible: false}, () => this.setState({askConfirmation: false}))\n}\n}\ntoggleConfirmation() {\nconst {askConfirmation} = this.state\nif (askConfirmation) {\n- this.setState({askConfirmation: false})\n+ this.setVisibility(false)\n} else {\n- this.setState({askConfirmation: true, tooltipVisible: true})\n+ this.setState({askConfirmation: true}, () => this.setVisibility(true))\n}\n}\n@@ -137,8 +138,13 @@ export class TooltipConfirmationButton extends React.Component {\nskipConfirmation ? onConfirm() : this.toggleConfirmation()\n}\n+ onClickHold() {\n+ const {onConfirm} = this.props\n+ onConfirm()\n+ }\n+\nrender() {\n- const {busy, chromeless, disabled, icon, iconType, label, shape, size, tooltipPlacement, width, onConfirm} = this.props\n+ const {busy, chromeless, disabled, icon, iconType, label, shape, size, tooltipPlacement, width} = this.props\nconst {tooltipVisible} = this.state\nreturn (\n<Button\n@@ -153,10 +159,10 @@ export class TooltipConfirmationButton extends React.Component {\ndisabled={disabled}\ntooltip={this.renderTooltip()}\ntooltipPlacement={tooltipPlacement}\n- tooltipOnVisible={this.toggleVisibility}\ntooltipVisible={tooltipVisible}\n+ tooltipOnVisible={this.setVisibility}\nonClick={this.onClick}\n- onClickHold={onConfirm}\n+ onClickHold={this.onClickHold}\n/>\n)\n}\n",
        "date": "28.10.2021 12:25:19",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor tooltip visibility handling in safetyButton.js"
    },
    {
        "msg": "improve CompositeOptions layout.",
        "diff": "diff --git a/modules/gui/frontend/src/app/home/body/process/recipe/opticalMosaic/panels/compositeOptions/compositeOptions.js b/modules/gui/frontend/src/app/home/body/process/recipe/opticalMosaic/panels/compositeOptions/compositeOptions.js @@ -3,6 +3,7 @@ import {Layout} from 'widget/layout'\nimport {MosaicPreview} from 'app/home/body/process/recipe/mosaic/mosaicPreview'\nimport {Panel} from 'widget/panel/panel'\nimport {RecipeFormPanel, recipeFormPanel} from 'app/home/body/process/recipeFormPanel'\n+import {Widget} from 'widget/widget'\nimport {compose} from 'compose'\nimport {msg} from 'translate'\nimport {selectFrom} from 'stateUtils'\n@@ -55,14 +56,12 @@ class CompositeOptions extends React.Component {\nrenderContent() {\nreturn (\n- <Layout>\n+ <Layout type='vertical'>\n{this.renderCorrectionOptions()}\n- <Layout spacing='compact'>\n{this.renderFilterOptions()}\n- </Layout>\n- <Layout type='horizontal'>\n{this.renderCloudMaskingOptions()}\n{this.renderCloudBufferOptions()}\n+ <Layout type='horizontal'>\n{this.renderSnowMaskingOptions()}\n{this.renderComposeOptions()}\n</Layout>\n@@ -101,11 +100,11 @@ class CompositeOptions extends React.Component {\ninputs: {corrections, shadowPercentile, hazePercentile, ndviPercentile, dayOfYearPercentile}\n} = this.props\nreturn (\n- <React.Fragment>\n- <Label\n- msg={msg('process.mosaic.panel.composite.form.filters.label')}\n+ <Widget\n+ label={msg('process.mosaic.panel.composite.form.filters.label')}\n+ spacing='compact'\ntooltip={msg('process.mosaic.panel.composite.form.filters.tooltip')}\n- tooltipPlacement='top'/>\n+ tooltipPlacement='top'>\n<PercentileField\ninput={shadowPercentile}/>\n<PercentileField\n@@ -115,7 +114,7 @@ class CompositeOptions extends React.Component {\ninput={ndviPercentile}/>\n<PercentileField\ninput={dayOfYearPercentile}/>\n- </React.Fragment>\n+ </Widget>\n)\n}\n",
        "date": "22.11.2021 17:11:19",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor compositeOptions.js to use Widget component and update layout type."
    },
    {
        "msg": "improve color picker style.",
        "diff": "diff --git a/modules/gui/frontend/src/widget/colorElement.css b/modules/gui/frontend/src/widget/colorElement.css /* Small */\n.colorPicker .react-colorful {\n- width: 8rem;\n- height: 8rem;\n+ --border-radius: .25rem;\n+ width: 10rem;\n+ height: 10rem;\n+\n+}\n+\n+.colorPicker .react-colorful__saturation {\n+ border-top-left-radius: var(--border-radius);\n+ border-top-right-radius: var(--border-radius);\n+}\n+\n+.colorPicker .react-colorful__last-control {\n+ border-bottom-left-radius: var(--border-radius);\n+ border-bottom-right-radius: var(--border-radius);\n}\n.colorPicker .react-colorful__hue {\n",
        "date": "23.11.2021 13:57:11",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Increase size and add border radius to color picker element"
    },
    {
        "msg": "improve reference data export CSV filename.",
        "diff": "diff --git a/modules/gui/docker/frontend/src/app/home/body/process/recipe/classification/panels/trainingData/trainingData.js b/modules/gui/docker/frontend/src/app/home/body/process/recipe/classification/panels/trainingData/trainingData.js @@ -196,7 +196,7 @@ class TrainingData extends React.Component {\n.flat()\n.map(point => `${point.x},${point.y},${point.class}`)\n].flat().join('\\n')\n- const filename = `${title}_legend.csv`\n+ const filename = `${title}_reference_data.csv`\ndownloadCsv(csv, filename)\n}\n",
        "date": "01.12.2021 15:43:20",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Update filename in TrainingData component to use reference data instead of legend data"
    },
    {
        "msg": "improve MapInfo cursor.",
        "diff": "diff --git a/modules/gui/docker/frontend/src/app/home/map/mapInfo.js b/modules/gui/docker/frontend/src/app/home/map/mapInfo.js @@ -31,10 +31,13 @@ class _MapInfoPanel extends React.Component {\nview$.pipe(\nthrottleTime(THROTTLE_TIME_MS, null, {leading: true, trailing: true})\n).subscribe(\n- view => view && this.setState({view})\n+ view => {\n+ this.setState({view})\n+ this.updateMarker()\n+ }\n),\nview$.pipe(\n- debounceTime(250)\n+ debounceTime(100)\n).subscribe(\n({center}) => this.updateMarker(center)\n)\n",
        "date": "13.12.2021 14:52:09",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor mapInfo.js to update marker on view change and reduce debounce time"
    },
    {
        "msg": "improve Layout css. Used variables for controlling spacing. Used px in \"tight\" horizontal spacing for better rendering.",
        "diff": "diff --git a/modules/gui/docker/frontend/src/widget/layout.module.css b/modules/gui/docker/frontend/src/widget/layout.module.css flex-grow: 0;\nflex-shrink: 0;\noverflow: hidden;\n+ /* horizontal spacing */\n+ --horizontal-spacing-loose: 1.5rem;\n+ --horizontal-spacing-normal: 1rem;\n+ --horizontal-spacing-compact: .5rem;\n+ --horizontal-spacing-tight: 3px; /* under .5rem spacing is not reliable */\n+ /* vertical spacing */\n+ --vertical-spacing-loose: 3rem;\n+ --vertical-spacing-normal: 2rem;\n+ --vertical-spacing-compact: 1rem;\n+ --vertical-spacing-tight: .5rem;\n}\n.layout > .content {\n/* vertical/spacing */\n.layout.vertical.spacing-loose > .content > * + * {\n- margin-top: 3rem;\n+ margin-top: var(--vertical-spacing-loose);\n}\n.layout.vertical.spacing-normal > .content > * + * {\n- margin-top: 2rem;\n+ margin-top: var(--vertical-spacing-normal);\n}\n.layout.vertical.spacing-normal-separated > .content > * + * {\n- margin-top: 2rem;\n+ margin-top: var(--vertical-spacing-normal);\noverflow: visible;\n}\n.layout.vertical.spacing-normal-separated > .content > * + *::before {\ncontent: '';\nposition: absolute;\n- top: -1rem;\n+ top: calc(-.5 * var(--vertical-spacing-normal));\nheight: 1px;\nleft: 0;\nright: 0;\n}\n.layout.vertical.spacing-compact > .content > * + * {\n- margin-top: 1rem;\n+ margin-top: var(--vertical-spacing-compact);\n}\n.layout.vertical.spacing-compact-separated > .content > * + * {\n- margin-top: 1rem;\n+ margin-top: var(--vertical-spacing-compact);\noverflow: visible;\n}\n.layout.vertical.spacing-compact-separated > .content > * + *::before {\ncontent: '';\nposition: absolute;\n- top: -.5rem;\n+ top: calc(-.5 * var(--vertical-spacing-compact));\nheight: 1px;\nleft: 0;\nright: 0;\n}\n.layout.vertical.spacing-tight > .content > * + * {\n- margin-top: .5rem;\n+ margin-top: var(--vertical-spacing-tight);\n}\n.layout.vertical.spacing-none > .content > * + * {\n- margin-top: 0rem;\n+ margin-top: 0;\n}\n/* vertical/alignment */\n/* horizontal/spacing */\n.layout.horizontal.spacing-loose > .content > * {\n- margin-bottom: 1.5rem;\n- margin-right: 1.5rem;\n+ margin-bottom: var(--horizontal-spacing-loose);\n+ margin-right: var(--horizontal-spacing-loose);\n}\n.layout.horizontal.spacing-normal > .content > * {\n- margin-bottom: 1rem;\n- margin-right: 1rem;\n+ margin-bottom: var(--horizontal-spacing-normal);\n+ margin-right: var(--horizontal-spacing-normal);\n}\n.layout.horizontal.spacing-compact > .content > * {\n- margin-bottom: .5rem;\n- margin-right: .5rem;\n+ margin-bottom: var(--horizontal-spacing-compact);\n+ margin-right: var(--horizontal-spacing-compact);\n}\n.layout.horizontal.spacing-tight > .content > * {\n- margin-bottom: .25rem;\n- margin-right: .25rem;\n+ margin-bottom: var(--horizontal-spacing-tight);\n+ margin-right: var(--horizontal-spacing-tight);\n}\n.layout.horizontal.spacing-none > .content > * {\n- margin-bottom: 0rem;\n- margin-right: 0rem;\n+ margin-bottom: 0;\n+ margin-right: 0;\n}\n/* horizontal/spacing: compensate bottom margin */\n.layout.horizontal.spacing-loose > .content {\n- margin-bottom: -1.5rem;\n+ margin-bottom: calc(-1 * var(--horizontal-spacing-loose));\n}\n.layout.horizontal.spacing-normal > .content {\n- margin-bottom: -1rem;\n+ margin-bottom: calc(-1 * var(--horizontal-spacing-normal));\n}\n.layout.horizontal.spacing-compact > .content {\n- margin-bottom: -.5rem;\n+ margin-bottom: calc(-1 * var(--horizontal-spacing-compact));\n}\n.layout.horizontal.spacing-tight > .content {\n- margin-bottom: -.25rem;\n+ margin-bottom: calc(-1 * var(--horizontal-spacing-tight));\n}\n.layout.horizontal.spacing-none > .content {\n- margin-bottom: 0rem;\n+ margin-bottom: 0;\n}\n/* horizontal: compensate right margin */\n.layout.horizontal > .content > *:last-child {\n- margin-right: 0rem;\n+ margin-right: 0;\n}\n/* horizontal/alignment */\n",
        "date": "13.12.2021 17:10:04",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Add horizontal and vertical spacing variables and update layout styles to use them."
    },
    {
        "msg": "improve MapInfo cursor SVG.",
        "diff": "diff --git a/modules/gui/docker/frontend/src/app/home/map/mapInfo.js b/modules/gui/docker/frontend/src/app/home/map/mapInfo.js @@ -57,7 +57,7 @@ class _MapInfoPanel extends React.Component {\nposition: center,\nlabel: null,\nicon: {\n- path: 'm 1 -1 h 20 v 2 h -20 v 20 h -2 v -20 h -20 v -2 h 20 v -20 h 2 v 20',\n+ path: 'M 1 -1 H 21 V 1 H 1 V 21 H -1 V 1 H -21 V -1 H -1 V -21 H 1 Z',\nfillColor: 'white',\nfillOpacity: .75,\nstrokeColor: 'black',\n",
        "date": "13.12.2021 17:10:30",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor map icon path in MapInfoPanel"
    },
    {
        "msg": "improve Palette tooltip message.",
        "diff": "diff --git a/modules/gui/docker/frontend/src/locale/en/translations.json b/modules/gui/docker/frontend/src/locale/en/translations.json },\n\"palette\": {\n\"label\": \"Palette\",\n- \"tooltip\": \"Define a custom palette by picking individual colors, or load a preset palette, which you can further customize. Warning: loading a preset palette will reset any custom colors you might have defined.\",\n+ \"tooltip\": \"Load a preset palette or create a new one. Use drag and drop for changing the order or removing colors. Warning: loading a palette will overwrite the current one.\",\n\"empty\": \"Empty palette, using gray scale.\",\n\"add\": {\n\"tooltip\": \"Add a color to the palette.\"\n",
        "date": "14.12.2021 10:25:01",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor palette tooltip message and functionality"
    },
    {
        "msg": "improve package bundling script.",
        "diff": "diff --git a/modules/r-proxy/src/R/bundle_package.sh b/modules/r-proxy/src/R/bundle_package.sh @@ -11,9 +11,10 @@ PACKAGE_FILENAME=\"${PACKAGE}_${VERSION}.tar.gz\"\nTMP_PACKAGE_FILENAME=\"${PACKAGE_FILENAME}.tmp\"\nif [[ ! -f \"${PACKAGE_PATH}\" ]]; then\n- mkdir -p ${BIN} \\\n- && rm -f ${BIN}/${TMP_PACKAGE_FILENAME} \\\n- && tar czf ${BIN}/${TMP_PACKAGE_FILENAME} -C ${LIB} ${PACKAGE} \\\n+ mkdir -p ${BIN}\n+ retVal = $?; [ $retVal -ne 0 ] && exit $retVal\n+ rm -f ${BIN}/${TMP_PACKAGE_FILENAME}\n+ tar czf ${BIN}/${TMP_PACKAGE_FILENAME} -C ${LIB} ${PACKAGE} \\\n&& mv ${BIN}/${TMP_PACKAGE_FILENAME} ${BIN}/${PACKAGE_FILENAME} \\\n&& rm -f ${SRC}/${PACKAGE_FILENAME}\nexit $?\n",
        "date": "13.01.2022 17:21:22",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor bundle_package.sh script to handle errors and improve readability"
    },
    {
        "msg": "improve default date range for planet mosaics. Resolves",
        "diff": "diff --git a/modules/gui/frontend/src/app/home/body/process/recipe/planetMosaic/planetMosaicRecipe.js b/modules/gui/frontend/src/app/home/body/process/recipe/planetMosaic/planetMosaicRecipe.js @@ -15,10 +15,14 @@ export const NICFI_ASSETS = [\n'projects/planet-nicfi/assets/basemaps/americas'\n]\n+const defaultFromDate = moment().subtract(2, 'month').startOf('year')\nexport const defaultModel = {\ndates: {\n- fromDate: moment().startOf('year').format(DATE_FORMAT),\n- toDate: moment().add(1, 'years').startOf('year').format(DATE_FORMAT)\n+ fromDate: defaultFromDate.format(DATE_FORMAT),\n+ toDate: moment.min(\n+ moment(),\n+ defaultFromDate.add(1, 'year')\n+ ).format(DATE_FORMAT)\n},\nsources: {\nsource: 'BASEMAPS',\n",
        "date": "21.02.2022 11:14:56",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor default date calculation in planetMosaicRecipe"
    },
    {
        "msg": "improve recipe edit buttons.",
        "diff": "diff --git a/modules/gui/src/app/home/body/process/recipeList/recipeListData.js b/modules/gui/src/app/home/body/process/recipeList/recipeListData.js @@ -91,25 +91,18 @@ class _RecipeListData extends React.Component {\nrenderEditButtons() {\nconst {edit} = this.state\n- return edit\n- ? this.renderActionButtons()\n- : (\n+ return (\n+ <ButtonGroup spacing='none'>\n<Button\nicon='pen-to-square'\nlabel='Edit'\nshape='pill'\n- onClick={() => this.setEdit(true)}\n+ keybinding={edit ? 'Escape' : ''}\n+ onClick={() => this.setEdit(!edit)}\n/>\n- )\n- }\n-\n- renderActionButtons() {\n- return (\n- <ButtonGroup spacing='none'>\n- {this.renderSelectButton()}\n- {this.renderMoveButton()}\n- {this.renderRemoveButton()}\n- {this.renderExitButton()}\n+ {edit && this.renderSelectButton()}\n+ {edit && this.renderMoveButton()}\n+ {edit && this.renderRemoveButton()}\n</ButtonGroup>\n)\n}\n@@ -187,18 +180,6 @@ class _RecipeListData extends React.Component {\n)\n}\n- renderExitButton() {\n- return (\n- <Button\n- icon='times'\n- label='Exit'\n- shape='pill'\n- keybinding='Escape'\n- onClick={() => this.setEdit(false)}\n- />\n- )\n- }\n-\ngetDestinations() {\nconst {recipeListContext: {projects}} = this.props\nreturn projects.map(({id, name}) => ({value: id, label: name}))\n",
        "date": "26.04.2022 12:23:46",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor edit button functionality in RecipeListData"
    },
    {
        "msg": "improve recipe move/remove confirmation panels.",
        "diff": "diff --git a/modules/gui/src/app/home/body/process/recipeList/recipeListData.js b/modules/gui/src/app/home/body/process/recipeList/recipeListData.js @@ -182,17 +182,14 @@ class _RecipeListData extends React.Component {\nreturn (\n<Confirm\ntitle={msg('process.recipe.move.title')}\n- message={\n- this.renderConfirmationMessage(\n- msg('process.recipe.move.confirm', {count: this.isSelected(), project: projectName})\n- )\n- }\n+ message={msg('process.recipe.move.confirm', {count: this.isSelected(), project: projectName})}\nonConfirm={() => {\nthis.setMove(false)\nthis.moveSelected(projectId)\n}}\n- onCancel={() => this.setMove(false)}\n- />\n+ onCancel={() => this.setMove(false)}>\n+ {this.renderSelectedRecipes()}\n+ </Confirm>\n)\n}\n@@ -202,36 +199,12 @@ class _RecipeListData extends React.Component {\nshape='pill'\nicon='trash'\nlabel={msg('process.recipe.remove.label')}\n+ message={msg('process.recipe.remove.confirm', {count: this.isSelected()})}\ntooltip={msg('process.recipe.remove.tooltip')}\n- message={\n- this.renderConfirmationMessage(\n- msg('process.recipe.remove.confirm', {count: this.isSelected()})\n- )\n- }\ndisabled={!this.isSelected()}\n- onRemove={this.removeSelected}/>\n- )\n- }\n-\n- rendeRemoveConfirmationMessage() {\n- return (\n- <div>\n- <div>\n- {msg('process.recipe.remove.confirm', {count: this.isSelected()})}\n- </div>\n+ onRemove={this.removeSelected}>\n{this.renderSelectedRecipes()}\n- </div>\n- )\n- }\n-\n- renderConfirmationMessage(message) {\n- return (\n- <div>\n- <div>\n- {message}\n- </div>\n- {this.renderSelectedRecipes()}\n- </div>\n+ </RemoveButton>\n)\n}\n@@ -239,15 +212,23 @@ class _RecipeListData extends React.Component {\nconst {recipes, selectedIds} = this.props\nconst selectedRecipes = recipes.filter(({id}) => selectedIds.includes(id))\nreturn (\n- <ul>\n+ <Layout type='vertical' spacing='tight'>\n{selectedRecipes.map(recipe => this.renderSelectedRecipe(recipe))}\n- </ul>\n+ </Layout>\n)\n}\nrenderSelectedRecipe(recipe) {\nreturn (\n- <li>{this.getRecipePath(recipe)}</li>\n+ <ListItem key={recipe.id}>\n+ <CrudItem\n+ title={this.getRecipeTypeName(recipe.type)}\n+ description={this.getRecipePath(recipe)}\n+ timestamp={recipe.updateTime}\n+ selected={this.isSelected(recipe.id)}\n+ onSelect={() => this.toggleOne(recipe.id)}\n+ />\n+ </ListItem>\n)\n}\n",
        "date": "18.05.2022 09:32:57",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor confirmation message rendering in RecipeListData"
    },
    {
        "msg": "improve recipe edit button styling.",
        "diff": "diff --git a/modules/gui/src/app/home/body/process/recipeList/recipeListData.js b/modules/gui/src/app/home/body/process/recipeList/recipeListData.js @@ -129,7 +129,8 @@ class _RecipeListData extends React.Component {\n{edit && this.renderMoveButton()}\n{edit && this.renderRemoveButton()}\n<Button\n- icon='pen-to-square'\n+ look={edit ? 'apply' : 'default'}\n+ icon={edit ? 'xmark' : 'pen-to-square'}\nlabel={msg('process.recipe.edit.label')}\nshape='pill'\nkeybinding={edit ? 'Escape' : ''}\n",
        "date": "18.05.2022 13:29:45",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor edit button in recipe list to show different icons based on edit mode"
    },
    {
        "msg": "improve Confirm message background color.",
        "diff": "diff --git a/modules/gui/src/widget/confirm.module.css b/modules/gui/src/widget/confirm.module.css align-items: center;\njustify-content: center;\nfont-size: .9rem;\n- background-color: rgba(255, 0, 0, .5);\n+ background-color: rgba(255, 0, 0, .35);\nborder-radius: .25rem;\n- padding: .25rem;\n+ padding: .25rem .5rem;\n}\n",
        "date": "23.05.2022 13:26:14",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Adjust background color opacity and padding in confirm module CSS"
    },
    {
        "msg": "improve image collectione export progress.",
        "diff": "diff --git a/modules/task/src/jobs/export/toAsset.js b/modules/task/src/jobs/export/toAsset.js @@ -29,22 +29,6 @@ const exportImageToAsset$ = ({\nretries = 0\n}) => {\ncrsTransform = crsTransform || undefined\n- console.log({\n- image,\n- description,\n- assetId,\n- assetType,\n- strategy,\n- pyramidingPolicy,\n- dimensions,\n- region,\n- scale,\n- crs,\n- crsTransform,\n- maxPixels,\n- shardSize,\n- tileSize,\n- retries})\nregion = region || image.geometry()\nif (ee.sepal.getAuthType() === 'SERVICE_ACCOUNT')\nthrow new Error('Cannot export to asset using service account.')\n@@ -179,7 +163,12 @@ const imageToAssetCollection$ = ({\n})\nreturn concat(\n- prepareCollection$().pipe(swallow()),\n+ progress({\n+ defaultMessage: `Prepare image collection '${assetId}'`,\n+ messageKey: 'tasks.ee.export.asset.prepareImageCollection',\n+ messageArgs: {assetId}\n+ }),\n+ prepareCollection$(),\ntilesToAssets$()\n)\n}\n@@ -188,7 +177,6 @@ const imageToAssetCollection$ = ({\nconst imageToAsset$ = ({\nimage, description, assetId, strategy, pyramidingPolicy, dimensions, region, scale, crs, crsTransform, maxPixels, shardSize, retries\n}) => {\n- console.log('imageToAsset$', {pyramidingPolicy})\nconst exportToAsset$ = ({task, description, assetId, _retries}) => {\nreturn exportLimiter$(\nconcat(\n@@ -201,7 +189,6 @@ const imageToAsset$ = ({\n}\nreturn formatRegion$(region).pipe(\nswitchMap(region => {\n- console.log('switchMap', {pyramidingPolicy})\nconst serverConfig = ee.batch.Export.convertToServerParams(\n_.cloneDeep({image, description, assetId, pyramidingPolicy, dimensions, region, scale, crs, crsTransform, maxPixels, shardSize}), // It seems like EE modifies the pyramidingPolicy\nee.data.ExportDestination.ASSET,\n",
        "date": "01.06.2022 09:03:40",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor exportImageToAsset and imageToAsset functions"
    },
    {
        "msg": "improve FastList height calculation.",
        "diff": "diff --git a/modules/gui/src/widget/fastList.js b/modules/gui/src/widget/fastList.js import {ElementResizeDetector} from 'widget/elementResizeDetector'\nimport {Layout} from './layout'\n-import {Subject, animationFrames, distinctUntilChanged, fromEvent, map, mergeWith, switchMap, takeUntil, timer} from 'rxjs'\n+import {Subject, animationFrames, distinctUntilChanged, fromEvent, map, mergeWith, switchMap, takeUntil, throttleTime, timer} from 'rxjs'\nimport {compose} from 'compose'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n@@ -13,8 +13,9 @@ class _FastList extends React.PureComponent {\nreset$ = new Subject()\nstate = {\n- singleItemHeight: null,\n- spacedItemHeight: null,\n+ itemHeight: 0,\n+ itemSpacing: 0,\n+ spacedItemHeight: 0,\nfirstVisibleItem: 0,\nlastVisibleItem: 0,\nmarginTop: 0,\n@@ -31,27 +32,28 @@ class _FastList extends React.PureComponent {\nrender() {\nconst {items} = this.props\nreturn items\n- ? this.renderSingleItemSampler() || this.renderSpacedItemSampler() || this.renderList()\n+ ? this.renderItemHeightSampler() || this.renderItemSpacingSampler() || this.renderList()\n: null\n}\n- renderSingleItemSampler() {\n+ renderItemHeightSampler() {\nconst {items} = this.props\n- const {singleItemHeight} = this.state\n- if (items.length > 0 && !singleItemHeight) {\n- return this.renderSampler(1, ({height: singleItemHeight}) => {\n- this.setState({singleItemHeight})\n+ const {itemHeight} = this.state\n+ if (items.length > 0 && !itemHeight) {\n+ return this.renderSampler(1, ({height: itemHeight}) => {\n+ this.setState({itemHeight})\n})\n}\n}\n- renderSpacedItemSampler() {\n+ renderItemSpacingSampler() {\nconst {items} = this.props\n- const {singleItemHeight, spacedItemHeight} = this.state\n- if (items.length > 1 && !spacedItemHeight) {\n+ const {itemHeight, itemSpacing} = this.state\n+ if (items.length > 1 && !itemSpacing) {\nreturn this.renderSampler(2, ({height}) => {\n- const spacedItemHeight = height - singleItemHeight\n- this.setState({spacedItemHeight})\n+ const itemSpacing = height - 2 * itemHeight\n+ const spacedItemHeight = itemHeight + itemSpacing\n+ this.setState({itemSpacing, spacedItemHeight})\n})\n}\n}\n@@ -82,13 +84,13 @@ class _FastList extends React.PureComponent {\n}\nrenderFiller(height) {\n- const itemHeight = this.getItemHeight()\n+ const {spacedItemHeight} = this.state\nreturn (\n<div\nclassName={styles.filler}\nstyle={{\n'--height': height,\n- '--itemHeight': itemHeight\n+ '--itemHeight': spacedItemHeight\n}}/>\n)\n}\n@@ -146,18 +148,13 @@ class _FastList extends React.PureComponent {\n}\n}\n- getItemHeight() {\n- const {singleItemHeight, spacedItemHeight} = this.state\n- return spacedItemHeight || singleItemHeight\n- }\n-\nupdate(scrollTop, clientHeight) {\n+ const {itemSpacing, spacedItemHeight} = this.state\nconst {items, overflow} = this.props\n- const itemHeight = this.getItemHeight()\n- const firstVisibleItem = Math.max(0, Math.ceil(scrollTop / itemHeight) - overflow)\n- const lastVisibleItem = Math.min(items.length, Math.floor((scrollTop + clientHeight) / itemHeight) + overflow)\n- const marginTop = firstVisibleItem * itemHeight\n- const marginBottom = (items.length - lastVisibleItem) * itemHeight\n+ const firstVisibleItem = Math.max(0, Math.ceil(scrollTop / spacedItemHeight) - overflow)\n+ const lastVisibleItem = Math.min(items.length, Math.floor((scrollTop + clientHeight + itemSpacing) / spacedItemHeight) + overflow)\n+ const marginTop = firstVisibleItem * spacedItemHeight\n+ const marginBottom = (items.length - lastVisibleItem) * spacedItemHeight\nthis.setState({firstVisibleItem, lastVisibleItem, marginTop, marginBottom})\n}\n",
        "date": "23.06.2022 11:54:38",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor FastList component to handle item height and spacing dynamically"
    },
    {
        "msg": "improve BlurDetector behavior.",
        "diff": "diff --git a/modules/gui/src/widget/blurDetector.js b/modules/gui/src/widget/blurDetector.js import {compose} from 'compose'\n-import {delay, distinctUntilChanged, filter, fromEvent, map, merge, of, scan, switchMap, takeUntil} from 'rxjs'\n+import {delay, distinctUntilChanged, filter, fromEvent, map, merge, of, switchMap, takeUntil} from 'rxjs'\nimport {withContext} from 'context'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n@@ -22,8 +22,7 @@ class BlurDetector extends React.Component {\nsuper(props)\nthis.ref = props.forwardedRef || React.createRef()\nthis.isEnabled = this.isEnabled.bind(this)\n- this.onEvent = this.onEvent.bind(this)\n- this.onTimeout = this.onTimeout.bind(this)\n+ this.onBlur = this.onBlur.bind(this)\n}\nrender() {\n@@ -52,27 +51,27 @@ class BlurDetector extends React.Component {\nfromEvent(document, 'focus', {capture: true}),\n).pipe(\nfilter(this.isEnabled),\n+ filter(e => !this.isOver(e))\n// debounceTime(150) // prevent click-through\n- ).subscribe(this.onEvent)\n+ ).subscribe(this.onBlur)\n)\nif (autoBlurTimeout) {\n- const inside$ = fromEvent(document, 'mousemove').pipe(\n- map(e => this.isRefEvent(e) || this.isExcludedEvent(e)),\n+ const over$ = fromEvent(document, 'mousemove').pipe(\n+ map(e => this.isOver(e)),\ndistinctUntilChanged()\n)\n- const enter$ = inside$.pipe(\n- filter(inside => inside)\n+ const enter$ = over$.pipe(\n+ filter(over => over)\n)\n- const leave$ = inside$.pipe(\n- filter(inside => !inside)\n+ const leave$ = over$.pipe(\n+ filter(over => !over)\n)\naddSubscription(\n- leave$.pipe(\n- switchMap(e => of(e).pipe(\n- delay(autoBlurTimeout),\n- takeUntil(enter$)\n+ enter$.pipe(\n+ switchMap(() => leave$.pipe(\n+ delay(autoBlurTimeout)\n))\n- ).subscribe(this.onTimeout)\n+ ).subscribe(this.onBlur)\n)\n}\n}\n@@ -82,6 +81,13 @@ class BlurDetector extends React.Component {\nthis.setEnabled(true)\n}\n+ onBlur(e) {\n+ const {onBlur} = this.props\n+ if (onBlur) {\n+ onBlur(e)\n+ }\n+ }\n+\nsetEnabled(enabled) {\nconst {blurDetectorContext} = this.props\nif (blurDetectorContext) {\n@@ -94,18 +100,8 @@ class BlurDetector extends React.Component {\nreturn enabled\n}\n- onEvent(e) {\n- const {onBlur} = this.props\n- if (onBlur && !this.isRefEvent(e) && !this.isExcludedEvent(e)) {\n- onBlur(e)\n- }\n- }\n-\n- onTimeout(e) {\n- const {onBlur} = this.props\n- if (onBlur) {\n- onBlur(e)\n- }\n+ isOver(e) {\n+ return this.isRefEvent(e) || this.isExcludedEvent(e)\n}\nisRefEvent(e) {\n",
        "date": "01.08.2022 22:36:33",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor event handling in BlurDetector component"
    },
    {
        "msg": "improve user lock/unlock message.",
        "diff": "diff --git a/modules/gui/src/locale/en/translations.json b/modules/gui/src/locale/en/translations.json \"lock\": {\n\"label\": \"Lock\",\n\"tooltip\": \"Lock the user\",\n- \"message\": \"The user will be locked and will no longer be able to access SEPAL. Active sessions will be terminated. No user data will be removed.\",\n+ \"message\": \"The user will be locked and not be able to access SEPAL from now on.|Active sessions will be terminated, but all user data will be retained.\",\n\"error\": \"Could not lock user.\",\n\"success\": \"User has been locked.\"\n},\n\"unlock\": {\n\"label\": \"Unlock\",\n\"tooltip\": \"Unlock the user\",\n- \"message\": \"The user will be unlocked and regain access to SEPAL. A password reset email will be sent to the user for reactivating the account.\",\n+ \"message\": \"The user will be unlocked.|A password reset email will be sent to the user for reactivating the SEPAL account.\",\n\"error\": \"Could not unlock user.\",\n\"success\": \"User has been unlocked.\"\n},\n",
        "date": "09.09.2022 11:15:59",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor lock and unlock messages in translations.json"
    },
    {
        "msg": "improve user role change message.",
        "diff": "diff --git a/modules/gui/src/locale/en/translations.json b/modules/gui/src/locale/en/translations.json \"success\": \"User details have been updated.\"\n},\n\"confirmation\": {\n- \"message\": \"User role is being changed to \\\"{role}\\\"\"\n+ \"message\": \"User role will be changed to \\\"{role}\\\"\"\n}\n},\n\"userSession\": {\n",
        "date": "09.09.2022 11:17:55",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Update confirmation message for changing user role in translations.json"
    },
    {
        "msg": "improve user updated message.",
        "diff": "diff --git a/modules/gui/src/locale/en/translations.json b/modules/gui/src/locale/en/translations.json \"switchingToSEPALGoogleAccount\": \"Switching to SEPAL's Google Account\",\n\"title\": \"User details\",\n\"update\": {\n- \"error\": \"Could not update user details.\",\n- \"success\": \"User details have been updated.\"\n+ \"error\": \"Could not update user.\",\n+ \"success\": \"User has been updated.\"\n},\n\"confirmation\": {\n\"message\": \"User role will be changed to \\\"{role}\\\"\"\n",
        "date": "09.09.2022 11:19:58",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor user details update messages in translations.json"
    },
    {
        "msg": "improve SplitView area indicator.",
        "diff": "diff --git a/modules/gui/src/widget/split/splitView.module.css b/modules/gui/src/widget/split/splitView.module.css position: absolute;\nwidth: calc(2 * var(--half-area-marker-size) + 1px);\nheight: calc(2 * var(--half-area-marker-size) + 1px);\n- background-color: rgba(255, 0, 0, .6);\n- border: 1px solid rgba(0, 0, 0, .9);\n+ /* border: 1px solid rgba(0, 0, 0, .9); */\n+ background: radial-gradient(\n+ circle,\n+ transparent,\n+ transparent calc(var(--half-center-handle-size) + 1px),\n+ rgba(255, 0, 0, .6) calc(var(--half-center-handle-size) + 1px),\n+ rgba(255, 0, 0, .6)\n+ );\nbox-sizing: border-box;\nborder-radius: 100%;\npointer-events: none;\n",
        "date": "25.10.2022 16:26:54",
        "repo": "openforis/sepal",
        "type": "improve",
        "chatgpt_zeroshot": "Update splitView module CSS to use radial gradient for background color"
    },
    {
        "msg": "improve test by showing difference in pre- and post-selection values.",
        "diff": "diff --git a/test/bind.spec.js b/test/bind.spec.js @@ -386,12 +386,13 @@ test('cursor position is preserved on selectable text input', async () => {\nAlpine.start()\ndocument.querySelector('input').focus()\n- document.querySelector('input').setSelectionRange(0, 3, 'backward')\nexpect(document.querySelector('input').value).toEqual('bar')\nexpect(document.querySelector('input').selectionStart).toEqual(0)\n- expect(document.querySelector('input').selectionEnd).toEqual(3)\n- expect(document.querySelector('input').selectionDirection).toEqual('backward')\n+ expect(document.querySelector('input').selectionEnd).toEqual(0)\n+ expect(document.querySelector('input').selectionDirection).toEqual('none')\n+\n+ document.querySelector('input').setSelectionRange(0, 3, 'backward')\nawait wait(() => {\nexpect(document.querySelector('input').value).toEqual('baz')\n",
        "date": "21.04.2020 23:26:34",
        "repo": "alpinejs/alpine",
        "type": "improve",
        "chatgpt_zeroshot": "Fix cursor position preservation on selectable text input in bind.spec.js"
    },
    {
        "msg": "improve descriptions and add some flavour",
        "diff": "diff --git a/README.md b/README.md @@ -589,7 +589,27 @@ If you need to access $event inside of a JavaScript function you can pass it in\n</div>\n```\n-Notice that, because of [event bubbling](https://en.wikipedia.org/wiki/Event_bubbling), you'll need to use the [`.window`](https://github.com/alpinejs/alpine#x-on) modifier if you are trying to propagate events between sibling nodes:\n+**Note on Event propagation**\n+\n+Notice that, because of [event bubbling](https://en.wikipedia.org/wiki/Event_bubbling), when you need to capture events dispatched from nodes that are under the same nesting hierarchy, you'll need to use the [`.window`](https://github.com/alpinejs/alpine#x-on) modifier:\n+\n+**Example:**\n+\n+```html\n+<div>\n+ <span @custom-event=\"console.log($event.detail.foo)\"></span>\n+ <button @click=\"$dispatch('custom-event', { foo: 'bar' })\">\n+<div>\n+```\n+\n+Since both elements are nested under `div`, this won't work.\n+The `custom-event` is dispatched from the `button` and will propagate to its ancestor, the `div`.\n+\n+**Dispatching to components**\n+\n+You can take advantage of the previous technique to make your components talk to each other:\n+\n+**Example:**\n```html\n<div @foo-event.window=\"console.log($event.detail.foo)\">\n",
        "date": "15.06.2020 19:23:00",
        "repo": "alpinejs/alpine",
        "type": "improve",
        "chatgpt_zeroshot": "Add note on event propagation and dispatching to components in README.md"
    },
    {
        "msg": "improve code-readability If type is passed then filter by type, if not then just return directives. Also comment line has been removed - cause it's clear enough w/o it.",
        "diff": "diff --git a/src/utils.js b/src/utils.js @@ -110,10 +110,9 @@ export function getXAttrs(el, component, type) {\ndirectives = directives.concat(Object.entries(spreadObject).map(([name, value]) => parseHtmlAttribute({ name, value })))\n}\n- // If no type is passed in for filtering, bypass filter\n- if (!type) return directives;\n+ if (type) return directives.filter(i => i.type === type)\n- return directives.filter(i => i.type === type)\n+ return directives;\n}\nfunction parseHtmlAttribute({ name, value }) {\n",
        "date": "25.06.2020 21:39:34",
        "repo": "alpinejs/alpine",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor getXAttrs function to filter directives by type if type is provided"
    },
    {
        "msg": "improve data expression tryCatch",
        "diff": "diff --git a/src/component.js b/src/component.js @@ -28,9 +28,7 @@ export default class Component {\nObject.defineProperty(dataExtras, `$${name}`, { get: function () { return callback(canonicalComponentElementReference) } });\n})\n- tryCatch(() => {\n- this.unobservedData = componentForClone ? componentForClone.getUnobservedData() : saferEval(dataExpression, dataExtras)\n- }, { el, expression: dataExpression })\n+ this.unobservedData = componentForClone ? componentForClone.getUnobservedData() : tryCatch(() => saferEval(dataExpression, dataExtras), { el, expression: dataExpression })\n/* IE11-ONLY:START */\n// For IE11, add our magic properties to the original data for access.\n",
        "date": "23.11.2020 17:59:43",
        "repo": "alpinejs/alpine",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor data retrieval in Component class to use tryCatch for error handling"
    },
    {
        "msg": "improve movePluginBeforeInitAuthPlugin()",
        "diff": "diff --git a/helpers/index.js b/helpers/index.js export function movePluginBeforeInitAuthPlugin(plugins, pluginName) {\n// Moves a plugin that needs access to $this.fireFOO but needs to get run BEFORE nuxt-auth in between the nuxt-fire and the auth plugin.\n- // This function needs to be applied in extendPlugins in nuxt.config.js.s\n+ // This function needs to be applied in extendPlugins in nuxt.config.js.\n+\nconst fromIndex = plugins.findIndex(x => x.src.includes(pluginName))\n- const toIndex = plugins.findIndex(x => x.src.includes('nuxt-fire/main.js'))\n- plugins.splice(toIndex + 1, 0, plugins.splice(fromIndex - 1, 1)[0])\n- return plugins\n+ const toIndex = plugins.findIndex(x => x.src.includes('nuxt-fire/main')) + 1\n+\n+ if (fromIndex === -1) {\n+ const msg = `Nuxt-Fire Helpers: Could not find a plugin that includes the name: ${pluginName}.`\n+ throw new Error(msg)\n+ }\n+\n+ if (toIndex === -1) {\n+ const msg = `Nuxt-Fire Helpers: Nuxt-Fire plugin is not registered.`\n+ throw new Error(msg)\n+ }\n+\n+ if (toIndex > -1 && toIndex < plugins.length) {\n+ const removedElement = plugins.splice(fromIndex, 1)[0]\n+ plugins.splice(toIndex, 0, removedElement)\n+ }\n}\n",
        "date": "11.11.2019 18:15:13",
        "repo": "nuxt-community/firebase-module",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor movePluginBeforeInitAuthPlugin function in helpers/index.js"
    },
    {
        "msg": "improve marks docs.",
        "diff": "diff --git a/docs/docs/marks.md b/docs/docs/marks.md @@ -67,7 +67,7 @@ There is also a special group mark type (`group`) that can contain other marks,\n| on | {% include array t=\"[Trigger](../triggers)\" %} | A set of triggers for modifying mark properties in response to signal changes. |\n| sort | {% include type t=\"Compare\" %} | A comparator for sorting mark items. The sort order will determine the default rendering order. The comparator is defined over generated scenegraph items and sorting is performed after encodings are computed, allowing items to be sorted by size or position. To sort by underlying data properties in addition to mark item properties, use field names such as `\"datum.field\"`.|\n| transform | {% include array t=\"[Transform](../transforms)\" %} | A set of post-encoding transforms, applied after any _encode_ blocks, that operate directly on mark scenegraph items (not backing data objects). These can be useful for performing layout with transforms that can set `x`, `y`, `width`, `height`, _etc._ properties. Only data transforms that do not generate or filter data objects may be used.|\n-| role | {% include type t=\"String\" %} | A metadata string indicating the role of the mark. SVG renderers will add this role value (prepended with the prefix `role-`) as a CSS class name on the enclosing SVG group (`g`) element containing the mark instances. Roles are used internally by Vega to perform custom processing and layout, do not set this property unless you know which layout effect you are trying to achieve.|\n+| role | {% include type t=\"String\" %} | A metadata string indicating the role of the mark. SVG renderers will add this role value (prepended with the prefix `role-`) as a CSS class name on the enclosing SVG group (`g`) element containing the mark instances. Roles are used internally by Vega to perform custom processing and layout; do not set this property unless you know which layout effect you are trying to achieve!|\n## <a name=\"from\"></a>Mark Data Sources (`from`)\n@@ -76,7 +76,7 @@ The `from` property indicates the data source for a set of marks.\n| Property | Type | Description |\n| :------------ | :----------------------------: | :------------- |\n| data | {% include type t=\"String\" %} | The name of the data set to draw from.|\n-| facet | [Facet](#facet) | An option facet definition for partitioning data across multiple group marks. Only [`group` mark](group) definitions may use the facet directive.|\n+| facet | [Facet](#facet) | An optional facet definition for partitioning data across multiple group marks. Only [`group` mark](group) definitions may use the facet directive.|\n### <a name=\"facet\"></a>Faceting\n",
        "date": "14.07.2017 08:34:30",
        "repo": "vega/vega",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor role property description in marks.md"
    },
    {
        "msg": "improve reorderable matrix example.",
        "diff": "diff --git a/docs/examples/reorderable-matrix.vg.json b/docs/examples/reorderable-matrix.vg.json \"signals\": [\n{ \"name\": \"cellSize\", \"value\": 10 },\n+ { \"name\": \"count\", \"update\": \"length(data('nodes'))\" },\n{ \"name\": \"width\", \"update\": \"span(range('position'))\" },\n{ \"name\": \"height\", \"update\": \"width\" },\n{\n]\n},\n{\n- \"name\": \"dest\", \"value\": {},\n+ \"name\": \"dest\", \"value\": -1,\n\"on\": [\n{\n- \"events\": \"[text:mousedown, window:mouseup] > text:mouseover\",\n- \"update\": \"src.name != null ? datum : dest\"\n+ \"events\": \"[@columns:mousedown, window:mouseup] > window:mousemove\",\n+ \"update\": \"src.name && datum !== src ? (0.5 + count * clamp(x(), 0, width) / width) : dest\"\n},\n- {\"events\": \"text:mouseout\", \"update\": \"{}\"}\n- ]\n+ {\n+ \"events\": \"[@rows:mousedown, window:mouseup] > window:mousemove\",\n+ \"update\": \"src.name && datum !== src ? (0.5 + count * clamp(y(), 0, height) / height) : dest\"\n},\n- {\"name\": \"destOrder\", \"update\": \"dest.order\"},\n- {\"name\": \"dragging\", \"update\": \"src.name && dest.name\"}\n+ {\"events\": \"window:mouseup\", \"update\": \"-1\"}\n+ ]\n+ }\n],\n\"data\": [\n\"url\": \"data/miserables.json\",\n\"format\": {\"type\": \"json\", \"property\": \"nodes\"},\n\"transform\": [\n- { \"type\": \"collect\", \"sort\": {\"field\": \"group\"} },\n- { \"type\": \"window\", \"ops\": [\"rank\"], \"as\": [\"order\"] },\n{\n\"type\": \"formula\", \"as\": \"order\",\n- \"expr\": \"dragging && datum === dest ? src.order : datum.order\"\n+ \"expr\": \"datum.group\"\n},\n{\n- \"type\": \"formula\", \"as\": \"order\",\n- \"expr\": \"dragging && datum === src ? destOrder : datum.order\"\n+ \"type\": \"formula\", \"as\": \"score\",\n+ \"expr\": \"dest >= 0 && datum === src ? dest : datum.order\"\n+ },\n+ {\n+ \"type\": \"window\", \"sort\": {\"field\": \"score\"},\n+ \"ops\": [\"row_number\"], \"as\": [\"order\"]\n}\n]\n},\n\"fields\": [\"source\", \"target\"], \"as\": [\"sourceNode\", \"targetNode\"]\n},\n{\n- \"type\": \"formula\",\n- \"as\": \"group\",\n- \"expr\": \"datum.sourceNode.group === datum.targetNode.group ? datum.sourceNode.group : -1\"\n+ \"type\": \"formula\", \"as\": \"group\",\n+ \"expr\": \"datum.sourceNode.group === datum.targetNode.group ? datum.sourceNode.group : count\"\n}\n]\n},\n\"domain\": {\n\"fields\": [\n{\"data\": \"nodes\", \"field\": \"group\"},\n- [-1]\n- ]\n+ {\"signal\": \"count\"}\n+ ],\n+ \"sort\": true\n}\n- },\n- {\n- \"name\": \"labels\",\n- \"type\": \"ordinal\",\n- \"domain\": {\"data\": \"nodes\", \"field\": \"order\"},\n- \"range\": {\"data\": \"nodes\", \"field\": \"name\"}\n}\n],\n\"encode\": {\n\"update\": {\n\"x\": {\"scale\": \"position\", \"field\": \"targetNode.order\"},\n- \"width\": {\"scale\": \"position\", \"band\": 1, \"offset\": -1},\n\"y\": {\"scale\": \"position\", \"field\": \"sourceNode.order\"},\n+ \"width\": {\"scale\": \"position\", \"band\": 1, \"offset\": -1},\n\"height\": {\"scale\": \"position\", \"band\": 1, \"offset\": -1},\n\"fill\": {\"scale\": \"color\", \"field\": \"group\"}\n}\n},\n{\n\"type\": \"text\",\n+ \"name\": \"columns\",\n\"from\": {\"data\": \"nodes\"},\n\"encode\": {\n\"update\": {\n- \"x\": {\"scale\": \"position\", \"field\": \"order\"},\n+ \"x\": {\"scale\": \"position\", \"field\": \"order\", \"band\": 0.5},\n\"y\": {\"offset\": -2},\n- \"dy\": {\"scale\": \"position\", \"band\": 0.5},\n\"text\": {\"field\": \"name\"},\n\"fontSize\": {\"value\": 10},\n\"angle\": {\"value\": -90},\n},\n{\n\"type\": \"text\",\n+ \"name\": \"rows\",\n\"from\": {\"data\": \"nodes\"},\n\"encode\": {\n\"update\": {\n\"x\": {\"offset\": -2},\n- \"y\": {\"scale\": \"position\", \"field\": \"order\"},\n- \"dy\": {\"scale\": \"position\", \"band\": 0.5},\n+ \"y\": {\"scale\": \"position\", \"field\": \"order\", \"band\": 0.5},\n\"text\": {\"field\": \"name\"},\n\"fontSize\": {\"value\": 10},\n\"align\": {\"value\": \"right\"},\n",
        "date": "08.05.2018 09:48:55",
        "repo": "vega/vega",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor reorderable-matrix.vg.json to update event handling and data transformation."
    },
    {
        "msg": "improve async request handling.",
        "diff": "diff --git a/packages/vega-dataflow/src/dataflow/load.js b/packages/vega-dataflow/src/dataflow/load.js @@ -5,8 +5,11 @@ export function ingest(target, data, format) {\n}\nfunction loadPending(df) {\n- var pending = new Promise(function(accept) { resolve = accept; }),\n- resolve;\n+ var accept, reject,\n+ pending = new Promise(function(a, r) {\n+ accept = a;\n+ reject = r;\n+ });\npending.requests = 0;\n@@ -14,8 +17,12 @@ function loadPending(df) {\nif (--pending.requests === 0) {\ndf.runAfter(function() {\ndf._pending = null;\n+ try {\ndf.run();\n- resolve(df);\n+ accept(df);\n+ } catch (err) {\n+ reject(err);\n+ }\n});\n}\n}\n@@ -40,7 +47,5 @@ export function request(target, url, format) {\npending.done();\n})\n.then(pending.done)\n- .catch(function(error) {\n- df.error(error);\n- });\n+ .catch(function(error) { df.warn(error); });\n}\n",
        "date": "05.11.2016 09:02:54",
        "repo": "vega/vega",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor loadPending function to handle promise rejection and update error handling in request function"
    },
    {
        "msg": "improve scenegraph mark lookup error message.",
        "diff": "diff --git a/packages/vega-scenegraph/src/Scenegraph.js b/packages/vega-scenegraph/src/Scenegraph.js @@ -44,7 +44,7 @@ prototype.mark = function(scenepath, markdef) {\nthrow n;\n} catch (err) {\n- error('Invalid scenegraph path: ' + JSON.stringify(scenepath));\n+ error('Invalid scenegraph path: ' + scenepath.marks + ' : ' + scenepath.items);\n}\n};\n",
        "date": "05.12.2016 20:51:49",
        "repo": "vega/vega",
        "type": "improve",
        "chatgpt_zeroshot": "Update error message in mark function to include marks and items in scenegraph path."
    },
    {
        "msg": "improve Encode field modification metadata.",
        "diff": "diff --git a/packages/vega-encode/src/Encode.js b/packages/vega-encode/src/Encode.js @@ -26,7 +26,7 @@ prototype.transform = function(_, pulse) {\nexit = _.encoders.exit || falsy,\nset = (encode && !reenter ? _.encoders[encode] : update) || falsy;\n- if (enter !== falsy || update !== falsy) {\n+ if (pulse.changed(pulse.ADD)) {\npulse.visit(pulse.ADD, function(t) {\nenter(t, _);\nupdate(t, _);\n@@ -37,7 +37,7 @@ prototype.transform = function(_, pulse) {\nif (set !== falsy && set !== update) out.modifies(set.output);\n}\n- if (exit !== falsy) {\n+ if (pulse.changed(pulse.REM) && exit !== falsy) {\npulse.visit(pulse.REM, function(t) { exit(t, _); });\nout.modifies(exit.output);\n}\n@@ -49,13 +49,13 @@ prototype.transform = function(_, pulse) {\nvar mod = enter(t, _);\nif (set(t, _) || mod) out.mod.push(t);\n});\n- out.modifies(enter.output);\n+ if (out.mod.length) out.modifies(enter.output);\n} else {\npulse.visit(flag, function(t) {\nif (set(t, _)) out.mod.push(t);\n});\n}\n- out.modifies(set.output);\n+ if (out.mod.length) out.modifies(set.output);\n}\nreturn out;\n",
        "date": "02.09.2016 19:17:18",
        "repo": "vega/vega",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor pulse handling in Encode.js"
    },
    {
        "msg": "improve error message for missing required transform parameter.",
        "diff": "diff --git a/packages/vega-parser/src/parsers/transform.js b/packages/vega-parser/src/parsers/transform.js @@ -43,7 +43,9 @@ function parseParameter(def, spec, scope) {\n} else {\nvalue = spec[def.name];\nif (value === undefined) {\n- if (def.required) error('Missing required parameter: ' + def.name);\n+ if (def.required) {\n+ error('Missing required ' + spec.type + ' parameter: ' + def.name);\n+ }\nreturn;\n}\n",
        "date": "30.11.2016 14:53:18",
        "repo": "vega/vega",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor error message for missing required parameters in transform parser"
    },
    {
        "msg": "improve scale parser error reporting.",
        "diff": "diff --git a/packages/vega-parser/src/parsers/scale.js b/packages/vega-parser/src/parsers/scale.js import {ref, keyFieldRef} from '../util';\nimport {Collect, Aggregate, MultiExtent, MultiValues, Values} from '../transforms';\n-import {error, isArray, isObject, isString, toSet} from 'vega-util';\n+import {error, isArray, isObject, isString, stringValue, toSet} from 'vega-util';\nvar types = [\n'identity',\n@@ -52,13 +52,22 @@ export default function(spec, scope) {\nfunction parseLiteral(v, scope) {\nreturn !isObject(v) ? v\n: v.signal ? scope.signalRef(v.signal)\n- : error('Unsupported object: ' + v);\n+ : error('Unsupported object: ' + stringValue(v));\n+}\n+\n+function dataLookupError(name) {\n+ error('Can not find data set: ' + name);\n}\n// -- SCALE DOMAIN ----\nfunction parseScaleDomain(domain, spec, scope) {\n- if (!domain) return; // default domain\n+ if (!domain) {\n+ if (spec.domainMin != null || spec.domainMax != null) {\n+ error('No scale domain defined for domainMin/domainMax to override.');\n+ }\n+ return; // default domain\n+ }\nif (domain.signal) {\nreturn scope.signalRef(domain.signal);\n@@ -77,7 +86,7 @@ function explicitDomain(domain, spec, scope) {\nfunction singularDomain(domain, spec, scope) {\nvar data = scope.getData(domain.data);\n- if (!data) error('Can not find data set: ' + domain.data);\n+ if (!data) dataLookupError(domain.data);\nreturn isOrdinal(spec.type)\n? data.valuesRef(scope, domain.field, parseSort(domain.sort, false))\n@@ -102,7 +111,7 @@ function ordinalMultipleDomain(domain, scope, fields) {\n// get value counts for each domain field\ncounts = fields.map(function(f) {\nvar data = scope.getData(f.data);\n- if (!data) error('Can not find data set: ' + f.data);\n+ if (!data) dataLookupError(f.data);\nreturn data.countsRef(scope, f.field);\n});\n@@ -146,7 +155,7 @@ function quantileMultipleDomain(domain, scope, fields) {\n// get value arrays for each domain field\nvar values = fields.map(function(f) {\nvar data = scope.getData(f.data);\n- if (!data) error('Can not find data set: ' + f.data);\n+ if (!data) dataLookupError(f.data);\nreturn data.domainRef(scope, f.field);\n});\n@@ -158,7 +167,7 @@ function numericMultipleDomain(domain, scope, fields) {\n// get extents for each domain field\nvar extents = fields.map(function(f) {\nvar data = scope.getData(f.data);\n- if (!data) error('Can not find data set: ' + f.data);\n+ if (!data) dataLookupError(f.data);\nreturn data.extentRef(scope, f.field);\n});\n",
        "date": "05.01.2017 10:08:25",
        "repo": "vega/vega",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor scale.js to use stringValue for error messages and extract dataLookupError function"
    },
    {
        "msg": "improve view typings",
        "diff": "diff --git a/packages/vega-typings/types/runtime/index.d.ts b/packages/vega-typings/types/runtime/index.d.ts @@ -47,17 +47,25 @@ export class View {\nsignal(name: string, value: any): View;\nsignal(name: string): any;\ncontainer(): HTMLElement | null;\n- addEventListener(type: string, handler: Handler): View;\n- removeEventListener(type: string, handler: Handler): View;\n- addSignalListener(name: string, handler: (name: string, value: any) => void): View;\n- removeSignalListener(name: string, handler: (name: string, value: any) => void): View;\n- tooltip(handler: any, event: Event, item: any, value: any): View;\n+ addEventListener(type: string, handler: EventListenerHandler): View;\n+ removeEventListener(type: string, handler: EventListenerHandler): View;\n+ addSignalListener(name: string, handler: SignalListenerHandler): View;\n+ removeSignalListener(name: string, handler: SignalListenerHandler): View;\n+ addResizeListener(handler: ResizeHandler): View;\n+ removeResizeListener(handler: ResizeHandler): View;\n+ tooltip(handler: TooltipHandler): View;\n}\n+export type ScenegraphEvent = MouseEvent | TouchEvent | KeyboardEvent;\n+\nexport const Warn: number;\nexport const changeset: any;\nexport function loader(opt?: any): Loader;\n-export type Handler = (event: Event, item?: Item) => void;\n+export type EventListenerHandler = (event: ScenegraphEvent, item?: Item) => void;\n+export type SignalListenerHandler = (name: string, value: any) => void;\n+export type ResizeHandler = (width: number, height: number) => void;\n+export type TooltipHandler = (handler: any, event: MouseEvent, item: Item, value: any) => void;\n+\nexport interface Item<T = any> {\n/**\n* The underlying data element to which this item corresponds.\n",
        "date": "21.04.2018 14:35:01",
        "repo": "vega/vega",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor event handling and add resize listener and tooltip handler to View class"
    },
    {
        "msg": "improve performance by not assigning the font to the canvas until necessary",
        "diff": "diff --git a/packages/vega-scenegraph/src/util/text.js b/packages/vega-scenegraph/src/util/text.js @@ -6,7 +6,7 @@ import {lru} from './lru';\nconst TEXT_WIDTH_CACHE_SIZE = 10000;\nconst widthCache = lru(TEXT_WIDTH_CACHE_SIZE);\n-var currFontHeight;\n+var currFontHeight, currentFont;\nexport var textMetrics = {\nheight: fontSize,\n@@ -31,13 +31,14 @@ function estimate(text) {\n// measure text width if canvas is available\nfunction measureWidth(item, text) {\nreturn fontSize(item) <= 0 ? 0\n- : (context.font = font(item), measure(textValue(item, text)));\n+ : (currentFont = font(item), measure(textValue(item, text)));\n}\nfunction measure(text) {\n- const key = context.font + text;\n+ const key = currentFont + text;\nlet width = widthCache.get(key);\nif (width === undefined) {\n+ context.font = currentFont;\nwidth = context.measureText(text).width;\nwidthCache.set(key, width);\n}\n@@ -86,7 +87,7 @@ function truncate(item, line) {\nif (textMetrics.width === measureWidth) {\n// we are using canvas\n- context.font = font(item);\n+ currentFont = font(item);\nwidth = measure;\n} else {\n// we are relying on estimates\n",
        "date": "29.01.2020 23:04:39",
        "repo": "vega/vega",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor text.js to use a single variable for current font height and font style."
    },
    {
        "msg": "improve default formatting of times for screen readers by replacing abbreviations",
        "diff": "diff --git a/packages/vega-scale/src/caption.js b/packages/vega-scale/src/caption.js import {labelFormat, labelValues} from './labels';\nimport {Time, UTC} from './scales/types';\nimport {isDiscrete, isDiscretizing} from './scales';\n-import {peek} from 'vega-util';\n+import {isString, peek} from 'vega-util';\nfunction format(scale, specifier, formatType) {\nconst type = formatType || scale.type;\n+\n+ // replace abbreviated time specifiers to improve screen reader experience\n+ if (isString(specifier) && (type === Time || type === UTC)) {\n+ specifier = specifier.replace(/%a/g, '%A').replace(/%b/g, '%B');\n+ }\nreturn !specifier && type === Time ? d => new Date(d).toLocaleString()\n: !specifier && type === UTC ? d => new Date(d).toUTCString()\n: labelFormat(scale, 5, null, specifier, formatType, true);\n",
        "date": "24.04.2020 09:30:02",
        "repo": "vega/vega",
        "type": "improve",
        "chatgpt_zeroshot": "Improve screen reader experience by replacing abbreviated time specifiers in caption.js"
    },
    {
        "msg": "improve spacing in form style",
        "diff": "diff --git a/packages/vega/test/index.html b/packages/vega/test/index.html .vega-bind { line-height: 18px; margin-bottom: 2px; }\n.vega-bind-name { display: inline-block; width: 100px; }\n.vega-bind input[type=\"range\"] { width: 400px; }\n- .vega-bind-radio label { margin: 0 0.5em 0 2px; }\n+ .vega-bind input[type=\"radio\"] { margin-right: 0.5em; }\n+ .vega-bind input[type=\"range\"] { margin-right: 0.5em; }\n+ .vega-bind-radio label { margin-right: 1em; }\n</style>\n</head>\n<body>\n",
        "date": "26.04.2020 09:32:13",
        "repo": "vega/vega",
        "type": "improve",
        "chatgpt_zeroshot": "Update styling for radio inputs in vega-bind."
    },
    {
        "msg": "improve tv detection",
        "diff": "diff --git a/packages/rnv/src/platformTools/android.js b/packages/rnv/src/platformTools/android.js @@ -42,6 +42,8 @@ import { getMergedPlugin, parsePlugins } from '../pluginTools';\nconst readline = require('readline');\n+let currentDeviceProps = null;\n+\nconst composeDevicesString = (devices, returnArray) => {\nlogTask(`composeDevicesString:${devices ? devices.length : null}`);\nconst devicesArray = [];\n@@ -146,16 +148,42 @@ const isSquareishDevice = (width, height) => {\nreturn false;\n};\n+const getRunningDeviceProp = (c, udid, prop) => {\n+ // avoid multiple calls to the same device\n+ if (currentDeviceProps) {\n+ if (!prop) return currentDeviceProps;\n+ return currentDeviceProps[prop];\n+ }\n+ const rawProps = child_process.execSync(`${c.cli[CLI_ANDROID_ADB]} -s ${udid} shell getprop`).toString().trim();\n+ const lines = rawProps.trim().split(/\\r?\\n/);\n+ lines.forEach((line) => {\n+ const words = line.split(']: [');\n+ const key = words[0].slice(1);\n+ const value = words[1].slice(0, words[1].length - 1);\n+\n+ if (!currentDeviceProps) currentDeviceProps = {};\n+ currentDeviceProps[key] = value;\n+ });\n+\n+ return getRunningDeviceProp(c, udid, prop);\n+};\n+\n+const decideIfTV = (c, udid) => {\n+ const model = getRunningDeviceProp(c, udid, 'ro.product.model');\n+ const name = getRunningDeviceProp(c, udid, 'ro.product.name');\n+ const flavor = getRunningDeviceProp(c, udid, 'ro.build.flavor');\n+ const description = getRunningDeviceProp(c, udid, 'ro.build.description');\n+\n+ if (model.includes('atv') || name.includes('atv') || flavor.includes('atv') || description.includes('atv')) return true;\n+ return false;\n+};\n+\nconst getDeviceType = async (device, c) => {\n- device.isPhone = true;\n- device.isMobile = true;\nlogDebug('getDeviceType - in', { device });\nif (device.udid !== 'unknown') {\n- const dumpsysResult = child_process.execSync(`${c.cli[CLI_ANDROID_ADB]} -s ${device.udid} shell dumpsys tv_input`).toString();\nconst screenSizeResult = child_process.execSync(`${c.cli[CLI_ANDROID_ADB]} -s ${device.udid} shell wm size`).toString();\nconst screenDensityResult = child_process.execSync(`${c.cli[CLI_ANDROID_ADB]} -s ${device.udid} shell wm density`).toString();\n- const arch = child_process.execSync(`${c.cli[CLI_ANDROID_ADB]} -s ${device.udid} shell getprop ro.product.cpu.abi`).toString().trim();\n-\n+ const arch = getRunningDeviceProp(c, device.udid, 'ro.product.cpu.abi');\nlet screenProps;\nif (screenSizeResult) {\n@@ -168,16 +196,17 @@ const getDeviceType = async (device, c) => {\nscreenProps = { ...screenProps, density: parseInt(density, 10) };\n}\n+ device.isTV = decideIfTV(c, device.udid);\n+\nif (screenSizeResult && screenDensityResult) {\nconst { width, height, density } = screenProps;\nconst diagonalInches = calculateDeviceDiagonal(width, height, density);\nscreenProps = { ...screenProps, diagonalInches };\n- device.isTablet = diagonalInches > IS_TABLET_ABOVE_INCH;\n+ device.isTablet = !device.isTV && diagonalInches > IS_TABLET_ABOVE_INCH && diagonalInches <= 15;\ndevice.isWear = isSquareishDevice(width, height);\n}\n- device.isTV = !!dumpsysResult;\ndevice.isPhone = !device.isTablet && !device.isWear && !device.isTV;\ndevice.isMobile = !device.isWear && !device.isTV;\ndevice.screenProps = screenProps;\n@@ -187,7 +216,6 @@ const getDeviceType = async (device, c) => {\n}\nif (device.avdConfig) {\n- const batteryPresent = device.avdConfig['hw.battery'];\nconst density = parseInt(device.avdConfig['hw.lcd.density'], 10);\nconst width = parseInt(device.avdConfig['hw.lcd.width'], 10);\nconst height = parseInt(device.avdConfig['hw.lcd.height'], 10);\n@@ -204,9 +232,18 @@ const getDeviceType = async (device, c) => {\nif (string.includes('wear')) device.isWear = true;\n});\n+ const avdId = device.avdConfig.AvdId;\n+ const name = device.avdConfig['hw.device.name'];\n+ const skin = device.avdConfig['skin.name'];\n+ const image = device.avdConfig['image.sysdir.1'];\n+\n+ device.isTV = false;\n+ [avdId, name, skin, image].forEach((string) => {\n+ if (string.includes('tv') || string.includes('TV')) device.isTV = true;\n+ });\n+\nconst diagonalInches = calculateDeviceDiagonal(width, height, density);\n- device.isTablet = diagonalInches > IS_TABLET_ABOVE_INCH;\n- device.isTV = batteryPresent !== 'yes';\n+ device.isTablet = !device.isTV && diagonalInches > IS_TABLET_ABOVE_INCH;\ndevice.isPhone = !device.isTablet && !device.isWear && !device.isTV;\ndevice.isMobile = !device.isWear && !device.isTV;\ndevice.arch = arch;\n@@ -313,6 +350,7 @@ const _parseDevicesResult = async (devicesString, avdsString, deviceOnly, c) =>\n.then(devicesArray => devicesArray.filter((device) => {\n// filter devices based on selected platform\nconst { platform } = c;\n+ console.log(device);\nconst matches = (platform === ANDROID && device.isTablet) || (platform === ANDROID_WEAR && device.isWear) || (platform === ANDROID_TV && device.isTV) || (platform === ANDROID && device.isMobile);\nlogDebug('getDeviceType - filter', { device, matches, platform });\nreturn matches;\n",
        "date": "20.06.2019 23:11:46",
        "repo": "pavjacko/renative",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor Android device properties retrieval and TV detection logic"
    },
    {
        "msg": "improve readObjectSync",
        "diff": "diff --git a/packages/rnv/src/systemTools/fileutils.js b/packages/rnv/src/systemTools/fileutils.js @@ -191,8 +191,12 @@ export const writeObjectSync = (filePath, obj, spaces, addNewLine = true) => {\n};\nexport const readObjectSync = (filePath, sanitize = false, c) => {\n+ if (!filePath) {\n+ logWarning('readObjectSync: filePath is undefined');\n+ return null;\n+ }\nif (!fs.existsSync(filePath)) {\n- logError(`File at ${filePath} does not exist`);\n+ logWarning(`readObjectSync: File at ${filePath} does not exist`);\nreturn null;\n}\nlet obj;\n@@ -207,7 +211,7 @@ export const readObjectSync = (filePath, sanitize = false, c) => {\n}\n}\n} catch (e) {\n- logError(`Parsing of ${chalk.white(filePath)} failed with ${e}`);\n+ logWarning(`readObjectSync: Parsing of ${chalk.white(filePath)} failed with ${e}`);\nreturn null;\n}\nreturn obj;\n",
        "date": "26.08.2019 23:10:03",
        "repo": "pavjacko/renative",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor readObjectSync function to log warnings instead of errors for non-existent files and parsing failures"
    },
    {
        "msg": "improve startup performance when fetching account data",
        "diff": "diff --git a/vault/src/get-operator-events.js b/vault/src/get-operator-events.js @@ -3,6 +3,8 @@ var api = require('./api')\nvar getDatabase = require('./database')\nvar defaultStats = require('./queries')\n+var NO_PENDING_EVENTS = '__NONEPENDING__'\n+\nmodule.exports = getOperatorEvents\nfunction getOperatorEvents (query) {\n@@ -20,6 +22,13 @@ function fetchOperatorEvents (accountId, params) {\nreturn api.getAccount(accountId, params)\n.then(function (_account) {\naccount = _account\n+ // in case no new events were returned decrypting the private key of the\n+ // account can be skipped altogether\n+ if (Object.keys(account.events).length === 0) {\n+ var err = new Error('No pending events')\n+ err.status = NO_PENDING_EVENTS\n+ throw err\n+ }\nreturn api.decryptPrivateKey(account.encryptedPrivateKey)\n})\n.then(function (result) {\n@@ -64,41 +73,50 @@ function fetchOperatorEvents (accountId, params) {\nreturn Promise.all(eventDecryptions)\n})\n.then(function (results) {\n- return results.filter(function (r) { return r })\n+ return {\n+ events: results.filter(function (r) {\n+ return r\n+ }),\n+ account: account\n+ }\n})\n- .then(function (results) {\n- delete account.events\n- return { events: results, account: account }\n+ .catch(function (err) {\n+ if (err.status === NO_PENDING_EVENTS) {\n+ return { events: [], account: account }\n+ }\n+ throw err\n})\n}\nfunction ensureSync (accountId) {\nvar db = getDatabase(accountId)\nreturn db.events.toCollection().keys()\n- .then(function (eventIds) {\n- return eventIds.length\n- ? api.getDeletedEvents({ eventIds: eventIds })\n- : null\n- })\n- .then(function (response) {\n- return response\n- ? db.events.bulkDelete(response.eventIds)\n- : null\n- })\n- .then(function () {\n- return db.events\n+ .then(function (knownEventIds) {\n+ var fetchNewEvents = db.events\n.orderBy('eventId')\n.last()\n- })\n.then(function (latestLocalEvent) {\nvar params = latestLocalEvent\n? { since: latestLocalEvent.eventId }\n: null\nreturn fetchOperatorEvents(accountId, params)\n})\n- .then(function (payload) {\n- return db.events.bulkAdd(payload.events).then(function () {\n+ var pruneEvents = (knownEventIds.length\n+ ? api.getDeletedEvents({ eventIds: knownEventIds })\n+ : Promise.resolve({ eventIds: [] })\n+ )\n+ .then(function (response) {\n+ return response\n+ ? db.events.bulkDelete(response.eventIds)\n+ : null\n+ })\n+ return Promise.all([fetchNewEvents, pruneEvents])\n+ .then(function (results) {\n+ var payload = results[0]\n+ return db.events.bulkAdd(payload.events)\n+ .then(function () {\nreturn payload.account\n})\n})\n+ })\n}\n",
        "date": "30.06.2019 20:52:49",
        "repo": "offen/offen",
        "type": "improve",
        "chatgpt_zeroshot": "Add handling for case when no pending events are returned"
    },
    {
        "msg": "improve guard against bad key data",
        "diff": "diff --git a/vault/src/get-operator-events.js b/vault/src/get-operator-events.js @@ -47,11 +47,18 @@ function fetchOperatorEvents (accountId, params) {\n.then(function (userKey) {\nreturn { userKey: userKey, userId: hashedUserId }\n})\n+ .catch(function () {\n+ return null\n+ })\n})\nreturn Promise.all(userSecretDecryptions)\n})\n.then(function (userSecrets) {\n- var byHashedUserId = userSecrets.reduce(function (acc, next) {\n+ var byHashedUserId = userSecrets\n+ .filter(function (v) {\n+ return v\n+ })\n+ .reduce(function (acc, next) {\nacc[next.userId] = next.userKey\nreturn acc\n}, {})\n@@ -68,6 +75,9 @@ function fetchOperatorEvents (accountId, params) {\n.then(function (decryptedPayload) {\nreturn Object.assign({}, event, { payload: decryptedPayload })\n})\n+ .catch(function () {\n+ return null\n+ })\n})\nreturn Promise.all(eventDecryptions)\n",
        "date": "30.06.2019 21:15:51",
        "repo": "offen/offen",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor userSecrets handling in fetchOperatorEvents"
    },
    {
        "msg": "improve ready state check when injecting vault",
        "diff": "diff --git a/packages/vault/index.js b/packages/vault/index.js @@ -58,9 +58,13 @@ function createVault (host) {\n})\n})\n- if (document.body) {\n+ switch (document.readyState) {\n+ case 'complete':\n+ case 'loaded':\n+ case 'interactive':\ndocument.body.appendChild(vault)\n- } else {\n+ break\n+ default:\ndocument.addEventListener('DOMContentLoaded', function () {\ndocument.body.appendChild(vault)\n})\n",
        "date": "21.09.2019 11:29:37",
        "repo": "offen/offen",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor createVault function to append vault element based on document.readyState"
    },
    {
        "msg": "improve formatiing of values in auditorium",
        "diff": "diff --git a/auditorium/views/main.js b/auditorium/views/main.js @@ -7,72 +7,6 @@ var Table = require('./../components/table')\nmodule.exports = view\n-function keyMetric (name, value) {\n- return html`\n- <div class=\"w-50 w-100-ns mb3 mb4-ns\">\n- <p class=\"mv0 f2\">${value}</p>\n- <p class=\"mv0 normal\">${name}</p>\n- </div>\n- `\n-}\n-\n-function retentionSquare (value) {\n- if (value === null) {\n- return null\n- }\n- return html`\n- <div title=\"${formatNumber(value, 100)}%\">\n- <div\n- style=\"opacity: ${value !== 0 ? (value * 0.75 + 0.25) : 1}\"\n- class=\"${value !== 0 ? 'bg-dark-green' : 'bg-light-gray'} h3 w-100\"\n- >\n- </div>\n- </div>\n- `\n-}\n-\n-function relativeTime (offset) {\n- if (offset === 0) {\n- return __('This week')\n- }\n- return __('%d days earlier', offset * 7)\n-}\n-\n-function retentionTable (matrix) {\n- var rows = matrix.map(function (row, index) {\n- var elements = row.slice()\n- while (elements.length < matrix[0].length) {\n- elements.push(null)\n- }\n- return html`\n- <tr>\n- <td>${relativeTime(index)}</td>\n- ${elements.map(function (element) { return html`<td>${retentionSquare(element)}</td>` })}\n- </tr>\n- `\n- })\n- return html`\n- <table class=\"w-100 collapse mb3 dt--fixed\">\n- <thead>\n- <tr>\n- <td></td>\n- ${matrix.map(function (row, index) { return html`<td>${relativeTime(index)}</td>` })}\n- </tr>\n- </thead>\n- <tbody>\n- ${rows}\n- </tbody>\n- </table>\n- `\n-}\n-\n-function formatNumber (value, factor) {\n- return (value * (factor || 1)).toLocaleString(process.env.LOCALE, {\n- maximumFractionDigits: 1,\n- minimumFractionDigits: 1\n- })\n-}\n-\nfunction view (state, emit) {\nvar userHasOptedIn = state.consentStatus && state.consentStatus.status === 'allow'\n@@ -265,15 +199,15 @@ function view (state, emit) {\n<div class=\"w-100 w-25-m w-20-ns pa3 mb2 bt bb ba-ns br0 br2-ns b--black-10 bg-white\">\n<h4 class =\"f5 normal mt0 mb3 mb4-ns\">Key metrics</h4>\n<div class=\"flex flex-wrap\">\n- ${keyMetric(__('Unique %s', entityName), uniqueEntities)}\n- ${keyMetric(__('Unique Sessions'), uniqueSessions)}\n+ ${keyMetric(__('Unique %s', entityName), formatCount(uniqueEntities))}\n+ ${keyMetric(__('Unique Sessions'), formatCount(uniqueSessions))}\n<hr class=\"mt0 mb3 w-100 bb bw1 b--black-10\">\n${state.model.avgPageDepth ? keyMetric(__('Avg. Page Depth'), formatNumber(state.model.avgPageDepth)) : null}\n${keyMetric(__('Bounce Rate'), `${formatNumber(state.model.bounceRate, 100)}%`)}\n${isOperator && state.model.loss ? keyMetric(__('Plus'), `${formatNumber(state.model.loss, 100)}%`) : null}\n<hr class=\"mt0 mb3 w-100 bb bw1 b--black-10\">\n${keyMetric(__('Mobile Users'), `${formatNumber(state.model.mobileShare, 100)}%`)}\n- ${state.model.avgPageload ? keyMetric(__('Avg. Page Load time'), `${Math.round(state.model.avgPageload)} ms`) : null}\n+ ${state.model.avgPageload ? keyMetric(__('Avg. Page Load time'), formatDuration(state.model.avgPageload)) : null}\n</div>\n</div>\n`\n@@ -353,3 +287,86 @@ function view (state, emit) {\n</div>\n`\n}\n+\n+function keyMetric (name, value) {\n+ return html`\n+ <div class=\"w-50 w-100-ns mb3 mb4-ns\">\n+ <p class=\"mv0 f2\">${value}</p>\n+ <p class=\"mv0 normal\">${name}</p>\n+ </div>\n+ `\n+}\n+\n+function retentionSquare (value) {\n+ if (value === null) {\n+ return null\n+ }\n+ return html`\n+ <div title=\"${formatNumber(value, 100)}%\">\n+ <div\n+ style=\"opacity: ${value !== 0 ? (value * 0.75 + 0.25) : 1}\"\n+ class=\"${value !== 0 ? 'bg-dark-green' : 'bg-light-gray'} h3 w-100\"\n+ >\n+ </div>\n+ </div>\n+ `\n+}\n+\n+function relativeTime (offset) {\n+ if (offset === 0) {\n+ return __('This week')\n+ }\n+ return __('%d days earlier', offset * 7)\n+}\n+\n+function retentionTable (matrix) {\n+ var rows = matrix.map(function (row, index) {\n+ var elements = row.slice()\n+ while (elements.length < matrix[0].length) {\n+ elements.push(null)\n+ }\n+ return html`\n+ <tr>\n+ <td>${relativeTime(index)}</td>\n+ ${elements.map(function (element) { return html`<td>${retentionSquare(element)}</td>` })}\n+ </tr>\n+ `\n+ })\n+ return html`\n+ <table class=\"w-100 collapse mb3 dt--fixed\">\n+ <thead>\n+ <tr>\n+ <td></td>\n+ ${matrix.map(function (row, index) { return html`<td>${relativeTime(index)}</td>` })}\n+ </tr>\n+ </thead>\n+ <tbody>\n+ ${rows}\n+ </tbody>\n+ </table>\n+ `\n+}\n+\n+function formatDuration (valueInMs) {\n+ if (valueInMs >= 1000) {\n+ return formatNumber(valueInMs / 1000, 1, 2) + __('s')\n+ }\n+ return Math.round(valueInMs) + __('ms')\n+}\n+\n+function formatCount (count) {\n+ if (count > 1000000) {\n+ return formatNumber(count / 1000000) + __('M')\n+ }\n+ if (count > 1000) {\n+ return formatNumber(count / 1000) + __('k')\n+ }\n+ return count\n+}\n+\n+function formatNumber (value, factor, digits) {\n+ return (value * (factor || 1)).toLocaleString(process.env.LOCALE, {\n+ maximumFractionDigits: digits || 1,\n+ minimumFractionDigits: digits || 1\n+ })\n+}\n",
        "date": "06.02.2020 09:12:49",
        "repo": "offen/offen",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor key metrics and add format functions for count and duration"
    },
    {
        "msg": "improve visual hints on password input",
        "diff": "diff --git a/auditorium/src/views/components/_shared/new-password-input.js b/auditorium/src/views/components/_shared/new-password-input.js @@ -8,6 +8,7 @@ const { h, Fragment } = require('preact')\nconst { forwardRef } = require('preact/compat')\nconst { useState } = require('preact/hooks')\nconst zxcvbn = require('zxcvbn')\n+const classnames = require('classnames')\nconst strengths = [\n__('weak'),\n@@ -37,7 +38,7 @@ const NewPasswordInput = forwardRef((props, ref) => {\nconst { labelClass = null, children, ...otherProps } = props\nconst [score, setScore] = useState(0)\n- const [policyMet, setPolicyMet] = useState(false)\n+ const [policyMet, setPolicyMet] = useState(null)\nreturn (\n<Fragment>\n@@ -51,9 +52,15 @@ const NewPasswordInput = forwardRef((props, ref) => {\noninput={(e) => {\ne.target.setCustomValidity('')\nconst val = e.target.value\n+\nconst { score } = zxcvbn(val)\nsetScore(score)\n+\n+ if (val.length === 0) {\n+ setPolicyMet(null)\n+ } else {\nsetPolicyMet(val.length >= 8)\n+ }\n}}\noninvalid={(e) => {\ne.target.setCustomValidity(\n@@ -63,7 +70,9 @@ const NewPasswordInput = forwardRef((props, ref) => {\n{...otherProps}\n/>\n<p class='mt1 mb3'>\n+ <em class={classnames('i', policyMet === false ? 'dark-red' : null)}>\n<StrengthMessage score={score} policyMet={policyMet} />\n+ </em>\n</p>\n</label>\n</Fragment>\n",
        "date": "26.06.2020 11:01:15",
        "repo": "offen/offen",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor password input component to handle policy met state"
    },
    {
        "msg": "improve range display on mobile",
        "diff": "diff --git a/auditorium/src/views/components/auditorium/range-selector.js b/auditorium/src/views/components/auditorium/range-selector.js @@ -18,7 +18,7 @@ const predefinedRanges = [\n{ display: __('30 days'), query: { range: '30', resolution: 'days' } },\n{ display: __('6 weeks'), query: { range: '6', resolution: 'weeks' } },\n{ display: __('12 weeks'), query: { range: '12', resolution: 'weeks' } },\n- { display: __('6 months'), query: { range: '6', resolution: 'months' } }\n+ { display: __('6 months'), query: { range: '6', resolution: 'months' }, endsSecondBlock: true }\n]\nconst RangeSelector = (props) => {\n@@ -43,8 +43,9 @@ const RangeSelector = (props) => {\nkey={`fixed-range-${index}`}\nclass={classnames(\n'pr3 bt b--light-gray',\n- range.opensSecondBlock ? 'fixed-ranges-start pl4' : null,\n- range.endsFirstBlock ? 'br' : null\n+ range.opensSecondBlock ? 'fixed-ranges-start pl4-ns' : null,\n+ range.endsFirstBlock ? 'br-ns' : null,\n+ range.endsSecondBlock ? 'pr4' : null\n)}\n>\n@@ -65,7 +66,7 @@ const RangeSelector = (props) => {\nitems.push((() => {\nconst isActive = from && to\nreturn (\n- <li key='custom-daterange' class='datepicker-display bt bl b--light-gray pl4 pr3'>\n+ <li key='custom-daterange' class='datepicker-display bt b--light-gray pr3'>\n<span\nclass={isActive\n? 'pointer dark-green b link dim dib mb2 mr3 pa2 bt bw2 b--dark-green'\n@@ -89,11 +90,13 @@ const RangeSelector = (props) => {\n<style\ndangerouslySetInnerHTML={{\n__html: `\n+ @media screen and (min-width: 30em) {\n.fixed-ranges-start::before {\ncontent: '${__('Last')}';\ndisplay: inline-block;\nmargin-right: 1.5em;\n}\n+ }\n`\n}}\n/>\n",
        "date": "27.01.2021 21:07:33",
        "repo": "offen/offen",
        "type": "improve",
        "chatgpt_zeroshot": "Add endsSecondBlock property to predefinedRanges and update classnames in RangeSelector"
    },
    {
        "msg": "improve grid styling demo improved grid styling demo",
        "diff": "diff --git a/demos/examples/grid/29.html b/demos/examples/grid/29.html }\n</style>\n<div id=\"grid\" style=\"width: 100%; height: 350px;\"></div>\n+<br>\n+<button class=\"w2ui-btn\" onclick=\"style_toggle(2)\">Toggle #2</button>\n+<button class=\"w2ui-btn\" onclick=\"style_toggle(3)\">Toggle #3</button>\n+<button class=\"w2ui-btn\" onclick=\"style_toggle(4)\">Toggle #4</button>\n+<button class=\"w2ui-btn\" onclick=\"style_toggle(5)\">Toggle #5</button>\n+<button class=\"w2ui-btn\" onclick=\"style_toggle(8)\">Toggle #8</button>\n+<button class=\"w2ui-btn\" onclick=\"style_toggle(9)\">Toggle #9</button>\n<!--CODE-->\n<script>\n-$(function () {\n- setTimeout( function() {\n- w2ui.grid.get(8).w2ui = {\n+function style_toggle(recid) {\n+ const record = w2ui.grid.get(recid);\n+ if(record.w2ui) {\n+ delete record.w2ui\n+ }\n+ else if(recid === 2) {\n+ record.w2ui = { style: \"background-color: #C2F5B4\" }\n+ }\n+ else if(recid === 3) {\n+ record.w2ui = { class: \"row\" }\n+ }\n+ else if(recid === 4) {\n+ record.w2ui = { style: { lname: \"background: red;\", email: \"font-weight: bold;\" } }\n+ }\n+ else if(recid === 5) {\n+ record.w2ui = { class: { fname: \"cell1\", sdate: \"cell2\" } }\n+ }\n+ else if(recid === 8) {\n+ record.w2ui = {\nstyle: {\n0: 'text-decoration: underline overline;',\n1: 'background-color: silver !important; font-weight: bold;',\n}\n}\n- w2ui.grid.get(9).w2ui = {\n+ }\n+ else if (recid === 9) {\n+ record.w2ui = {\nclass: {\n1: 'cell1',\n2: 'cell2',\n}\n}\n+ }\nw2ui.grid.refresh()\n- }, 2000 )\n+}\n+$(function () {\nw2utils.formatters.custom_centered = function(value, params, record) {\nif(!value) {\nreturn 'Bad Date!'\n@@ -52,6 +79,9 @@ $(function () {\n}\n$('#grid').w2grid({\nname: 'grid',\n+ show: {\n+ lineNumbers: true,\n+ },\ncolumns: [\n{ field: 'fname', text: 'First Name', size: '150px', info: true },\n{ field: 'lname', text: 'Last Name', size: '150px', render: function(record, index, column_index, value){\n@@ -72,8 +102,8 @@ $(function () {\n{ recid: 5, fname: \"Kelly\", lname: \"Silver\", email: \"jdoe@gmail.com\", sdate: \"4/3/2012\", comment: 'w2ui: { class: { fname: \"cell1\", sdate: \"cell2\" } }', w2ui: { class: { fname: \"cell1\", sdate: \"cell2\" } } },\n{ recid: 6, fname: \"Francis\", lname: \"W2ui\", email: \"jdoe@gmail.com\", sdate: \"4/3/2012\", comment: '\"Last Name\" modified by column renderer' },\n{ recid: 7, fname: \"Sergei\", lname: \"Rachmaninov\", email: \"jdoe@gmail.com\", sdate: 0, comment: \"not styled\" },\n- { recid: 8, fname: \"Mike\", lname: \"Scotty\", email: \"mscotty@gmail.com\", sdate: \"11/11/2022\", comment: \"styled on timer with w2ui.style.column\" },\n- { recid: 9, fname: \"Pat\", lname: \"Tobson\", email: \"ptob@gmail.com\", sdate: \"12/12/2012\", comment: \"styled on timer with w2ui.class.column\" },\n+ { recid: 8, fname: \"Mike\", lname: \"Scotty\", email: \"mscotty@gmail.com\", sdate: \"11/11/2022\", comment: \"styled on button click with w2ui.style.column #\" },\n+ { recid: 9, fname: \"Pat\", lname: \"Tobson\", email: \"ptob@gmail.com\", sdate: \"12/12/2012\", comment: \"styled on button click with w2ui.class.column #\" },\n]\n});\n});\n",
        "date": "23.11.2021 09:30:53",
        "repo": "vitmalina/w2ui",
        "type": "improve",
        "chatgpt_zeroshot": "Add buttons to toggle styling on specific grid records."
    },
    {
        "msg": "improve query formatting refs Oneliners with lots of chained commands are hardly readable on small screens",
        "diff": "diff --git a/packages/limit-service/lib/config.js b/packages/limit-service/lib/config.js @@ -23,7 +23,11 @@ module.exports = {\n},\ncustomIntegrations: {\ncurrentCountQuery: async (db) => {\n- let result = await db.knex('integrations').count('id', {as: 'count'}).whereNotIn('type', ['internal', 'builtin']).first();\n+ let result = await db.knex('integrations')\n+ .count('id', {as: 'count'})\n+ .whereNotIn('type', ['internal', 'builtin'])\n+ .first();\n+\nreturn result.count;\n}\n},\n",
        "date": "07.04.2021 18:13:10",
        "repo": "tryghost/sdk",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor currentCountQuery function in config.js to improve readability"
    },
    {
        "msg": "improve implemenation of urlFor admin/api make the implementation easier to read and a bit more consistent",
        "diff": "diff --git a/packages/url-utils/lib/url-utils.js b/packages/url-utils/lib/url-utils.js @@ -173,15 +173,16 @@ module.exports = class UrlUtils {\nurlPath = urlPath.replace(/\\/$/, '');\n}\n} else if (context === 'admin') {\n- urlPath = this.getAdminUrl() || this.getSiteUrl();\n+ let adminUrl = this.getAdminUrl() || this.getSiteUrl();\n+ let adminPath = '/ghost/';\nif (absolute) {\n- urlPath += 'ghost/';\n+ urlPath = this.urlJoin(adminUrl, adminPath);\n} else {\n- urlPath = '/ghost/';\n+ urlPath = adminPath;\n}\n} else if (context === 'api') {\n- urlPath = this.getAdminUrl() || this.getSiteUrl();\n+ let adminUrl = this.getAdminUrl() || this.getSiteUrl();\nlet apiPath = this._config.baseApiPath + '/';\nif (data.type && ['admin', 'content'].includes(data.type)) {\n@@ -190,10 +191,13 @@ module.exports = class UrlUtils {\napiPath += this._config.defaultApiType;\n}\n+ // Ensure we end with a trailing slash\n+ apiPath += '/';\n+\nif (absolute) {\n- urlPath = urlPath.replace(/\\/$/, '') + apiPath + '/';\n+ urlPath = this.urlJoin(adminUrl, apiPath);\n} else {\n- urlPath = apiPath + '/';\n+ urlPath = apiPath;\n}\n} else if (_.isString(context) && _.indexOf(_.keys(knownPaths), context) !== -1) {\n// trying to create a url for a named path\n",
        "date": "04.05.2022 19:50:56",
        "repo": "tryghost/sdk",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor URL generation logic for admin and API contexts"
    },
    {
        "msg": "improve warning message for failed prerenderUrls file processing",
        "diff": "diff --git a/packages/cli/lib/lib/webpack/render-html-plugin.js b/packages/cli/lib/lib/webpack/render-html-plugin.js @@ -72,7 +72,7 @@ module.exports = function(config) {\npages = result;\n}\n} catch (error) {\n- warn(error.message);\n+ warn(`Failed to load prerenderUrls file, using default!\\n${error.stack}`);\n}\n}\n",
        "date": "21.01.2019 10:40:09",
        "repo": "preactjs/preact-cli",
        "type": "improve",
        "chatgpt_zeroshot": "Update error handling in render-html-plugin to provide more detailed error message"
    },
    {
        "msg": "improve upload docs",
        "diff": "diff --git a/examples/docs/en-US/upload.md b/examples/docs/en-US/upload.md url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100',\nstatus: 'finished'\n}],\n- imageUrl: ''\n+ fileList2: [{\n+ name: 'food.jpeg',\n+ url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100',\n+ status: 'finished'\n+ }, {\n+ name: 'food2.jpeg',\n+ url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100',\n+ status: 'finished'\n+ }],\n+ fileList3: [{\n+ name: 'food.jpeg',\n+ url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100',\n+ status: 'finished'\n+ }, {\n+ name: 'food2.jpeg',\n+ url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100',\n+ status: 'finished'\n+ }],\n+ imageUrl: '',\n+ dialogImageUrl: '',\n+ dialogVisible: false\n};\n},\nmethods: {\nhandlePreview(file) {\nconsole.log(file);\n},\n+ handlePictureCardPreview(file) {\n+ this.dialogImageUrl = file.url;\n+ this.dialogVisible = true;\n+ },\nsubmitUpload() {\nthis.$refs.upload.submit();\n},\nthis.$message.error('Avatar picture size can not exceed 2MB!');\n}\nreturn isJPG && isLt2M;\n+ },\n+ handleChange(file, fileList) {\n+ this.fileList3 = fileList.slice(-3);\n}\n}\n}\n@@ -88,7 +115,7 @@ Upload files by clicking or drag-and-drop\n### User avatar upload\n-Use beforeUpload hook to limit the upload file format and size.\n+Use `before-upload` hook to limit the upload file format and size.\n::: demo\n```html\n@@ -132,25 +159,35 @@ Use beforeUpload hook to limit the upload file format and size.\n### Photo Wall\n-Use listType to change the fileList style.\n+Use `list-type` to change the fileList style.\n::: demo\n```html\n<el-upload\naction=\"http://localhost:9000/upload\"\nlist-type=\"picture-card\"\n- :on-preview=\"handlePreview\"\n+ :on-preview=\"handlePictureCardPreview\"\n:on-remove=\"handleRemove\">\n<i class=\"el-icon-plus\"></i>\n</el-upload>\n+<el-dialog v-model=\"dialogVisible\" size=\"tiny\">\n+ <img width=\"100%\" :src=\"dialogImageUrl\" alt=\"\">\n+</el-dialog>\n<script>\nexport default {\n+ data() {\n+ return {\n+ dialogImageUrl: '',\n+ dialogVisible: false\n+ };\n+ },\nmethods: {\nhandleRemove(file, fileList) {\nconsole.log(file, fileList);\n},\n- handlePreview(file) {\n- console.log(file);\n+ handlePictureCardPreview(file) {\n+ this.dialogImageUrl = file.url;\n+ this.dialogVisible = true;\n}\n}\n}\n@@ -167,7 +204,7 @@ Use listType to change the fileList style.\naction=\"http://localhost:9000/upload\"\n:on-preview=\"handlePreview\"\n:on-remove=\"handleRemove\"\n- :file-list=\"fileList\"\n+ :file-list=\"fileList2\"\nlist-type=\"picture\">\n<el-button size=\"small\" type=\"primary\">Click to upload</el-button>\n<div slot=\"tip\" class=\"el-upload__tip\">jpg/png files with a size less than 500kb</div>\n@@ -176,7 +213,7 @@ Use listType to change the fileList style.\nexport default {\ndata() {\nreturn {\n- fileList: [{name: 'food.jpeg', url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'}, {name: 'food2.jpeg', url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'}]\n+ fileList2: [{name: 'food.jpeg', url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'}, {name: 'food2.jpeg', url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'}]\n};\n},\nmethods: {\n@@ -192,6 +229,45 @@ Use listType to change the fileList style.\n```\n:::\n+### File list control\n+\n+Use `on-change` hook function to control upload file list\n+\n+::: demo\n+```html\n+<el-upload\n+ class=\"upload-demo\"\n+ action=\"http://localhost:9000/upload\"\n+ :on-change=\"handleChange\"\n+ :file-list=\"fileList3\">\n+ <el-button size=\"small\" type=\"primary\">Click to upload</el-button>\n+ <div slot=\"tip\" class=\"el-upload__tip\">jpg/png files with a size less than 500kb</div>\n+</el-upload>\n+<script>\n+ export default {\n+ data() {\n+ return {\n+ fileList3: [{\n+ name: 'food.jpeg',\n+ url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100',\n+ status: 'finished'\n+ }, {\n+ name: 'food2.jpeg',\n+ url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100',\n+ status: 'finished'\n+ }]\n+ };\n+ },\n+ methods: {\n+ handleChange(file, fileList) {\n+ this.fileList3 = fileList.slice(-3);\n+ }\n+ }\n+ }\n+</script>\n+```\n+:::\n+\n### Drag to upload\nYou can drag your file to a certain area to upload it.\n",
        "date": "20.02.2017 11:34:59",
        "repo": "hug-sun/element3",
        "type": "improve",
        "chatgpt_zeroshot": "Add file list control and dialog for image preview in upload feature"
    },
    {
        "msg": "improve svpanel style",
        "diff": "diff --git a/packages/theme-default/src/color-picker.css b/packages/theme-default/src/color-picker.css height: 180px;\n@descendent white, black {\n- cursor: pointer;\nposition: absolute;\ntop: 0;\nleft: 0;\n}\n@descendent cursor {\n- cursor: pointer;\nposition: absolute;\n> div {\n",
        "date": "21.02.2017 12:09:11",
        "repo": "hug-sun/element3",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor color-picker.css for cursor styling and positioning"
    },
    {
        "msg": "improve clarity of documentation for .card-body",
        "diff": "diff --git a/docs/4.0/components/card.md b/docs/4.0/components/card.md @@ -33,14 +33,14 @@ Below is an example of a basic card with mixed content and a fixed width. Cards\nCards support a wide variety of content, including images, text, list groups, links, and more. Below are examples of what's supported.\n-### Blocks\n+### Body\nThe building block of a card is the `.card-body`. Use it whenever you need a padded section within a card.\n{% example html %}\n<div class=\"card\">\n<div class=\"card-body\">\n- This is some text within a card block.\n+ This is some text within a card body.\n</div>\n</div>\n{% endexample %}\n",
        "date": "05.09.2017 00:38:00",
        "repo": "coreui/coreui",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor card component to use \"body\" instead of \"block\" for consistency."
    },
    {
        "msg": "improve theme-color-level() using abs() `abs()` gets the absolute value of `$level`. That way, `if/else` statement can be completely eliminated.",
        "diff": "diff --git a/scss/_functions.scss b/scss/_functions.scss @function theme-color-level($color-name: \"primary\", $level: 0) {\n$color: theme-color($color-name);\n$color-base: if($level > 0, #000, #fff);\n+ $level: abs($level);\n- @if $level < 0 {\n- // Lighter values need a quick double negative for the Sass math to work\n- @return mix($color-base, $color, $level * -1 * $theme-color-interval);\n- } @else {\n@return mix($color-base, $color, $level * $theme-color-interval);\n}\n-}\n",
        "date": "26.09.2017 14:05:59",
        "repo": "coreui/coreui",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor theme-color-level function to handle negative levels properly"
    },
    {
        "msg": "improve visual appeal of examples",
        "diff": "diff --git a/docs/4.0/utilities/display.md b/docs/4.0/utilities/display.md @@ -35,13 +35,13 @@ The media queries effect screen widths with the given breakpoint *or larger*. Fo\n## Examples\n{% example html %}\n-<div class=\"d-inline bg-success\">d-inline</div>\n-<div class=\"d-inline bg-success\">d-inline</div>\n+<div class=\"d-inline p-2 bg-primary text-white\">d-inline</div>\n+<div class=\"d-inline p-2 bg-dark text-white\">d-inline</div>\n{% endexample %}\n{% example html %}\n-<span class=\"d-block bg-primary\">d-block</span>\n-<span class=\"d-block bg-primary\">d-block</span>\n+<span class=\"d-block p-2 bg-primary text-white\">d-block</span>\n+<span class=\"d-block p-2 bg-dark text-white\">d-block</span>\n{% endexample %}\n## Hiding Elements\n",
        "date": "22.10.2017 19:35:42",
        "repo": "coreui/coreui",
        "type": "improve",
        "chatgpt_zeroshot": "Update display utility classes with padding and text color changes"
    },
    {
        "msg": "improve lint vars output messaging",
        "diff": "diff --git a/build/lint-vars.js b/build/lint-vars.js @@ -44,7 +44,7 @@ function findUnusedVars(dir) {\n// Array of all Sass variables\nconst variables = sassFilesString.match(/(^\\$[a-zA-Z0-9_-]+[^:])/gm)\n- console.log(`There's a total of ${variables.length} variables.`)\n+ console.log(`Found ${variables.length} total variables.`)\n// Loop through each variable\nvariables.forEach((variable) => {\n@@ -52,7 +52,7 @@ function findUnusedVars(dir) {\nconst count = (sassFilesString.match(re) || []).length\nif (count === 1) {\n- console.log(`Variable \"${variable}\" is only used once!`)\n+ console.log(`Variable \"${variable}\" is not being used.`)\nunusedVarsFound = true\nglobalSuccess = false\n}\n",
        "date": "28.12.2017 10:24:08",
        "repo": "coreui/coreui",
        "type": "improve",
        "chatgpt_zeroshot": "Refactor console log messages in lint-vars.js"
    },
    {
        "msg": "improve responsive table docs Splits the examples with code snippets Adds note about possible broken visuals Closes",
        "diff": "diff --git a/site/docs/4.1/content/tables.md b/site/docs/4.1/content/tables.md @@ -764,8 +764,10 @@ Across every breakpoint, use `.table-responsive` for horizontally scrolling tabl\nUse `.table-responsive{-sm|-md|-lg|-xl}` as needed to create responsive tables up to a particular breakpoint. From that breakpoint and up, the table will behave normally and not scroll horizontally.\n-<div class=\"bd-example\">\n+**These tables may appear broken until their responsive styles apply at specific viewport widths.**\n+\n{% for bp in site.data.breakpoints %}{% unless bp.breakpoint == \"xs\" %}\n+<div class=\"bd-example\">\n<div class=\"table-responsive{{ bp.abbr }}\">\n<table class=\"table\">\n<thead>\n@@ -818,15 +820,12 @@ Use `.table-responsive{-sm|-md|-lg|-xl}` as needed to create responsive tables u\n</tbody>\n</table>\n</div>\n-{% endunless %}{% endfor %}\n</div>\n-\n{% highlight html %}\n-{% for bp in site.data.breakpoints %}{% unless bp.breakpoint == \"xs\" %}\n<div class=\"table-responsive{{ bp.abbr }}\">\n<table class=\"table\">\n...\n</table>\n</div>\n-{% endunless %}{% endfor %}\n{% endhighlight %}\n+{% endunless %}{% endfor %}\n",
        "date": "15.07.2018 22:51:47",
        "repo": "coreui/coreui",
        "type": "improve",
        "chatgpt_zeroshot": "Add responsive styles to tables for specific viewport widths"
    },
    {
        "msg": "ignore all branches for deployment",
        "diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -7,7 +7,7 @@ defaults: &defaults\ndefault_filters: &default_filters\ntags:\n- only: '^v.*'\n+ only: '/v[0-9]+(\\.[0-9]+)*/'\njobs:\ninstall:\n@@ -139,3 +139,5 @@ workflows:\n- build\nfilters:\n<<: *default_filters\n+ branches:\n+ ignore: '/.*/'\n",
        "date": "04.08.2017 16:30:00",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "ignore",
        "chatgpt_zeroshot": "Update CircleCI config to include branch filter for ignore pattern"
    },
    {
        "msg": "ignore facet if facet count equals results count",
        "diff": "diff --git a/pages/search.js b/pages/search.js @@ -77,7 +77,9 @@ class SearchPage extends React.Component {\n.filter(([name]) => name !== 'keyword')\n.map(([name, values]) => ({\nname,\n- values: values.filter(v => !query.facets.some(a => a.name === name && a.value === v.value))\n+ values: values.filter(v => (\n+ v.count !== count && !query.facets.some(a => a.name === name && a.value === v.value)\n+ ))\n}))\n.filter(group => group.values.length > 1)\n}\n",
        "date": "17.11.2017 11:59:39",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "ignore",
        "chatgpt_zeroshot": "Refactor filter logic in search page to exclude values with count equal to count variable."
    },
    {
        "msg": "ignore swipes if menu open",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/main.js b/MaterialSkin/HTML/material/html/js/main.js @@ -49,6 +49,9 @@ var app = new Vue({\n},\nmethods: {\nswipe(ev, direction) {\n+ if (this.$store.state.visibleMenus.size>0) {\n+ return;\n+ }\nif (this.openDialogs.size>1 ||\n(this.openDialogs.size==1 && (this.$store.state.page=='now-playing' ||\n(!this.openDialogs.has('np-viewer') && !this.openDialogs.has('info-dialog'))))) {\n",
        "date": "03.09.2019 12:10:42",
        "repo": "cdrummond/lms-material",
        "type": "ignore",
        "chatgpt_zeroshot": "Prevent swipe action when menus are visible"
    },
    {
        "msg": "ignore click on back/home if menu open",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-page.js b/MaterialSkin/HTML/material/html/js/browse-page.js @@ -46,7 +46,7 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\n<v-btn :title=\"trans.cancel\" flat icon class=\"toolbar-button\" @click=\"clearSelection()\"><v-icon>cancel</v-icon></v-btn>\n</v-layout>\n<v-layout v-else>\n- <v-btn flat icon @click=\"goHome()\" class=\"toolbar-button\" id=\"home-button\"><v-icon>home</v-icon></v-btn>\n+ <v-btn flat icon @click=\"homeBtnPressed()\" class=\"toolbar-button\" id=\"home-button\"><v-icon>home</v-icon></v-btn>\n<v-btn flat icon @click=\"backBtnPressed()\" class=\"toolbar-button\" id=\"back-button\"><v-icon>arrow_back</v-icon></v-btn>\n<v-layout row wrap @click=\"showHistory($event)\" v-if=\"headerSubTitle\" v-bind:class=\"{pointer : history.length>1}\">\n<v-flex xs12 class=\"ellipsis subtoolbar-title subtoolbar-pad\">{{headerTitle}}</v-flex>\n@@ -1266,6 +1266,11 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\nthis.fetchingItems = false;\n});\n},\n+ homeBtnPressed() {\n+ if (this.$store.state.visibleMenus.size<1) {\n+ this.goHome();\n+ }\n+ },\ngoHome() {\nif (this.fetchingItems) {\n//if (lmsListSource) {\n@@ -1314,8 +1319,10 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\n}\n},\nbackBtnPressed() {\n+ if (this.$store.state.visibleMenus.size<1) {\nthis.lastBackBtnPress = new Date();\nthis.goBack();\n+ }\n},\ngoBack(refresh) {\nif (this.fetchingItems) {\n",
        "date": "03.09.2019 12:14:17",
        "repo": "cdrummond/lms-material",
        "type": "ignore",
        "chatgpt_zeroshot": "Refactor home button functionality in browse-page.js"
    },
    {
        "msg": "ignore swipes on text",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/nowplaying-page.js b/MaterialSkin/HTML/material/html/js/nowplaying-page.js @@ -1108,6 +1108,9 @@ var lmsNowPlaying = Vue.component(\"lms-now-playing\", {\n}\n},\ntouchStart(event) {\n+ if (event.srcElement.classList.contains(\"np-title\") || event.srcElement.classList.contains(\"np-text\") || event.srcElement.classList.contains(\"np-text-landscape\")) {\n+ return;\n+ }\nif (this.$store.state.swipeVolume && !this.menu.show && event.touches && event.touches.length>0 && this.playerStatus.dvc) {\nthis.touch={x:event.touches[0].clientX, y:event.touches[0].clientY, moving:false};\nthis.lastSentVolume=-1;\n",
        "date": "27.05.2020 22:32:18",
        "repo": "cdrummond/lms-material",
        "type": "ignore",
        "chatgpt_zeroshot": "Ignore touch events on specific elements in nowplaying-page.js"
    },
    {
        "msg": "ignore presetParams.favorites_type for podcasts, and alway use \"link\"",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-functions.js b/MaterialSkin/HTML/material/html/js/browse-functions.js @@ -674,7 +674,9 @@ function browseItemAction(view, act, item, index, event) {\nif (item.presetParams && item.presetParams.favorites_url) {\nfavUrl = item.presetParams.favorites_url;\nfavIcon = item.presetParams.icon;\n+ if (SECTION_PODCASTS!=item.section) {\nfavType = item.presetParams.favorites_type;\n+ }\nif (item.presetParams.favorites_title) {\nfavTitle = item.presetParams.favorites_title;\n}\n",
        "date": "29.06.2021 18:37:07",
        "repo": "cdrummond/lms-material",
        "type": "ignore",
        "chatgpt_zeroshot": "Add condition to check section type before setting favorites type."
    },
    {
        "msg": "ignore status for players that we don't know about.",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/server.js b/MaterialSkin/HTML/material/html/js/server.js @@ -496,13 +496,21 @@ var lmsServer = Vue.component('lms-server', {\nplayer.model = this.$store.state.player.model;\nthis.isPlaying = player.isplaying;\n} else {\n+ let found = false;\nfor (var i=0, len=this.$store.state.players.length; i<len; ++i) {\nif (this.$store.state.players[i].id == playerId) {\nplayer.isgroup = this.$store.state.players[i].isgroup;\nplayer.icon = this.$store.state.players[i].icon;\nplayer.link = this.$store.state.players[i].link;\nplayer.model = this.$store.state.players[i].model;\n+ found = true;\n+ break;\n+ }\n}\n+ // Ignore status for players that we don't know about. When deleting a group player in 'Manage players' we get\n+ // a status message for this removed player, whcich causes it to be re-added...\n+ if (!found) {\n+ return;\n}\n}\n",
        "date": "02.12.2022 21:37:37",
        "repo": "cdrummond/lms-material",
        "type": "ignore",
        "chatgpt_zeroshot": "Fix issue with re-adding removed players in server.js"
    },
    {
        "msg": "ignore right click to be safe",
        "diff": "diff --git a/js/tabs.js b/js/tabs.js // element so that tabs can be added/removed/hidden/shown without needing to change event bindings.\nthis.tablist\n.on('mousedown.tabs', '> li', function(e) {\n+ // let right click pass through\n+ if (e.which !== 3) {\nreturn self.handleTabClick(e, $(this));\n+ }\n})\n.on('click.tabs', 'a', routeAnchorClick)\n.on('click.tabs', '.icon', handleIconClick)\n",
        "date": "21.03.2017 15:09:39",
        "repo": "infor-design/enterprise",
        "type": "ignore",
        "chatgpt_zeroshot": "Allow right click to pass through on tab list items"
    },
    {
        "msg": "ignore this.",
        "diff": "diff --git a/components/datepicker/datepicker.js b/components/datepicker/datepicker.js @@ -1494,7 +1494,7 @@ DatePicker.prototype = {\nif ((new Date(year, month, dayCnt))\n.setHours(tHours, tMinutes, tSeconds, 0) === elementDate\n- .setHours(tHours, tMinutes, tSeconds, 0)) {\n+ .setHours(tHours, tMinutes, tSeconds, 0)) { //eslint-disable-line\nth.addClass(`is-selected${(s.range.useRange ? ' range' : '')}`).attr('aria-selected', 'true');\n}\n}\n",
        "date": "17.04.2018 15:29:16",
        "repo": "infor-design/enterprise",
        "type": "ignore",
        "chatgpt_zeroshot": "Fix eslint error in datepicker.js file"
    },
    {
        "msg": "ignore visual regress for now",
        "diff": "diff --git a/test/components/popupmenu/popupmenu.e2e-spec.js b/test/components/popupmenu/popupmenu.e2e-spec.js @@ -48,7 +48,7 @@ describe('Popupmenu example-selectable tests', () => {\n});\nif (utils.isChrome() && utils.isCI()) {\n- it('Should not visual regress on example-selectable', async () => {\n+ xit('Should not visual regress on example-selectable', async () => {\nconst popupmenuSection = await element(by.id('maincontent'));\nawait browser.driver\n.wait(protractor.ExpectedConditions.presenceOf(popupmenuSection), config.waitsFor);\n",
        "date": "18.10.2018 17:46:53",
        "repo": "infor-design/enterprise",
        "type": "ignore",
        "chatgpt_zeroshot": "Disable visual regression test for example-selectable in popupmenu component"
    },
    {
        "msg": "ignore all tests so that we can test out a CI problem",
        "diff": "diff --git a/test/components/applicationmenu/applicationmenu.e2e-spec.js b/test/components/applicationmenu/applicationmenu.e2e-spec.js @@ -133,9 +133,9 @@ describe('Applicationmenu accordion truncated text tooltip tests', () => {\n});\n});\n-describe('Applicationmenu Personalization tests', () => {\n+fdescribe('Applicationmenu Personalization tests', () => {\nbeforeEach(async () => {\n- await utils.setPage('/components/applicationmenu/example-personalized?colors=7025B6');\n+ await utils.setPage('/components/applicationmenu/example-personalized.html?colors=7025B6');\nawait browser.driver.sleep(config.sleepLonger);\n});\n",
        "date": "12.04.2019 08:58:13",
        "repo": "infor-design/enterprise",
        "type": "ignore",
        "chatgpt_zeroshot": "Fix page URL in Applicationmenu Personalization tests"
    },
    {
        "msg": "ignore this test as i cannot get it to work",
        "diff": "diff --git a/test/components/applicationmenu/applicationmenu.e2e-spec.js b/test/components/applicationmenu/applicationmenu.e2e-spec.js @@ -148,7 +148,7 @@ describe('Applicationmenu Personalization tests', () => {\n});\nif (utils.isChrome() && utils.isCI()) {\n- fit('Should not visual regress on personalize', async () => {\n+ xit('Should not visual regress on personalize', async () => {\nconst windowSize = await browser.driver.manage().window().getSize();\nawait browser.driver.manage().window().setSize(1280, 720);\nconst section = await element(by.css('body.no-scroll'));\n",
        "date": "12.04.2019 11:38:38",
        "repo": "infor-design/enterprise",
        "type": "ignore",
        "chatgpt_zeroshot": "Fix visual regression test for personalize in applicationmenu"
    },
    {
        "msg": "ignore a test for now",
        "diff": "diff --git a/test/components/locale/locale.func-spec.js b/test/components/locale/locale.func-spec.js @@ -900,7 +900,7 @@ describe('Locale API', () => {\nexpect(Locale.formatDate('00000000')).toEqual('');\n});\n- it('Should format dates with short timezones', () => {\n+ xit('Should format dates with short timezones', () => {\nLocale.set('en-US');\nexpect(['3/22/2018 8:11 PM EST', '3/22/2018 8:11 PM EDT']).toContain(Locale.formatDate(new Date(2018, 2, 22, 20, 11, 12), { date: 'timezone' }));\n",
        "date": "07.06.2019 13:05:53",
        "repo": "infor-design/enterprise",
        "type": "ignore",
        "chatgpt_zeroshot": "\"Disable test for formatting dates with short timezones\""
    },
    {
        "msg": "ignore databricks resource provider since it doesn't generate an SDK",
        "diff": "diff --git a/gulpfile.js b/gulpfile.js @@ -19,6 +19,7 @@ const defaultAutoRestVersion = '1.2.2';\nvar usingAutoRestVersion;\nconst specRoot = args['spec-root'] || \"https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification\";\nconst project = args['project'];\n+const use = args['use'];\nvar language = 'Azure.NodeJS';\nvar modeler = 'Swagger';\nconst regexForExcludedServices = /\\/(intune|documentdbManagement|insightsManagement|insights|search)\\//i;\n@@ -89,13 +90,14 @@ function generateProject(projectObj, specRoot, autoRestVersion) {\n}\nlet packageName = projectObj.packageName;\nconsole.log(`\\n>>>>>>>>>>>>>>>>>>>Start: \"${packageName}\" >>>>>>>>>>>>>>>>>>>>>>>>>`);\n- let outputDir = `lib/services/${projectObj.dir}`;\n+ let outputDir = `${__dirname}/lib/services/${projectObj.dir}`;\nlet cmd = 'autorest';\nif (projectObj.batchGeneration) {\n- cmd += `--nodejs-sdks-folder=${__dirname}/${outputDir} --package-name=${packageName} --nodejs --license-header=MICROSOFT_MIT_NO_VERSION`;\n+ cmd += ` --nodejs-sdks-folder=${outputDir}`;\n} else {\n- cmd += `--nodejs.output-folder=${__dirname}/${outputDir} --package-name=${packageName} --nodejs --license-header=MICROSOFT_MIT_NO_VERSION`;\n+ cmd += ` --nodejs.output-folder=${outputDir}`;\n}\n+ cmd += ` --package-name=${packageName} --nodejs --license-header=MICROSOFT_MIT_NO_VERSION`;\n// if using azure template, pass in azure-arm argument. otherwise, get the generic template by not passing in anything.\nif (language === azureTemplate) cmd += ' --azure-arm ';\n@@ -106,11 +108,15 @@ function generateProject(projectObj, specRoot, autoRestVersion) {\ncmd += ` ${specPath}`;\n}\n+ if (use) {\n+ cmd += ` --use=${use}`;\n+ }\n+\nif (projectObj.ft !== null && projectObj.ft !== undefined) cmd += ' --payload-flattening-threshold=' + projectObj.ft;\nif (projectObj.clientName !== null && projectObj.clientName !== undefined) cmd += ' --override-client-name=' + projectObj.clientName;\nif (projectObj.tag !== null && projectObj.tag !== undefined) cmd += `--tag=${projectObj.tag}`;\nif (projectObj.args !== undefined) {\n- cmd = cmd + ' ' + args;\n+ cmd += ` ${args}`;\n}\ntry {\n@@ -188,9 +194,11 @@ function codegen(projectObj, index) {\n}\ngulp.task('default', function () {\n- console.log(\"Usage: gulp codegen [--spec-root <swagger specs root>] [--project <project name>]\\n\");\n+ console.log(\"Usage: gulp codegen [--spec-root <swagger specs root>] [--use <autorest.nodejs root> [--project <project name>]\\n\");\nconsole.log(\"--spec-root\");\n- console.log(\"\\tRoot location of Swagger API specs, default value is \\\"https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master\\\"\");\n+ console.log(\"\\tRoot location of Swagger API specs, default value is \\\"https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification\");\n+ console.log(\"--use\");\n+ console.log(\"\\tRoot location of autorest.nodejs repository. If this is not specified, then the latest install generator for NodeJS will be used.\");\nconsole.log(\"--project\\n\\tProject to regenerate, default is all. List of available project names:\");\nObject.keys(mappings).forEach(function (i) {\nconsole.log('\\t' + i.magenta);\n@@ -305,7 +313,7 @@ gulp.task('sync-mappings-with-repo', (cb) => {\nconst dirs = fs.readdirSync(specRoot).filter(f => fs.statSync(`${specRoot}/${f}`).isDirectory());\nlet newlyAdded = [];\nlet originalProjectCount = Object.keys(mappings).length;\n- const resourceProvidersToIgnore = ['common-types', 'intune', 'azsadmin', 'timeseriesinsights'];\n+ const resourceProvidersToIgnore = ['azsadmin', 'common-types', 'databricks', 'intune', 'timeseriesinsights'];\nconst resourceProviderDataPlanesToIgnore = ['applicationinsights', 'operationalinsights'];\nfor (let rp of dirs) {\nif (resourceProvidersToIgnore.indexOf(rp.toLowerCase()) === -1) {\n",
        "date": "20.03.2018 12:49:27",
        "repo": "azure/azure-sdk-for-node",
        "type": "ignore",
        "chatgpt_zeroshot": "Add support for specifying the autorest.nodejs root location in code generation."
    },
    {
        "msg": "ignore watch changes within dist dirs",
        "diff": "diff --git a/src/wmr-middleware.js b/src/wmr-middleware.js @@ -13,14 +13,16 @@ import { compileSingleModule } from './lib/compile-single-module.js';\n* @param {object} [options]\n* @param {string} [options.cwd]\n* @param {string} [options.out = '.dist']\n+ * @param {string} [options.distDir] if set, ignores watch events within this directory\n* @param {boolean} [options.sourcemap]\n* @param {boolean} [options.profile] Enable bundler performance profiling\n* @param {(error: Error & { clientMessage?: string })=>void} [options.onError]\n* @param {(event: { changes: string[], duration: number })=>void} [options.onChange]\n* @returns {import('polka').Middleware}\n*/\n-export default function wmrMiddleware({ cwd, out = '.dist', onError, onChange } = {}) {\n+export default function wmrMiddleware({ cwd, out = '.dist', distDir = 'dist', onError, onChange } = {}) {\ncwd = resolve(process.cwd(), cwd || '.');\n+ distDir = resolve(dirname(out), distDir);\nlet useFsEvents = false;\ntry {\n@@ -31,7 +33,7 @@ export default function wmrMiddleware({ cwd, out = '.dist', onError, onChange }\nconst watcher = chokidar.watch(cwd, {\ncwd,\ndisableGlobbing: true,\n- ignored: /(^|[/\\\\])node_modules[/\\\\]/,\n+ ignored: [/(^|[/\\\\])(node_modules|\\.git|\\.DS_Store)([/\\\\]|$)/, resolve(cwd, out), resolve(cwd, distDir)],\nuseFsEvents\n});\nconst pendingChanges = new Set();\n",
        "date": "29.06.2020 11:04:12",
        "repo": "preactjs/wmr",
        "type": "ignore",
        "chatgpt_zeroshot": "Add distDir option to wmrMiddleware function"
    },
    {
        "msg": "ignore puppeteer errors",
        "diff": "diff --git a/packages/wmr/test/test-helpers.js b/packages/wmr/test/test-helpers.js @@ -140,6 +140,17 @@ const stripColors = str => str.replace(/\\x1b\\[(?:[0-9]{1,3}(?:;[0-9]{1,3})*)?[m|\n*/\nexport const wait = ms => new Promise(r => setTimeout(r, ms));\n+/**\n+ * Pupppeteer often throws when the pages is navigated and we try\n+ * to assert something. Ignore any errors when that happens.\n+ * See: https://github.com/boxine/pentf/blob/c046f5275ae7201a427b9dc30965d633855bb3be/src/utils.js#L259\n+ * @param {Error} err\n+ * @returns {boolean}\n+ */\n+function ignoreError(err) {\n+ return /Execution context was destroyed|(Session|Connection|Target) closed/.test(err.message);\n+}\n+\n/**\n* @param {() => boolean | Promise<boolean>} fn\n* @param {number} timeout\n@@ -149,8 +160,14 @@ export async function waitFor(fn, timeout = 2000) {\nconst start = Date.now();\nwhile (start + timeout >= Date.now()) {\n+ try {\nconst result = await fn();\nif (result) return true;\n+ } catch (err) {\n+ if (!ignoreError(err)) {\n+ throw err;\n+ }\n+ }\n// Wait a little before the next iteration\nawait wait(10);\n",
        "date": "27.04.2021 22:15:24",
        "repo": "preactjs/wmr",
        "type": "ignore",
        "chatgpt_zeroshot": "Fix error handling in waitFor function"
    },
    {
        "msg": "ignore node_modules in test fixture",
        "diff": "diff --git a/packages/wmr/test/boot.test.js b/packages/wmr/test/boot.test.js @@ -46,7 +46,9 @@ describe('boot', () => {\nawait waitForMessage(instance.output, /Wrote/);\n- const files = (await fs.readdir(env.tmp.path)).filter(file => !file.startsWith('.env') && file !== 'wmr-main.mjs');\n+ const files = (await fs.readdir(env.tmp.path)).filter(\n+ file => !file.startsWith('.env') && !file.includes('node_modules')\n+ );\nexpect(files).toEqual(['dist', 'public']);\nconst dist = await fs.readdir(path.join(env.tmp.path, 'dist'));\n",
        "date": "03.05.2021 19:02:25",
        "repo": "preactjs/wmr",
        "type": "ignore",
        "chatgpt_zeroshot": "Refactor file filtering in boot.test.js to exclude node_modules files"
    },
    {
        "msg": "ignore npm download count in Chromatic tests",
        "diff": "diff --git a/src/components/layout/NpmDownloadCount.js b/src/components/layout/NpmDownloadCount.js @@ -54,6 +54,7 @@ const NpmDownloadCount = ({ loading, npmDownloads, ...props }) => {\nstatus=\"secondary\"\ncountLink={url.npm}\nloading={loading}\n+ className=\"chromatic-ignore\"\n{...props}\n/>\n);\n",
        "date": "23.01.2019 10:09:38",
        "repo": "storybookjs/frontpage",
        "type": "ignore",
        "chatgpt_zeroshot": "Add className \"chromatic-ignore\" to NpmDownloadCount component"
    },
    {
        "msg": "ignore waves in chromatic",
        "diff": "diff --git a/src/components/screens/IndexScreen/Share/Player.js b/src/components/screens/IndexScreen/Share/Player.js @@ -127,6 +127,7 @@ export const Player = ({ x, y, type, delay, count }) => (\ntransition={{ type: 'pop', delay, duration: 0.4 }}\n>\n<Wave\n+ data-chromatic=\"ignore\"\ncolor={type}\nsize=\"big\"\nstyle={{ x: '-50%', y: '-50%' }}\n@@ -137,6 +138,7 @@ export const Player = ({ x, y, type, delay, count }) => (\ntransition={transition(delay, count)}\n/>\n<Wave\n+ data-chromatic=\"ignore\"\ncolor={type}\nsize=\"medium\"\nstyle={{ x: '-50%', y: '-50%' }}\n@@ -147,6 +149,7 @@ export const Player = ({ x, y, type, delay, count }) => (\ntransition={transition(delay, count)}\n/>\n<Wave\n+ data-chromatic=\"ignore\"\ncolor={type}\nsize=\"small\"\nstyle={{ x: '-50%', y: '-50%' }}\n",
        "date": "28.11.2022 11:28:14",
        "repo": "storybookjs/frontpage",
        "type": "ignore",
        "chatgpt_zeroshot": "Add data-chromatic=\"ignore\" to Wave components in Player.js"
    },
    {
        "msg": "ignore failure when hashing local state",
        "diff": "diff --git a/src/lib/mina_state/local_state.ml b/src/lib/mina_state/local_state.ml @@ -88,7 +88,7 @@ let to_input\n; excess\n; ledger\n; success\n- ; failure_status\n+ ; failure_status = _\n} :\nt) =\nlet open Random_oracle.Input in\n@@ -100,7 +100,6 @@ let to_input\n; Amount.to_input excess\n; Ledger_hash.to_input ledger\n; bitstring [ success ]\n- ; Transaction_status.Failure.option_to_input failure_status\n|]\nmodule Checked = struct\n",
        "date": "08.11.2021 16:40:32",
        "repo": "minaprotocol/mina",
        "type": "ignore",
        "chatgpt_zeroshot": "Refactor to remove unused failure_status in local_state.ml"
    },
    {
        "msg": "ignore network request to prevent unused",
        "diff": "diff --git a/src/app/rosetta/lib/network.ml b/src/app/rosetta/lib/network.ml @@ -387,7 +387,8 @@ end\nmodule Options = struct\nmodule Impl (M : Monad_fail.S) = struct\n- let handle (network : Network_request.t) =\n+ (* Currently, mainnet, testnet, devnet etc don't affect Rosetta options *)\n+ let handle (_network : Network_request.t) =\nM.return @@\n{ Network_options_response.version=\nVersion.create \"1.4.9\" \"v1.0\"\n",
        "date": "15.01.2022 22:39:23",
        "repo": "minaprotocol/mina",
        "type": "ignore",
        "chatgpt_zeroshot": "Refactor handle function to ignore network type in Rosetta options"
    },
    {
        "msg": "ignore callback on error in To_build_breadcrumb",
        "diff": "diff --git a/src/lib/ledger_catchup/super_catchup.ml b/src/lib/ledger_catchup/super_catchup.ml @@ -945,6 +945,12 @@ let setup_state_machine_runner ~t ~verifier ~downloader ~logger\nstep (Deferred.map ~f:Result.return s)\nwith\n| Error e ->\n+ (* TODO consider rejecting the callback in some cases,\n+ see https://github.com/MinaProtocol/mina/issues/11087 *)\n+ Option.value_map valid_cb ~default:ignore\n+ ~f:\n+ Mina_net2.Validation_callback.fire_if_not_already_fired\n+ `Ignore ;\nignore\n( Cached.invalidate_with_failure c\n: Mina_block.almost_valid_block Envelope.Incoming.t ) ;\n",
        "date": "07.06.2022 17:44:48",
        "repo": "minaprotocol/mina",
        "type": "ignore",
        "chatgpt_zeroshot": "Add validation callback handling in setup_state_machine_runner"
    },
    {
        "msg": "ignore return type in log and raise",
        "diff": "diff --git a/src/lib/snarky_js_bindings/lib/snarky_js_bindings_lib.ml b/src/lib/snarky_js_bindings/lib/snarky_js_bindings_lib.ml @@ -30,7 +30,7 @@ let log_and_raise_error_with_message ~exn ~msg =\n(Core_kernel.Exn.to_string exn)\nstack\nin\n- raise_error msg\n+ ignore (raise_error msg)\nclass type field_class =\nobject\n",
        "date": "05.10.2022 13:09:55",
        "repo": "minaprotocol/mina",
        "type": "ignore",
        "chatgpt_zeroshot": "Fix error handling in log_and_raise_error_with_message function"
    },
    {
        "msg": "ignore incomplete zkapps from previous proof when scanning statements, they are already accounted for",
        "diff": "diff --git a/src/lib/transaction_snark_scan_state/transaction_snark_scan_state.ml b/src/lib/transaction_snark_scan_state/transaction_snark_scan_state.ml @@ -372,7 +372,7 @@ struct\n(*TODO: fold over the pending_coinbase tree and validate the statements?*)\nlet scan_statement ~constraint_constants\n- ({ scan_state = tree; previous_incomplete_zkapp_updates } : t)\n+ ({ scan_state = tree; previous_incomplete_zkapp_updates = _ } : t)\n~statement_check ~verifier :\n( Transaction_snark.Statement.t\n, [ `Error of Error.t | `Empty ] )\n@@ -514,11 +514,7 @@ struct\ncheck_base (acc_statement, acc_pc) transaction\nin\nlet%bind.Deferred res =\n- let%bind previous_zkapp_updates =\n- Deferred.Or_error.List.fold ~init:(None, None)\n- previous_incomplete_zkapp_updates ~f:check_base\n- in\n- Fold.fold_chronological_until tree ~init:previous_zkapp_updates\n+ Fold.fold_chronological_until tree ~init:(None, None)\n~f_merge:(fun acc (_weight, job) ->\nlet open Container.Continue_or_stop in\nmatch%map.Deferred fold_step_a acc job with\n",
        "date": "26.01.2023 22:01:51",
        "repo": "minaprotocol/mina",
        "type": "ignore",
        "chatgpt_zeroshot": "Refactor scan_statement function in transaction_snark_scan_state"
    },
    {
        "msg": "ignore tests and private for nodemon.",
        "diff": "diff --git a/package.json b/package.json \"prettier-master\": \"prettier --write $(git diff master --name-only | grep -E '.js$')\",\n\"prettier-head\": \"prettier --write $(git diff HEAD --name-only | grep -E '.js$')\",\n\"lint\": \"prettier --check {__tests__,fixtures,models,one_shot_scripts,public,routes,serverjs,src,views}'/**/*.js' && eslint app.js models public/js routes serverjs src\",\n- \"nodemon\": \"nodemon --ignore src --ignore public\",\n+ \"nodemon\": \"nodemon --ignore src --ignore public --ignore private --ignore dist/pages --ignore __tests__\",\n\"webpack-dev-server\": \"webpack-dev-server --config webpack.dev.js\",\n\"build\": \"webpack --mode production --config webpack.prod.js --progress\",\n- \"start\": \"nodemon --ignore src --ignore public --ignore dist/pages & webpack-dev-server --config webpack.dev.js & webpack --mode development --config webpack.server.js --watch\",\n+ \"start\": \"npm run nodemon & webpack-dev-server --config webpack.dev.js & webpack --mode development --config webpack.server.js --watch\",\n\"test\": \"jest --silent --detectOpenHandles --coverage\",\n\"setup\": \"webpack --mode development --config webpack.server.js --progress && node --max-old-space-size=4096 force_update.js\"\n},\n",
        "date": "06.03.2020 19:39:08",
        "repo": "dekkerglen/cubecobra",
        "type": "ignore",
        "chatgpt_zeroshot": "Update nodemon configuration to ignore private, dist/pages, and __tests__ directories"
    },
    {
        "msg": "ignore remaining style issues using eslint-disable-line comments",
        "diff": "diff --git a/src/utils/Sort.js b/src/utils/Sort.js @@ -716,8 +716,8 @@ export function cardGetLabels(card, sort) {\n}\nif (sort === 'Legality') {\nreturn Object.entries(card.details.legalities)\n- .filter(([k, v]) => ['legal', 'banned'].includes(v))\n- .map(([k, v]) => k);\n+ .filter(([k, v]) => ['legal', 'banned'].includes(v)) // eslint-disable-line no-unused-vars\n+ .map(([k, v]) => k); // eslint-disable-line no-unused-vars\n}\nif (sort === 'Power') {\nif (card.details.power) {\n@@ -875,7 +875,7 @@ export function sortDeep(cards, ...sorts) {\nexport function countGroup(group) {\nif (Array.isArray(group[0])) {\n- const counts = group.map(([label, group2]) => countGroup(group2));\n+ const counts = group.map(([label, group2]) => countGroup(group2)); // eslint-disable-line no-unused-vars\nreturn counts.reduce((a, b) => a + b, 0);\n}\nreturn group.length;\n",
        "date": "25.09.2020 21:58:40",
        "repo": "dekkerglen/cubecobra",
        "type": "ignore",
        "chatgpt_zeroshot": "Fix eslint warnings in Sort.js file"
    },
    {
        "msg": "ignore order when asserting on CSV row contents",
        "diff": "diff --git a/__tests__/routes/cube/download.test.js b/__tests__/routes/cube/download.test.js @@ -79,10 +79,43 @@ test('MTGO download', () => {\n});\ntest('csv download', () => {\n- const headerLine =\n- 'Name,CMC,Type,Color,Set,Collector Number,Rarity,Color Category,Status,Finish,Maybeboard,Image URL,Image Back URL,Tags,Notes,MTGO ID';\n- const faerieGuidemotherLine =\n- '\"Faerie Guidemother\",1,\"Creature - Faerie\",W,\"eld\",\"11\",common,w,Not Owned,Non-foil,false,,,\"New\",\"\",78110';\n+ const headerFields = [\n+ 'Name',\n+ 'CMC',\n+ 'Type',\n+ 'Color',\n+ 'Set',\n+ 'Collector Number',\n+ 'Rarity',\n+ 'Color Category',\n+ 'Status',\n+ 'Finish',\n+ 'Maybeboard',\n+ 'Image URL',\n+ 'Image Back URL',\n+ 'Tags',\n+ 'Notes',\n+ 'MTGO ID',\n+ ];\n+\n+ const faerieGuidemotherData = {\n+ Name: 'Faerie Guidemother',\n+ CMC: '1',\n+ Type: 'Creature - Faerie',\n+ Color: 'W',\n+ Set: 'eld',\n+ 'Collector Number': '11',\n+ Rarity: 'common',\n+ 'Color Category': 'w',\n+ Status: 'Not Owned',\n+ Finish: 'Non-foil',\n+ Maybeboard: 'false',\n+ 'Image URL': '',\n+ 'Image Back URL': '',\n+ Tags: 'New',\n+ Notes: '',\n+ 'MTGO ID': '78110',\n+ };\nreturn request(app)\n.get('/csv/' + cubeID)\n@@ -90,15 +123,12 @@ test('csv download', () => {\n.expect('Content-Type', 'text/plain')\n.expect('Content-disposition', 'attachment; filename=' + sanitizedCubeName + '.csv')\n.expect((res) => {\n- // Verify CSV format is valid\nconst parsed = Papa.parse(res.text.trim(), { header: true });\nexpect(parsed.errors).toEqual([]);\n- const lines = splitText(res.text);\n- expect(lines[0]).toEqual(headerLine);\n- expect(lines[1]).toEqual(faerieGuidemotherLine);\n- // Extra line expected for header\n- expect(lines.length).toEqual(exampleCube.cards.length + 1);\n+ expect(parsed.meta.fields.sort()).toEqual(headerFields.sort());\n+ expect(parsed.data[0]).toEqual(faerieGuidemotherData);\n+ expect(parsed.data.length).toEqual(exampleCube.cards.length);\n});\n});\n",
        "date": "24.04.2021 18:05:47",
        "repo": "dekkerglen/cubecobra",
        "type": "ignore",
        "chatgpt_zeroshot": "Refactor csv download test to use headerFields array and faerieGuidemotherData object for better readability and maintainability."
    },
    {
        "msg": "ignore the yarn cache directory",
        "diff": "diff --git a/packages/react-scripts/scripts/utils/createJestConfig.js b/packages/react-scripts/scripts/utils/createJestConfig.js @@ -26,7 +26,18 @@ module.exports = (resolve, rootDir, isEjecting) => {\nsetupFiles: [resolve('config/polyfills.js')],\nsetupTestFrameworkScriptFile: setupTestsFile,\ntestPathIgnorePatterns: [\n- '<rootDir>[/\\\\\\\\](build|docs|node_modules|scripts)[/\\\\\\\\]',\n+ // Ignore the following directories:\n+ // build\n+ // - the build output directory\n+ // .cache\n+ // - the yarn module cache on Ubuntu if $HOME === rootDir\n+ // docs\n+ // - often used to publish to Github Pages\n+ // node_modules\n+ // - ignore tests in dependencies\n+ // scripts\n+ // - directory generated upon eject\n+ '<rootDir>[/\\\\\\\\](build|\\\\.cache|docs|node_modules|scripts)[/\\\\\\\\]',\n],\ntestEnvironment: 'node',\ntestURL: 'http://localhost',\n",
        "date": "08.05.2017 16:05:49",
        "repo": "react-workspaces/create-react-app",
        "type": "ignore",
        "chatgpt_zeroshot": "Ignore additional directories in Jest testPathIgnorePatterns"
    },
    {
        "msg": "ignore intellij module files when generating an app",
        "diff": "diff --git a/packages/create-react-app/createReactApp.js b/packages/create-react-app/createReactApp.js @@ -748,7 +748,6 @@ function isSafeToCreateProjectIn(root, name) {\n'.idea',\n'README.md',\n'LICENSE',\n- 'web.iml',\n'.hg',\n'.hgignore',\n'.hgcheck',\n@@ -764,6 +763,8 @@ function isSafeToCreateProjectIn(root, name) {\nconst conflicts = fs\n.readdirSync(root)\n.filter(file => !validFiles.includes(file))\n+ // IntelliJ IDEA creates module files before CRA is launched\n+ .filter(file => !/\\.iml$/.test(file))\n// Don't treat log files from previous installation as conflicts\n.filter(\nfile => !errorLogFilePatterns.some(pattern => file.indexOf(pattern) === 0)\n",
        "date": "02.11.2018 18:24:50",
        "repo": "react-workspaces/create-react-app",
        "type": "ignore",
        "chatgpt_zeroshot": "Remove web.iml from list of valid files and filter out .iml files created by IntelliJ IDEA before CRA is launched"
    },
    {
        "msg": "ignore Next-specific files",
        "diff": "diff --git a/jest.config.js b/jest.config.js @@ -29,7 +29,10 @@ module.exports = {\n// An array of regexp pattern strings used to skip coverage collection\ncoveragePathIgnorePatterns: [\n'<rootDir>/node_modules',\n- '<rootDir>/pages/_*.js', // Ignore Next.js files\n+ // Ignore Next.js files\n+ '<rootDir>/pages/_*.js',\n+ '<rootDir>/components/head.js',\n+ '<rootDir>/components/nav.js',\n],\n// A list of reporter names that Jest uses when writing coverage reports\n",
        "date": "31.08.2018 11:23:18",
        "repo": "operationcode/front-end",
        "type": "ignore",
        "chatgpt_zeroshot": "Ignore additional Next.js files in coveragePathIgnorePatterns"
    },
    {
        "msg": "ignore common configs",
        "diff": "diff --git a/jest.config.js b/jest.config.js @@ -29,6 +29,7 @@ module.exports = {\n// An array of regexp pattern strings used to skip coverage collection\ncoveragePathIgnorePatterns: [\n'<rootDir>/node_modules',\n+ '<rootDir>/common/config',\n// Ignore Next.js files\n'<rootDir>/pages/_*.js',\n'<rootDir>/components/head.js',\n",
        "date": "31.08.2018 11:37:46",
        "repo": "operationcode/front-end",
        "type": "ignore",
        "chatgpt_zeroshot": "Add common/config to coveragePathIgnorePatterns in jest.config.js"
    },
    {
        "msg": "ignore api utils from test coverage",
        "diff": "diff --git a/jest.config.js b/jest.config.js @@ -34,6 +34,9 @@ module.exports = {\n'<rootDir>/common/constants',\n'<rootDir>/test-utils',\n+ // No real logic to test here\n+ '<rootDir>/common/utils/api-utils.js',\n+\n// Ignore Next.js files\n'<rootDir>/components/head.js',\n'<rootDir>/components/nav.js',\n",
        "date": "08.09.2018 20:24:17",
        "repo": "operationcode/front-end",
        "type": "ignore",
        "chatgpt_zeroshot": "Add api-utils.js to Jest test coverage"
    },
    {
        "msg": "ignore test-utils from test coverage",
        "diff": "diff --git a/jest.config.js b/jest.config.js @@ -33,6 +33,7 @@ module.exports = {\n'<rootDir>/common/styles',\n'<rootDir>/common/constants',\n'<rootDir>/scripts',\n+ '<rootDir>/test-utils',\n// No real logic to test here\n'<rootDir>/common/utils/api-utils.js',\n",
        "date": "21.09.2018 21:38:42",
        "repo": "operationcode/front-end",
        "type": "ignore",
        "chatgpt_zeroshot": "Add test-utils directory to Jest config"
    },
    {
        "msg": "ignore import/export mappers from test coverage",
        "diff": "diff --git a/jest.config.js b/jest.config.js @@ -35,6 +35,10 @@ module.exports = {\n'<rootDir>/scripts',\n'<rootDir>/test-utils',\n+ // import/export mappers\n+ '<rootDir>/components/**/index.js',\n+ '<rootDir>/common/**/index.js',\n+\n// No real logic to test here\n'<rootDir>/common/utils/api-utils.js',\n'<rootDir>/components/FAQ/questions.js',\n",
        "date": "02.10.2018 23:23:20",
        "repo": "operationcode/front-end",
        "type": "ignore",
        "chatgpt_zeroshot": "Add import/export mappers for components and common directories"
    },
    {
        "msg": "ignore coverage via ! in collection",
        "diff": "diff --git a/jest.config.js b/jest.config.js @@ -21,7 +21,12 @@ module.exports = {\n// collectCoverage: true,\n// An array of glob patterns indicating a set of files for which coverage information should be collected\n- collectCoverageFrom: ['<rootDir>/common/**/*.js', '<rootDir>/components/**/*.js'],\n+ collectCoverageFrom: [\n+ '<rootDir>/common/**/*.js',\n+ '<rootDir>/components/**/*.js',\n+ '!<rootDir>/common/**/index.js',\n+ '!<rootDir>/components/**/index.js',\n+ ],\n// The directory where Jest should output its coverage files\ncoverageDirectory: '<rootDir>/coverage',\n@@ -35,10 +40,6 @@ module.exports = {\n'<rootDir>/scripts',\n'<rootDir>/test-utils',\n- // import/export mappers\n- '<rootDir>/components/**/index.js',\n- '<rootDir>/common/**/index.js',\n-\n// No real logic to test here\n'<rootDir>/common/utils/api-utils.js',\n'<rootDir>/components/FAQ/questions.js',\n",
        "date": "02.10.2018 23:48:35",
        "repo": "operationcode/front-end",
        "type": "ignore",
        "chatgpt_zeroshot": "Update Jest config to exclude index.js files from coverage collection"
    },
    {
        "msg": "ignore types and actions from test coverage",
        "diff": "diff --git a/jest.config.js b/jest.config.js @@ -47,6 +47,10 @@ module.exports = {\n'<rootDir>/components/FAQ/questions.js',\n'<rootDir>/components/ZipRecruiterJobs/ZipRecruiterJobs.js',\n'<rootDir>/components/Press/PressLinks/Articles.js',\n+ '<rootDir>/store/store',\n+ '<rootDir>/store/initialState',\n+ '<rootDir>/store/**/types',\n+ '<rootDir>/store/**/actions',\n// Ignore Next.js files\n'<rootDir>/components/head.js',\n",
        "date": "12.11.2018 20:05:44",
        "repo": "operationcode/front-end",
        "type": "ignore",
        "chatgpt_zeroshot": "Add store files to Jest config for testing"
    },
    {
        "msg": "ignore cookie-utils in test coverage",
        "diff": "diff --git a/jest.config.js b/jest.config.js @@ -41,6 +41,7 @@ module.exports = {\n// No real logic to test here\n'<rootDir>/common/utils/api-utils.js',\n+ '<rootDir>/common/utils/cookie-utils.js',\n'<rootDir>/components/FAQ/questions.js',\n'<rootDir>/components/ZipRecruiterJobs/ZipRecruiterJobs.js',\n'<rootDir>/components/Press/PressLinks/Articles.js',\n",
        "date": "12.03.2019 00:40:39",
        "repo": "operationcode/front-end",
        "type": "ignore",
        "chatgpt_zeroshot": "Add cookie-utils.js to Jest test configuration"
    },
    {
        "msg": "ignore PRs where there exists a negative review",
        "diff": "diff --git a/.mergify.yml b/.mergify.yml @@ -2,6 +2,7 @@ pull_request_rules:\n- name: Auto-merge successful Dependabot upgrades\nconditions:\n- author=dependabot-preview[bot]\n+ - \"#changes-requested-reviews-by=0\"\n- status-success=now\n- status-success=deploy/netlify\n- \"status-success=ci/circleci: build_and_test\"\n",
        "date": "23.09.2019 09:54:54",
        "repo": "operationcode/front-end",
        "type": "ignore",
        "chatgpt_zeroshot": "Add condition to auto-merge successful Dependabot upgrades only if there are no changes requested reviews."
    },
    {
        "msg": "handle query arrays",
        "diff": "diff --git a/pages/search.js b/pages/search.js @@ -139,13 +139,25 @@ class SearchPage extends React.Component {\ngetQueryFacets = () => {\nconst {router: {query}} = this.props\n- return Object\n- .entries(query)\n- .filter(([name]) => facetTypes.includes(name))\n- .map(([name, value]) => ({\n+ const facets = []\n+\n+ for (const [name, value] of Object.entries(query)) {\n+ if (facetTypes.includes(name)) {\n+ if (Array.isArray(value)) {\n+ facets.push(...value.map(v => ({\n+ name,\n+ value: v\n+ })))\n+ } else {\n+ facets.push({\nname,\nvalue\n- }))\n+ })\n+ }\n+ }\n+ }\n+\n+ return facets\n}\ntoggleFacets = () => {\n",
        "date": "11.01.2019 12:31:14",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor getQueryFacets method in SearchPage class"
    },
    {
        "msg": "handle textarea",
        "diff": "diff --git a/MaterialSkin/HTML/material/js/browse-resp.js b/MaterialSkin/HTML/material/js/browse-resp.js @@ -258,7 +258,24 @@ function parseBrowseResp(data, parent, artistImages) {\n} else if (data.result.loop_loop) {\nvar topLevelFavourites = parent.id===undefined && \"favorites\"===parent.type;\ndata.result.loop_loop.forEach(i => {\n- if (i.hasitems>0) {\n+ if (\"text\"===i.type || \"textarea\"===i.type) {\n+ resp.items.push({\n+ title: i.name ? i.name : i.title,\n+ type: \"text\",\n+ id: i.id\n+ });\n+ } else if (\"search\"===i.type) {\n+ resp.items.push({\n+ title: i.name,\n+ command: [i.cmd ? i.cmd : parent.command[0], \"items\"],\n+ image: resolveImage(i.icon, i.image),\n+ icon: \"search\",\n+ params: [\"want_url:1\", \"item_id:\"+i.id, \"search:\"+TERM_PLACEHOLDER],\n+ type: \"xmlsearch\", // Hack, so that we don't think this is library search...\n+ url: parent.url+i.cmd+i.id,\n+ app: parent.app\n+ });\n+ } else if (i.hasitems>0) {\nresp.items.push({\ntitle: i.name,\ncommand: parent.command,\n@@ -288,23 +305,6 @@ function parseBrowseResp(data, parent, artistImages) {\napp: parent.app,\nid: i.id\n});\n- } else if (\"text\"===i.type) {\n- resp.items.push({\n- title: i.name ? i.name : i.title,\n- type: \"text\",\n- id: i.id\n- });\n- } else if (\"search\"===i.type) {\n- resp.items.push({\n- title: i.name,\n- command: [i.cmd ? i.cmd : parent.command[0], \"items\"],\n- image: resolveImage(i.icon, i.image),\n- icon: \"search\",\n- params: [\"want_url:1\", \"item_id:\"+i.id, \"search:\"+TERM_PLACEHOLDER],\n- type: \"xmlsearch\", // Hack, so that we don't think this is library search...\n- url: parent.url+i.cmd+i.id,\n- app: parent.app\n- });\n}\n});\n",
        "date": "10.10.2018 18:06:09",
        "repo": "cdrummond/lms-material",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor browse-resp.js to handle different types of items in the response data."
    },
    {
        "msg": "handle boolean values when converting older userGrid config item.",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/store.js b/MaterialSkin/HTML/material/html/js/store.js @@ -113,9 +113,9 @@ function updateUiSettings(state, val) {\n}\nfunction convertGridConfigItem(val) {\n- if ('true'==val) {\n+ if ('true'==val || true==val) {\nreturn 'always';\n- } else if ('false'==val) {\n+ } else if ('false'==val || false==val) {\nreturn 'never';\n}\nreturn val;\n",
        "date": "15.04.2019 20:33:28",
        "repo": "cdrummond/lms-material",
        "type": "handle",
        "chatgpt_zeroshot": "Update convertGridConfigItem function to handle boolean values in addition to string values"
    },
    {
        "msg": "handle another favourite icon case",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-resp.js b/MaterialSkin/HTML/material/html/js/browse-resp.js @@ -250,6 +250,9 @@ function parseBrowseResp(data, parent, options, idStart, cacheKey) {\n} else if (i.presetParams.icon==\"html/images/radio.png\") {\ni.svg=\"radio-tower\";\ni.image=undefined;\n+ } else if (i['icon-id']==\"html/images/favorites.png\") {\n+ i.icon=\"favorite\";\n+ i.image=undefined;\n}\n} else if (i['icon-id']==\"html/images/favorites.png\") {\ni.icon=\"favorite\";\n",
        "date": "15.08.2019 12:11:31",
        "repo": "cdrummond/lms-material",
        "type": "handle",
        "chatgpt_zeroshot": "Add support for displaying favorites icon in browse response."
    },
    {
        "msg": "handle custom browse case where no results are returned",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/server.js b/MaterialSkin/HTML/material/html/js/server.js @@ -127,6 +127,10 @@ async function lmsListFragment(playerid, command, params, start, fagmentSize, ba\n} else {\nreturn lmsListFragment(playerid, command, params, start+fagmentSize, fagmentSize, batchSize, accumulated);\n}\n+ } else {\n+ return new Promise(function(resolve, reject) {\n+ resolve({data:accumulated});\n+ });\n}\n});\n}\n",
        "date": "22.08.2019 17:47:59",
        "repo": "cdrummond/lms-material",
        "type": "handle",
        "chatgpt_zeroshot": "Add promise to resolve accumulated data in lmsListFragment"
    },
    {
        "msg": "handle player icon changing",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/manage-players.js b/MaterialSkin/HTML/material/html/js/manage-players.js @@ -265,6 +265,20 @@ Vue.component('lms-manage-players', {\n}\n}\n}.bind(this));\n+\n+ bus.$on('playerIconSet', function(playerId, icon) {\n+ if (playerId==this.playerId) {\n+ this.playerIcon = icon;\n+ }\n+ for (var i=0, len=this.players.length; i<len; ++i) {\n+ if (this.players[i].id==playerId) {\n+ let p = his.players[i];\n+ p.icon = icon;\n+ this.$set(this.players, i, p);\n+ break;\n+ }\n+ }\n+ }.bind(this));\n},\nmethods: {\ninitItems() {\n",
        "date": "26.05.2020 14:14:02",
        "repo": "cdrummond/lms-material",
        "type": "handle",
        "chatgpt_zeroshot": "Add event listener to update player icon in manage-players component"
    },
    {
        "msg": "handle updates dialog",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/iframe-dialog.js b/MaterialSkin/HTML/material/html/js/iframe-dialog.js @@ -262,19 +262,35 @@ function hideClassicSkinElems(page, textCol) {\nif (undefined!=statusarea) {\nvar rescanWarning = content.getElementById('rescanWarning');\nvar restartWarning = content.getElementById('restartWarning');\n+ var msg = undefined;\n+ var href = undefined;\n+ var doBtn = undefined;\nif (undefined!=rescanWarning || undefined!=restartWarning) {\nvar elem = undefined!=rescanWarning ? rescanWarning : restartWarning;\nvar parts = elem.innerHTML.split(\"<a\");\nif (parts.length>1) {\n- var href = undefined!=elem.firstElementChild ? elem.firstElementChild.href : undefined;\n+ href = undefined!=elem.firstElementChild ? elem.firstElementChild.href : undefined;\n+ msg = parts[0];\n+ doBtn = undefined!=rescanWarning ? i18n(\"Rescan\") : i18n(\"Restart\");\n+ }\n+ } else if (undefined!=content.querySelector('[name=\"checkForUpdateNow\"]')) { // Handle new LMS version...\n+ var parts = statusarea.innerHTML.split(\"<a\");\n+ if (2==parts.length) {\n+ href = undefined!=statusarea.firstElementChild ? statusarea.firstElementChild.href : undefined;\n+ msg = parts[0];\nif (undefined!=href) {\n- confirm(parts[0], undefined!=rescanWarning ? i18n(\"Rescan\") : i18n(\"Restart\")).then(res => {\n+ doBtn = i18n(\"Download\");\n+ }\n+ }\n+ }\n+\n+ if (undefined!=msg && undefined!=href && undefined!=doBtn) {\n+ confirm(msg, doBtn).then(res => {\nbus.$emit('iframe-href', href, false);\n});\nreturn;\n}\n- }\n- }\n+\nvar msg = statusarea.innerText;\nif (msg!=undefined && msg.length>0) {\nbus.$emit('showMessage', msg);\n",
        "date": "24.05.2021 17:32:32",
        "repo": "cdrummond/lms-material",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor iframe-dialog.js to handle new LMS version and improve button handling"
    },
    {
        "msg": "handle BlissMixer mixes",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-resp.js b/MaterialSkin/HTML/material/html/js/browse-resp.js @@ -84,7 +84,7 @@ function parseBrowseResp(data, parent, options, cacheKey, parentCommand, parentG\nvar maybeAllowGrid = command!=\"trackstat\"; // && !isFavorites; // && command!=\"playhistory\";\nvar numImages = 0;\n- resp.isMusicMix = (command == \"musicsimilarity\" || command == \"musicip\") && data.params[1].length>0 && (data.params[1][1]==\"mix\" || data.params[1][1]==\"list\");\n+ resp.isMusicMix = (command == \"musicsimilarity\" || command == \"musicip\" || command == \"blissmixer\") && data.params[1].length>0 && (data.params[1][1]==\"mix\" || data.params[1][1]==\"list\");\nresp.canUseGrid = maybeAllowGrid && (isRadiosTop || isBmf || (data.result.window && data.result.window.windowStyle && (data.result.window.windowStyle==\"icon_list\" || data.result.window.windowStyle==\"home_menu\"))) ? true : false;\nresp.canDrop = isFavorites;\n",
        "date": "23.02.2022 12:09:11",
        "repo": "cdrummond/lms-material",
        "type": "handle",
        "chatgpt_zeroshot": "Add support for \"blissmixer\" command in browse response parsing."
    },
    {
        "msg": "handle text/html items",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/player-settings-plugin.js b/MaterialSkin/HTML/material/html/js/player-settings-plugin.js @@ -38,6 +38,7 @@ Vue.component('lms-player-settings-plugin', {\n<text-field :focus=\"index==0 && !IS_MOBILE\" :title=\"item.title\" :type=\"item.type\" @value=\"entry(item, $event)\"></text-field>\n</v-list-tile-content>\n</v-list-tile>\n+ <v-list-tile v-else-if=\"item.type=='html' || item.type=='text'\" class=\"lms-list-item browse-html\" v-html=\"item.title\"></v-list-tile>\n<v-list-tile v-else @click=\"fetch(item)\" class=\"lms-list-item\">\n<v-list-tile-avatar :tile=\"true\" class=\"lms-avatar\" v-if=\"undefined!=item.radio\"><v-icon>{{1==item.radio ? \"radio_button_checked\" : \"radio_button_unchecked\"}}</v-icon></v-list-tile-avatar>\n<v-list-tile-avatar :tile=\"true\" class=\"lms-avatar\" v-else-if=\"undefined!=item.checkbox\"><v-icon>{{1==item.checkbox ? \"check_box\" : \"check_box_outline_blank\"}}</v-icon></v-list-tile-avatar>\n",
        "date": "09.07.2022 23:43:18",
        "repo": "cdrummond/lms-material",
        "type": "handle",
        "chatgpt_zeroshot": "Add support for rendering HTML and text items in player settings plugin."
    },
    {
        "msg": "handle legacy ember-data api landing page url",
        "diff": "diff --git a/app/routes/project.js b/app/routes/project.js @@ -5,7 +5,14 @@ import ScrollTracker from 'ember-api-docs/mixins/scroll-tracker';\nexport default Route.extend(ScrollTracker, {\nmodel({project: projectName}) {\n- return this.store.findRecord('project', projectName, { includes: 'project-version' });\n+ let projectNameToLookUp = 'ember';\n+\n+ // Accounts for old references to ember-data API docs\n+ if (projectName.indexOf('data') !== -1) {\n+ projectNameToLookUp = 'ember-data';\n+ }\n+\n+ return this.store.findRecord('project', projectNameToLookUp, { includes: 'project-version' });\n},\n// Using redirect instead of afterModel so transition succeeds and returns 307 in fastboot\n",
        "date": "02.08.2017 07:59:38",
        "repo": "ember-learn/ember-api-docs",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor project route to handle old references to ember-data API docs"
    },
    {
        "msg": "handle missing overlay from multi-init personalize-ing",
        "diff": "diff --git a/src/components/personalize/personalize.js b/src/components/personalize/personalize.js @@ -52,7 +52,7 @@ Personalize.prototype = {\nthis.handleEvents();\n}\n- // On derive theme form stylesheet if\n+ // Only derive theme form stylesheet if\n// one isn't specified in settings\nif (this.settings.theme) {\nthis.setTheme(this.settings.theme);\n@@ -357,10 +357,15 @@ Personalize.prototype = {\nreturn;\n}\n+ // Since its become habit to init personalize.js mutliple times\n+ // on one page for some reason, the pageOverlay might not be\n+ // defined when one personalize instance tries to \"fadeOut\"\n+ if (self.pageOverlay) {\nself.pageOverlay.fadeOut(300, () => {\nself.pageOverlay.remove();\nself.pageOverlay = undefined;\n});\n+ }\n},\n/**\n",
        "date": "15.05.2019 20:28:29",
        "repo": "infor-design/enterprise",
        "type": "handle",
        "chatgpt_zeroshot": "Fix issue with multiple instances of personalize.js initializing on one page"
    },
    {
        "msg": "handle legacy 'high-contrast' query param",
        "diff": "diff --git a/app/src/js/middleware/option-handler-themes.js b/app/src/js/middleware/option-handler-themes.js @@ -41,6 +41,12 @@ module.exports = function (app) {\ntheme: 'soho',\nvariant: req.query.theme\n}};\n+\n+ // Translate legacy \"high-contrast\" into \"contrast\"\n+ if (q.variant.indexOf('high-') !== -1) {\n+ q.variant = q.variant.replace('high-', '');\n+ }\n+\nconst theUrl = URL.format({ query: q });\nlogger('info', `Redirecting legacy query string params to \"${theUrl}\"`);\nreturn res.redirect(theUrl);\n",
        "date": "16.05.2019 17:20:41",
        "repo": "infor-design/enterprise",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor legacy theme query string parameters to use updated naming conventions"
    },
    {
        "msg": "handle refocus of first Modal element if focus is lost within an iframe",
        "diff": "diff --git a/src/components/modal/modal.js b/src/components/modal/modal.js @@ -1103,7 +1103,7 @@ Modal.prototype = {\n});\n// Cache tab fields and update them if the DOM changes\n- const selector = ':focusable, [contenteditable], iframe';\n+ const selector = ':focusable, [contenteditable]';\nlet tabbableElements = self.element.find(selector);\nlet firstTabbable = tabbableElements.first();\nlet lastTabbable = tabbableElements.last();\n@@ -1133,6 +1133,15 @@ Modal.prototype = {\n}\n}\n});\n+\n+ // In some cases, the `body` tag becomes the `document.activeElement` if the Overlay,\n+ // or a wrapping iframe element is clicked. This will reset the focus.\n+ $('body').on(`focusin.${self.namespace}`, (e) => {\n+ const focusedIsTabbable = tabbableElements.filter($(e.target));\n+ if (!(focusedIsTabbable).length) {\n+ firstTabbable.removeClass('hide-focus').focus();\n+ }\n+ });\n},\n/**\n@@ -1167,7 +1176,7 @@ Modal.prototype = {\nif (this.mainContent && this.removeNoScroll) {\nthis.mainContent.removeClass('no-scroll');\n}\n- $('body').off(`resize.${this.namespace}`);\n+ $('body').off(`resize.${this.namespace} focusin.${self.namespace}`);\nthis.element.off(`keypress.${this.namespace} keydown.${this.namespace}`);\nthis.element.removeClass('is-visible');\n",
        "date": "18.03.2020 12:05:18",
        "repo": "infor-design/enterprise",
        "type": "handle",
        "chatgpt_zeroshot": "Fix focus issue in modal component"
    },
    {
        "msg": "handle lifecycle better in About API tests",
        "diff": "diff --git a/test/components/about/about-api.func-spec.js b/test/components/about/about-api.func-spec.js -import { About } from '../../../src/components/about/about';\nimport { cleanup } from '../../helpers/func-utils';\nconst aboutHTML = require('../../../app/views/components/about/example-index.html');\nconst svg = require('../../../src/components/icons/svg.html');\n-let aboutEl;\nlet aboutObj;\ndescribe('About API', () => {\nconst Locale = window.Soho.Locale;\nbeforeEach(() => {\n- aboutEl = null;\naboutObj = null;\ndocument.body.insertAdjacentHTML('afterbegin', svg);\ndocument.body.insertAdjacentHTML('afterbegin', aboutHTML);\n- aboutEl = document.body.querySelector('.about');\nLocale.addCulture('en-US', Soho.Locale.cultures['en-US'], Soho.Locale.languages['en']); //eslint-disable-line\nLocale.set('en-US');\n-\n- aboutObj = new About(aboutEl);\n});\nafterEach((done) => {\n@@ -28,10 +22,6 @@ describe('About API', () => {\nif (aboutObj) {\naboutObj.destroy();\n}\n- const modalAPI = $('body').data('modal');\n- if (modalAPI && typeof modalAPI.destroy === 'function') {\n- modalAPI.destroy();\n- }\ncleanup([\n'.row',\n@@ -41,7 +31,7 @@ describe('About API', () => {\n]);\nsetTimeout(() => {\ndone();\n- }, 500);\n+ }, 650);\n});\nit('Should show on page via API', (done) => {\n@@ -51,6 +41,7 @@ describe('About API', () => {\nversion: 'ver. {{version}}',\ncontent: '<p>Fashionable components for fashionable applications.</p>'\n});\n+ aboutObj = $('body').data('about');\nsetTimeout(() => {\nexpect(document.body.querySelector('#about-modal').classList.contains('is-visible')).toBeTruthy();\n@@ -65,6 +56,7 @@ describe('About API', () => {\nversion: 'ver. {{version}}',\ncontent: '<p>Fashionable components for fashionable applications.</p>'\n});\n+ aboutObj = $('body').data('about');\nconst spyEvent = spyOnEvent('body', 'close');\n",
        "date": "13.04.2020 12:10:30",
        "repo": "infor-design/enterprise",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor About API test suite and increase timeout for cleanup in afterEach block"
    },
    {
        "msg": "handle invalid maxItems for",
        "diff": "diff --git a/src/legend.js b/src/legend.js @@ -44,7 +44,7 @@ dc.legend = function () {\n.attr('transform', 'translate(' + _x + ',' + _y + ')');\nvar legendables = _parent.legendables();\n- if (_maxItems) {\n+ if (_maxItems !== undefined) {\nlegendables = legendables.slice(0, _maxItems);\n}\n@@ -285,9 +285,7 @@ dc.legend = function () {\nif (!arguments.length) {\nreturn _maxItems;\n}\n- //TODO maybe check if maxItems is a number?\n- _maxItems = maxItems;\n-\n+ _maxItems = dc.utils.isNumber(maxItems) ? maxItems : undefined;\nreturn _legend;\n};\n",
        "date": "03.01.2017 14:14:16",
        "repo": "dc-js/dc.js",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor maxItems check in legend.js to handle undefined values"
    },
    {
        "msg": "handle event.channel === undefined in `_setupData` Fixes:",
        "diff": "diff --git a/index.js b/index.js @@ -303,6 +303,13 @@ Peer.prototype._destroy = function (err, onclose) {\nPeer.prototype._setupData = function (event) {\nvar self = this\n+ if (!event.channel) {\n+ // In some situations `pc.createDataChannel()` returns `undefined` (in wrtc),\n+ // which is invalid behavior. Handle it gracefully.\n+ // See: https://github.com/feross/simple-peer/issues/163\n+ return self._onError(new Error('Data channel event is missing `channel` property'))\n+ }\n+\nself._channel = event.channel\nself._channel.binaryType = 'arraybuffer'\n",
        "date": "07.04.2017 13:00:19",
        "repo": "feross/simple-peer",
        "type": "handle",
        "chatgpt_zeroshot": "Handle gracefully when `pc.createDataChannel()` returns `undefined` in wrtc situation"
    },
    {
        "msg": "handle pc constructor error",
        "diff": "diff --git a/index.js b/index.js @@ -92,7 +92,12 @@ function Peer (opts) {\nself._cb = null\nself._interval = null\n+ try {\nself._pc = new (self._wrtc.RTCPeerConnection)(self.config, self.constraints)\n+ } catch (err) {\n+ self.destroy(err)\n+ }\n+\nif (self._isChromium || (self._wrtc && self._wrtc.electronDaemon)) { // HACK: Electron and Chromium need a promise shim\nshimPromiseAPI(self._wrtc.RTCPeerConnection, self._pc)\n}\n",
        "date": "28.02.2019 14:37:40",
        "repo": "feross/simple-peer",
        "type": "handle",
        "chatgpt_zeroshot": "Handle error when creating RTCPeerConnection in Peer constructor"
    },
    {
        "msg": "handle window.location.port = 80 or 443 when PORT env var hasn't been set",
        "diff": "diff --git a/packages/razzle-dev-utils/webpackHotDevClient.js b/packages/razzle-dev-utils/webpackHotDevClient.js @@ -16,13 +16,29 @@ var launchEditorEndpoint = require('react-dev-utils/launchEditorEndpoint');\nvar formatWebpackMessages = require('react-dev-utils/formatWebpackMessages');\nvar ErrorOverlay = require('react-error-overlay');\n+// To get the server port, prefer the env var if available\n+// If it's not set, (e.g. for a Docker image that has to run in multiple environments)\n+// use window.location.port in client-side code like this.\n+// Note that window.location.port is '' if the port is not part of the url (it can be inferred from\n+// window.location.protocol)\n+var serverPort = process.env.PORT\n+ ? parseInt(process.env.PORT, 10)\n+ : window.location.port\n+ ? parseInt(window.location.port, 10)\n+ : window.location.protocol === 'http:'\n+ ? 80\n+ : 443;\n+\n+// the client-side build (webpack-dev-server) is on a different port\n+var sockJsPort = serverPort + 1;\n+\nErrorOverlay.setEditorHandler(function editorHandler(errorLocation) {\n// Keep this sync with errorOverlayMiddleware.js\nfetch(\nurl.format({\nprotocol: window.location.protocol,\nhostname: window.location.hostname,\n- port: parseInt(process.env.PORT || window.location.port, 10) + 1,\n+ port: sockJsPort,\npathname: launchEditorEndpoint,\nsearch:\n'?fileName=' +\n@@ -62,7 +78,7 @@ var connection = new SockJS(\nurl.format({\nprotocol: window.location.protocol,\nhostname: window.location.hostname,\n- port: parseInt(process.env.PORT || window.location.port, 10) + 1,\n+ port: sockJsPort,\n// Hardcoded in WebpackDevServer\npathname: '/sockjs-node',\n})\n",
        "date": "24.01.2020 18:01:15",
        "repo": "jaredpalmer/razzle",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor client-side code to dynamically determine server and client ports."
    },
    {
        "msg": "handle null responses from storage",
        "diff": "diff --git a/src/lib/project-loader-hoc.jsx b/src/lib/project-loader-hoc.jsx @@ -27,7 +27,9 @@ const ProjectLoaderHOC = function (WrappedComponent) {\nif (this.state.projectId !== prevState.projectId) {\nstorage\n.load(storage.AssetType.Project, this.state.projectId, storage.DataFormat.JSON)\n- .then(projectAsset => this.setState({projectData: JSON.stringify(projectAsset.data)}))\n+ .then(projectAsset => projectAsset && this.setState({\n+ projectData: JSON.stringify(projectAsset.data)\n+ }))\n.catch(err => log.error(err));\n}\n}\n",
        "date": "02.11.2017 09:39:44",
        "repo": "wdr-data/code4maus",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor project loader to handle null projectAsset"
    },
    {
        "msg": "handle projectId as prop Update project-loader to look for project id as prop (i.e. from www), and fall back to hash.",
        "diff": "diff --git a/src/lib/project-loader-hoc.jsx b/src/lib/project-loader-hoc.jsx import React from 'react';\n+import PropTypes from 'prop-types';\nimport analytics from './analytics';\nimport log from './log';\nimport storage from './storage';\n/* Higher Order Component to provide behavior for loading projects by id from\n- * the window's hash (#this part in the url)\n+ * the window's hash (#this part in the url) or by projectId prop passed in from\n+ * the parent (i.e. scratch-www)\n* @param {React.Component} WrappedComponent component to receive projectData prop\n* @returns {React.Component} component with project loading behavior\n*/\n@@ -45,7 +47,7 @@ const ProjectLoaderHOC = function (WrappedComponent) {\nreturn window.location.hash.substring(1);\n}\nupdateProject () {\n- let projectId = this.fetchProjectId();\n+ let projectId = this.props.projectId || this.fetchProjectId();\nif (projectId !== this.state.projectId) {\nif (projectId.length < 1) projectId = 0;\nthis.setState({projectId: projectId});\n@@ -61,21 +63,27 @@ const ProjectLoaderHOC = function (WrappedComponent) {\n}\n}\nrender () {\n+ const {\n+ projectId, // eslint-disable-line no-unused-vars\n+ ...componentProps\n+ } = this.props;\nif (!this.state.projectData) return null;\nreturn (\n<WrappedComponent\nfetchingProject={this.state.fetchingProject}\nprojectData={this.state.projectData}\n- {...this.props}\n+ {...componentProps}\n/>\n);\n}\n}\n+ ProjectLoaderComponent.propTypes = {\n+ projectId: PropTypes.string\n+ };\nreturn ProjectLoaderComponent;\n};\n-\nexport {\nProjectLoaderHOC as default\n};\n",
        "date": "18.04.2018 08:48:12",
        "repo": "wdr-data/code4maus",
        "type": "handle",
        "chatgpt_zeroshot": "Add support for loading projects by projectId prop passed in from parent"
    },
    {
        "msg": "handle getbyname exceptions by dying with a nice message",
        "diff": "diff --git a/src/app/cli/src/coda.ml b/src/app/cli/src/coda.ml @@ -193,14 +193,31 @@ let daemon (type ledger_proof) (module Kernel\n[]\nin\nlet%bind initial_peers =\n- Deferred.List.map ~how:(`Max_concurrent_jobs 8) initial_peers_raw ~f:\n- (fun addr ->\n- let%map inet_addr =\n- Unix.Inet_addr.of_string_or_getbyname (Host_and_port.host addr)\n- in\n- Host_and_port.create\n+ Deferred.List.filter_map ~how:(`Max_concurrent_jobs 8)\n+ initial_peers_raw ~f:(fun addr ->\n+ let host = Host_and_port.host addr in\n+ match%bind\n+ Monitor.try_with_or_error (fun () ->\n+ Unix.Inet_addr.of_string_or_getbyname host )\n+ with\n+ | Ok inet_addr ->\n+ return\n+ @@ Some\n+ (Host_and_port.create\n~host:(Unix.Inet_addr.to_string inet_addr)\n~port:(Host_and_port.port addr))\n+ | Error e ->\n+ Logger.trace log \"getaddr exception: %s\"\n+ (Error.to_string_mach e) ;\n+ Logger.error log \"failed to look up address for %s, skipping\"\n+ host ;\n+ return None )\n+ in\n+ let%bind () =\n+ if List.length peers <> 0 && List.length initial_peers = 0 then (\n+ eprintf \"Error: failed to connect to any peers\\n\" ;\n+ exit 1 )\n+ else Deferred.unit\nin\nlet%bind ip =\nmatch ip with None -> Find_ip.find () | Some ip -> return ip\n",
        "date": "14.10.2018 01:48:46",
        "repo": "minaprotocol/mina",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor initial_peers handling in daemon function"
    },
    {
        "msg": "handle keypair i/o exceptions does the obvious thing, which works nice enough for these uses. un-regresses CLI errors from",
        "diff": "diff --git a/src/app/cli/src/client.ml b/src/app/cli/src/client.ml @@ -206,9 +206,20 @@ let dispatch_with_message rpc arg port ~success ~error =\neprintf \"%s\\n\" (error e) ;\nexit 1\n+let handle_exception_nicely (type a) (f : unit -> a Deferred.t) () :\n+ a Deferred.t =\n+ match%bind Deferred.Or_error.try_with ~extract_exn:true f with\n+ | Ok e -> return e\n+ | Error e ->\n+ eprintf \"Error: %s\" (Error.to_string_hum e) ;\n+ exit 1\n+\nlet read_keypair path =\n+ handle_exception_nicely\n+ (fun () ->\nread_keypair_exn ~privkey_path:path\n- ~password:(lazy (read_password_exn \"Secret key password: \"))\n+ ~password:(lazy (read_password_exn \"Secret key password: \")) )\n+ ()\nlet batch_send_payments =\nlet module Payment_info = struct\n@@ -309,14 +320,14 @@ let wrap_key =\nCommand.async ~summary:\"Wrap a private key into a private key file\"\n(let open Command.Let_syntax in\nlet%map_open privkey_path = privkey_path_flag in\n- fun () ->\n+ handle_exception_nicely\n+ @@ fun () ->\nlet open Deferred.Let_syntax in\nlet%bind privkey =\nhidden_line_or_env \"Private key: \" ~env:\"CODA_PRIVKEY\"\nin\nlet pk =\n- Private_key.of_base64_exn\n- (privkey |> Or_error.ok_exn |> Bytes.to_string)\n+ Private_key.of_base64_exn (privkey |> Or_error.ok_exn |> Bytes.to_string)\nin\nlet kp = Keypair.of_private_key_exn pk in\nwrite_keypair_exn kp ~privkey_path\n@@ -326,32 +337,31 @@ let dump_keypair =\nCommand.async ~summary:\"Print out a keypair from a private key file\"\n(let open Command.Let_syntax in\nlet%map_open privkey_path = privkey_read_path_flag in\n- fun () ->\n+ handle_exception_nicely\n+ @@ fun () ->\nlet open Deferred.Let_syntax in\nlet%map kp =\nread_keypair_exn ~privkey_path\n~password:(lazy (read_password_exn \"Password for private key file: \"))\nin\nprintf \"Public key: %s\\nPrivate key: %s\\n\"\n- ( kp.public_key |> Public_key.compress\n- |> Public_key.Compressed.to_base64 )\n+ (kp.public_key |> Public_key.compress |> Public_key.Compressed.to_base64)\n(kp.private_key |> Private_key.to_base64))\nlet generate_keypair =\nCommand.async ~summary:\"Generate a new public-key/private-key pair\"\n(let open Command.Let_syntax in\nlet%map_open privkey_path = privkey_path_flag in\n- fun () ->\n+ handle_exception_nicely\n+ @@ fun () ->\nlet open Deferred.Let_syntax in\nlet kp = Keypair.create () in\nlet%bind () =\nwrite_keypair_exn kp ~privkey_path\n- ~password:\n- (lazy (prompt_password \"Password for new private key file: \"))\n+ ~password:(lazy (prompt_password \"Password for new private key file: \"))\nin\nprintf \"Public key: %s\\n\"\n- ( kp.public_key |> Public_key.compress\n- |> Public_key.Compressed.to_base64 ) ;\n+ (kp.public_key |> Public_key.compress |> Public_key.Compressed.to_base64) ;\nexit 0)\nlet dump_ledger =\n",
        "date": "31.10.2018 19:51:28",
        "repo": "minaprotocol/mina",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor error handling in client.ml and add exception handling for keypair operations"
    },
    {
        "msg": "handle connection table after ban",
        "diff": "diff --git a/src/lib/gossip_net/gossip_net.ml b/src/lib/gossip_net/gossip_net.ml @@ -44,6 +44,10 @@ module type S = sig\ntype msg\n+ module Connection_with_state : sig\n+ type t = Banned | Allowed of Rpc.Connection.t Ivar.t\n+ end\n+\ntype t =\n{ timeout: Time.Span.t\n; logger: Logger.t\n@@ -55,7 +59,7 @@ module type S = sig\n; peers: Peer.Hash_set.t\n; connections:\n( Unix.Inet_addr.t\n- , (Uuid.t, Rpc.Connection.t Ivar.t) Hashtbl.t )\n+ , (Uuid.t, Connection_with_state.t) Hashtbl.t )\nHashtbl.t\n; max_concurrent_connections: int option }\n@@ -86,6 +90,13 @@ end\nmodule Make (Message : Message_intf) :\nS with type msg := Message.msg and type content := Message.content = struct\n+ module Connection_with_state = struct\n+ type t = Banned | Allowed of Rpc.Connection.t Ivar.t\n+\n+ let value_map ~when_allowed ~when_banned t =\n+ match t with Allowed c -> when_allowed c | _ -> when_banned\n+ end\n+\ntype t =\n{ timeout: Time.Span.t\n; logger: Logger.t\n@@ -97,7 +108,7 @@ module Make (Message : Message_intf) :\n; peers: Peer.Hash_set.t\n; connections:\n( Unix.Inet_addr.t\n- , (Uuid.t, Rpc.Connection.t Ivar.t) Hashtbl.t )\n+ , (Uuid.t, Connection_with_state.t) Hashtbl.t )\nHashtbl.t\n(**mapping a Uuid to a connection to be able to remove it from the hash\n*table since Rpc.Connection.t doesn't have the socket information*)\n@@ -242,17 +253,26 @@ module Make (Message : Message_intf) :\ndon't_wait_for\n(Strict_pipe.Reader.iter (Trust_system.ban_pipe config.trust_system)\n~f:(fun addr ->\n- match Hashtbl.find_and_remove t.connections addr with\n+ match Hashtbl.find t.connections addr with\n| None ->\nDeferred.unit\n- | Some conn_list ->\n+ | Some conn_tbl ->\nLogger.debug t.logger ~module_:__MODULE__ ~location:__LOC__\n!\"Peer %{sexp: Unix.Inet_addr.t} banned, disconnecting.\"\naddr ;\n- Deferred.List.iter (Hashtbl.to_alist conn_list)\n- ~f:(fun (_, conn_ivar) ->\n+ let%map () =\n+ Deferred.List.iter (Hashtbl.to_alist conn_tbl)\n+ ~f:(fun (_, conn_state) ->\n+ Connection_with_state.value_map conn_state\n+ ~when_allowed:(fun conn_ivar ->\nlet%bind conn = Ivar.read conn_ivar in\n- Rpc.Connection.close conn ) )) ;\n+ Rpc.Connection.close conn )\n+ ~when_banned:Deferred.unit )\n+ in\n+ Hashtbl.map_inplace conn_tbl ~f:(fun conn_state ->\n+ Connection_with_state.value_map conn_state\n+ ~when_allowed:(fun _ -> Connection_with_state.Banned)\n+ ~when_banned:Banned ) )) ;\ntrace_task \"rebroadcasting messages\" (fun () ->\ndon't_wait_for\n(Linear_pipe.iter_unordered ~max_concurrency:64 broadcast_reader\n@@ -321,7 +341,8 @@ module Make (Message : Message_intf) :\nReader.close reader >>= fun _ -> Writer.close writer )\nelse\nlet conn_id = Uuid_unix.create () in\n- Hashtbl.add_exn conn_map ~key:conn_id ~data:(Ivar.create ()) ;\n+ Hashtbl.add_exn conn_map ~key:conn_id\n+ ~data:(Allowed (Ivar.create ())) ;\nHashtbl.set t.connections\n~key:(Socket.Address.Inet.addr client)\n~data:conn_map ;\n@@ -333,8 +354,10 @@ module Make (Message : Message_intf) :\nwhen connecting to the server over TCP; the ephemeral\nport is distinct from the client's discovery and\ncommunication ports *)\n- let ivar = Hashtbl.find_exn conn_map conn_id in\n- Ivar.fill ivar conn ;\n+ Connection_with_state.value_map\n+ (Hashtbl.find_exn conn_map conn_id)\n+ ~when_allowed:(fun ivar -> Ivar.fill ivar conn)\n+ ~when_banned:() ;\nHashtbl.set t.connections\n~key:(Socket.Address.Inet.addr client)\n~data:conn_map ;\n",
        "date": "24.04.2019 15:51:17",
        "repo": "minaprotocol/mina",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor connection handling in gossip_net module"
    },
    {
        "msg": "handle receiver overflows as an effective user command failure",
        "diff": "diff --git a/src/lib/transaction_snark/transaction_snark.ml b/src/lib/transaction_snark/transaction_snark.ml @@ -1445,6 +1445,7 @@ module Base = struct\nin\nAmount.Checked.sub base_amount coinbase_receiver_fee)\nin\n+ let receiver_overflow = ref Boolean.false_ in\nlet%bind root_after_receiver_update =\n[%with_label \"Update receiver\"]\n(Frozen_ledger_hash.modify_account_recv\n@@ -1538,11 +1539,34 @@ module Base = struct\n~then_:Amount.(var_of_t zero)\n~else_:amount_for_new_account\nin\n- (* TODO: This case can be contrived using minted tokens, handle\n- it in the transaction logic and add a case for it to\n- [User_command_failure.t].\n+ (* NOTE: Instead of capturing this as part of the user command\n+ failures, we capture it inline here and bubble it out to a\n+ reference. This behavior is still in line with the\n+ out-of-snark transaction logic.\n+\n+ Updating [user_command_fails] to include this value from here\n+ onwards will ensure that we do not update the source or\n+ receiver accounts. The only places where [user_command_fails]\n+ may have already affected behaviour are\n+ * when the fee-payer is paying the account creation fee, and\n+ * when a new token is created.\n+ In both of these, this account is new, and will have a\n+ balance of 0, so we can guarantee that there is no overflow.\n*)\n- Balance.Checked.(account.balance + receiver_amount)\n+ let%bind balance, `Overflow overflow =\n+ Balance.Checked.add_amount_flagged account.balance\n+ receiver_amount\n+ in\n+ let%bind () =\n+ [%with_label \"Overflow error only occurs in user commands\"]\n+ Boolean.(Assert.any [is_user_command; not overflow])\n+ in\n+ receiver_overflow := overflow ;\n+ Balance.Checked.if_ overflow ~then_:account.balance\n+ ~else_:balance\n+ in\n+ let%bind user_command_fails =\n+ Boolean.(!receiver_overflow || user_command_fails)\nin\nlet%bind is_empty_and_writeable =\n(* Do not create a new account if the user command will fail. *)\n@@ -1581,6 +1605,9 @@ module Base = struct\n; voting_for= account.voting_for\n; timing= account.timing } ))\nin\n+ let%bind user_command_fails =\n+ Boolean.(!receiver_overflow || user_command_fails)\n+ in\nlet%bind fee_payer_is_source = Account_id.Checked.equal fee_payer source in\nlet%bind root_after_source_update =\n[%with_label \"Update source\"]\n",
        "date": "18.09.2020 18:20:06",
        "repo": "minaprotocol/mina",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor transaction_snark.ml to handle overflow errors in user commands and update user_command_fails accordingly."
    },
    {
        "msg": "handle best_tip_ledger when there is no frontier",
        "diff": "diff --git a/src/lib/network_pool/transaction_pool.ml b/src/lib/network_pool/transaction_pool.ml @@ -612,6 +612,7 @@ struct\nmatch frontier_opt with\n| None -> (\n[%log debug] \"no frontier\" ;\n+ t.best_tip_ledger <- None ;\n(* Sanity check: the view pipe should have been closed before\nthe frontier was destroyed. *)\nmatch t.best_tip_diff_relay with\n@@ -619,7 +620,6 @@ struct\nDeferred.unit\n| Some hdl ->\nlet is_finished = ref false in\n- t.best_tip_ledger <- None ;\nDeferred.any_unit\n[ (let%map () = hdl in\nt.best_tip_diff_relay <- None ;\n",
        "date": "25.11.2020 15:19:00",
        "repo": "minaprotocol/mina",
        "type": "handle",
        "chatgpt_zeroshot": "Fix issue with best tip ledger being set to None multiple times"
    },
    {
        "msg": "handle genesis ledger for last QA net",
        "diff": "diff --git a/src/app/genesis_ledger_from_tsv/genesis_ledger_from_tsv.ml b/src/app/genesis_ledger_from_tsv/genesis_ledger_from_tsv.ml @@ -29,7 +29,7 @@ let add_account pk =\nlet valid_pk pk = Or_error.is_ok @@ Public_key.Compressed.of_base58_check pk\nlet is_pending pk =\n- List.mem [\"pending\"; \"finoa\"; \"secret\"] pk ~equal:String.Caseless.equal\n+ List.mem [\"pending\"; \"finoa\"; \"topsecret\"] pk ~equal:String.Caseless.equal\nlet no_delegatee pk = String.is_empty pk || String.equal pk \"0\"\n@@ -142,6 +142,8 @@ let runtime_config_account ~logger ~wallet_pk ~amount ~initial_min_balance\nlet account_of_tsv ~logger tsv dummy_pks =\nmatch String.split tsv ~on:'\\t' with\n+ | \"skip\" :: _ ->\n+ None\n| [ wallet_pk\n; amount\n; initial_min_balance\n@@ -150,9 +152,10 @@ let account_of_tsv ~logger tsv dummy_pks =\n; unlock_frequency\n; unlock_amount\n; delegatee_pk ] ->\n- runtime_config_account ~logger ~wallet_pk ~amount ~initial_min_balance\n+ Some\n+ (runtime_config_account ~logger ~wallet_pk ~amount ~initial_min_balance\n~cliff_time_months ~cliff_amount ~unlock_frequency ~unlock_amount\n- ~delegatee_pk ~dummy_pks\n+ ~delegatee_pk ~dummy_pks)\n| _ ->\n(* should not occur, we've already validated the record *)\nfailwithf \"TSV line does not contain expected number of fields: %s\" tsv\n@@ -205,6 +208,8 @@ let validate_fields ~wallet_pk ~amount ~initial_min_balance ~cliff_time_months\nlet validate_record tsv =\nmatch String.split tsv ~on:'\\t' with\n+ | \"skip\" :: _ ->\n+ None\n| [ wallet_pk\n; amount\n; initial_min_balance\n@@ -264,12 +269,13 @@ let main ~tsv_file ~output_file () =\n~metadata:[(\"tsv_file\", `String tsv_file)] ;\nlet rec go accounts num_accounts dummy_pks =\nmatch In_channel.input_line in_channel with\n- | Some line ->\n+ | Some line -> (\nlet underscored_line = remove_commas line in\n- let account, dummy_pks' =\n- account_of_tsv ~logger underscored_line dummy_pks\n- in\n+ match account_of_tsv ~logger underscored_line dummy_pks with\n+ | Some (account, dummy_pks') ->\ngo (account :: accounts) (num_accounts + 1) dummy_pks'\n+ | None ->\n+ go accounts num_accounts dummy_pks )\n| None ->\n(List.rev accounts, num_accounts)\nin\n",
        "date": "26.02.2021 11:44:47",
        "repo": "minaprotocol/mina",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor account_of_tsv to handle \"skip\" records in TSV input"
    },
    {
        "msg": "handle verifier process exits safely",
        "diff": "diff --git a/src/lib/verifier/prod.ml b/src/lib/verifier/prod.ml @@ -216,7 +216,10 @@ module Worker = struct\ninclude Rpc_parallel.Make (T)\nend\n-type worker = {connection: Worker.Connection.t; process: Process.t}\n+type worker =\n+ { connection: Worker.Connection.t\n+ ; process: Process.t\n+ ; exit_or_signal: Unix.Exit_or_signal.t Deferred.Or_error.t }\ntype t = {worker: worker Ivar.t ref; logger: Logger.Stable.Latest.t}\n@@ -225,6 +228,37 @@ let plus_or_minus initial ~delta =\nlet min_expected_lifetime = Time.Span.of_min 1.\n+(** Call this as early as possible after the process is known, and store the\n+ resulting [Deferred.t] somewhere to be used later.\n+*)\n+let wait_safe process =\n+ (* This is a little more nuanced than it may initially seem.\n+ - The initial call to [Process.wait] runs a wait syscall -- with the\n+ NOHANG flag -- synchronously.\n+ * This may raise an error (WNOHANG or otherwise) that we have to handle\n+ synchronously at call time.\n+ - The [Process.wait] then returns a [Deferred.t] that resolves when a\n+ second syscall returns.\n+ * This may throw its own errors, so we need to ensure that this is also\n+ wrapped to catch them.\n+ - Once the child process has died and one or more wait syscalls have\n+ resolved, the operating system will drop the process metadata. This\n+ means that our wait may hang forever if 1) the process has already died\n+ and 2) there was a wait call issued by some other code before we have a\n+ chance.\n+ * Thus, we should make this initial call while the child process is\n+ still alive, preferably on startup, to avoid this hang.\n+ *)\n+ match\n+ Or_error.try_with (fun () ->\n+ let deferred_wait = Process.wait process in\n+ Deferred.Or_error.try_with (fun () -> deferred_wait) )\n+ with\n+ | Ok x ->\n+ x\n+ | Error err ->\n+ Deferred.Or_error.fail err\n+\n(* TODO: investigate why conf_dir wasn't being used *)\nlet create ~logger ~proof_level ~pids ~conf_dir : t Deferred.t =\nlet on_failure err =\n@@ -244,6 +278,7 @@ let create ~logger ~proof_level ~pids ~conf_dir : t Deferred.t =\n~on_failure ~shutdown_on:Disconnect ~connection_state_init_arg:()\n{conf_dir; logger; proof_level}\nin\n+ let exit_or_signal = wait_safe process in\n[%log info]\n\"Daemon started process of kind $process_kind with pid $verifier_pid\"\n~metadata:\n@@ -268,19 +303,16 @@ let create ~logger ~proof_level ~pids ~conf_dir : t Deferred.t =\nreturn\n@@ [%log error] \"Verifier stderr: $stderr\"\n~metadata:[(\"stderr\", `String stderr)] ) ;\n- {connection; process}\n+ {connection; process; exit_or_signal}\nin\nlet%map worker = create_worker () in\nlet worker_ref = ref (Ivar.create_full worker) in\n- let wait_safe process =\n- Deferred.Or_error.try_with (fun () -> Process.wait process)\n- in\n- let rec on_worker {connection= _; process} =\n+ let rec on_worker {connection= _; process; exit_or_signal} =\nlet restart_after = Time.Span.(of_min (15. |> plus_or_minus ~delta:2.5)) in\nlet finished =\nDeferred.any\n[ (after restart_after >>| fun () -> `Time_to_restart)\n- ; ( wait_safe process\n+ ; ( exit_or_signal\n>>| function\n| Ok _ ->\n`Unexpected_termination\n@@ -317,7 +349,7 @@ let create ~logger ~proof_level ~pids ~conf_dir : t Deferred.t =\nworker_ref := new_worker ;\ndon't_wait_for\n@@ let%bind exit_metadata =\n- match%map wait_safe process with\n+ match%map exit_or_signal with\n| Ok res ->\n[ ( \"exit_status\"\n, `String (Unix.Exit_or_signal.to_string_hum res) ) ]\n",
        "date": "10.03.2021 16:00:25",
        "repo": "minaprotocol/mina",
        "type": "handle",
        "chatgpt_zeroshot": "Add exit_or_signal field to worker struct and implement wait_safe function for process handling."
    },
    {
        "msg": "handle errors in more secure way",
        "diff": "diff --git a/src/lib/marlin_plonk_bindings/stubs/src/bigint_256.rs b/src/lib/marlin_plonk_bindings/stubs/src/bigint_256.rs @@ -114,7 +114,7 @@ pub fn caml_bigint_256_to_bytes(x: ocaml::Pointer<BigInteger256>) -> ocaml::Valu\nlet x_ptr: *const BigInteger256 = x.as_ref();\nunsafe {\nlet mut input_bytes = vec![];\n- (*x_ptr).serialize(&mut input_bytes).expect(\"serialize failed\");\n+ (*x_ptr).serialize(&mut input_bytes).expect(\"caml_bigint_256_to_bytes, serialize failed\");\ncore::ptr::copy_nonoverlapping(input_bytes.as_ptr(), ocaml::sys::string_val(str), input_bytes.len());\n}\nocaml::Value(str)\n@@ -126,8 +126,10 @@ pub fn caml_bigint_256_of_bytes(x: &[u8]) -> Result<BigInteger256, ocaml::Error>\nif x.len() != len {\nocaml::Error::failwith(\"caml_bigint_256_of_bytes\")?;\n};\n- let x = BigInteger256::deserialize(&mut &x[..]).expect(\"deserialize failed\");\n- Ok(x)\n+ match BigInteger256::deserialize(&mut &x[..]) {\n+ Ok(b) => Ok(b),\n+ Err(_) => Err(ocaml::Error::invalid_argument(\"caml_bigint_256_of_bytes, deserialize failed\").err().unwrap())\n+ }\n}\n#[ocaml::func]\n",
        "date": "15.06.2021 16:06:55",
        "repo": "minaprotocol/mina",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor serialization and deserialization error handling in bigint_256.rs"
    },
    {
        "msg": "handle case where fee < acct creation fee",
        "diff": "diff --git a/src/app/replayer/replayer.ml b/src/app/replayer/replayer.ml @@ -382,7 +382,8 @@ let verify_account_creation_fee ~logger ~pool ~receiver_account_creation_fee\nin\nlet balance_uint64 = Currency.Balance.to_uint64 claimed_balance in\nlet fee_uint64 = Currency.Fee.to_uint64 fee in\n- if Unsigned_extended.UInt64.( >= ) fee_uint64 account_creation_fee_uint64 then\n+ if Unsigned_extended.UInt64.( >= ) fee_uint64 account_creation_fee_uint64 then (\n+ (* account may have been created *)\nlet fee_less_account_creation_fee_uint64 =\nUnsigned.UInt64.sub fee_uint64 account_creation_fee_uint64\nin\n@@ -419,7 +420,7 @@ let verify_account_creation_fee ~logger ~pool ~receiver_account_creation_fee\n, Currency.Fee.to_yojson\nconstraint_constants.account_creation_fee )\n; ( \"receiver_account_creation_fee\"\n- , `Int (Int64.to_int_exn amount_int64) )\n+ , `String (Int64.to_string amount_int64) )\n] ;\nif continue_on_error then incr error_count else Core_kernel.exit 1 )\nelse\n@@ -438,7 +439,27 @@ let verify_account_creation_fee ~logger ~pool ~receiver_account_creation_fee\n, Currency.Fee.to_yojson\nconstraint_constants.account_creation_fee )\n; ( \"receiver_account_creation_fee\"\n- , `Int (Int64.to_int_exn amount_int64) )\n+ , `String (Int64.to_string amount_int64) )\n+ ] ;\n+ if continue_on_error then incr error_count else Core_kernel.exit 1 )\n+ else\n+ (* fee less than account creation fee *)\n+ match receiver_account_creation_fee with\n+ | None ->\n+ ()\n+ | Some amount_int64 ->\n+ [%log error]\n+ \"The internal command fee is less than the account creation fee, so \\\n+ no account should have been created, but in the archive database, \\\n+ the receiver account creation fee is not NULL\"\n+ ~metadata:\n+ [ (\"account_balance\", Currency.Balance.to_yojson claimed_balance)\n+ ; (\"fee\", Currency.Fee.to_yojson fee)\n+ ; ( \"constraint_constants.account_creation_fee\"\n+ , Currency.Fee.to_yojson constraint_constants.account_creation_fee\n+ )\n+ ; ( \"receiver_account_creation_fee\"\n+ , `String (Int64.to_string amount_int64) )\n] ;\nif continue_on_error then incr error_count else Core_kernel.exit 1\n",
        "date": "03.09.2021 11:15:01",
        "repo": "minaprotocol/mina",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor account creation fee verification and error handling in replayer"
    },
    {
        "msg": "handle pipe write failures in child_processes.ml",
        "diff": "diff --git a/src/lib/child_processes/child_processes.ml b/src/lib/child_processes/child_processes.ml @@ -174,9 +174,12 @@ let reader_to_strict_pipe reader name output_type =\nin\ndon't_wait_for\n(let%map () =\n- Pipe.iter_without_pushback pipe ~f:(Strict_pipe.Writer.write w)\n+ Pipe.iter_without_pushback pipe ~f:(fun msg ->\n+ if not (Strict_pipe.Writer.is_closed w) then\n+ try Strict_pipe.Writer.write w msg\n+ with Strict_pipe.Overflow _ -> Strict_pipe.Writer.close w)\nin\n- Strict_pipe.Writer.close w) ;\n+ if not (Strict_pipe.Writer.is_closed w) then Strict_pipe.Writer.close w) ;\nr\ntype output_type = [ `Chunks | `Lines ]\n",
        "date": "30.09.2021 20:04:41",
        "repo": "minaprotocol/mina",
        "type": "handle",
        "chatgpt_zeroshot": "Fix handling of overflow in strict pipe writer"
    },
    {
        "msg": "handle annotations with no arguments nicely",
        "diff": "diff --git a/src/lib/ppx_annot/ppx_annot.ml b/src/lib/ppx_annot/ppx_annot.ml @@ -19,9 +19,9 @@ let extract_string_attrs (attributes : attributes) =\n; _\n}\n] ->\n- Some (attr.attr_name.txt, str)\n+ Some (attr.attr_name.txt, Some str)\n| PStr [] ->\n- Some (attr.attr_name.txt, \"\")\n+ Some (attr.attr_name.txt, None)\n| _ ->\nNone)\n@@ -38,11 +38,17 @@ let annot_str :\n-> rec_flag * type_declaration list\n-> structure =\nfun ~loc ~path:_ (_rec_flag, type_decls) ->\n+ let lift_optional_string ~loc = function\n+ | None ->\n+ [%expr None]\n+ | Some str ->\n+ [%expr Some [%e Ppxlib.Ast_builder.Default.estring ~loc str]]\n+ in\nlet lift_string_tuples ~loc xs =\nList.map xs ~f:(fun (a, b) ->\nPpxlib.Ast_builder.Default.pexp_tuple ~loc\n[ Ppxlib.Ast_builder.Default.estring ~loc a\n- ; Ppxlib.Ast_builder.Default.estring ~loc b\n+ ; lift_optional_string ~loc b\n])\nin\nlet type_decl = expect_single_decl ~loc type_decls in\n@@ -69,10 +75,14 @@ let annot_str :\n]\nin\n[%str\n- let [%p Ppxlib.Ast_builder.Default.pvar ~loc fields_name] = fun str ->\n+ let ([%p Ppxlib.Ast_builder.Default.pvar ~loc fields_name] :\n+ string -> (string * string option) list) =\n+ fun str ->\n[%e Ppxlib.Ast_builder.Default.pexp_match ~loc [%expr str] field_branches]\n- let [%p Ppxlib.Ast_builder.Default.pvar ~loc toplevel_name] =\n+ let ([%p Ppxlib.Ast_builder.Default.pvar ~loc toplevel_name] :\n+ unit -> (string * string option) list) =\n+ fun () ->\n[%e\nPpxlib.Ast_builder.Default.elist ~loc\n(lift_string_tuples top_attributes ~loc)]]\n@@ -85,10 +95,16 @@ let annot_sig :\nfun ~loc ~path:_ (_rec_flag, type_decls) ->\nlet type_decl = expect_single_decl ~loc type_decls in\nlet loc = type_decl.ptype_loc in\n- let name = type_decl.ptype_name.txt ^ \"_annots\" in\n- let type_ = [%type: string -> string] in\n+ let fields_name = type_decl.ptype_name.txt ^ \"_fields_annots\" in\n+ let toplevel_name = type_decl.ptype_name.txt ^ \"_toplevel_annots\" in\n[ psig_value ~loc\n- (value_description ~loc ~name:(Located.mk ~loc name) ~type_ ~prim:[])\n+ (value_description ~loc\n+ ~name:(Located.mk ~loc fields_name)\n+ ~type_:[%type: string -> (string * string option) list] ~prim:[])\n+ ; psig_value ~loc\n+ (value_description ~loc\n+ ~name:(Located.mk ~loc toplevel_name)\n+ ~type_:[%type: unit -> (string * string option) list] ~prim:[])\n]\nlet ann =\n",
        "date": "13.03.2022 08:02:09",
        "repo": "minaprotocol/mina",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor code to handle optional string values in annotations"
    },
    {
        "msg": "handle failure collection",
        "diff": "diff --git a/src/lib/transaction_snark/test/account_timing/account_timing.ml b/src/lib/transaction_snark/test/account_timing/account_timing.ml @@ -482,9 +482,11 @@ let%test_module \"account timing check\" =\n( match With_status.status txn_applied.common.user_command with\n| Applied _ ->\n()\n- | Failed (failure, _balance_data) ->\n+ | Failed (failures, _balance_data) ->\nfailwithf \"Transaction failed: %s\"\n- (Transaction_status.Failure.to_string failure)\n+ ( List.map (List.concat failures) ~f:(fun failure ->\n+ Transaction_status.Failure.to_string failure)\n+ |> String.concat ~sep:\",\" )\n() ) ;\ncheck_transaction_snark ~txn_global_slot:slot ledger_copy txn\n| Error err ->\n",
        "date": "30.03.2022 18:19:32",
        "repo": "minaprotocol/mina",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor error handling in account timing test to display all transaction failures"
    },
    {
        "msg": "handle pluralization on creature counts",
        "diff": "diff --git a/src/components/DraftView.js b/src/components/DraftView.js @@ -24,12 +24,13 @@ export const subtitle = (cards) => {\n(type) => !type.includes('land') && !/^(plane|phenomenon|vanguard|scheme|conspiracy)$/.test(type),\n).length;\nconst numCreatures = allTypes.filter((type) => type.includes('creature')).length;\n+ const numNonCreatures = numNonlands - numCreatures;\nreturn (\n`${numCards} card${numCards === 1 ? '' : 's'}: ` +\n`${numLands} land${numLands === 1 ? '' : 's'}, ` +\n`${numNonlands} nonland: ` +\n- `${numCreatures} creatures, ` +\n- `${numNonlands - numCreatures} noncreatures`\n+ `${numCreatures} creature${numCreatures === 1 ? '' : 's'}, ` +\n+ `${numNonCreatures} noncreature${numNonCreatures === 1 ? '' : 's'}`\n);\n};\n",
        "date": "19.01.2020 13:23:09",
        "repo": "dekkerglen/cubecobra",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor DraftView.js to display correct number of creatures and noncreatures."
    },
    {
        "msg": "handle filters better on topcards page.",
        "diff": "diff --git a/src/topcards.js b/src/topcards.js @@ -3,15 +3,16 @@ import ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport URLSearchParams from 'core-js-pure/features/url-search-params';\n-import { encodeName } from 'utils/Card';\n-import { makeFilter } from 'filtering/FilterCards';\n-\nimport DynamicFlash from 'components/DynamicFlash';\nimport ErrorBoundary from 'components/ErrorBoundary';\nimport FilterCollapse from 'components/FilterCollapse';\nimport SortableTable from 'components/SortableTable';\nimport withAutocard from 'components/WithAutocard';\n+import { makeFilter } from 'filtering/FilterCards';\n+import { encodeName } from 'utils/Card';\n+import Query from 'utils/Query';\n+\nconst AutocardA = withAutocard('a');\nclass TopCards extends Component {\n@@ -21,7 +22,7 @@ class TopCards extends Component {\nconst { defaultData, defaultNumResults, defaultFilterText } = props;\nthis.state = {\n- filter: (defaultFilterText && makeFilter(defaultFilterText).filter) || null,\n+ filter: defaultFilterText,\ndata: defaultData || [],\nnumResults: defaultNumResults || 0,\n};\n@@ -29,16 +30,24 @@ class TopCards extends Component {\nthis.setFilter = this.setFilter.bind(this);\n}\n- async setFilter(filter, filterInput) {\n+ componentDidMount() {\n+ const queryFilter = Query.get('f');\n+ if (queryFilter) {\n+ this.setFilter(null, queryFilter);\n+ }\n+ }\n+\n+ async setFilter(_, filterInput) {\nconst params = new URLSearchParams([['f', filterInput]]);\n- this.setState({ filter });\nconst response = await fetch(`/tool/api/topcards?${params.toString()}`);\nif (!response.ok) {\nreturn;\n}\n+ Query.set('f', filterInput);\nconst json = await response.json();\nthis.setState({\n+ filter: filterInput,\ndata: json.data,\nnumResults: json.numResults,\n});\n@@ -46,7 +55,7 @@ class TopCards extends Component {\nrender() {\nconst { defaultFilterText } = this.props;\n- const { data, numResults } = this.state;\n+ const { data, filter, numResults } = this.state;\nconst rowF = ([name, img, imgFlip, rating, picks, elo, cubes]) => (\n<tr key={name}>\n@@ -69,7 +78,7 @@ class TopCards extends Component {\n<FilterCollapse\nisOpen\ndefaultFilterText={defaultFilterText}\n- filter\n+ filter={filter}\nsetFilter={this.setFilter}\nnumCards={numResults}\nnumShown={data.length}\n",
        "date": "21.05.2020 14:02:24",
        "repo": "dekkerglen/cubecobra",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor TopCards component to handle filter input from URLSearchParams"
    },
    {
        "msg": "handle browser arguments",
        "diff": "diff --git a/packages/react-dev-utils/openBrowser.js b/packages/react-dev-utils/openBrowser.js @@ -26,6 +26,9 @@ function getBrowserEnv() {\n// It is specific to the operating system.\n// See https://github.com/sindresorhus/open#app for documentation.\nconst value = process.env.BROWSER;\n+ const args = process.env.BROWSER_ARGS\n+ ? process.env.BROWSER_ARGS.split(' ')\n+ : [];\nlet action;\nif (!value) {\n// Default.\n@@ -37,7 +40,7 @@ function getBrowserEnv() {\n} else {\naction = Actions.BROWSER;\n}\n- return { action, value };\n+ return { action, value, args };\n}\nfunction executeNodeScript(scriptPath, url) {\n@@ -61,7 +64,7 @@ function executeNodeScript(scriptPath, url) {\nreturn true;\n}\n-function startBrowserProcess(browser, url) {\n+function startBrowserProcess(browser, url, args) {\n// If we're on OS X, the user hasn't specifically\n// requested a different browser, we can try opening\n// Chrome with AppleScript. This lets us reuse an\n@@ -93,6 +96,11 @@ function startBrowserProcess(browser, url) {\nbrowser = undefined;\n}\n+ // If there are arguments, they must be passed as array with the browser\n+ if (typeof browser === 'string' && args.length > 0) {\n+ browser = [browser].concat(args);\n+ }\n+\n// Fallback to open\n// (It will always open new tab)\ntry {\n@@ -109,7 +117,7 @@ function startBrowserProcess(browser, url) {\n* true if it opened a browser or ran a node.js script, otherwise false.\n*/\nfunction openBrowser(url) {\n- const { action, value } = getBrowserEnv();\n+ const { action, value, args } = getBrowserEnv();\nswitch (action) {\ncase Actions.NONE:\n// Special case: BROWSER=\"none\" will prevent opening completely.\n@@ -117,7 +125,7 @@ function openBrowser(url) {\ncase Actions.SCRIPT:\nreturn executeNodeScript(value, url);\ncase Actions.BROWSER:\n- return startBrowserProcess(value, url);\n+ return startBrowserProcess(value, url, args);\ndefault:\nthrow new Error('Not implemented.');\n}\n",
        "date": "26.06.2019 11:47:30",
        "repo": "react-workspaces/create-react-app",
        "type": "handle",
        "chatgpt_zeroshot": "Add support for passing browser arguments in openBrowser function"
    },
    {
        "msg": "handle case where no bands are explicitly selected.",
        "diff": "diff --git a/modules/google-earth-engine/docker/src/sepal/landsat/analyze.py b/modules/google-earth-engine/docker/src/sepal/landsat/analyze.py @@ -8,7 +8,7 @@ class Analyze(ImageOperation):\nsuper(Analyze, self).__init__(image)\nself.bands = bands\nself.surface_reflectance = mosaic_spec.surface_reflectance\n- self.selected_bands = mosaic_spec.bands\n+ self.selected_bands = mosaic_spec.bands if mosaic_spec.bands else []\nself.pan_sharpen = mosaic_spec.pan_sharpen if 'pan' in bands and len(self.selected_bands) == 3 else False\ndef apply(self):\n",
        "date": "02.01.2018 14:07:52",
        "repo": "openforis/sepal",
        "type": "handle",
        "chatgpt_zeroshot": "Fix issue with selected bands in Analyze class"
    },
    {
        "msg": "handle focus on terminal.",
        "diff": "diff --git a/modules/gui-react/frontend/src/widget/selectable.js b/modules/gui-react/frontend/src/widget/selectable.js @@ -27,23 +27,30 @@ Select.childContextTypes = {\nexport class Selectable extends React.Component {\nconstructor(props) {\nsuper(props)\n- console.log('active', this.props.active)\n+ this.active = false\nif (this.props.active) {\nthis.hasBeenActive = true\n+ this.active = true\nthis.className = props.classNames.in\n}\n}\n+ getChildContext() {\n+ return {active: this.active}\n+ }\n+\ncomponentWillReceiveProps(nextProps) {\nif (this.props.active && !nextProps.active) {\nthis.className = this.props.classNames.out\n- console.log('out', document.activeElement, document.activeElement && document.activeElement.id)\n+ this.active = false\nthis.activeElement = document.activeElement\n- }\n- if (!this.props.active && nextProps.active) {\n+ } else if (!this.props.active && nextProps.active) {\nthis.className = this.props.classNames.in\nthis.hasBeenActive = true\n+ this.active = true\nthis.activeElement && this.context.focus(this.activeElement)\n+ } else {\n+ this.active = false\n}\n}\n@@ -59,3 +66,6 @@ export class Selectable extends React.Component {\nSelectable.contextTypes = {\nfocus: PropTypes.func\n}\n+Selectable.childContextTypes = {\n+ active: PropTypes.boolean\n+}\n\\ No newline at end of file\n",
        "date": "21.03.2018 11:43:31",
        "repo": "openforis/sepal",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor Selectable component to manage active state efficiently"
    },
    {
        "msg": "handle case with no recipes.",
        "diff": "diff --git a/modules/gui/frontend/src/app/home/body/process/processMenu.js b/modules/gui/frontend/src/app/home/body/process/processMenu.js @@ -56,7 +56,7 @@ class ProcessMenu extends React.Component {\nisRecipeUnsaved() {\nconst {recipe, recipes} = this.props\n- return !recipes.find(saved => saved.id === recipe.id)\n+ return !(recipes && recipes.find(saved => saved.id === recipe.id))\n}\nduplicateRecipe() {\n",
        "date": "23.01.2019 13:00:59",
        "repo": "openforis/sepal",
        "type": "handle",
        "chatgpt_zeroshot": "Fix bug in isRecipeUnsaved method in ProcessMenu"
    },
    {
        "msg": "handle case where preview failed with no response from the server.",
        "diff": "diff --git a/modules/gui/frontend/src/app/home/body/process/mosaic/mosaicPreview.js b/modules/gui/frontend/src/app/home/body/process/mosaic/mosaicPreview.js @@ -42,7 +42,7 @@ class MosaicPreview extends React.Component {\nNotifications.error({\ntitle: msg('gee.error.title'),\nmessage: msg('process.mosaic.preview.error'),\n- error: msg(e.response.code, e.response.data),\n+ error: e.response ? msg(e.response.code, e.response.data) : null,\ntimeout: 0,\ncontent: dismiss =>\n<Button\n",
        "date": "22.02.2019 15:58:40",
        "repo": "openforis/sepal",
        "type": "handle",
        "chatgpt_zeroshot": "Fix error handling in MosaicPreview component"
    },
    {
        "msg": "handle ajax errors.",
        "diff": "diff --git a/modules/gui/frontend/src/widget/notifications.js b/modules/gui/frontend/src/widget/notifications.js -import {Subject, merge, timer} from 'rxjs'\n-import {connect, select} from 'store'\n+import actionBuilder from 'action-builder'\n+import PropTypes from 'prop-types'\n+import React from 'react'\n+import {merge, Subject, timer} from 'rxjs'\nimport {delay, filter, map, mergeMap} from 'rxjs/operators'\n+import {connect, select} from 'store'\nimport {msg} from 'translate'\nimport {v4 as uuid} from 'uuid'\n-import PropTypes from 'prop-types'\n-import React from 'react'\n-import actionBuilder from 'action-builder'\nimport styles from './notifications.module.css'\nconst PATH = 'Notifications'\n@@ -69,9 +69,10 @@ class __Notifications extends React.Component {\n}\nrenderError(error) {\n+ const errorMessage = typeof error === 'string' ? error : error.message\nreturn (\n<div className={styles.error}>\n- {error}\n+ {errorMessage}\n</div>\n)\n}\n",
        "date": "25.02.2019 10:45:23",
        "repo": "openforis/sepal",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor notifications component to handle error messages better"
    },
    {
        "msg": "handle case where screen height is reported as 0.",
        "diff": "diff --git a/modules/gui/frontend/src/widget/userAgent.js b/modules/gui/frontend/src/widget/userAgent.js @@ -12,5 +12,5 @@ export const isMobile = () => {\nreturn true\nconst dimensions = select('dimensions')\n- return dimensions.width < 500 || dimensions.height < 500\n+ return dimensions.width < 500 || (dimensions.height < 500 && dimensions.height > 0)\n}\n",
        "date": "05.03.2019 15:42:49",
        "repo": "openforis/sepal",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor isMobile function to include additional check for dimensions height"
    },
    {
        "msg": "handle cases where no radar mosaic bands are specified.",
        "diff": "diff --git a/modules/google-earth-engine/docker/src/sepalinternal/radar/__init__.py b/modules/google-earth-engine/docker/src/sepalinternal/radar/__init__.py @@ -11,7 +11,7 @@ class RadarMosaic(ImageSpec):\nself.spec = spec\nself.model = spec['recipe']['model']\nself.aoi = Aoi.create(spec['recipe']['model']['aoi'])\n- self.bands = spec['bands']\n+ self.bands = spec.get('bands', [])\nself.time_scan = not self.model['dates'].get('targetDate')\nself.harmonics_dependents = [\ndependent\n",
        "date": "01.07.2019 15:41:52",
        "repo": "openforis/sepal",
        "type": "handle",
        "chatgpt_zeroshot": "\"Update RadarMosaic class to handle missing 'bands' key in spec\""
    },
    {
        "msg": "handle drive pagination and returned download stats.",
        "diff": "diff --git a/modules/google-earth-engine/docker/sepal-ee/sepal/ee/rx/drive.py b/modules/google-earth-engine/docker/sepal-ee/sepal/ee/rx/drive.py @@ -3,14 +3,15 @@ from threading import local\nfrom apiclient import discovery\nfrom apiclient.http import MediaIoBaseDownload\n-from rx import Callable, concat, from_callable, of, throw\n-from rx.operators import do_action, flat_map, filter, first, map, reduce, take_while\n+from rx import Callable, concat, empty, from_callable, of, throw\n+from rx.operators import do_action, expand, flat_map, filter, first, map, reduce, scan, take_while\nfrom sepal.ee.rx import get_credentials\nfrom sepal.rx import forever, using_file\nfrom sepal.rx.workqueue import WorkQueue\nCHUNK_SIZE = 10 * 1024 * 1024\n+PAGE_SIZE = 100\nclass Drive(local):\n@@ -44,15 +45,28 @@ class Drive(local):\n)\ndef list_folder(self, folder, name_filter=None):\n- def action():\n+ def next_page(acc):\n+ def load_page():\nif name_filter:\nq = \"'{0}' in parents and name = '{1}'\".format(folder['id'], name_filter)\nelse:\nq = \"'{0}' in parents\".format(folder['id'])\n- files = self.service.files().list(\n+ page = self.service.files().list(\nq=q,\n- fields=\"files(id, name, size, mimeType, modifiedTime)\"\n- ).execute().get('files', [])\n+ fields=\"nextPageToken, files(id, name, size, mimeType, modifiedTime)\",\n+ pageSize=PAGE_SIZE,\n+ pageToken=acc.get('nextPageToken')).execute()\n+ return page\n+\n+ return _execute(load_page, retries=0).pipe(\n+ map(lambda page: {\n+ 'files': acc['files'] + page.get('files', []),\n+ 'nextPageToken': page.get('nextPageToken')\n+ })\n+ )\n+\n+ def extract_files(result):\n+ files = result.get('files', [])\nfor file in files:\nfile['path'] = '{}{}{}'.format(\nfolder['path'],\n@@ -61,9 +75,10 @@ class Drive(local):\n)\nreturn files\n- # TODO: Deal with pagination\n-\n- return _execute(action)\n+ return next_page({'files': [], 'nextPageToken': None}).pipe(\n+ expand(lambda acc: next_page(acc) if acc.get('nextPageToken') else empty()),\n+ map(extract_files)\n+ )\ndef list_folder_recursively(self, folder):\ndef recurse(file):\n@@ -78,7 +93,7 @@ class Drive(local):\nreturn self.list_folder(folder).pipe(\nflat_map(lambda files: of(*files)),\nflat_map(recurse),\n- reduce(lambda acc, files: acc + files, [])\n+ reduce(lambda acc, files: acc + files, []),\n)\ndef download(self, file, destination):\n@@ -125,12 +140,38 @@ class Drive(local):\n)\nreturn next_destination\n+ def seed_stats(files):\n+ return {\n+ 'progress': 0,\n+ 'total_files': len(files),\n+ 'total_bytes': sum([int(f.get('size', 0)) for f in files]),\n+ 'downloaded_files': 0,\n+ 'downloaded_bytes': 0\n+ }\n+\n+ def update_stats(stats, download):\n+ downloaded_files = stats['downloaded_files'] + (0 if download['progress'] < 1 else 1)\n+ downloaded_bytes = stats['downloaded_bytes'] + download['downloaded_bytes']\n+ progress = downloaded_bytes / stats['total_bytes']\n+ return {\n+ 'progress': progress,\n+ 'total_files': stats['total_files'],\n+ 'total_bytes': stats['total_bytes'],\n+ 'downloaded_files': downloaded_files,\n+ 'downloaded_bytes': downloaded_bytes\n+ }\n+\nif _is_folder(file):\nreturn self.list_folder_recursively(file).pipe(\n- flat_map(lambda files: of(*files)),\n+ flat_map(\n+ lambda files: of(True).pipe(\n+ flat_map(lambda _: of(*files).pipe(\nfilter(lambda f: not _is_folder(f)),\n- # TODO: Come up with a new destination based on f['path'] and file['path'] difference\nflat_map(lambda f: self.download(f, get_destination(f)))\n+ )),\n+ scan(update_stats, seed_stats(files))\n+ )\n+ )\n)\nelse:\nreturn self.download(file, destination)\n",
        "date": "08.07.2019 16:15:39",
        "repo": "openforis/sepal",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor drive.py to include pagination and download statistics tracking."
    },
    {
        "msg": "handle case with empty Drive folder.",
        "diff": "diff --git a/modules/google-earth-engine/docker/sepal-ee/sepal/drive/rx/download.py b/modules/google-earth-engine/docker/sepal-ee/sepal/drive/rx/download.py @@ -154,7 +154,7 @@ def download(\nflat_map(\nlambda files: combine_latest(\n*[download_file(f, get_file_destination(f)) for f in files]\n- )\n+ ) if files else empty()\n),\nflat_map(aggregate_progress)\n)\n",
        "date": "13.08.2019 15:31:34",
        "repo": "openforis/sepal",
        "type": "handle",
        "chatgpt_zeroshot": "Handle empty files list in download function"
    },
    {
        "msg": "handle structured progress JSON.",
        "diff": "diff --git a/modules/sepal-server/src/main/groovy/org/openforis/sepal/component/task/endpoint/TaskEndpoint.groovy b/modules/sepal-server/src/main/groovy/org/openforis/sepal/component/task/endpoint/TaskEndpoint.groovy @@ -98,7 +98,7 @@ class TaskEndpoint {\nsubmit(new UpdateTaskProgress(\ntaskId: taskId,\nstate: Task.State.ACTIVE,\n- statusDescription: description,\n+ statusDescription: toJson(description),\nusername: currentUser.username\n))\n}\n",
        "date": "28.04.2020 14:36:50",
        "repo": "openforis/sepal",
        "type": "handle",
        "chatgpt_zeroshot": "Update statusDescription to use toJson method in TaskEndpoint."
    },
    {
        "msg": "handle case where all rows in EE table should be included.",
        "diff": "diff --git a/lib/js/shared/src/ee/aoi.js b/lib/js/shared/src/ee/aoi.js @@ -24,12 +24,15 @@ const polygon = ({path}) =>\nconst eeTable = ({id, keyColumn, key}) => {\nconst table = ee.FeatureCollection(id)\n+ if (keyColumn) {\nconst filters = [ee.Filter.eq(keyColumn, key)]\nif (_.isFinite(key))\nfilters.push(ee.Filter.eq(keyColumn, _.toNumber(key)))\n-\nreturn table\n.filter(ee.Filter.or(...filters))\n+ } else {\n+ return table\n+ }\n}\nmodule.exports = {toGeometry, toFeatureCollection}\n",
        "date": "17.07.2020 13:12:32",
        "repo": "openforis/sepal",
        "type": "handle",
        "chatgpt_zeroshot": "Add conditional check for keyColumn in eeTable function"
    },
    {
        "msg": "handle cancelation of requests.",
        "diff": "diff --git a/modules/gui/frontend/src/app/home/map/tileProvider/monitoringTileProvider.js b/modules/gui/frontend/src/app/home/map/tileProvider/monitoringTileProvider.js +import {BehaviorSubject} from 'rxjs'\nimport {DelegatingTileProvider} from './delegatingTileProvider'\n-import {Subject} from 'rxjs'\n-import {finalize, scan} from 'rxjs/operators'\n+import {debounceTime, finalize} from 'rxjs/operators'\nexport class MonitoringTileProvider extends DelegatingTileProvider {\nconstructor(nextTileProvider, progress$) {\n- super()\n- this.nextTileProvider = nextTileProvider\n- this.requestById = {}\n- this.pending$ = new Subject()\n+ super(nextTileProvider)\n+ this.pending$ = new BehaviorSubject(0)\nthis.pending$.pipe(\n- scan((pending, current) => pending += current)\n+ debounceTime(200)\n).subscribe(\npending => progress$ && progress$.next({loading: pending})\n)\n- }\n-\n- addRequest(requestId) {\n- this.requestById[requestId] = Date.now()\n- this.pending$.next(1)\n- }\n-\n- removeRequest(requestId) {\n- delete this.requestById[requestId]\n- this.pending$.next(-1)\n+ this.requests = {}\n}\nloadTile$(tileRequest) {\n- const requestId = tileRequest.id\n- this.addRequest(requestId)\n- return this.nextTileProvider.loadTile$(tileRequest).pipe(\n- finalize(() => this.removeRequest(requestId))\n+ this.pending$.next(this.pending$.value + 1)\n+ return super.loadTile$(tileRequest).pipe(\n+ finalize(() => {\n+ this.requests[tileRequest.id] = true\n+ this.pending$.next(this.pending$.value - 1)\n+ })\n)\n}\n- releaseTile(tileElement) {\n- return this.nextTileProvider.releaseTile(tileElement)\n+ releaseTile(requestId) {\n+ if (!this.requests[requestId]) {\n+ super.releaseTile(requestId)\n+ this.pending$.next(this.pending$.value - 1)\n+ }\n+ delete this.requests[requestId]\n}\n}\n",
        "date": "18.02.2021 18:50:01",
        "repo": "openforis/sepal",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor MonitoringTileProvider to use BehaviorSubject and debounceTime for pending requests tracking. Update loadTile$ and releaseTile methods for better handling of tile requests."
    },
    {
        "msg": "handle uninitialized layers state when loading visualizations.",
        "diff": "diff --git a/modules/gui/frontend/src/app/home/body/process/recipe/opticalMosaic/opticalMosaicRecipe.js b/modules/gui/frontend/src/app/home/body/process/recipe/opticalMosaic/opticalMosaicRecipe.js @@ -107,7 +107,7 @@ export const RecipeActions = id => {\n}\nexport const getAllVisualizations = recipe => [\n- ...Object.values((recipe.layers.userDefinedVisualizations['this-recipe'] || {})),\n+ ...Object.values((selectFrom(recipe, ['layers.userDefinedVisualizations', 'this-recipe']) || {})),\n...visualizations[reflectance(recipe)],\n...visualizations.indexes,\n...(median(recipe) ? visualizations.metadata : [])\n",
        "date": "19.05.2021 11:13:30",
        "repo": "openforis/sepal",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor getAllVisualizations function to use selectFrom helper function"
    },
    {
        "msg": "handle null responses.",
        "diff": "diff --git a/modules/gui/frontend/src/app/home/body/process/recipe/classification/panels/trainingData/sampleClassificationSection.js b/modules/gui/frontend/src/app/home/body/process/recipe/classification/panels/trainingData/sampleClassificationSection.js @@ -152,7 +152,8 @@ class SampleClassificationSection extends Component {\n}\n},\nerror => {\n- const {response: {defaultMessage, messageKey, messageArgs} = {}} = error\n+ const response = error.response || {}\n+ const {defaultMessage, messageKey, messageArgs} = response\nthis.props.inputs.assetToSample.setInvalid(\nmessageKey\n? msg(messageKey, messageArgs, defaultMessage)\n",
        "date": "17.06.2021 13:55:48",
        "repo": "openforis/sepal",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor error handling in SampleClassificationSection"
    },
    {
        "msg": "handle non-prefix paths.",
        "diff": "diff --git a/modules/gateway/docker/src/proxy.js b/modules/gateway/docker/src/proxy.js @@ -20,14 +20,15 @@ const logLevel = sepalLogLevel === 'trace'\n: sepalLogLevel\nconst proxy = app =>\n- ({path, target, authenticate, cache, noCache, rewrite}) => {\n- const proxyMiddleware = createProxyMiddleware({\n+ ({path, target, prefix, authenticate, cache, noCache, rewrite}) => {\n+ const proxyMiddleware = createProxyMiddleware(path, {\ntarget,\nlogProvider,\nlogLevel,\nproxyTimeout: 0,\ntimeout: 0,\npathRewrite: {[`^${path}`]: ''},\n+ ignorePath: !prefix,\nchangeOrigin: true,\nws: true,\nonOpen: () => {\n@@ -42,10 +43,10 @@ const proxy = app =>\nonProxyReq: (proxyReq, req) => {\nconst user = req.session.user\nconst username = user ? user.username : 'not-authenticated'\n- req.socket.on('close', () => {\n- log.trace(`[${username}] [${req.originalUrl}] Response closed`)\n- proxyReq.destroy()\n- })\n+ // req.socket.on('close', () => {\n+ // log.trace(`[${username}] [${req.originalUrl}] Response closed`)\n+ // proxyReq.destroy()\n+ // })\nif (authenticate && user) {\nlog.trace(`[${username}] [${req.originalUrl}] Setting sepal-user header`)\nproxyReq.setHeader('sepal-user', JSON.stringify(user))\n@@ -81,5 +82,3 @@ const proxy = app =>\n}\nmodule.exports = {proxyEndpoints}\n-\n-// TODO: Non-prefix endpoints\n",
        "date": "02.07.2021 13:45:03",
        "repo": "openforis/sepal",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor proxy middleware to include prefix option and remove unnecessary code"
    },
    {
        "msg": "handle case when no data sets are specified.",
        "diff": "diff --git a/modules/gui/frontend/src/sources.js b/modules/gui/frontend/src/sources.js @@ -37,7 +37,7 @@ export const getAvailableBands = ({\ninclude = ['class', 'regression', 'class_probability', 'probabilities']\n} = {}\n}) => {\n- const dataSetIds = dataSets || [dataSetId]\n+ const dataSetIds = dataSets || dataSetId ? [dataSetId] : []\nconst dataSetBands = Object.keys(\ndataSetIds.find(dataSetId => isOpticalDataSet(dataSetId))\n? getAvailableOpticalBands(\n@@ -63,7 +63,7 @@ export const groupedBandOptions = ({\ninclude = ['class', 'regression', 'class_probability', 'probabilities']\n} = {}\n}) => {\n- const dataSetIds = dataSets || [dataSetId]\n+ const dataSetIds = dataSets || dataSetId ? [dataSetId] : []\nconst dataSetOptions = dataSetIds.find(dataSetId => isOpticalDataSet(dataSetId))\n? getGroupedOpticalBandOptions(\ntoOpticalRecipe({dataSetIds, corrections}),\n",
        "date": "04.08.2021 18:39:58",
        "repo": "openforis/sepal",
        "type": "handle",
        "chatgpt_zeroshot": "Fix issue with setting dataSetIds in getAvailableBands and groupedBandOptions functions"
    },
    {
        "msg": "handle failure to load instance when waiting for public IP.",
        "diff": "diff --git a/modules/sepal-server/src/main/groovy/org/openforis/sepal/component/hostingservice/aws/AwsInstanceProvider.groovy b/modules/sepal-server/src/main/groovy/org/openforis/sepal/component/hostingservice/aws/AwsInstanceProvider.groovy @@ -62,8 +62,13 @@ final class AwsInstanceProvider implements InstanceProvider {\nLOG.debug(\"Getting instance $instance.id to see if the public ID is assigned yet, \" +\n\"instanceType: $instanceType, reservation: $reservation\")\n+ try {\ninstance = getInstance(instance.id)\nLOG.debug(\"Got instance $instance\")\n+ } catch (AmazonEC2Exception ignore) {\n+ // Instance might not be available straight away\n+ LOG.warn(\"Failed to get instance $instance.id. Will still keep on waiting for it to become available.\")\n+ }\nThread.sleep(1000)\n}\nif (!instance.host)\n@@ -256,17 +261,17 @@ final class AwsInstanceProvider implements InstanceProvider {\nprivate void tagInstance(String instanceId, Collection<Tag>... tagCollections) {\ntry {\n- retry(10) {\n+ retry(10, ({\ndef tags = tagCollections.toList().flatten() as Tag[]\nLOG.info(\"Tagging instance $instanceId with $tags\")\ndef request = new CreateTagsRequest()\n.withResources(instanceId)\n.withTags(tags)\nclient.createTags(request)\n- }\n+ } as Closure<Void>))\n} catch (Exception e) {\n- terminate()\n- throw new FailedToTagInstance(\"Failed to tag instance $instanceId with $tags\", e)\n+ terminate(instanceId)\n+ throw new FailedToTagInstance(\"Failed to tag instance $instanceId with $tagCollections\", e)\n}\n}\n@@ -285,7 +290,7 @@ final class AwsInstanceProvider implements InstanceProvider {\n}\n}\n- private int backoff(int retries) {\n+ private void backoff(int retries) {\ndef millis = (long) Math.pow(2, retries ?: 0) * 1000\nThread.sleep(millis)\n}\n",
        "date": "10.09.2021 11:19:59",
        "repo": "openforis/sepal",
        "type": "handle",
        "chatgpt_zeroshot": "Improve error handling and logging in AwsInstanceProvider"
    },
    {
        "msg": "handle image without any categorical visualizations.",
        "diff": "diff --git a/modules/gui/frontend/src/app/home/body/process/recipe/classChange/panels/inputImage/imageForm.js b/modules/gui/frontend/src/app/home/body/process/recipe/classChange/panels/inputImage/imageForm.js @@ -26,7 +26,9 @@ class ImageForm extends Component {\n{React.createElement(inputComponent, {\ninput,\nonLoading: () => {\n+ band.set(null)\nbands.set({})\n+ legendEntries.set(null)\n},\nonLoaded: ({id, bands, metadata, visualizations, recipe}) => this.onLoaded(id, bands, metadata, visualizations, recipe)\n})}\n@@ -81,7 +83,11 @@ class ImageForm extends Component {\nconst bandNames = Object.keys(loadedBands)\nconst selectedBand = band.value\nif (!selectedBand || !bandNames.includes(selectedBand)) {\n- const defaultBand = bandNames.find(bandName => loadedBands[bandName].values.length)\n+ const defaultBand = bandNames\n+ .find(bandName => {\n+ const values = loadedBands[bandName].values\n+ return values && values.length\n+ })\n|| bandNames[0]\nband.set(defaultBand)\n}\n",
        "date": "20.10.2021 13:29:32",
        "repo": "openforis/sepal",
        "type": "handle",
        "chatgpt_zeroshot": "Fix issue with setting band and legend entries in ImageForm"
    },
    {
        "msg": "handle case without user defined visualizations.",
        "diff": "diff --git a/modules/gui/frontend/src/app/home/body/process/recipe/recipeImageLayerSource.js b/modules/gui/frontend/src/app/home/body/process/recipe/recipeImageLayerSource.js @@ -54,7 +54,7 @@ class _RecipeImageLayerSource extends React.Component {\nconst {currentUserDefinedVisualizations, recipeId, source, recipeActionBuilder} = this.props\nconst description = toDescription(recipe)\nif (recipeId !== source.sourceConfig.recipeId) {\n- const userDefinedVisualizations = selectFrom(recipe, 'layers.userDefinedVisualizations.this-recipe')\n+ const userDefinedVisualizations = selectFrom(recipe, 'layers.userDefinedVisualizations.this-recipe') || []\nconst currentVisualizationIds = currentUserDefinedVisualizations.map(({id}) => id)\nuserDefinedVisualizations\n.reduce(\n",
        "date": "20.10.2021 18:40:55",
        "repo": "openforis/sepal",
        "type": "handle",
        "chatgpt_zeroshot": "Fix issue with userDefinedVisualizations not being initialized properly"
    },
    {
        "msg": "handle image collections in CCDC charts.",
        "diff": "diff --git a/modules/gee/src/jobs/ee/ccdc/loadSegments.js b/modules/gee/src/jobs/ee/ccdc/loadSegments.js @@ -27,7 +27,10 @@ const worker$ = ({recipe, latLng, bands}) => {\n)\nconst assetSegments$ = () =>\n- of(new ee.Image(recipe.id))\n+ imageFactory({\n+ type: 'ASSET',\n+ id: recipe.id\n+ }).getImage$()\nconst recipeRef$ = () => imageFactory(recipe, {selection: bands}).getRecipe$()\n",
        "date": "22.08.2022 09:35:02",
        "repo": "openforis/sepal",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor image loading in loadSegments.js to use imageFactory for asset loading."
    },
    {
        "msg": "handle case where there are no Planet mosaics.",
        "diff": "diff --git a/modules/gui/src/app/home/map/imageLayerSource/planetImageLayer.js b/modules/gui/src/app/home/map/imageLayerSource/planetImageLayer.js @@ -166,9 +166,13 @@ class _PlanetImageLayer extends React.Component {\n)\nreturn filtered.length\n? this.selectUrlTemplate(filtered[0].urlTemplate)\n- : this.selectUrlTemplate(mosaics[0].urlTemplate)\n+ : mosaics.length\n+ ? this.selectUrlTemplate(mosaics[0].urlTemplate)\n+ : null\n} else {\n- return this.selectUrlTemplate(mosaics[0].urlTemplate)\n+ return mosaics.length\n+ ? this.selectUrlTemplate(mosaics[0].urlTemplate)\n+ : null\n}\n}\n",
        "date": "07.02.2023 09:48:08",
        "repo": "openforis/sepal",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor planetImageLayer.js to handle cases where mosaics array is empty"
    },
    {
        "msg": "handle removal of head of area/line.",
        "diff": "diff --git a/packages/vega-scenegraph/src/render/svg/SVGRenderer.js b/packages/vega-scenegraph/src/render/svg/SVGRenderer.js @@ -192,23 +192,31 @@ prototype._dirtyCheck = function(items) {\nif (!items) return true;\nvar id = ++this._dirtyID,\n- item, mark, mdef, i, n;\n+ item, mark, mdef, i, n, o;\nfor (i=0, n=items.length; i<n; ++i) {\nitem = items[i];\n+ mark = item.mark;\n+ mdef = marks[mark.marktype];\nif (item.status === 'exit') { // EXIT\nif (item._svg) {\n+ if (mdef.nest && item.mark.items.length) {\n+ // if nested mark with remaining points, update instead\n+ this._update(mdef, item._svg, item.mark.items[0]);\n+ o = item.mark.items[0];\n+ o._svg = item._svg;\n+ o._update = id;\n+ } else {\n+ // otherwise remove from DOM\nDOM.remove(item._svg);\n+ }\nitem._svg = null;\n}\ncontinue;\n}\n- mark = item.mark;\n- mdef = marks[mark.marktype];\nitem = (mdef.nest ? mark.items[0] : item);\n-\nif (item._update === id) { // Already processed\ncontinue;\n} else if (item._svg) { // UPDATE\n",
        "date": "17.06.2015 11:51:56",
        "repo": "vega/vega",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor SVGRenderer.js for handling nested marks and updating elements in the DOM."
    },
    {
        "msg": "handle GeoPoint projection failure.",
        "diff": "diff --git a/packages/vega-geo/src/GeoPoint.js b/packages/vega-geo/src/GeoPoint.js @@ -29,8 +29,8 @@ prototype.transform = function(_, pulse) {\nfunction set(t) {\nvar xy = proj([lon(t), lat(t)]);\n- t[x] = xy[0];\n- t[y] = xy[1];\n+ if (xy) t[x] = xy[0], t[y] = xy[1];\n+ else t[x] = undefined, t[y] = undefined;\n}\nif (_.modified()) {\n",
        "date": "18.08.2016 09:14:21",
        "repo": "vega/vega",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor GeoPoint.js to handle undefined projection values"
    },
    {
        "msg": "handle uncaught promises, remove redundant promises, handle fatal error when JDK is not installed",
        "diff": "diff --git a/rnv-cli/src/platformTools/android.js b/rnv-cli/src/platformTools/android.js @@ -35,11 +35,11 @@ import { copyFolderContentsRecursiveSync, copyFileSync, mkdirSync } from '../fil\nconst readline = require('readline');\n-const launchAndroidSimulator = (c, platform, target, isIndependentThread = false) => new Promise((resolve, reject) => {\n+const launchAndroidSimulator = (c, platform, target, isIndependentThread = false) => {\nlogTask(`launchAndroidSimulator:${platform}:${target}`);\nif (target === '?' || target === undefined || target === '') {\n- _listAndroidTargets(c, true, false)\n+ return _listAndroidTargets(c, true, false)\n.then((devicesArr) => {\nlet devicesString = '\\n';\n@@ -56,39 +56,25 @@ const launchAndroidSimulator = (c, platform, target, isIndependentThread = false\nif (isIndependentThread) {\n// const child = require('child_process').spawn(c.cli[CLI_ANDROID_EMULATOR], [\n// '-avd', `\"${selectedDevice.name}\"`]);\n- execCLI(c, CLI_ANDROID_EMULATOR, `-avd \"${selectedDevice.name}\"`);\n- resolve();\n- } else {\n- execCLI(c, CLI_ANDROID_EMULATOR, `-avd \"${selectedDevice.name}\"`)\n- .then(() => resolve())\n- .catch(e => reject(e));\n+ return execCLI(c, CLI_ANDROID_EMULATOR, `-avd \"${selectedDevice.name}\"`).catch(logError);\n}\n- } else {\n- logError(`Wrong choice ${v}! Ingoring`);\n+ return execCLI(c, CLI_ANDROID_EMULATOR, `-avd \"${selectedDevice.name}\"`);\n}\n+ logError(`Wrong choice ${v}! Ingoring`);\n+ });\n});\n- })\n- .catch(e => reject(e));\n-\n- return;\n}\nif (target) {\nif (isIndependentThread) {\n// const child = require('child_process').spawn(c.cli[CLI_ANDROID_EMULATOR], [\n// '-avd', `\"${target}\"`]);\n- execCLI(c, CLI_ANDROID_EMULATOR, `-avd \"${target}\"`);\n- resolve();\n- } else {\n- execCLI(c, CLI_ANDROID_EMULATOR, `-avd \"${target}\"`)\n- .then(() => resolve())\n- .catch(e => reject(e));\n+ return execCLI(c, CLI_ANDROID_EMULATOR, `-avd \"${target}\"`).catch(logError);\n}\n-\n- return;\n+ return execCLI(c, CLI_ANDROID_EMULATOR, `-avd \"${target}\"`);\n}\n- reject('No simulator -t target name specified!');\n-});\n+ return Promise.reject('No simulator -t target name specified!');\n+};\nconst listAndroidTargets = c => new Promise((resolve, reject) => {\nlogTask('listAndroidTargets');\n@@ -212,14 +198,16 @@ const _askForNewEmulator = (c, platform) => new Promise((resolve, reject) => {\n);\n});\n-const _createEmulator = (c, apiVersion, emuPlatform, emuName) => new Promise((resolve, reject) => {\n+const _createEmulator = (c, apiVersion, emuPlatform, emuName) => {\nlogTask('_createEmulator');\n- return execCLI(c, CLI_ANDROID_SDKMANAGER, `\"system-images;android-${apiVersion};${emuPlatform};x86\"`).then(() => execCLI(\n+ return execCLI(c, CLI_ANDROID_SDKMANAGER, `\"system-images;android-${apiVersion};${emuPlatform};x86\"`)\n+ .then(() => execCLI(\nc,\nCLI_ANDROID_AVDMANAGER,\n`create avd -n ${emuName} -k \"system-images;android-${apiVersion};${emuPlatform};x86\" `,\n- ));\n-});\n+ ))\n+ .catch(e => logError(e, true));\n+};\nconst copyAndroidAssets = (c, platform) => new Promise((resolve) => {\nlogTask('copyAndroidAssets');\n",
        "date": "25.05.2019 23:57:41",
        "repo": "pavjacko/renative",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor launchAndroidSimulator and _createEmulator functions in android.js"
    },
    {
        "msg": "handle account user lookup concurrently",
        "diff": "diff --git a/server/persistence/login.go b/server/persistence/login.go package persistence\nimport (\n+ \"context\"\n\"encoding/base64\"\n\"fmt\"\n+ \"sync\"\n\"github.com/lestrrat-go/jwx/jwk\"\n\"github.com/offen/offen/server/keys\"\n@@ -274,11 +276,26 @@ func (p *persistenceLayer) findAccountUser(emailAddress string, includeRelations\n}\nfunc selectAccountUser(available []AccountUser, email string) (*AccountUser, error) {\n- // TODO: run this concurrently without leaking goroutines\n- for _, accountUser := range available {\n+ ctx, cancel := context.WithCancel(context.Background())\n+ match := make(chan AccountUser)\n+ wg := sync.WaitGroup{}\n+ for _, a := range available {\n+ wg.Add(1)\n+ go func(accountUser AccountUser) {\nif err := keys.CompareString(email, accountUser.HashedEmail); err == nil {\n- return &accountUser, nil\n- }\n- }\n+ match <- accountUser\n+ }\n+ wg.Done()\n+ }(a)\n+ }\n+ go func() {\n+ wg.Wait()\n+ cancel()\n+ }()\n+ select {\n+ case result := <-match:\n+ return &result, nil\n+ case <-ctx.Done():\nreturn nil, fmt.Errorf(\"persistence: no account user found for %s\", email)\n}\n+}\n",
        "date": "23.02.2020 16:28:28",
        "repo": "offen/offen",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor account user selection to run concurrently without leaking goroutines"
    },
    {
        "msg": "handle watch command to look for HTTPS",
        "diff": "diff --git a/src/commands/watch.js b/src/commands/watch.js @@ -43,6 +43,8 @@ export default asyncCommand({\nasync handler(argv) {\nargv.production = false;\n+ if (process.env.HTTPS) argv.https = true;\n+\nif (argv.https) {\nlet ssl = await getSslCert();\nif (!ssl) {\n",
        "date": "30.07.2017 10:46:56",
        "repo": "preactjs/preact-cli",
        "type": "handle",
        "chatgpt_zeroshot": "Add support for HTTPS in watch command"
    },
    {
        "msg": "handle short URLs 2",
        "diff": "diff --git a/html/src/app.js b/html/src/app.js @@ -1863,9 +1863,12 @@ speechSynthesis.getVoices();\n}\n*/\nAPI.getInstanceShortName = function (params) {\n- return this.call(`instances/${params.worldId}:${params.instanceId}/shortName`, {\n+ return this.call(\n+ `instances/${params.worldId}:${params.instanceId}/shortName`,\n+ {\nmethod: 'GET'\n- }).then((json) => {\n+ }\n+ ).then((json) => {\nvar args = {\njson,\nparams\n@@ -6952,7 +6955,9 @@ speechSynthesis.getVoices();\n$app.data.showUserDialogHistory = new Set();\n$app.methods.quickSearchUserHistory = function () {\n- var userHistory = Array.from(this.showUserDialogHistory.values()).reverse().slice(0, 5);\n+ var userHistory = Array.from(this.showUserDialogHistory.values())\n+ .reverse()\n+ .slice(0, 5);\nvar results = [];\nuserHistory.forEach((userId) => {\nvar ref = API.cachedUsers.get(userId);\n@@ -10183,16 +10188,23 @@ speechSynthesis.getVoices();\nvar input = instance.inputValue;\nvar testUrl = input.substring(0, 15);\nif (testUrl === 'https://vrch.at') {\n- AppApi.FollowUrl(input).then((url) => {\n+ AppApi.FollowUrl(input).then((output) => {\n+ var url = output;\n// /home/launch?worldId=wrld_f20326da-f1ac-45fc-a062-609723b097b1&instanceId=33570~region(jp)&shortName=cough-stockinglinz-ddd26\n// https://vrch.at/wrld_f20326da-f1ac-45fc-a062-609723b097b1\n- if (url.substring(0, 18) === 'https://vrchat.com') {\n+ if (\n+ url.substring(0, 18) ===\n+ 'https://vrchat.com'\n+ ) {\nurl = url.substring(18);\n}\nif (url.substring(0, 13) === '/home/launch?') {\n- var urlParams = new URLSearchParams(url.substring(13));\n+ var urlParams = new URLSearchParams(\n+ url.substring(13)\n+ );\nvar worldId = urlParams.get('worldId');\n- var instanceId = urlParams.get('instanceId');\n+ var instanceId =\n+ urlParams.get('instanceId');\nif (instanceId) {\nvar location = `${worldId}:${instanceId}`;\nthis.showWorldDialog(location);\n@@ -12721,7 +12733,10 @@ speechSynthesis.getVoices();\n}\nD.url = getLaunchURL(L.worldId, L.instanceId);\nD.visible = true;\n- API.getInstanceShortName({worldId: L.worldId, instanceId: L.instanceId});\n+ API.getInstanceShortName({\n+ worldId: L.worldId,\n+ instanceId: L.instanceId\n+ });\n};\n$app.methods.locationToLaunchArg = function (location) {\n",
        "date": "20.11.2021 00:31:47",
        "repo": "pypy-vrc/vrcx",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor API.getInstanceShortName and quickSearchUserHistory functions, and update AppApi.FollowUrl method."
    },
    {
        "msg": "handle minified constructor names a little better",
        "diff": "diff --git a/src/browser/errorParser.js b/src/browser/errorParser.js @@ -61,7 +61,9 @@ function Stack(exception) {\n}\nvar name = exception.constructor && exception.constructor.name;\n- name = name || exception.name;\n+ if (!name || !name.length || name.length < 3) {\n+ name = exception.name;\n+ }\nreturn {\nstack: getStack(),\n",
        "date": "08.11.2018 11:17:57",
        "repo": "rollbar/rollbar.js",
        "type": "handle",
        "chatgpt_zeroshot": "Fix issue with error name length in errorParser.js"
    },
    {
        "msg": "handle async lambda functions better",
        "diff": "diff --git a/src/server/rollbar.js b/src/server/rollbar.js @@ -263,8 +263,15 @@ Rollbar.errorHandler = function() {\n};\nRollbar.prototype.lambdaHandler = function(handler, timeoutHandler) {\n+ if (handler.length <= 2) {\n+ return this.asyncLambdaHandler(handler, timeoutHandler);\n+ }\n+ return this.syncLambdaHandler(handler, timeoutHandler);\n+};\n+\n+Rollbar.prototype.asyncLambdaHandler = function(handler, timeoutHandler) {\nvar self = this;\n- var _timeoutHandler = function(event, context, cb) {\n+ var _timeoutHandler = function(event, context) {\nvar message = 'Function timed out';\nvar custom = {\noriginalEvent: event,\n@@ -273,25 +280,43 @@ Rollbar.prototype.lambdaHandler = function(handler, timeoutHandler) {\nself.error(message, custom);\n};\nvar shouldReportTimeouts = self.options.captureLambdaTimeouts;\n- return function(event, context, callback) {\n+ return function(event, context) {\n+ return new Promise(function(resolve, reject) {\nself.lambdaContext = context;\nif (shouldReportTimeouts) {\n- var timeoutCb = (timeoutHandler || _timeoutHandler).bind(null, event, context, callback);\n+ var timeoutCb = (timeoutHandler || _timeoutHandler).bind(null, event, context);\nself.lambdaTimeoutHandle = setTimeout(timeoutCb, context.getRemainingTimeInMillis() - 1000);\n}\n- try {\n- if (handler.length <= 2) {\n- // handler is async\nhandler(event, context)\n- .then(function(resp) { return callback(null, resp); })\n+ .then(function(resp) { resolve(resp); })\n.catch(function(err) {\nself.error(err);\nself.wait(function() {\nclearTimeout(self.lambdaTimeoutHandle);\n- callback(err);\n+ reject(err);\n});\n});\n- } else {\n+ });\n+ };\n+};\n+Rollbar.prototype.syncLambdaHandler = function(handler, timeoutHandler) {\n+ var self = this;\n+ var _timeoutHandler = function(event, context, cb) {\n+ var message = 'Function timed out';\n+ var custom = {\n+ originalEvent: event,\n+ originalRequestId: context.awsRequestId,\n+ };\n+ self.error(message, custom);\n+ };\n+ var shouldReportTimeouts = self.options.captureLambdaTimeouts;\n+ return function(event, context, callback) {\n+ self.lambdaContext = context;\n+ if (shouldReportTimeouts) {\n+ var timeoutCb = (timeoutHandler || _timeoutHandler).bind(null, event, context, callback);\n+ self.lambdaTimeoutHandle = setTimeout(timeoutCb, context.getRemainingTimeInMillis() - 1000);\n+ }\n+ try {\nhandler(event, context, function(err, resp) {\nif (err) {\nself.error(err);\n@@ -301,7 +326,6 @@ Rollbar.prototype.lambdaHandler = function(handler, timeoutHandler) {\ncallback(err, resp);\n});\n});\n- }\n} catch (err) {\nself.error(err);\nself.wait(function() {\n",
        "date": "11.02.2019 09:50:43",
        "repo": "rollbar/rollbar.js",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor lambdaHandler to support both async and sync handlers"
    },
    {
        "msg": "handle output error strings",
        "diff": "diff --git a/bin/cordova b/bin/cordova @@ -26,7 +26,8 @@ const cli = require('../src/cli');\ncli(process.argv).catch(err => {\nif (!(err instanceof Error)) {\n- throw new CordovaError('Promise rejected with non-error: ' + util.inspect(err));\n+ const errorOutput = typeof err === 'string' ? err : util.inspect(err);\n+ throw new CordovaError('Promise rejected with non-error: ' + errorOutput);\n}\nprocess.exitCode = err.code || 1;\n",
        "date": "23.04.2019 12:34:56",
        "repo": "apache/cordova-cli",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor error handling in cordova CLI to handle non-error promise rejections"
    },
    {
        "msg": "handle complex expressions in add() & subtract()",
        "diff": "diff --git a/scss/_functions.scss b/scss/_functions.scss @@ -181,6 +181,14 @@ $_luminance-list: .0008 .001 .0011 .0013 .0015 .0017 .002 .0022 .0025 .0027 .003\n@return $value1 + $value2;\n}\n+ @if type-of($value1) != number {\n+ $value1: unquote(\"(\") + $value1 + unquote(\")\");\n+ }\n+\n+ @if type-of($value2) != number {\n+ $value2: unquote(\"(\") + $value2 + unquote(\")\");\n+ }\n+\n@return if($return-calc == true, calc(#{$value1} + #{$value2}), $value1 + unquote(\" + \") + $value2);\n}\n@@ -201,5 +209,13 @@ $_luminance-list: .0008 .001 .0011 .0013 .0015 .0017 .002 .0022 .0025 .0027 .003\n@return $value1 - $value2;\n}\n+ @if type-of($value1) != number {\n+ $value1: unquote(\"(\") + $value1 + unquote(\")\");\n+ }\n+\n+ @if type-of($value2) != number {\n+ $value2: unquote(\"(\") + $value2 + unquote(\")\");\n+ }\n+\n@return if($return-calc == true, calc(#{$value1} - #{$value2}), $value1 + unquote(\" - \") + $value2);\n}\n",
        "date": "25.05.2021 07:23:41",
        "repo": "coreui/coreui",
        "type": "handle",
        "chatgpt_zeroshot": "Add parentheses around non-numeric values in addition and subtraction functions."
    },
    {
        "msg": "handle Signature Ability upgrade modifiers",
        "diff": "diff --git a/modules/helpers/modifiers.js b/modules/helpers/modifiers.js @@ -71,7 +71,7 @@ export default class ModifierHelpers {\n});\n}\n}\n- } else if (item.type === \"forcepower\" || item.type === \"specialization\") {\n+ } else if (item.type === \"forcepower\" || item.type === \"specialization\" || item.type === \"signatureability\") {\n// apply basic force power/specialization modifiers\nif (attrsToApply.length > 0) {\nattrsToApply.forEach((attr) => {\n@@ -89,7 +89,7 @@ export default class ModifierHelpers {\n});\n}\nlet upgrades;\n- if (item.type === \"forcepower\") {\n+ if (item.type === \"forcepower\" || item.type === \"signatureability\") {\n// apply force power upgrades\nupgrades = Object.keys(item.data.upgrades)\n.filter((k) => item.data.upgrades[k].islearned)\n",
        "date": "07.06.2021 18:56:34",
        "repo": "starwarsfoundryvtt/starwarsffg",
        "type": "handle",
        "chatgpt_zeroshot": "Add support for signature abilities in ModifierHelpers"
    },
    {
        "msg": "handle Mac OSX CMD key in destiny tracker Mac users are people too... mostly",
        "diff": "diff --git a/modules/ffg-destiny-tracker.js b/modules/ffg-destiny-tracker.js @@ -101,7 +101,7 @@ export default class DestinyTracker extends FormApplication {\nconst pointType = event.currentTarget.dataset.group;\nvar typeName = null;\nconst add = event.shiftKey;\n- const remove = event.ctrlKey;\n+ const remove = event.ctrlKey || event.metaKey;\nvar flipType = null;\nvar actionType = null;\nif (pointType == \"dPoolLight\") {\n",
        "date": "27.01.2022 18:56:10",
        "repo": "starwarsfoundryvtt/starwarsffg",
        "type": "handle",
        "chatgpt_zeroshot": "Update event handling to include metaKey for remove action."
    },
    {
        "msg": "handle text input",
        "diff": "diff --git a/src/text-editor-component.js b/src/text-editor-component.js @@ -29,6 +29,9 @@ class TextEditorComponent {\nthis.horizontalPixelPositionsByScreenLineId = new Map() // Values are maps from column to horiontal pixel positions\nthis.lineNodesByScreenLineId = new Map()\nthis.textNodesByScreenLineId = new Map()\n+ this.lastKeydown = null\n+ this.lastKeydownBeforeKeypress = null\n+ this.openedAccentedCharacterMenu = false\nthis.cursorsToRender = []\nif (this.props.model) this.observeModel()\n@@ -350,7 +353,13 @@ class TextEditorComponent {\nref: 'hiddenInput',\nkey: 'hiddenInput',\nclassName: 'hidden-input',\n- on: {blur: this.didBlur},\n+ on: {\n+ blur: this.didBlur,\n+ textInput: this.didTextInput,\n+ keydown: this.didKeydown,\n+ keyup: this.didKeyup,\n+ keypress: this.didKeypress\n+ },\ntabIndex: -1,\nstyle: {\nposition: 'absolute',\n@@ -491,6 +500,72 @@ class TextEditorComponent {\n}\n}\n+ didTextInput (event) {\n+ event.stopPropagation()\n+\n+ // WARNING: If we call preventDefault on the input of a space character,\n+ // then the browser interprets the spacebar keypress as a page-down command,\n+ // causing spaces to scroll elements containing editors. This is impossible\n+ // to test.\n+ if (event.data !== ' ') event.preventDefault()\n+\n+ // if (!this.isInputEnabled()) return\n+\n+ // Workaround of the accented character suggestion feature in macOS. This\n+ // will only occur when the user is not composing in IME mode. When the user\n+ // selects a modified character from the macOS menu, `textInput` will occur\n+ // twice, once for the initial character, and once for the modified\n+ // character. However, only a single keypress will have fired. If this is\n+ // the case, select backward to replace the original character.\n+ if (this.openedAccentedCharacterMenu) {\n+ this.getModel().selectLeft()\n+ this.openedAccentedCharacterMenu = false\n+ }\n+\n+ this.getModel().insertText(event.data, {groupUndo: true})\n+ }\n+\n+ // We need to get clever to detect when the accented character menu is\n+ // opened on macOS. Usually, every keydown event that could cause input is\n+ // followed by a corresponding keypress. However, pressing and holding\n+ // long enough to open the accented character menu causes additional keydown\n+ // events to fire that aren't followed by their own keypress and textInput\n+ // events.\n+ //\n+ // Therefore, we assume the accented character menu has been deployed if,\n+ // before observing any keyup event, we observe events in the following\n+ // sequence:\n+ //\n+ // keydown(keyCode: X), keypress, keydown(keyCode: X)\n+ //\n+ // The keyCode X must be the same in the keydown events that bracket the\n+ // keypress, meaning we're *holding* the _same_ key we intially pressed.\n+ // Got that?\n+ didKeydown (event) {\n+ if (this.lastKeydownBeforeKeypress != null) {\n+ if (this.lastKeydownBeforeKeypress.keyCode === event.keyCode) {\n+ this.openedAccentedCharacterMenu = true\n+ }\n+ this.lastKeydownBeforeKeypress = null\n+ } else {\n+ this.lastKeydown = event\n+ }\n+ }\n+\n+ didKeypress () {\n+ this.lastKeydownBeforeKeypress = this.lastKeydown\n+ this.lastKeydown = null\n+\n+ // This cancels the accented character behavior if we type a key normally\n+ // with the menu open.\n+ this.openedAccentedCharacterMenu = false\n+ }\n+\n+ didKeyup () {\n+ this.lastKeydownBeforeKeypress = null\n+ this.lastKeydown = null\n+ }\n+\nperformInitialMeasurements () {\nthis.measurements = {}\nthis.staleMeasurements = {}\n@@ -628,7 +703,9 @@ class TextEditorComponent {\nobserveModel () {\nconst {model} = this.props\n- this.disposables.add(model.selectionsMarkerLayer.onDidUpdate(this.scheduleUpdate.bind(this)))\n+ const scheduleUpdate = this.scheduleUpdate.bind(this)\n+ this.disposables.add(model.selectionsMarkerLayer.onDidUpdate(scheduleUpdate))\n+ this.disposables.add(model.displayLayer.onDidChangeSync(scheduleUpdate))\n}\nisVisible () {\n",
        "date": "28.02.2017 09:54:33",
        "repo": "atom/atom",
        "type": "handle",
        "chatgpt_zeroshot": "Add event handlers for text input, keydown, keyup, and keypress in TextEditorComponent"
    },
    {
        "msg": "handle IME input",
        "diff": "diff --git a/src/text-editor-component.js b/src/text-editor-component.js @@ -36,7 +36,7 @@ class TextEditorComponent {\nthis.previousScrollHeight = 0\nthis.lastKeydown = null\nthis.lastKeydownBeforeKeypress = null\n- this.openedAccentedCharacterMenu = false\n+ this.accentedCharacterMenuIsOpen = false\nthis.decorationsToRender = {\nlineNumbers: new Map(),\nlines: new Map(),\n@@ -368,7 +368,10 @@ class TextEditorComponent {\ntextInput: this.didTextInput,\nkeydown: this.didKeydown,\nkeyup: this.didKeyup,\n- keypress: this.didKeypress\n+ keypress: this.didKeypress,\n+ compositionstart: this.didCompositionStart,\n+ compositionupdate: this.didCompositionUpdate,\n+ compositionend: this.didCompositionEnd\n},\ntabIndex: -1,\nstyle: {\n@@ -643,17 +646,12 @@ class TextEditorComponent {\n// to test.\nif (event.data !== ' ') event.preventDefault()\n+ // TODO: Deal with disabled input\n// if (!this.isInputEnabled()) return\n- // Workaround of the accented character suggestion feature in macOS. This\n- // will only occur when the user is not composing in IME mode. When the user\n- // selects a modified character from the macOS menu, `textInput` will occur\n- // twice, once for the initial character, and once for the modified\n- // character. However, only a single keypress will have fired. If this is\n- // the case, select backward to replace the original character.\n- if (this.openedAccentedCharacterMenu) {\n- this.getModel().selectLeft()\n- this.openedAccentedCharacterMenu = false\n+ if (this.compositionCheckpoint) {\n+ this.getModel().revertToCheckpoint(this.compositionCheckpoint)\n+ this.compositionCheckpoint = null\n}\nthis.getModel().insertText(event.data, {groupUndo: true})\n@@ -678,7 +676,8 @@ class TextEditorComponent {\ndidKeydown (event) {\nif (this.lastKeydownBeforeKeypress != null) {\nif (this.lastKeydownBeforeKeypress.keyCode === event.keyCode) {\n- this.openedAccentedCharacterMenu = true\n+ this.accentedCharacterMenuIsOpen = true\n+ this.getModel().selectLeft()\n}\nthis.lastKeydownBeforeKeypress = null\n} else {\n@@ -686,20 +685,44 @@ class TextEditorComponent {\n}\n}\n- didKeypress () {\n+ didKeypress (event) {\nthis.lastKeydownBeforeKeypress = this.lastKeydown\nthis.lastKeydown = null\n// This cancels the accented character behavior if we type a key normally\n// with the menu open.\n- this.openedAccentedCharacterMenu = false\n+ this.accentedCharacterMenuIsOpen = false\n}\n- didKeyup () {\n+ didKeyup (event) {\nthis.lastKeydownBeforeKeypress = null\nthis.lastKeydown = null\n}\n+ // The IME composition events work like this:\n+ //\n+ // User types 's', chromium pops up the completion helper\n+ // 1. compositionstart fired\n+ // 2. compositionupdate fired; event.data == 's'\n+ // User hits arrow keys to move around in completion helper\n+ // 3. compositionupdate fired; event.data == 's' for each arry key press\n+ // User escape to cancel\n+ // 4. compositionend fired\n+ // OR User chooses a completion\n+ // 4. compositionend fired\n+ // 5. textInput fired; event.data == the completion string\n+ didCompositionStart (event) {\n+ this.compositionCheckpoint = this.getModel().createCheckpoint()\n+ }\n+\n+ didCompositionUpdate (event) {\n+ this.getModel().insertText(event.data, {select: true})\n+ }\n+\n+ didCompositionEnd (event) {\n+ event.target.value = ''\n+ }\n+\ndidRequestAutoscroll (autoscroll) {\nthis.pendingAutoscroll = autoscroll\nthis.scheduleUpdate()\n",
        "date": "07.03.2017 22:24:48",
        "repo": "atom/atom",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor accented character menu handling and add IME composition event handling"
    },
    {
        "msg": "handle more htmlparser2 snapshot exceptions",
        "diff": "diff --git a/script/lib/generate-startup-snapshot.js b/script/lib/generate-startup-snapshot.js @@ -43,6 +43,9 @@ module.exports = function (packagedAppPath) {\nrelativePath == path.join('..', 'node_modules', 'glob', 'glob.js') ||\nrelativePath == path.join('..', 'node_modules', 'graceful-fs', 'graceful-fs.js') ||\nrelativePath == path.join('..', 'node_modules', 'htmlparser2', 'lib', 'index.js') ||\n+ relativePath == path.join('..', 'node_modules', 'markdown-preview', 'node_modules', 'htmlparser2', 'lib', 'index.js') ||\n+ relativePath == path.join('..', 'node_modules', 'roaster', 'node_modules', 'htmlparser2', 'lib', 'index.js') ||\n+ relativePath == path.join('..', 'node_modules', 'task-lists', 'node_modules', 'htmlparser2', 'lib', 'index.js') ||\nrelativePath == path.join('..', 'node_modules', 'iconv-lite', 'encodings', 'index.js') ||\nrelativePath == path.join('..', 'node_modules', 'less', 'index.js') ||\nrelativePath == path.join('..', 'node_modules', 'less', 'lib', 'less', 'fs.js') ||\n",
        "date": "10.05.2017 06:33:33",
        "repo": "atom/atom",
        "type": "handle",
        "chatgpt_zeroshot": "Add support for nested htmlparser2 modules in startup snapshot generation"
    },
    {
        "msg": "handle grammars with no name",
        "diff": "diff --git a/src/grammar-registry.js b/src/grammar-registry.js @@ -236,7 +236,7 @@ class GrammarRegistry extends FirstMate.GrammarRegistry {\ngrammarForLanguageName (languageName) {\nconst lowercaseLanguageName = languageName.toLowerCase()\n- return this.getGrammars().find(grammar => grammar.name.toLowerCase() === lowercaseLanguageName)\n+ return this.getGrammars().find(({name}) => name && name.toLowerCase() === lowercaseLanguageName)\n}\ngrammarAddedOrUpdated (grammar) {\n",
        "date": "06.11.2017 16:29:13",
        "repo": "atom/atom",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor grammarForLanguageName method to use destructuring for better readability"
    },
    {
        "msg": "handle concurrent calls to the same channel in ipc helpers",
        "diff": "diff --git a/src/ipc-helpers.js b/src/ipc-helpers.js @@ -3,6 +3,8 @@ let ipcRenderer = null\nlet ipcMain = null\nlet BrowserWindow = null\n+let nextResponseChannelId = 0\n+\nexports.on = function (emitter, eventName, callback) {\nemitter.on(eventName, callback)\nreturn new Disposable(() => emitter.removeListener(eventName, callback))\n@@ -14,7 +16,7 @@ exports.call = function (channel, ...args) {\nipcRenderer.setMaxListeners(20)\n}\n- const responseChannel = getResponseChannel(channel)\n+ const responseChannel = `ipc-helpers-response-${nextResponseChannelId++}`\nreturn new Promise(resolve => {\nipcRenderer.on(responseChannel, (event, result) => {\n@@ -22,7 +24,7 @@ exports.call = function (channel, ...args) {\nresolve(result)\n})\n- ipcRenderer.send(channel, ...args)\n+ ipcRenderer.send(channel, responseChannel, ...args)\n})\n}\n@@ -33,15 +35,9 @@ exports.respondTo = function (channel, callback) {\nBrowserWindow = electron.BrowserWindow\n}\n- const responseChannel = getResponseChannel(channel)\n-\n- return exports.on(ipcMain, channel, async (event, ...args) => {\n+ return exports.on(ipcMain, channel, async (event, responseChannel, ...args) => {\nconst browserWindow = BrowserWindow.fromWebContents(event.sender)\nconst result = await callback(browserWindow, ...args)\nevent.sender.send(responseChannel, result)\n})\n}\n-\n-function getResponseChannel (channel) {\n- return 'ipc-helpers-' + channel + '-response'\n-}\n",
        "date": "18.01.2018 11:26:07",
        "repo": "atom/atom",
        "type": "handle",
        "chatgpt_zeroshot": "Add response channel ID generation to ipc-helpers"
    },
    {
        "msg": "handle case where itemSpecificity is passed but falsy",
        "diff": "diff --git a/src/menu-helpers.js b/src/menu-helpers.js @@ -26,7 +26,7 @@ function merge (menu, item, itemSpecificity = Infinity) {\nfor (let submenuItem of item.submenu) {\nmerge(matchingItem.submenu, submenuItem, itemSpecificity)\n}\n- } else if (itemSpecificity >= ItemSpecificities.get(matchingItem)) {\n+ } else if (itemSpecificity && itemSpecificity >= ItemSpecificities.get(matchingItem)) {\nmenu[matchingItemIndex] = item\n}\n}\n",
        "date": "25.01.2018 09:24:44",
        "repo": "atom/atom",
        "type": "handle",
        "chatgpt_zeroshot": "Fix item specificity comparison in merge function"
    },
    {
        "msg": "handle cases where the item may be destroyed",
        "diff": "diff --git a/src/workspace.js b/src/workspace.js @@ -507,10 +507,13 @@ module.exports = class Workspace extends Model {\n// It's important to call handleGrammarUsed after emitting the did-add event:\n// if we activate a package between adding the editor to the registry and emitting\n// the package may receive the editor twice from `observeTextEditors`.\n+ // (Note that the item can be destroyed by an `observeTextEditors` handler.)\n+ if (!item.isDestroyed()) {\nsubscriptions.add(\nitem.observeGrammar(this.handleGrammarUsed.bind(this))\n)\n}\n+ }\n})\n}\n",
        "date": "15.05.2018 11:32:04",
        "repo": "atom/atom",
        "type": "handle",
        "chatgpt_zeroshot": "Fix issue with observing grammar in Workspace class"
    },
    {
        "msg": "handle temp module version divergence",
        "diff": "diff --git a/script/lib/generate-startup-snapshot.js b/script/lib/generate-startup-snapshot.js @@ -37,6 +37,7 @@ module.exports = function (packagedAppPath) {\nrequiredModuleRelativePath.endsWith(path.join('node_modules', 'minimatch', 'minimatch.js')) ||\nrequiredModuleRelativePath.endsWith(path.join('node_modules', 'request', 'index.js')) ||\nrequiredModuleRelativePath.endsWith(path.join('node_modules', 'request', 'request.js')) ||\n+ requiredModuleRelativePath.endsWith(path.join('node_modules', 'temp', 'lib', 'temp.js')) ||\nrequiredModuleRelativePath === path.join('..', 'exports', 'atom.js') ||\nrequiredModuleRelativePath === path.join('..', 'src', 'electron-shims.js') ||\nrequiredModuleRelativePath === path.join('..', 'node_modules', 'atom-keymap', 'lib', 'command-event.js') ||\n@@ -60,7 +61,6 @@ module.exports = function (packagedAppPath) {\nrequiredModuleRelativePath === path.join('..', 'node_modules', 'spelling-manager', 'node_modules', 'natural', 'lib', 'natural', 'index.js') ||\nrequiredModuleRelativePath === path.join('..', 'node_modules', 'tar', 'tar.js') ||\nrequiredModuleRelativePath === path.join('..', 'node_modules', 'ls-archive', 'node_modules', 'tar', 'tar.js') ||\n- requiredModuleRelativePath === path.join('..', 'node_modules', 'temp', 'lib', 'temp.js') ||\nrequiredModuleRelativePath === path.join('..', 'node_modules', 'tmp', 'lib', 'tmp.js') ||\nrequiredModuleRelativePath === path.join('..', 'node_modules', 'tree-sitter', 'index.js') ||\nrequiredModuleRelativePath === path.join('..', 'node_modules', 'yauzl', 'index.js') ||\n",
        "date": "02.01.2019 11:33:09",
        "repo": "atom/atom",
        "type": "handle",
        "chatgpt_zeroshot": "Add required module path for 'temp.js' in generate-startup-snapshot script"
    },
    {
        "msg": "handle null or undefined",
        "diff": "diff --git a/src/panel-container-element.js b/src/panel-container-element.js @@ -54,7 +54,7 @@ class PanelContainerElement extends HTMLElement {\nif (visible) { this.hideAllPanelsExcept(panel) }\n}))\n- if (panel.autoFocus !== false) {\n+ if (panel.autoFocus) {\nconst focusOptions = {\n// focus-trap will attempt to give focus to the first tabbable element\n// on activation. If there aren't any tabbable elements,\n",
        "date": "16.01.2019 14:08:29",
        "repo": "atom/atom",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor panel auto-focus condition in PanelContainerElement"
    },
    {
        "msg": "handle any origin",
        "diff": "diff --git a/v3/src/input/components/PointWithinGameObject.js b/v3/src/input/components/PointWithinGameObject.js @@ -8,6 +8,10 @@ var PointWithinGameObject = function (gameObject, x, y)\nreturn false;\n}\n+ // Normalize the origin\n+ x += gameObject.displayOriginX;\n+ y += gameObject.displayOriginY;\n+\nreturn gameObject.hitAreaCallback(gameObject.hitArea, x, y);\n};\n",
        "date": "17.07.2017 23:38:07",
        "repo": "photonstorm/phaser",
        "type": "handle",
        "chatgpt_zeroshot": "Normalize origin in PointWithinGameObject.js"
    },
    {
        "msg": "handle audio decoding in onProcess method of AudioFile class",
        "diff": "diff --git a/v3/src/loader/filetypes/AudioFile.js b/v3/src/loader/filetypes/AudioFile.js @@ -14,7 +14,7 @@ var AudioFile = new Class({\nfunction AudioFile (key, url, path, xhrSettings, soundManager)\n{\n- this.sound = soundManager;\n+ this.soundManager = soundManager;\nvar fileConfig = {\ntype: 'audio',\n@@ -33,12 +33,28 @@ var AudioFile = new Class({\n{\nthis.state = CONST.FILE_PROCESSING;\n- // TODO handle decoding\n- this.data = this.xhrLoader.response;\n+ var _this = this;\n- this.onComplete();\n+ // interesting read https://github.com/WebAudio/web-audio-api/issues/1305\n+ this.soundManager.context.decodeAudioData(this.xhrLoader.response,\n+ function (audioBuffer)\n+ {\n+ this.data = audioBuffer;\n+\n+ _this.onComplete();\n- callback(this);\n+ callback(_this);\n+ },\n+ function (e)\n+ {\n+ // TODO properly log decoding error\n+ console.error('Error with decoding audio data for \\'' + this.key + '\\':', e.message);\n+\n+ _this.state = CONST.FILE_ERRORED;\n+\n+ callback(_this);\n+ }\n+ );\n}\n});\n",
        "date": "10.11.2017 14:38:04",
        "repo": "photonstorm/phaser",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor AudioFile class to use soundManager instead of sound, and handle audio decoding errors properly"
    },
    {
        "msg": "handle the case when only config object is passed to the play method",
        "diff": "diff --git a/v3/src/sound/BaseSound.js b/v3/src/sound/BaseSound.js @@ -114,6 +114,10 @@ var BaseSound = new Class({\n},\nplay: function (marker, config) {\nif (marker === void 0) { marker = ''; }\n+ if (typeof marker === 'object') {\n+ config = marker;\n+ marker = '';\n+ }\nif (typeof marker !== 'string') {\nconsole.error('Sound marker name has to be a string!');\nreturn null;\n",
        "date": "16.11.2017 14:54:08",
        "repo": "photonstorm/phaser",
        "type": "handle",
        "chatgpt_zeroshot": "Fix play function to handle object as marker parameter"
    },
    {
        "msg": "handle source buffer on method calls for WebAudioSound",
        "diff": "diff --git a/v3/src/sound/webaudio/WebAudioSound.js b/v3/src/sound/webaudio/WebAudioSound.js @@ -65,18 +65,25 @@ var WebAudioSound = new Class({\nthis.source.buffer = this.audioBuffer;\nthis.source.connect(this.muteNode);\nthis.applyConfig();\n- this.source.start();\n+ this.source.start(0, 0, this.currentConfig.duration);\nthis.startTime = this.manager.context.currentTime;\nthis.pausedTime = 0;\nreturn this;\n},\npause: function () {\nBaseSound.prototype.pause.call(this);\n+ this.source.stop();\n+ this.source = null;\nthis.pausedTime = this.manager.context.currentTime - this.startTime;\nreturn this;\n},\nresume: function () {\nBaseSound.prototype.resume.call(this);\n+ this.source = this.manager.context.createBufferSource();\n+ this.source.buffer = this.audioBuffer;\n+ this.source.connect(this.muteNode);\n+ this.applyConfig();\n+ this.source.start(0, this.pausedTime, this.currentConfig.duration - this.pausedTime);\nthis.startTime = this.manager.context.currentTime - this.pausedTime;\nthis.pausedTime = 0;\nreturn this;\n",
        "date": "17.11.2017 16:16:01",
        "repo": "photonstorm/phaser",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor WebAudioSound.js to handle pausing and resuming playback properly"
    },
    {
        "msg": "handle new style settings for fonts and padding.",
        "diff": "diff --git a/v3/src/gameobjects/text/static/Text.js b/v3/src/gameobjects/text/static/Text.js @@ -4,6 +4,7 @@ var Class = require('../../../utils/Class');\nvar Components = require('../../components');\nvar GameObject = require('../../GameObject');\nvar GetTextSize = require('../GetTextSize');\n+var GetValue = require('../../../utils/object/GetValue');\nvar RemoveFromDOM = require('../../../dom/RemoveFromDOM');\nvar TextRender = require('./TextRender');\nvar TextStyle = require('../TextStyle');\n@@ -68,10 +69,10 @@ var Text = new Class({\n/**\n* Specify a padding value which is added to the line width and height when calculating the Text size.\n- * Allows you to add extra spacing if Phaser is unable to accurately determine the true font dimensions.\n+ * Allows you to add extra spacing if the browser is unable to accurately determine the true font dimensions.\n* @property {Phaser.Point} padding\n*/\n- this.padding = { x: 0, y: 0 };\n+ this.padding = { left: 0, right: 0, top: 0, bottom: 0 };\nthis.width = 1;\nthis.height = 1;\n@@ -81,6 +82,11 @@ var Text = new Class({\nthis.initRTL();\n+ if (style && style.padding)\n+ {\n+ this.setPadding(style.padding);\n+ }\n+\nthis.setText(text);\nvar _this = this;\n@@ -145,6 +151,21 @@ var Text = new Class({\nreturn this.style.setFont(font);\n},\n+ setFontFamily: function (family)\n+ {\n+ return this.style.setFontFamily(family);\n+ },\n+\n+ setFontSize: function (size)\n+ {\n+ return this.style.setFontSize(size);\n+ },\n+\n+ setFontStyle: function (style)\n+ {\n+ return this.style.setFontStyle(style);\n+ },\n+\nsetFixedSize: function (width, height)\n{\nreturn this.style.setFixedSize(width, height);\n@@ -155,9 +176,9 @@ var Text = new Class({\nreturn this.style.setBackgroundColor(color);\n},\n- setFill: function (color)\n+ setColor: function (color)\n{\n- return this.style.setFill(color);\n+ return this.style.setColor(color);\n},\nsetStroke: function (color, thickness)\n@@ -200,6 +221,59 @@ var Text = new Class({\nreturn this.style.setAlign(align);\n},\n+ // 'left' can be an object\n+ // if only 'left' and 'top' are given they are treated as 'x' and 'y'\n+ setPadding: function (left, top, right, bottom)\n+ {\n+ if (typeof left === 'object')\n+ {\n+ var config = left;\n+\n+ // If they specify x and/or y this applies to all\n+ var x = GetValue(config, 'x', null);\n+\n+ if (x !== null)\n+ {\n+ left = x;\n+ right = x;\n+ }\n+ else\n+ {\n+ left = GetValue(config, 'left', 0);\n+ right = GetValue(config, 'right', left);\n+ }\n+\n+ var y = GetValue(config, 'y', null);\n+\n+ if (y !== null)\n+ {\n+ top = y;\n+ bottom = y;\n+ }\n+ else\n+ {\n+ top = GetValue(config, 'top', 0);\n+ bottom = GetValue(config, 'bottom', top);\n+ }\n+ }\n+ else\n+ {\n+ if (left === undefined) { left = 0; }\n+ if (top === undefined) { top = left; }\n+ if (right === undefined) { right = left; }\n+ if (bottom === undefined) { bottom = top; }\n+ }\n+\n+ this.padding.left = left;\n+ this.padding.top = top;\n+ this.padding.right = right;\n+ this.padding.bottom = bottom;\n+\n+ console.log(this.padding);\n+\n+ return this.updateText();\n+ },\n+\nsetMaxLines: function (max)\n{\nreturn this.style.setMaxLines(max);\n@@ -238,8 +312,8 @@ var Text = new Class({\nvar padding = this.padding;\n- var w = (textSize.width + (padding.x * 2)) * this.resolution;\n- var h = (textSize.height + (padding.y * 2)) * this.resolution;\n+ var w = (textSize.width + padding.left + padding.right) * this.resolution;\n+ var h = (textSize.height + padding.top + padding.bottom) * this.resolution;\nif (canvas.width !== w || canvas.height !== h)\n{\n@@ -262,7 +336,7 @@ var Text = new Class({\ncontext.textBaseline = 'alphabetic';\n// Apply padding\n- context.translate(padding.x, padding.y);\n+ context.translate(padding.left, padding.top);\nvar linePositionX;\nvar linePositionY;\n@@ -282,9 +356,7 @@ var Text = new Class({\n{\nlinePositionX = w - linePositionX;\n}\n- else\n- {\n- if (style.align === 'right')\n+ else if (style.align === 'right')\n{\nlinePositionX += textSize.width - textSize.lineWidths[i];\n}\n@@ -292,7 +364,6 @@ var Text = new Class({\n{\nlinePositionX += (textSize.width - textSize.lineWidths[i]) / 2;\n}\n- }\nif (this.autoRound)\n{\n@@ -307,7 +378,7 @@ var Text = new Class({\ncontext.strokeText(lines[i], linePositionX, linePositionY);\n}\n- if (style.fill)\n+ if (style.color)\n{\nthis.style.syncShadow(context, style.shadowFill);\n@@ -337,8 +408,10 @@ var Text = new Class({\nstyle: this.style.toJSON(),\nresolution: this.resolution,\npadding: {\n- x: this.padding.x,\n- y: this.padding.y\n+ left: this.padding.left,\n+ right: this.padding.right,\n+ top: this.padding.top,\n+ bottom: this.padding.bottom\n}\n};\n",
        "date": "30.11.2017 17:17:18",
        "repo": "photonstorm/phaser",
        "type": "handle",
        "chatgpt_zeroshot": "Refactor Text.js to include new padding properties and update color-related methods."
    },
    {
        "msg": "handle delayed playback in update method",
        "diff": "diff --git a/src/sound/html5/HTML5AudioSound.js b/src/sound/html5/HTML5AudioSound.js @@ -126,7 +126,16 @@ var HTML5AudioSound = new Class({\nBaseSound.prototype.stop.call(this);\n},\nupdate: function (time, delta) {\n-\n+ if (this.isPlaying) {\n+ // handling delayed playback\n+ if (this.startTime > 0) {\n+ if (this.startTime < time) {\n+ this.audio.currentTime += (time - this.startTime) / 1000;\n+ this.startTime = 0;\n+ this.audio.play();\n+ }\n+ }\n+ }\n},\ndestroy: function () {\nBaseSound.prototype.destroy.call(this);\n",
        "date": "11.01.2018 18:31:36",
        "repo": "photonstorm/phaser",
        "type": "handle",
        "chatgpt_zeroshot": "Handle delayed playback in HTML5AudioSound update method"
    },
    {
        "msg": "rename tAMOUNT to much friendly amount",
        "diff": "diff --git a/test/PullPayment.js b/test/PullPayment.js @@ -2,10 +2,10 @@ var PullPaymentMock = artifacts.require(\"./helpers/PullPaymentMock.sol\");\ncontract('PullPayment', function(accounts) {\nlet ppce;\n- let tAMOUNT = 17*1e18;\n+ let amount = 17*1e18;\nbeforeEach(async function() {\n- ppce = await PullPaymentMock.new({value: tAMOUNT});\n+ ppce = await PullPaymentMock.new({value: amount});\n});\nit(\"can't call asyncSend externally\", async function() {\n@@ -50,13 +50,13 @@ contract('PullPayment', function(accounts) {\nlet payee = accounts[1];\nlet initialBalance = web3.eth.getBalance(payee);\n- let call1 = await ppce.callSend(payee, tAMOUNT);\n+ let call1 = await ppce.callSend(payee, amount);\nlet payment1 = await ppce.payments(payee);\n- assert.equal(payment1, tAMOUNT);\n+ assert.equal(payment1, amount);\nlet totalPayments = await ppce.totalPayments();\n- assert.equal(totalPayments, tAMOUNT);\n+ assert.equal(totalPayments, amount);\nlet withdraw = await ppce.withdrawPayments({from: payee});\nlet payment2 = await ppce.payments(payee);\n@@ -66,7 +66,7 @@ contract('PullPayment', function(accounts) {\nassert.equal(totalPayments, 0);\nlet balance = web3.eth.getBalance(payee);\n- assert(Math.abs(balance-initialBalance-tAMOUNT) < 1e16);\n+ assert(Math.abs(balance-initialBalance-amount) < 1e16);\n});\n});\n",
        "date": "20.07.2017 16:01:41",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor variable names and update tests in PullPayment contract"
    },
    {
        "msg": "rename return parameter",
        "diff": "diff --git a/contracts/governance/TimelockController.sol b/contracts/governance/TimelockController.sol @@ -131,7 +131,7 @@ contract TimelockController is AccessControl, IERC721Receiver, IERC1155Receiver\n* @dev Returns whether an id correspond to a registered operation. This\n* includes both Pending, Ready and Done operations.\n*/\n- function isOperation(bytes32 id) public view virtual returns (bool pending) {\n+ function isOperation(bytes32 id) public view virtual returns (bool registered) {\nreturn getTimestamp(id) > 0;\n}\n",
        "date": "19.05.2022 15:52:54",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor isOperation function to return whether an id is registered instead of pending"
    },
    {
        "msg": "rename approved parameter in IERC721",
        "diff": "diff --git a/contracts/token/ERC721/IERC721.sol b/contracts/token/ERC721/IERC721.sol @@ -112,7 +112,7 @@ interface IERC721 is IERC165 {\n*\n* Emits an {ApprovalForAll} event.\n*/\n- function setApprovalForAll(address operator, bool _approved) external;\n+ function setApprovalForAll(address operator, bool approved) external;\n/**\n* @dev Returns the account approved for `tokenId` token.\n",
        "date": "29.12.2022 01:32:50",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "rename",
        "chatgpt_zeroshot": "Fix parameter name in setApprovalForAll function"
    },
    {
        "msg": "rename param to match the interface",
        "diff": "diff --git a/contracts/token/common/ERC2981.sol b/contracts/token/common/ERC2981.sol @@ -40,14 +40,14 @@ abstract contract ERC2981 is IERC2981, ERC165 {\n/**\n* @inheritdoc IERC2981\n*/\n- function royaltyInfo(uint256 _tokenId, uint256 _salePrice) public view virtual override returns (address, uint256) {\n- RoyaltyInfo memory royalty = _tokenRoyaltyInfo[_tokenId];\n+ function royaltyInfo(uint256 tokenId, uint256 salePrice) public view virtual override returns (address, uint256) {\n+ RoyaltyInfo memory royalty = _tokenRoyaltyInfo[tokenId];\nif (royalty.receiver == address(0)) {\nroyalty = _defaultRoyaltyInfo;\n}\n- uint256 royaltyAmount = (_salePrice * royalty.royaltyFraction) / _feeDenominator();\n+ uint256 royaltyAmount = (salePrice * royalty.royaltyFraction) / _feeDenominator();\nreturn (royalty.receiver, royaltyAmount);\n}\n",
        "date": "03.01.2023 16:30:51",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor ERC2981 royaltyInfo function parameters and variables"
    },
    {
        "msg": "rename font bundles in production mode Also change url-loader max limit.",
        "diff": "diff --git a/build/webpack.config.js b/build/webpack.config.js @@ -313,8 +313,8 @@ config.module.rules.push({\ntest: new RegExp(`\\\\.${extension}$`),\nloader: 'url-loader',\noptions: {\n- name: 'fonts/[name].[ext]',\n- limit: 10000,\n+ name: __DEV__ ? 'fonts/[name].[ext]' : 'fonts/[name].[hash].[ext]',\n+ limit: 8192,\nmimetype\n}\n})\n",
        "date": "28.08.2017 14:33:10",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "rename",
        "chatgpt_zeroshot": "Update webpack config to use hashed filenames for fonts and increase limit to 8192 bytes"
    },
    {
        "msg": "rename serverStatusTimer",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/server.js b/MaterialSkin/HTML/material/html/js/server.js @@ -142,7 +142,7 @@ var lmsServer = Vue.component('lms-server', {\nif (this.cometd) {\nthis.cometd.disconnect();\n}\n- this.cancelTimers();\n+ this.cancelServerStatusTimer();\nthis.subscribedPlayers = new Set();\nthis.cometd = new org.cometd.CometD();\nthis.cometd.init({url: '/cometd', logLevel:'off'});\n@@ -160,8 +160,8 @@ var lmsServer = Vue.component('lms-server', {\n{data:{response:'/'+this.cometd.getClientId()+'/slim/favorites', request:['favorites', ['changed']]}});\nthis.updateFavorites();\n// If we don't get a statu supdate within 5 seconds, assume something wrong and reconnect\n- this.statusTimer = setTimeout(function () {\n- this.statusTimer = undefined;\n+ this.serverStatusTimer = setTimeout(function () {\n+ this.serverStatusTimer = undefined;\nthis.connectToCometD();\n}.bind(this), 5000);\n}\n@@ -184,7 +184,7 @@ var lmsServer = Vue.component('lms-server', {\n},\nhandleServerStatus(data) {\nlogCometdMessage(\"SERVER\", data);\n- this.cancelTimers();\n+ this.cancelServerStatusTimer();\nvar players = [];\nif (lmsLastScan!=data.lastscan) {\nlmsLastScan = data.lastscan;\n@@ -337,10 +337,10 @@ var lmsServer = Vue.component('lms-server', {\n}\n});\n},\n- cancelTimers() {\n- if (undefined!==this.statusTimer) {\n- clearTimeout(this.statusTimer);\n- this.statusTimer = undefined;\n+ cancelServerStatusTimer() {\n+ if (undefined!==this.serverStatusTimer) {\n+ clearTimeout(this.serverStatusTimer);\n+ this.serverStatusTimer = undefined;\n}\n}\n},\n@@ -416,7 +416,7 @@ var lmsServer = Vue.component('lms-server', {\n}.bind(this));\n},\nbeforeDestroy() {\n- this.cancelTimers();\n+ this.cancelServerStatusTimer();\n},\nwatch: {\n'$store.state.player': function (newVal) {\n",
        "date": "14.04.2019 21:55:55",
        "repo": "cdrummond/lms-material",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor server.js to rename and improve clarity of timer functions"
    },
    {
        "msg": "rename serverMyMusicMenu to myMusicMenu",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-page.js b/MaterialSkin/HTML/material/html/js/browse-page.js @@ -311,7 +311,7 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\n}\n},\ncreated() {\n- this.serverMyMusic=[];\n+ this.myMusic=[];\nthis.history=[];\nthis.fetchingItems = false;\nthis.current = null;\n@@ -383,7 +383,7 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\nthis.refreshList();\n} else if ((this.current && this.current.id == TOP_MYMUSIC_ID) ||\n(this.history.length>1 && this.history[1].current && this.history[1].current.id==TOP_MYMUSIC_ID)) {\n- this.serverMyMusicMenu();\n+ this.myMusicMenu();\n}\n}.bind(this));\n@@ -849,8 +849,8 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\nif (TOP_MYMUSIC_ID==item.id) {\nthis.addHistory();\n- this.items = this.serverMyMusic;\n- this.serverMyMusicMenu();\n+ this.items = this.myMusic;\n+ this.myMusicMenu();\nthis.headerTitle = item.title;\nthis.headerSubTitle = i18n(\"Browse music library\");\nthis.current = item;\n@@ -1867,11 +1867,11 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\n}\n});\n},\n- serverMyMusicMenu() {\n+ myMusicMenu() {\nthis.fetchingItems=true;\nlmsCommand(\"\", [\"material-skin\", \"browsemodes\"]).then(({data}) => {\nif (data && data.result) {\n- this.serverMyMusic = [];\n+ this.myMusic = [];\n// Get basic, configurable, browse modes...\nif (data && data.result && data.result.modes_loop) {\nfor (var idx=0, loop=data.result.modes_loop, loopLen=loop.length; idx<loopLen; ++idx) {\n@@ -1920,7 +1920,7 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\nitem.icon = \"arrow_downward\";\n}\nitem.params.push(\"menu:1\");\n- this.serverMyMusic.push(item);\n+ this.myMusic.push(item);\n}\n}\n// Now get standard menu, for extra (e.g. CustomBrowse) entries...\n@@ -1931,7 +1931,7 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\nvar c = loop[idx];\nif (c.node==\"myMusic\" && c.id) {\nif (c.id==\"randomplay\") {\n- this.serverMyMusic.push({ title: i18n(\"Random Mix\"),\n+ this.myMusic.push({ title: i18n(\"Random Mix\"),\nsvg: \"dice-multiple\",\nid: RANDOM_MIX_ID,\ntype: \"app\",\n@@ -1987,18 +1987,18 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\nif (getField(item, \"genre_id:\")>=0) {\nitem['mapgenre']=true;\n}\n- this.serverMyMusic.push(item);\n+ this.myMusic.push(item);\n}\n}\n}\n- this.serverMyMusic.sort(function(a, b) { return a.weight!=b.weight ? a.weight<b.weight ? -1 : 1 : titleSort(a, b); });\n- for (var i=0, len=this.serverMyMusic.length; i<len; ++i) {\n- this.serverMyMusic[i].menu=[this.options.pinned.has(this.serverMyMusic[i].id) ? UNPIN_ACTION : PIN_ACTION];\n+ this.myMusic.sort(function(a, b) { return a.weight!=b.weight ? a.weight<b.weight ? -1 : 1 : titleSort(a, b); });\n+ for (var i=0, len=this.myMusic.length; i<len; ++i) {\n+ this.myMusic[i].menu=[this.options.pinned.has(this.myMusic[i].id) ? UNPIN_ACTION : PIN_ACTION];\n}\nif (this.current && TOP_MYMUSIC_ID==this.current.id) {\n- this.items = this.serverMyMusic;\n+ this.items = this.myMusic;\n} else if (this.history.length>1 && this.history[1].current && this.history[1].current.id==TOP_MYMUSIC_ID) {\n- this.history[1].items = this.serverMyMusic;\n+ this.history[1].items = this.myMusic;\n}\n}\nthis.fetchingItems=false;\n@@ -2050,8 +2050,8 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\nif (this.history.length<1) {\nthis.items = this.top;\n}\n- for (var i=0, len=this.serverMyMusic.length; i<len; ++i) {\n- this.serverMyMusic[i].menu=[this.options.pinned.has(this.serverMyMusic[i].id) ? UNPIN_ACTION : PIN_ACTION];\n+ for (var i=0, len=this.myMusic.length; i<len; ++i) {\n+ this.myMusic[i].menu=[this.options.pinned.has(this.myMusic[i].id) ? UNPIN_ACTION : PIN_ACTION];\n}\nthis.saveTopList();\nremoveLocalStorage(\"pinned\");\n@@ -2117,8 +2117,8 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\n}\n}\nif (item.id.startsWith(TOP_ID_PREFIX)) {\n- for (var i=0, len=this.serverMyMusic.length; i<len; ++i) {\n- this.serverMyMusic[i].menu=[this.options.pinned.has(this.serverMyMusic[i].id) ? UNPIN_ACTION : PIN_ACTION];\n+ for (var i=0, len=this.myMusic.length; i<len; ++i) {\n+ this.myMusic[i].menu=[this.options.pinned.has(this.myMusic[i].id) ? UNPIN_ACTION : PIN_ACTION];\n}\n}\n}\n",
        "date": "12.01.2020 08:23:37",
        "repo": "cdrummond/lms-material",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor myMusic variable in browse-page.js"
    },
    {
        "msg": "rename \"Alt\" keyboard shortcuts to \"Option\" for macOS. Issue",
        "diff": "diff --git a/ChangeLog b/ChangeLog 1. Fix toggling of power when power button replaces player icon.\n2. Show ESP32 and pCP configuration button in 'Player settings' dialog when\ncalled from 'Information' and 'Manage players' dialogs.\n+3. Rename \"Alt\" keyboard shortcuts to \"Option\" for macOS.\n3.0.1\n-----\n",
        "date": "01.12.2022 10:51:36",
        "repo": "cdrummond/lms-material",
        "type": "rename",
        "chatgpt_zeroshot": "Fix power button toggling and update keyboard shortcuts for macOS."
    },
    {
        "msg": "rename tmrDelay to timerDelay",
        "diff": "diff --git a/components/dropdown/dropdown.js b/components/dropdown/dropdown.js //handle events while search is focus'd\nhandleSearchEvents: function () {\n- var self = this, timer, tmrDelay;\n+ var self = this, timer, timerDelay;\nif (this.settings.noSearch) {\nthis.searchInput.prop('readonly', true);\nif (self.settings.noSearch === false && !self.settings.source) {\nclearTimeout(timer);\n- clearTimeout(tmrDelay);\n+ clearTimeout(timerDelay);\ntimer = setTimeout(function () {\nif (searchInput.val() === '') {\nself.resetList();\n}\n}, 100);\n- tmrDelay = setTimeout(function () {\n+ timerDelay = setTimeout(function () {\nsearchInput.val('');\n}, 600);\n}\n",
        "date": "14.12.2017 09:48:44",
        "repo": "infor-design/enterprise",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor handleSearchEvents function in dropdown.js to use consistent variable naming."
    },
    {
        "msg": "rename \"soho xi controls\" in build banner text",
        "diff": "diff --git a/gruntfile.js b/gruntfile.js @@ -19,11 +19,11 @@ module.exports = function (grunt) {\nconst run = require('./scripts/configs/run.js');\nlet selectedControls = dependencyBuilder(grunt);\n- let bannerText = '/**\\n* Soho XI Controls v<%= pkg.version %>\\n* Date: <%= grunt.template.today(\"dd/mm/yyyy h:MM:ss TT\") %>\\n* Revision: <%= meta.revision %>\\n* <%= meta.copyright %>\\n*/\\n';\n+ let bannerText = '/**\\n* IDS Enterprise Components v<%= pkg.version %>\\n* Date: <%= grunt.template.today(\"dd/mm/yyyy h:MM:ss TT\") %>\\n* Revision: <%= meta.revision %>\\n* <%= meta.copyright %>\\n*/\\n';\nif (selectedControls) {\nconst bannerList = strBanner(selectedControls);\n- bannerText = `/**\\n* Soho XI Controls v<%= pkg.version %>\\n* ${bannerList}\\n* Date: <%= grunt.template.today(\"dd/mm/yyyy h:MM:ss TT\") %>\\n* Revision: <%= meta.revision %>\\n* <%= meta.copyright %>\\n*/ \\n`;\n+ bannerText = `/**\\n* IDS Enterprise Components v<%= pkg.version %>\\n* ${bannerList}\\n* Date: <%= grunt.template.today(\"dd/mm/yyyy h:MM:ss TT\") %>\\n* Revision: <%= meta.revision %>\\n* <%= meta.copyright %>\\n*/ \\n`;\n} else {\nselectedControls = controls;\n}\n",
        "date": "21.05.2018 18:39:03",
        "repo": "infor-design/enterprise",
        "type": "rename",
        "chatgpt_zeroshot": "Update banner text to reflect IDS Enterprise Components instead of Soho XI Controls."
    },
    {
        "msg": "rename tooltip method",
        "diff": "diff --git a/src/components/dropdown/dropdown.js b/src/components/dropdown/dropdown.js @@ -311,7 +311,7 @@ Dropdown.prototype = {\nthis.setDisplayedValues();\nthis.setInitial();\nthis.setWidth();\n- this.initTooltip();\n+ this.setTooltip();\nthis.element.triggerHandler('rendered');\n@@ -492,7 +492,7 @@ Dropdown.prototype = {\n/**\n* Triggers tooltip in multiselect\n*/\n- initTooltip() {\n+ setTooltip() {\nconst opts = this.element.find('option:selected');\nconst optText = this.getOptionText(opts);\n@@ -2369,7 +2369,7 @@ Dropdown.prototype = {\nthis.element.trigger('change').triggerHandler('selected', [option, isAdded]);\nif (this.pseudoElem.find('span').width() >= this.pseudoElem.width()) {\n- this.initTooltip();\n+ this.setTooltip();\n} else if (this.tooltipApi) {\nthis.tooltipApi.destroy();\n",
        "date": "23.08.2018 09:22:48",
        "repo": "infor-design/enterprise",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor tooltip initialization method to improve code readability"
    },
    {
        "msg": "rename a file to confirm to standards",
        "diff": "diff --git a/app/views/components/listview/test-remove-clear.html b/app/views/components/listview/test-remove-clear.html <div class=\"five columns\">\n<div class=\"card\">\n- <div class=\"card-header\" style=\"padding-top: 0;\">\n+ <div class=\"card-header\">\n<div class=\"toolbar\" role=\"toolbar\">\n<div class=\"title\">My Tasks</div>\n<div class=\"buttonset\">\n",
        "date": "01.08.2019 10:27:50",
        "repo": "infor-design/enterprise",
        "type": "rename",
        "chatgpt_zeroshot": "Remove unnecessary inline style from card header in listview test-remove-clear.html"
    },
    {
        "msg": "rename the file use in the test",
        "diff": "diff --git a/test/components/listview/listview.e2e-spec.js b/test/components/listview/listview.e2e-spec.js @@ -575,7 +575,7 @@ describe('Listview with indeterminate paging inside of List/Detail Pattern', ()\ndescribe('Listview flex card empty tests', () => {\nbeforeEach(async () => {\n- await utils.setPage('/components/listview/test-empty-message-no-card?layout=nofrills');\n+ await utils.setPage('/components/listview/test-empty-message-flex-container?layout=nofrills');\nconst emptyMessage = await element(by.css('.empty-message'));\nawait browser.driver\n.wait(protractor.ExpectedConditions.presenceOf(emptyMessage), config.waitsFor);\n",
        "date": "13.09.2019 09:37:33",
        "repo": "infor-design/enterprise",
        "type": "rename",
        "chatgpt_zeroshot": "Update test page URL for listview empty message with flex container."
    },
    {
        "msg": "rename baseline file",
        "diff": "diff --git a/test/components/form/form.e2e-spec.js b/test/components/form/form.e2e-spec.js @@ -55,7 +55,7 @@ describe('Form Tests', () => {\nawait utils.checkForErrors();\n- expect(await browser.protractorImageComparison.checkElement(containerEl, 'form-compact-fields')).toEqual(0);\n+ expect(await browser.protractorImageComparison.checkElement(containerEl, 'form-compact-mode')).toEqual(0);\n});\nit('Should not visual regress on compact/short fields in RTL', async () => {\n@@ -65,7 +65,7 @@ describe('Form Tests', () => {\nawait utils.checkForErrors();\n- expect(await browser.protractorImageComparison.checkElement(containerEl, 'form-compact-fields')).toEqual(0);\n+ expect(await browser.protractorImageComparison.checkElement(containerEl, 'form-compact-mode-rtl')).toEqual(0);\n});\n}\n});\n",
        "date": "15.01.2020 12:58:52",
        "repo": "infor-design/enterprise",
        "type": "rename",
        "chatgpt_zeroshot": "Update image element names in form.e2e-spec.js"
    },
    {
        "msg": "rename button API functional tests to be more descriptive",
        "diff": "diff --git a/test/components/button/button-api.func-spec.js b/test/components/button/button-api.func-spec.js @@ -36,7 +36,7 @@ describe('Button API', () => {\nexpect(buttonAPI).toEqual(jasmine.any(Object));\n});\n- it('Should destroy button', (done) => {\n+ it('can be destroyed', (done) => {\nconst spyEvent = spyOnEvent(buttonEl, 'click.button');\nbuttonAPI.destroy();\nbuttonEl.click();\n@@ -48,7 +48,7 @@ describe('Button API', () => {\nexpect($(buttonEl).data('button')).toBeFalsy();\n});\n- it('Should set settings', () => {\n+ it('has default settings', () => {\nconst settings = {\nreplaceText: false,\ntoggleOffIcon: null,\n@@ -59,7 +59,7 @@ describe('Button API', () => {\nexpect(buttonAPI.settings).toEqual(settings);\n});\n- it('Should update settings via parameter', () => {\n+ it('can update settings via the `updated()` method', () => {\nconst settings = {\nreplaceText: true,\ntoggleOffIcon: null,\n@@ -71,7 +71,7 @@ describe('Button API', () => {\nexpect(buttonAPI.settings.replaceText).toEqual(settings.replaceText);\n});\n- it('Should update menu icon setting via parameter', () => {\n+ it('should properly update the `hideMenuArrow` setting via the `updated()` method', () => {\nconst settings = {\nreplaceText: false,\ntoggleOffIcon: null,\n@@ -83,7 +83,7 @@ describe('Button API', () => {\nexpect(buttonAPI.settings.hideMenuArrow).toEqual(settings.hideMenuArrow);\n});\n- it('Should remove menu icon if hideMenuArrow set to true', () => {\n+ it('should remove menu icon if hideMenuArrow set to true', () => {\nconst elem = buttonAPI.element[0];\nbuttonAPI.updated({ hideMenuArrow: true });\n",
        "date": "11.02.2020 12:48:34",
        "repo": "infor-design/enterprise",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor button API tests and update method names for clarity"
    },
    {
        "msg": "rename the test link",
        "diff": "diff --git a/test/components/datagrid/datagrid.e2e-spec.js b/test/components/datagrid/datagrid.e2e-spec.js @@ -2028,7 +2028,7 @@ describe('Datagrid Frozen Column Card (auto) tests', () => {\ndescribe('Datagrid Frozen Column Card (fixed) tests', () => {\nbeforeEach(async () => {\n- await utils.setPage('/components/datagrid/test-frozen-columns-fixed-row-height?layout=nofrills');\n+ await utils.setPage('/components/datagrid/test-card-frozen-columns-fixed-row-height?layout=nofrills');\nconst datagridEl = await element(by.css('#datagrid tbody tr:nth-child(1)'));\nawait browser.driver\n",
        "date": "23.03.2020 15:01:14",
        "repo": "infor-design/enterprise",
        "type": "rename",
        "chatgpt_zeroshot": "Update test page URL for Datagrid Frozen Column Card (fixed) tests"
    },
    {
        "msg": "rename djng_forms_module -> djngModule",
        "diff": "diff --git a/client/src/js/djng-forms.js b/client/src/js/djng-forms.js // module: djng.forms\n// Correct Angular's form.FormController behavior after rendering bound forms.\n// Additional validators for form elements.\n-var djng_forms_module = angular.module('djng.forms', []);\n+var djngModule = angular.module('djng.forms', []);\n+\n// create a simple hash code for the given string\nfunction hashCode(s) {\n@@ -42,7 +43,7 @@ function addNgModelDirective() {\n// Bound fields with invalid input data, shall be marked as ng-invalid-bound, so that\n// the input field visibly contains invalid data, even if pristine\n-djng_forms_module.directive('djngError', function() {\n+djngModule.directive('djngError', function() {\nreturn {\nrestrict: 'A',\nrequire: '?^form',\n@@ -68,7 +69,7 @@ djng_forms_module.directive('djngError', function() {\n// This directive overrides some of the internal behavior on forms if used together with AngularJS.\n// Otherwise, the content of bound forms is not displayed, because AngularJS does not know about\n// the concept of bound forms and thus hides values preset by Django while rendering HTML.\n-djng_forms_module.directive('ngModel', ['$log', function($log) {\n+djngModule.directive('ngModel', ['$log', function($log) {\nfunction restoreInputField(field) {\n// restore the field's content from the rendered content of bound fields\nswitch (field.type) {\n@@ -134,9 +135,8 @@ djng_forms_module.directive('ngModel', ['$log', function($log) {\nvar curModelValue = scope.$eval(attrs.ngModel);\n// if model already has a value defined, don't set the default\n- if (!field || !formCtrl || angular.isDefined(curModelValue)) {\n+ if (!field || !formCtrl || angular.isDefined(curModelValue))\nreturn;\n- }\nswitch (field.tagName) {\ncase 'INPUT':\n@@ -163,7 +163,7 @@ djng_forms_module.directive('ngModel', ['$log', function($log) {\n// This directive is added automatically by django-angular for widgets of type RadioSelect and\n// CheckboxSelectMultiple. This is necessary to adjust the behavior of a collection of input fields,\n// which forms a group for one `django.forms.Field`.\n-djng_forms_module.directive('validateMultipleFields', function() {\n+djngModule.directive('validateMultipleFields', function() {\nreturn {\nrestrict: 'A',\nrequire: '^?form',\n@@ -218,7 +218,7 @@ djng_forms_module.directive('validateMultipleFields', function() {\n// <input ng-model=\"a_date\" type=\"text\" validate-date=\"^(\\d{4})-(\\d{1,2})-(\\d{1,2})$\" />\n// Now, such an input field is only considered valid, if the date is a valid date and if it matches\n// against the given regular expression.\n-djng_forms_module.directive('validateDate', function() {\n+djngModule.directive('validateDate', function() {\nvar validDatePattern = null;\nfunction validateDate(date) {\n@@ -260,7 +260,7 @@ djng_forms_module.directive('validateDate', function() {\n// This directive can be added to an input field to validate emails using a similar regex to django\n-djng_forms_module.directive('validateEmail', function() {\n+djngModule.directive('validateEmail', function() {\nreturn {\nrequire: '?ngModel',\nrestrict: 'A',\n@@ -286,7 +286,7 @@ djng_forms_module.directive('validateEmail', function() {\n// djangoForm.setErrors($scope.form, data.errors);\n// });\n// djangoForm.setErrors returns false, if no errors have been transferred.\n-djng_forms_module.factory('djangoForm', function() {\n+djngModule.factory('djangoForm', function() {\nvar NON_FIELD_ERRORS = '__all__';\nfunction isNotEmpty(obj) {\n@@ -380,7 +380,7 @@ djng_forms_module.factory('djangoForm', function() {\n// Directive <ANY djng-bind-if=\"any_variable\"> behaves similar to `ng-bind` but leaves the elements\n// content as is, if the value to bind is undefined. This allows to set a default value in case the\n// scope variables are not ready yet.\n-djng_forms_module.directive('djngBindIf', function() {\n+djngModule.directive('djngBindIf', function() {\nreturn {\nrestrict: 'A',\ncompile: function(templateElement) {\n",
        "date": "22.09.2017 16:16:47",
        "repo": "jrief/django-angular",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor Angular form behavior and add additional validators"
    },
    {
        "msg": "rename formCtrl -> controller since it can be a fieldCtrl as well",
        "diff": "diff --git a/client/src/js/djng-forms.js b/client/src/js/djng-forms.js @@ -164,33 +164,34 @@ djngModule.directive('validateMultipleFields', function() {\nreturn {\nrestrict: 'A',\nrequire: '^?form',\n- link: function(scope, element, attrs, formCtrl) {\n+ link: function(scope, element, attrs, controller) {\nvar subFields, checkboxElems = [];\n+ if (!controller)\n+ return;\n+\nfunction validate(event) {\nvar valid = false;\nangular.forEach(checkboxElems, function(checkbox) {\nvalid = valid || checkbox.checked;\n});\n- formCtrl.$setValidity('required', valid);\n+ controller.$setValidity('required', valid);\nif (event) {\n- formCtrl.$dirty = true;\n- formCtrl.$pristine = false;\n+ controller.$dirty = true;\n+ controller.$pristine = false;\n// element.on('change', validate) is jQuery and runs outside of Angular's digest cycle.\n// Therefore Angular does not get the end-of-digest signal and $apply() must be invoked manually.\nscope.$apply();\n}\n}\n- if (!formCtrl)\n- return;\ntry {\nsubFields = angular.fromJson(attrs.validateMultipleFields);\n} catch (SyntaxError) {\nif (!angular.isString(attrs.validateMultipleFields))\nreturn;\nsubFields = [attrs.validateMultipleFields];\n- formCtrl = formCtrl[subFields];\n+ controller = controller[subFields];\n}\nangular.forEach(element.find('input'), function(elem) {\nif (subFields.indexOf(elem.name) >= 0) {\n",
        "date": "22.09.2017 16:34:54",
        "repo": "jrief/django-angular",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor form validation directive to use controller instead of formCtrl"
    },
    {
        "msg": "rename innerError to innererror for better conformance with OData spec",
        "diff": "diff --git a/runtime/ms-rest-azure/lib/cloudError.js b/runtime/ms-rest-azure/lib/cloudError.js *\n* @member {array} [details] An array of CloudError objects specifying the details\n*\n- * @member {Object} [innerError] The inner error parsed from the body of the http error response\n+ * @member {Object} [innererror] The inner error parsed from the body of the http error response\n*/\nclass CloudError extends Error {\nconstructor(parameters) {\n@@ -46,8 +46,8 @@ class CloudError extends Error {\nthis.details = tempDetails;\n}\n- if (parameters.innerError) {\n- this.innerError = JSON.parse(JSON.stringify(parameters.innerError));\n+ if (parameters.innererror) {\n+ this.innererror = JSON.parse(JSON.stringify(parameters.innererror));\n}\n}\n}\n@@ -102,9 +102,9 @@ class CloudError extends Error {\n}\n}\n},\n- innerError: {\n+ innererror: {\nrequired: false,\n- serializedName: 'innerError',\n+ serializedName: 'innererror',\ntype: {\nname: 'Object'\n}\n@@ -145,8 +145,8 @@ class CloudError extends Error {\npayload.error.details = deserializedArray;\n}\n- if (this.innerError) {\n- payload.error.innerError = JSON.parse(JSON.stringify(this.innerError));\n+ if (this.innererror) {\n+ payload.error.innererror = JSON.parse(JSON.stringify(this.innererror));\n}\nreturn payload;\n}\n@@ -185,8 +185,8 @@ class CloudError extends Error {\nthis.details = deserializedArray;\n}\n- if (instance.error.innerError) {\n- this.innerError = JSON.parse(JSON.stringify(instance.error.innerError));\n+ if (instance.error.innererror) {\n+ this.innererror = JSON.parse(JSON.stringify(instance.error.innererror));\n}\n}\n}\n",
        "date": "15.11.2017 13:53:55",
        "repo": "azure/azure-sdk-for-node",
        "type": "rename",
        "chatgpt_zeroshot": "Fix casing of innerError to innererror in CloudError class"
    },
    {
        "msg": "rename md5 property in default sb3 project to md5ext to reflect it's actual contents.",
        "diff": "diff --git a/src/lib/default-project/project.json b/src/lib/default-project/project.json -{\"targets\":[{\"id\":\"`jEk@4|i[#Fk?(8x)AV.\",\"name\":\"Stage\",\"isStage\":true,\"x\":0,\"y\":0,\"size\":100,\"direction\":90,\"draggable\":false,\"currentCostume\":0,\"costume\":{\"name\":\"backdrop1\",\"bitmapResolution\":1,\"rotationCenterX\":240,\"rotationCenterY\":180,\"skinId\":2,\"dataFormat\":\"png\",\"assetId\":\"739b5e2a2435f6e1ec2993791b423146\"},\"costumeCount\":1,\"visible\":true,\"rotationStyle\":\"all around\",\"blocks\":{},\"variables\":{\"`jEk@4|i[#Fk?(8x)AV.-my variable\":{\"id\":\"`jEk@4|i[#Fk?(8x)AV.-my variable\",\"name\":\"my variable\",\"type\":\"\",\"isCloud\":false,\"value\":0}},\"lists\":{},\"costumes\":[{\"name\":\"backdrop1\",\"bitmapResolution\":1,\"rotationCenterX\":240,\"rotationCenterY\":180,\"skinId\":2,\"dataFormat\":\"png\",\"assetId\":\"739b5e2a2435f6e1ec2993791b423146\"}],\"sounds\":[{\"name\":\"pop\",\"format\":\"\",\"rate\":11025,\"sampleCount\":258,\"soundID\":1,\"md5\":\"83a9787d4cb6f3b7632b4ddfebf74367.wav\",\"data\":null,\"dataFormat\":\"wav\",\"assetId\":\"83a9787d4cb6f3b7632b4ddfebf74367\",\"soundId\":\"p=i?*Zt*I]@]x_*V`mut\"}]},{\"id\":\"9xJ@2eKXvx:/*Q^3Rib#\",\"name\":\"Sprite1\",\"isStage\":false,\"x\":0,\"y\":0,\"size\":100,\"direction\":90,\"draggable\":false,\"currentCostume\":0,\"costume\":{\"name\":\"costume1\",\"bitmapResolution\":1,\"rotationCenterX\":47,\"rotationCenterY\":55,\"skinId\":0,\"dataFormat\":\"svg\",\"assetId\":\"09dc888b0b7df19f70d81588ae73420e\"},\"costumeCount\":2,\"visible\":true,\"rotationStyle\":\"all around\",\"blocks\":{},\"variables\":{},\"lists\":{},\"costumes\":[{\"name\":\"costume1\",\"bitmapResolution\":1,\"rotationCenterX\":47,\"rotationCenterY\":55,\"skinId\":0,\"dataFormat\":\"svg\",\"assetId\":\"09dc888b0b7df19f70d81588ae73420e\"},{\"name\":\"costume2\",\"bitmapResolution\":1,\"rotationCenterX\":47,\"rotationCenterY\":55,\"skinId\":1,\"dataFormat\":\"svg\",\"assetId\":\"3696356a03a8d938318876a593572843\"}],\"sounds\":[{\"name\":\"Meow\",\"format\":\"\",\"rate\":22050,\"sampleCount\":18688,\"soundID\":0,\"md5\":\"83c36d806dc92327b9e7049a565c6bff.wav\",\"data\":null,\"dataFormat\":\"wav\",\"assetId\":\"83c36d806dc92327b9e7049a565c6bff\",\"soundId\":\"]z6@jLeJ2W%gr/eA1HB+\"}]}],\"meta\":{\"semver\":\"3.0.0\",\"vm\":\"0.1.0\",\"agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36\"}}\n\\ No newline at end of file\n+{\"targets\":[{\"id\":\"`jEk@4|i[#Fk?(8x)AV.\",\"name\":\"Stage\",\"isStage\":true,\"x\":0,\"y\":0,\"size\":100,\"direction\":90,\"draggable\":false,\"currentCostume\":0,\"costume\":{\"name\":\"backdrop1\",\"bitmapResolution\":1,\"rotationCenterX\":240,\"rotationCenterY\":180,\"skinId\":2,\"dataFormat\":\"png\",\"assetId\":\"739b5e2a2435f6e1ec2993791b423146\"},\"costumeCount\":1,\"visible\":true,\"rotationStyle\":\"all around\",\"blocks\":{},\"variables\":{\"`jEk@4|i[#Fk?(8x)AV.-my variable\":{\"id\":\"`jEk@4|i[#Fk?(8x)AV.-my variable\",\"name\":\"my variable\",\"type\":\"\",\"isCloud\":false,\"value\":0}},\"lists\":{},\"costumes\":[{\"name\":\"backdrop1\",\"bitmapResolution\":1,\"rotationCenterX\":240,\"rotationCenterY\":180,\"skinId\":2,\"dataFormat\":\"png\",\"assetId\":\"739b5e2a2435f6e1ec2993791b423146\"}],\"sounds\":[{\"name\":\"pop\",\"format\":\"\",\"rate\":11025,\"sampleCount\":258,\"soundID\":1,\"md5ext\":\"83a9787d4cb6f3b7632b4ddfebf74367.wav\",\"data\":null,\"dataFormat\":\"wav\",\"assetId\":\"83a9787d4cb6f3b7632b4ddfebf74367\",\"soundId\":\"p=i?*Zt*I]@]x_*V`mut\"}]},{\"id\":\"9xJ@2eKXvx:/*Q^3Rib#\",\"name\":\"Sprite1\",\"isStage\":false,\"x\":0,\"y\":0,\"size\":100,\"direction\":90,\"draggable\":false,\"currentCostume\":0,\"costume\":{\"name\":\"costume1\",\"bitmapResolution\":1,\"rotationCenterX\":47,\"rotationCenterY\":55,\"skinId\":0,\"dataFormat\":\"svg\",\"assetId\":\"09dc888b0b7df19f70d81588ae73420e\"},\"costumeCount\":2,\"visible\":true,\"rotationStyle\":\"all around\",\"blocks\":{},\"variables\":{},\"lists\":{},\"costumes\":[{\"name\":\"costume1\",\"bitmapResolution\":1,\"rotationCenterX\":47,\"rotationCenterY\":55,\"skinId\":0,\"dataFormat\":\"svg\",\"assetId\":\"09dc888b0b7df19f70d81588ae73420e\"},{\"name\":\"costume2\",\"bitmapResolution\":1,\"rotationCenterX\":47,\"rotationCenterY\":55,\"skinId\":1,\"dataFormat\":\"svg\",\"assetId\":\"3696356a03a8d938318876a593572843\"}],\"sounds\":[{\"name\":\"Meow\",\"format\":\"\",\"rate\":22050,\"sampleCount\":18688,\"soundID\":0,\"md5ext\":\"83c36d806dc92327b9e7049a565c6bff.wav\",\"data\":null,\"dataFormat\":\"wav\",\"assetId\":\"83c36d806dc92327b9e7049a565c6bff\",\"soundId\":\"]z6@jLeJ2W%gr/eA1HB+\"}]}],\"meta\":{\"semver\":\"3.0.0\",\"vm\":\"0.1.0\",\"agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36\"}}\n",
        "date": "21.03.2018 11:16:34",
        "repo": "wdr-data/code4maus",
        "type": "rename",
        "chatgpt_zeroshot": "Update sound file references in project.json"
    },
    {
        "msg": "rename camera upload option in action menu.",
        "diff": "diff --git a/src/containers/costume-tab.jsx b/src/containers/costume-tab.jsx @@ -63,7 +63,7 @@ const messages = defineMessages({\nid: 'gui.costumeTab.addFileCostume'\n},\naddCameraCostumeMsg: {\n- defaultMessage: 'Coming Soon',\n+ defaultMessage: 'Camera',\ndescription: 'Button to use the camera to create a costume costume in the editor tab',\nid: 'gui.costumeTab.addCameraCostume'\n}\n",
        "date": "30.04.2018 14:15:44",
        "repo": "wdr-data/code4maus",
        "type": "rename",
        "chatgpt_zeroshot": "Update addCameraCostumeMsg default message to 'Camera' in costume-tab.jsx"
    },
    {
        "msg": "rename cacheAsset to better reflect what it does",
        "diff": "diff --git a/src/lib/file-uploader.js b/src/lib/file-uploader.js @@ -51,7 +51,7 @@ const handleFileUpload = function(fileInput, onload) {\n*/\n/**\n- * Cache an asset (costume, sound) in storage and return an object representation\n+ * Create an asset (costume, sound) with storage and return an object representation\n* of the asset to track in the VM.\n* @param {ScratchStorage} storage The storage to cache the asset in\n* @param {string} fileName The name of the asset\n@@ -62,7 +62,7 @@ const handleFileUpload = function(fileInput, onload) {\n* @return {VMAsset} An object representing this asset and relevant information\n* which can be used to look up the data in storage\n*/\n-const cacheAsset = function(storage, fileName, assetType, dataFormat, data) {\n+const createVMAsset = function(storage, fileName, assetType, dataFormat, data) {\nconst asset = storage.createAsset(\nassetType,\ndataFormat,\n@@ -117,7 +117,7 @@ const costumeUpload = function(fileData, fileType, costumeName, storage, handleC\nconst bitmapAdapter = new BitmapAdapter();\nconst addCostumeFromBuffer = function(dataBuffer) {\n- const vmCostume = cacheAsset(\n+ const vmCostume = createVMAsset(\nstorage,\ncostumeName,\nassetType,\n@@ -173,7 +173,7 @@ const soundUpload = function(fileData, fileType, soundName, storage, handleSound\nreturn;\n}\n- const vmSound = cacheAsset(\n+ const vmSound = createVMAsset(\nstorage,\nsoundName,\nstorage.AssetType.Sound,\n",
        "date": "24.10.2018 13:05:09",
        "repo": "wdr-data/code4maus",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor cacheAsset function to createVMAsset for better clarity and consistency."
    },
    {
        "msg": "rename knownReporters to knownReporterErroMessages :art:",
        "diff": "diff --git a/lib/run/index.js b/lib/run/index.js @@ -54,7 +54,7 @@ var fs = require('fs'),\n* @private\n* @type {Object}\n*/\n- knownReporters = {\n+ knownReporterErrorMessages = {\nteamcity: ' run `npm install teamcity`'\n};\n@@ -349,8 +349,8 @@ module.exports = function (options, callback) {\n// @todo: route this via print module to respect silent flags\nconsole.warn(`newman warning: \"${reporterName}\" reporter could not be loaded.`);\n// print install instruction in case a known reporter is missing\n- if (knownReporters[reporterName]) {\n- console.warn(knownReporters[reporterName]);\n+ if (knownReporterErrorMessages[reporterName]) {\n+ console.warn(knownReporterErrorMessages[reporterName]);\n}\nelse {\nconsole.warn(' please install reporter using npm');\n",
        "date": "02.07.2018 21:58:51",
        "repo": "postmanlabs/newman",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor knownReporters to knownReporterErrorMessages and update references in code."
    },
    {
        "msg": "rename SecureFs to SecureFS",
        "diff": "diff --git a/lib/run/secure-fs.js b/lib/run/secure-fs.js @@ -60,7 +60,7 @@ const fs = require('fs'),\n* @param {*} [insecureFileRead=false] - If true, allow reading files outside working directory\n* @param {*} [fileWhitelist=[]] - List of allowed files outside of working directory\n*/\n-function SecureFs (workingDir, insecureFileRead = false, fileWhitelist = []) {\n+function SecureFS (workingDir, insecureFileRead = false, fileWhitelist = []) {\nthis._fs = fs;\nthis._path = path;\nthis.constants = this._fs.constants;\n@@ -80,7 +80,7 @@ function SecureFs (workingDir, insecureFileRead = false, fileWhitelist = []) {\n*\n* @returns {String} The resolved path\n*/\n-SecureFs.prototype._resolve = function (relOrAbsPath, whiteList) {\n+SecureFS.prototype._resolve = function (relOrAbsPath, whiteList) {\n// Special handling for windows absolute paths to work cross platform\nthis.isWindows && isWindowsRoot(relOrAbsPath) && (relOrAbsPath = relOrAbsPath.substring(1));\n@@ -106,7 +106,7 @@ SecureFs.prototype._resolve = function (relOrAbsPath, whiteList) {\n* @param {Array} [whiteList] - A optional list of additional absolute path to whitelist\n* @param {Function} callback -\n*/\n-SecureFs.prototype.resolvePath = function (relOrAbsPath, whiteList, callback) {\n+SecureFS.prototype.resolvePath = function (relOrAbsPath, whiteList, callback) {\nif (!callback && typeof whiteList === FUNCTION) {\ncallback = whiteList;\nwhiteList = [];\n@@ -129,7 +129,7 @@ SecureFs.prototype.resolvePath = function (relOrAbsPath, whiteList, callback) {\n*\n* @returns {String} The resolved path\n*/\n-SecureFs.prototype.resolvePathSync = function (relOrAbsPath, whiteList) {\n+SecureFS.prototype.resolvePathSync = function (relOrAbsPath, whiteList) {\n// Resolve the path from the working directory\nconst resolvedPath = this._resolve(relOrAbsPath, _.concat(this.fileWhitelist, whiteList));\n@@ -147,11 +147,11 @@ Object.getOwnPropertyNames(fs).map((prop) => {\nreturn;\n}\n- SecureFs.prototype[prop] = fs[prop];\n+ SecureFS.prototype[prop] = fs[prop];\n});\n// Override the required functions\n-SecureFs.prototype.stat = function (path, callback) {\n+SecureFS.prototype.stat = function (path, callback) {\nthis.resolvePath(path, (err, resolvedPath) => {\nif (err) {\nreturn callback(err);\n@@ -161,7 +161,7 @@ SecureFs.prototype.stat = function (path, callback) {\n});\n};\n-SecureFs.prototype.createReadStream = function (path, options) {\n+SecureFS.prototype.createReadStream = function (path, options) {\ntry {\nreturn this._fs.createReadStream(this.resolvePathSync(path), options);\n}\n@@ -184,4 +184,4 @@ SecureFs.prototype.createReadStream = function (path, options) {\n}\n};\n-module.exports = SecureFs;\n+module.exports = SecureFS;\n",
        "date": "16.05.2019 00:21:19",
        "repo": "postmanlabs/newman",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor SecureFs to SecureFS and update method names accordingly"
    },
    {
        "msg": "rename AttributeSelector.operator -> matcher",
        "diff": "diff --git a/lib/syntax/node/AttributeSelector.js b/lib/syntax/node/AttributeSelector.js @@ -77,19 +77,19 @@ function getOperator() {\n}\n// '[' S* attrib_name ']'\n-// '[' S* attrib_name S* attrib_match S* [ IDENT | STRING ] S* attrib_flags? S* ']'\n+// '[' S* attrib_name S* attrib_matcher S* [ IDENT | STRING ] S* attrib_flags? S* ']'\nmodule.exports = {\nname: 'AttributeSelector',\nstructure: {\nname: 'Identifier',\n- operator: [String, null],\n+ matcher: [String, null],\nvalue: ['String', 'Identifier', null],\nflags: [String, null]\n},\nparse: function() {\nvar start = this.scanner.tokenStart;\nvar name;\n- var operator = null;\n+ var matcher = null;\nvar value = null;\nvar flags = null;\n@@ -102,7 +102,7 @@ module.exports = {\nif (this.scanner.tokenType !== RIGHTSQUAREBRACKET) {\n// avoid case `[name i]`\nif (this.scanner.tokenType !== IDENTIFIER) {\n- operator = getOperator.call(this);\n+ matcher = getOperator.call(this);\nthis.scanner.skipSC();\n@@ -128,7 +128,7 @@ module.exports = {\ntype: 'AttributeSelector',\nloc: this.getLocation(start, this.scanner.tokenStart),\nname: name,\n- operator: operator,\n+ matcher: matcher,\nvalue: value,\nflags: flags\n};\n@@ -139,8 +139,8 @@ module.exports = {\nprocessChunk('[');\nthis.generate(processChunk, node.name);\n- if (node.operator !== null) {\n- processChunk(node.operator);\n+ if (node.matcher !== null) {\n+ processChunk(node.matcher);\nif (node.value !== null) {\nthis.generate(processChunk, node.value);\n",
        "date": "12.07.2017 22:40:41",
        "repo": "csstree/csstree",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor AttributeSelector.js to use 'matcher' instead of 'operator' for attribute matching."
    },
    {
        "msg": "rename old_pods to misassigned_pods",
        "diff": "diff --git a/lib/testbridge/bridge/src/main.ml b/lib/testbridge/bridge/src/main.ml @@ -19,17 +19,17 @@ let rec zip4_exn xs ys zs ws =\n| _ -> failwith \"lists not same length\"\n;;\n-let get_old_pods (nodes: Kubernetes.Node.t List.t) (pods: Kubernetes.Pod.t List.t) =\n- let old_pods =\n+let get_misassigned_pods (nodes: Kubernetes.Node.t List.t) (pods: Kubernetes.Pod.t List.t) =\n+ let misassigned_pods =\nList.filter_map pods ~f:(fun pod ->\nif List.exists nodes ~f:(fun node -> node.hostname = pod.node_selector)\nthen None\nelse Some (pod.container_name ^ \" -> \" ^ pod.node_selector)\n)\nin\n- match old_pods with\n+ match misassigned_pods with\n| [] -> None\n- | _ -> Some (\"Old Pods:\\n\" ^ String.concat ~sep:\"\\n\" old_pods)\n+ | _ -> Some (\"Old Pods:\\n\" ^ String.concat ~sep:\"\\n\" misassigned_pods)\nlet get_pods\nimage_host\n@@ -76,8 +76,8 @@ let get_pods\nprintf \"%s\\n\" (String.concat ~sep:\", \" (List.map pods ~f:(fun pod ->\nSexp.to_string_hum ([%sexp_of: Kubernetes.Pod.t] pod))));*)\nlet () =\n- match get_old_pods nodes pods with\n- | Some err -> printf \"%s\\n\" err; failwith \"Pods are old run cleanup.sh\";\n+ match get_misassigned_pods nodes pods with\n+ | Some err -> printf \"%s\\n\" err; failwith \"Pods are old/misassigned... run cleanup.sh\";\n| None -> printf \"F R E S H pods, good to go.\\n\"\nin\n",
        "date": "16.03.2018 15:17:11",
        "repo": "minaprotocol/mina",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor function names and error message in main.ml"
    },
    {
        "msg": "rename protocolAmounts to genesisConstants",
        "diff": "diff --git a/src/lib/coda_graphql/coda_graphql.ml b/src/lib/coda_graphql/coda_graphql.ml @@ -431,15 +431,15 @@ module Types = struct\n~doc:\"Status for whenever the blockchain is reorganized\"\n~values:[enum_value \"CHANGED\" ~value:`Changed]\n- let protocol_amounts =\n- obj \"ProtocolAmounts\" ~fields:(fun _ ->\n+ let genesis_constants =\n+ obj \"GenesisConstants\" ~fields:(fun _ ->\n[ field \"accountCreationFee\" ~typ:(non_null uint64)\n~doc:\"The fee charged to create a new account\"\n~args:Arg.[]\n~resolve:(fun {ctx= coda; _} () ->\n(Coda_lib.config coda).precomputed_values.constraint_constants\n.account_creation_fee |> Currency.Fee.to_uint64 )\n- ; field \"coinbaseReward\" ~typ:(non_null uint64)\n+ ; field \"coinbase\" ~typ:(non_null uint64)\n~doc:\n\"The amount received as a coinbase reward for producing a block\"\n~args:Arg.[]\n@@ -2610,11 +2610,13 @@ module Queries = struct\n| None ->\n[] )\n- let protocol_amounts =\n- field \"protocolAmounts\"\n- ~doc:\"The currency amounts for different events in the protocol\"\n+ let genesis_constants =\n+ field \"genesisConstants\"\n+ ~doc:\n+ \"The constants used to determine the configuration of the genesis \\\n+ block and all of its transitive dependencies\"\n~args:Arg.[]\n- ~typ:(non_null Types.protocol_amounts)\n+ ~typ:(non_null Types.genesis_constants)\n~resolve:(fun _ () -> ())\nlet commands =\n@@ -2639,7 +2641,7 @@ module Queries = struct\n; trust_status_all\n; snark_pool\n; pending_snark_work\n- ; protocol_amounts ]\n+ ; genesis_constants ]\nend\nlet schema =\n",
        "date": "21.07.2020 18:58:16",
        "repo": "minaprotocol/mina",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor GraphQL schema to use GenesisConstants instead of ProtocolAmounts"
    },
    {
        "msg": "rename metadata key",
        "diff": "diff --git a/src/app/test_executive/test_executive.ml b/src/app/test_executive/test_executive.ml @@ -116,9 +116,9 @@ let main inputs =\n| Some deferred ->\n[%log error]\n\"additional call to cleanup testnet while already cleaning up \\\n- ($reason, $hard_error)\"\n+ ($reason, $error)\"\n~metadata:\n- [(\"reason\", `String reason); (\"hard_error\", `String test_error_str)] ;\n+ [(\"reason\", `String reason); (\"error\", `String test_error_str)] ;\ndeferred\n| None ->\n[%log info] \"cleaning up testnet ($reason, $error)\"\n",
        "date": "02.10.2020 11:21:25",
        "repo": "minaprotocol/mina",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor error logging in test_executive.ml"
    },
    {
        "msg": "rename fields to match Pickles_types",
        "diff": "diff --git a/src/lib/marlin_plonk_bindings/types/marlin_plonk_bindings_types.ml b/src/lib/marlin_plonk_bindings/types/marlin_plonk_bindings_types.ml @@ -12,17 +12,17 @@ end\nmodule Plonk_verification_evals = struct\ntype 'poly_comm t =\n- { sigma_comm0: 'poly_comm\n- ; sigma_comm1: 'poly_comm\n- ; sigma_comm2: 'poly_comm\n+ { sigma_comm_0: 'poly_comm\n+ ; sigma_comm_1: 'poly_comm\n+ ; sigma_comm_2: 'poly_comm\n; ql_comm: 'poly_comm\n; qr_comm: 'poly_comm\n; qo_comm: 'poly_comm\n; qm_comm: 'poly_comm\n; qc_comm: 'poly_comm\n- ; rcm_comm0: 'poly_comm\n- ; rcm_comm1: 'poly_comm\n- ; rcm_comm2: 'poly_comm\n+ ; rcm_comm_0: 'poly_comm\n+ ; rcm_comm_1: 'poly_comm\n+ ; rcm_comm_2: 'poly_comm\n; psm_comm: 'poly_comm\n; add_comm: 'poly_comm\n; mul1_comm: 'poly_comm\n",
        "date": "29.10.2020 19:01:16",
        "repo": "minaprotocol/mina",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor variable names in Plonk verification evals types"
    },
    {
        "msg": "rename function to address nitpick",
        "diff": "diff --git a/src/app/test_executive/test_executive.ml b/src/app/test_executive/test_executive.ml @@ -126,7 +126,7 @@ let main inputs =\nlet net_manager_ref : Engine.Network_manager.t option ref = ref None in\nlet log_engine_ref : Engine.Log_engine.t option ref = ref None in\nlet cleanup_deferred_ref = ref None in\n- let dispatch_cleanup_PARTIAL =\n+ let f_dispatch_cleanup =\ndispatch_cleanup ~logger ~cleanup_func:Engine.Network_manager.cleanup\n~destroy_func:Engine.Log_engine.destroy ~net_manager_ref ~log_engine_ref\n~cleanup_deferred_ref\n@@ -139,7 +139,7 @@ let main inputs =\n@@ Printf.sprintf \"received signal %s\" (Signal.to_string signal)\nin\ndon't_wait_for\n- (dispatch_cleanup_PARTIAL \"signal received\"\n+ (f_dispatch_cleanup \"signal received\"\n(Malleable_error.of_error_hard error)) ) ;\nlet%bind monitor_test_result =\nMonitor.try_with ~extract_exn:true (fun () ->\n@@ -158,7 +158,7 @@ let main inputs =\nEngine.Log_engine.create ~logger ~network\n~on_fatal_error:(fun message ->\ndon't_wait_for\n- (dispatch_cleanup_PARTIAL\n+ (f_dispatch_cleanup\n(sprintf\n!\"log engine fatal error: %s\"\n(Yojson.Safe.to_string (Logger.Message.to_yojson message)))\n@@ -174,7 +174,7 @@ let main inputs =\n| Error exn ->\nMalleable_error.of_error_hard (Error.of_exn exn)\nin\n- let%bind () = dispatch_cleanup_PARTIAL \"test completed\" test_result in\n+ let%bind () = f_dispatch_cleanup \"test completed\" test_result in\nexit 0\nlet start inputs =\n",
        "date": "29.10.2020 16:14:50",
        "repo": "minaprotocol/mina",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor dispatch_cleanup_PARTIAL to f_dispatch_cleanup in test_executive.ml"
    },
    {
        "msg": "rename Mina_net2 back to Coda_net2",
        "diff": "diff --git a/src/lib/gossip_net/libp2p.ml b/src/lib/gossip_net/libp2p.ml @@ -62,7 +62,8 @@ module Make (Rpc_intf : Mina_base.Rpc_intf.Rpc_interface_intf) :\n(Message.msg Envelope.Incoming.t * Coda_net2.Validation_callback.t)\nStrict_pipe.Reader.t\n; subscription:\n- Message.msg Coda_net2.Pubsub.Subscription.t Deferred.t ref }\n+ Message.msg Coda_net2.Pubsub.Subscription.t Deferred.t ref\n+ ; restart_helper: unit -> unit }\nlet create_rpc_implementations\n(Rpc_handler {rpc; f= handler; cost; budget}) =\n@@ -416,6 +417,10 @@ module Make (Rpc_intf : Mina_base.Rpc_intf.Rpc_interface_intf) :\nin\nlet net2_ref = ref (Deferred.never ()) in\nlet subscription_ref = ref (Deferred.never ()) in\n+ let restarts_r, restarts_w =\n+ Strict_pipe.create ~name:\"libp2p-restarts\"\n+ (Strict_pipe.Buffered (`Capacity 0, `Overflow Strict_pipe.Drop_head))\n+ in\nlet%bind () =\nlet rec on_libp2p_create res =\nnet2_ref :=\n@@ -464,6 +469,12 @@ module Make (Rpc_intf : Mina_base.Rpc_intf.Rpc_interface_intf) :\nhigh_connectivity_ivar ~on_unexpected_termination\nin\non_libp2p_create res ;\n+ don't_wait_for\n+ (Strict_pipe.Reader.iter restarts_r ~f:(fun () ->\n+ let%bind n = !net2_ref in\n+ let%bind () = Coda_net2.shutdown n in\n+ let%bind () = on_unexpected_termination () in\n+ !net2_ref >>| ignore )) ;\nlet%map _ = res in\n()\nin\n@@ -513,7 +524,8 @@ module Make (Rpc_intf : Mina_base.Rpc_intf.Rpc_interface_intf) :\n; high_connectivity_ivar\n; subscription= subscription_ref\n; message_reader\n- ; ban_reader }\n+ ; ban_reader\n+ ; restart_helper= (fun () -> Strict_pipe.Writer.write restarts_w ()) }\nlet peers t = !(t.net2) >>= Coda_net2.peers\n@@ -681,10 +693,10 @@ module Make (Rpc_intf : Mina_base.Rpc_intf.Rpc_interface_intf) :\n(peer_id : Peer.Id.t) (rpc : (q, r) rpc) (qs : q list) =\nlet%bind net2 = !(t.net2) in\nmatch%bind\n- Mina_net2.open_stream net2 ~protocol:rpc_transport_proto peer_id\n+ Coda_net2.open_stream net2 ~protocol:rpc_transport_proto peer_id\nwith\n| Ok stream ->\n- let peer = Mina_net2.Stream.remote_peer stream in\n+ let peer = Coda_net2.Stream.remote_peer stream in\nlet transport = prepare_stream_transport stream in\nlet (module Impl) = implementation_of_rpc rpc in\ntry_call_rpc_with_dispatch ?heartbeat_timeout ?timeout\n@@ -731,6 +743,8 @@ module Make (Rpc_intf : Mina_base.Rpc_intf.Rpc_interface_intf) :\nlet set_connection_gating t config =\nlet%bind net2 = !(t.net2) in\nCoda_net2.set_connection_gating_config net2 config\n+\n+ let restart_helper t = t.restart_helper ()\nend\ninclude T\n",
        "date": "06.01.2021 21:27:43",
        "repo": "minaprotocol/mina",
        "type": "rename",
        "chatgpt_zeroshot": "Add restart functionality to libp2p module."
    },
    {
        "msg": "rename all_seed_peers to static_peers",
        "diff": "diff --git a/automation/terraform/modules/kubernetes/testnet/helm.tf b/automation/terraform/modules/kubernetes/testnet/helm.tf @@ -29,13 +29,13 @@ locals {\n\"/dns4/seed-node.${var.testnet_name}/tcp/${var.seed_port}/p2p/${split(\",\", var.seed_discovery_keypairs[0])[2]}\"\n]\n- all_seed_peers = [ for name in keys(data.local_file.libp2p_peers) : \"/dns4/${name}.${var.testnet_name}/tcp/10501/p2p/${trimspace(data.local_file.libp2p_peers[name].content)}\"]\n+ static_peers = [ for name in keys(data.local_file.libp2p_peers) : \"/dns4/${name}.${var.testnet_name}/tcp/10501/p2p/${trimspace(data.local_file.libp2p_peers[name].content)}\"]\ncoda_vars = {\nruntimeConfig = var.generate_and_upload_artifacts ? data.local_file.genesis_ledger.content : var.runtime_config\nimage = var.coda_image\nprivkeyPass = var.block_producer_key_pass\n- seedPeers = concat(var.additional_seed_peers, local.seed_peers)\n+ seedPeers = concat(var.additional_seed_peers, local.seed_peers, local.static_peers)\nlogLevel = var.log_level\nlogSnarkWorkGossip = var.log_snark_work_gossip\nuploadBlocksToGCloud = var.upload_blocks_to_gcloud\n@@ -109,7 +109,6 @@ locals {\nlibp2pSecret = config.libp2p_secret\nenablePeerExchange = config.enable_peer_exchange\nisolated = config.isolated\n- seedPeers = local.all_seed_peers\n}\n]\n}\n@@ -172,8 +171,8 @@ locals {\n}\n-output all_seed_peers {\n- value = local.all_seed_peers\n+output static_peers {\n+ value = local.static_peers\n}\n# Cluster-Local Seed Node\n",
        "date": "22.01.2021 12:30:08",
        "repo": "minaprotocol/mina",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor seed peer configuration in Kubernetes testnet helm.tf"
    },
    {
        "msg": "rename stuff",
        "diff": "diff --git a/src/app/libp2p_helper/src/codanet.go b/src/app/libp2p_helper/src/codanet.go @@ -153,30 +153,30 @@ func (cm *CodaConnectionManager) GetInfo() p2pconnmgr.CMInfo {\ntype CodaGatingState struct {\nlogger logging.EventLogger\nKnownPrivateAddrFilters *ma.Filters\n- DeniedAddrFilters *ma.Filters\n- AllowedAddrFilters *ma.Filters\n- DeniedPeers *peer.Set\n- AllowedPeers *peer.Set\n+ BannedAddrFilters *ma.Filters\n+ TrustedAddrFilters *ma.Filters\n+ BannedPeers *peer.Set\n+ TrustedPeers *peer.Set\n}\n// NewCodaGatingState returns a new CodaGatingState\n-func NewCodaGatingState(deniedAddrFilters *ma.Filters, allowedAddrFilters *ma.Filters, deniedPeers *peer.Set, allowedPeers *peer.Set) *CodaGatingState {\n+func NewCodaGatingState(bannedAddrFilters *ma.Filters, trustedAddrFilters *ma.Filters, bannedPeers *peer.Set, trustedPeers *peer.Set) *CodaGatingState {\nlogger := logging.Logger(\"codanet.CodaGatingState\")\n- if deniedAddrFilters == nil {\n- deniedAddrFilters = ma.NewFilters()\n+ if bannedAddrFilters == nil {\n+ bannedAddrFilters = ma.NewFilters()\n}\n- if allowedAddrFilters == nil {\n- allowedAddrFilters = ma.NewFilters()\n+ if trustedAddrFilters == nil {\n+ trustedAddrFilters = ma.NewFilters()\n}\n- if deniedPeers == nil {\n- deniedPeers = peer.NewSet()\n+ if bannedPeers == nil {\n+ bannedPeers = peer.NewSet()\n}\n- if allowedPeers == nil {\n- allowedPeers = peer.NewSet()\n+ if trustedPeers == nil {\n+ trustedPeers = peer.NewSet()\n}\n// we initialize the known private addr filters to reject all ip addresses initially\n@@ -185,17 +185,17 @@ func NewCodaGatingState(deniedAddrFilters *ma.Filters, allowedAddrFilters *ma.Fi\nreturn &CodaGatingState{\nlogger: logger,\n- DeniedAddrFilters: deniedAddrFilters,\n- AllowedAddrFilters: allowedAddrFilters,\n+ BannedAddrFilters: bannedAddrFilters,\n+ TrustedAddrFilters: trustedAddrFilters,\nKnownPrivateAddrFilters: knownPrivateAddrFilters,\n- DeniedPeers: deniedPeers,\n- AllowedPeers: allowedPeers,\n+ BannedPeers: bannedPeers,\n+ TrustedPeers: trustedPeers,\n}\n}\nfunc (gs *CodaGatingState) MarkPrivateAddrAsKnown(addr ma.Multiaddr) {\nif isPrivateAddr(addr) && gs.KnownPrivateAddrFilters.AddrBlocked(addr) {\n- gs.logger.Infof(\"marking private addr %v as known\", addr)\n+ gs.logger.Debugf(\"marking private addr %v as known\", addr)\nip, err := manet.ToIP(addr)\nif err != nil {\n@@ -211,36 +211,36 @@ func (gs *CodaGatingState) MarkPrivateAddrAsKnown(addr ma.Multiaddr) {\n}\n}\n-func (gs *CodaGatingState) isPeerWhitelisted(p peer.ID) bool {\n- return gs.AllowedPeers.Contains(p)\n+func (gs *CodaGatingState) isPeerTrusted(p peer.ID) bool {\n+ return gs.TrustedPeers.Contains(p)\n}\n-func (gs *CodaGatingState) isPeerBlacklisted(p peer.ID) bool {\n- return gs.DeniedPeers.Contains(p)\n+func (gs *CodaGatingState) isPeerBanned(p peer.ID) bool {\n+ return gs.BannedPeers.Contains(p)\n}\n// checks if a peer id is allowed to dial/accept\nfunc (gs *CodaGatingState) isAllowedPeer(p peer.ID) bool {\n- return gs.isPeerWhitelisted(p) || !gs.isPeerBlacklisted(p)\n+ return gs.isPeerTrusted(p) || !gs.isPeerBanned(p)\n}\n-func (gs *CodaGatingState) isAddrWhitelisted(addr ma.Multiaddr) bool {\n- return !gs.AllowedAddrFilters.AddrBlocked(addr)\n+func (gs *CodaGatingState) isAddrTrusted(addr ma.Multiaddr) bool {\n+ return !gs.TrustedAddrFilters.AddrBlocked(addr)\n}\n-func (gs *CodaGatingState) isAddrBlacklisted(addr ma.Multiaddr) bool {\n- return gs.DeniedAddrFilters.AddrBlocked(addr)\n+func (gs *CodaGatingState) isAddrBanned(addr ma.Multiaddr) bool {\n+ return gs.BannedAddrFilters.AddrBlocked(addr)\n}\n// checks if an address is allowed to dial/accept\nfunc (gs *CodaGatingState) isAllowedAddr(addr ma.Multiaddr) bool {\npublicOrKnownPrivate := !isPrivateAddr(addr) || !gs.KnownPrivateAddrFilters.AddrBlocked(addr)\n- return gs.isAddrWhitelisted(addr) || (!gs.isAddrBlacklisted(addr) && publicOrKnownPrivate)\n+ return gs.isAddrTrusted(addr) || (!gs.isAddrBanned(addr) && publicOrKnownPrivate)\n}\n-// checks if a peer is allowed to dial/accept; if the peer is in the whitelist, the address checks are overriden\n+// checks if a peer is allowed to dial/accept; if the peer is in the trustlist, the address checks are overriden\nfunc (gs *CodaGatingState) isAllowedPeerWithAddr(p peer.ID, addr ma.Multiaddr) bool {\n- return gs.isPeerWhitelisted(p) || (gs.isAllowedPeer(p) && gs.isAllowedAddr(addr))\n+ return gs.isPeerTrusted(p) || (gs.isAllowedPeer(p) && gs.isAllowedAddr(addr))\n}\nfunc (gs *CodaGatingState) logGate() {\n@@ -283,7 +283,7 @@ func (gs *CodaGatingState) InterceptAddrDial(id peer.ID, addr ma.Multiaddr) (all\n// Bluetooth), straight after it has accepted a connection from its socket.\nfunc (gs *CodaGatingState) InterceptAccept(addrs network.ConnMultiaddrs) (allow bool) {\nremoteAddr := addrs.RemoteMultiaddr()\n- allow = gs.isAddrWhitelisted(remoteAddr) || !gs.isAddrBlacklisted(remoteAddr)\n+ allow = gs.isAddrTrusted(remoteAddr) || !gs.isAddrBanned(remoteAddr)\nif !allow {\ngs.logger.Infof(\"refusing to accept inbound connection from addr: %v\", remoteAddr)\n",
        "date": "27.01.2021 10:45:35",
        "repo": "minaprotocol/mina",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor CodaGatingState struct and methods to use Banned and Trusted filters and sets."
    },
    {
        "msg": "rename local variable t to termination",
        "diff": "diff --git a/src/lib/child_processes/child_processes.ml b/src/lib/child_processes/child_processes.ml @@ -379,9 +379,10 @@ let kill : t -> Unix.Exit_or_signal.t Deferred.Or_error.t =\n| Some _ ->\nDeferred.Or_error.error_string \"already terminated\"\n-let register_process ?termination_expected (t : Termination.t) (process : t)\n- kind =\n- Termination.register_process ?termination_expected t process.process kind\n+let register_process ?termination_expected (termination : Termination.t)\n+ (process : t) kind =\n+ Termination.register_process ?termination_expected termination\n+ process.process kind\nlet%test_module _ =\n( module struct\n",
        "date": "23.03.2021 19:47:54",
        "repo": "minaprotocol/mina",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor register_process function to improve readability and consistency"
    },
    {
        "msg": "rename deb files to mina-dev, regardless of profile",
        "diff": "diff --git a/scripts/rebuild-deb.sh b/scripts/rebuild-deb.sh @@ -19,10 +19,10 @@ PVKEYHASH=$(./default/src/app/cli/src/mina.exe internal snark-hashes | sort | md\n# TODO: be smarter about this when we introduce a devnet package\n#if [[ \"$GITBRANCH\" == \"master\" ]] ; then\n-DUNE_PROFILE=\"testnet_postake_medium_curves\"\n+DUNE_PROFILE=\"mainnet\"\n#fi\n-PROJECT=\"mina-$(echo \"$DUNE_PROFILE\" | tr _ -)\"\n+PROJECT=\"mina-dev\"\nBUILD_NUM=${BUILDKITE_BUILD_NUM}\nBUILD_URL=${BUILDKITE_BUILD_URL}\n",
        "date": "02.04.2021 22:32:39",
        "repo": "minaprotocol/mina",
        "type": "rename",
        "chatgpt_zeroshot": "Update DUNE_PROFILE and PROJECT variables in rebuild-deb.sh"
    },
    {
        "msg": "rename flag to --rest-server",
        "diff": "diff --git a/src/lib/cli_lib/flag.ml b/src/lib/cli_lib/flag.ml @@ -273,7 +273,7 @@ module Uri = struct\n(Resolve_with_default default)\nlet rest_graphql_opt =\n- create ~name:\"rest-server\" ~aliases:[\"rest-server\"]\n+ create ~name:\"--rest-server\" ~aliases:[\"rest-server\"]\n~arg_type:(arg_type ~path:\"graphql\") doc_builder Optional\nend\n",
        "date": "20.04.2021 17:39:35",
        "repo": "minaprotocol/mina",
        "type": "rename",
        "chatgpt_zeroshot": "Update flag creation for rest-server to include -- prefix in name."
    },
    {
        "msg": "rename parties -> txns",
        "diff": "diff --git a/src/lib/mina_lib/mina_lib.ml b/src/lib/mina_lib/mina_lib.ml @@ -908,9 +908,9 @@ let add_full_transactions t user_command =\n|> Deferred.don't_wait_for ;\nIvar.read result_ivar\n-let add_snapp_transactions t (snapp_parties : Parties.t list) =\n+let add_snapp_transactions t (snapp_txns : Parties.t list) =\nlet result_ivar = Ivar.create () in\n- let cmd_inputs = Snapp_command_inputs snapp_parties in\n+ let cmd_inputs = Snapp_command_inputs snapp_txns in\nStrict_pipe.Writer.write t.pipes.user_command_input_writer\n(cmd_inputs, Ivar.fill result_ivar, get_current_nonce t, get_account t)\n|> Deferred.don't_wait_for ;\n@@ -1585,13 +1585,14 @@ let create ?wallets (config : Config.t) =\n~metadata:[ (\"error\", Error_json.error_to_yojson e) ] ;\nresult_cb (Error e) ;\nDeferred.unit )\n- | Snapp_command_inputs parties ->\n+ | Snapp_command_inputs snapp_txns ->\n(* TODO: here, submit a Parties.t, which includes a nonce\nallow the nonce to be omitted, and infer it, as done\nfor user command inputs\n*)\nStrict_pipe.Writer.write local_txns_writer\n- ( List.map parties ~f:(fun cmd -> User_command.Parties cmd)\n+ ( List.map snapp_txns ~f:(fun cmd ->\n+ User_command.Parties cmd)\n, result_cb ))\n|> Deferred.don't_wait_for ;\nlet ((most_recent_valid_block_reader, _) as most_recent_valid_block) =\n",
        "date": "09.09.2021 12:10:11",
        "repo": "minaprotocol/mina",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor add_snapp_transactions function to use snapp_txns instead of snapp_parties. Update variable names for clarity."
    },
    {
        "msg": "rename a function to _exn",
        "diff": "diff --git a/src/lib/crypto/kimchi_backend/common/plonk_dlog_proof.ml b/src/lib/crypto/kimchi_backend/common/plonk_dlog_proof.ml @@ -210,8 +210,8 @@ module Make (Inputs : Inputs_intf) = struct\nArray.iter arr ~f:(fun fe -> Fq.Vector.emplace_back vec fe) ;\nvec\n- (** Note that this function will panic if some of the points are points at infinity *)\n- let opening_proof_of_backend (t : Opening_proof_backend.t) =\n+ (** This function will panic if any of the points are the point at infinity *)\n+ let opening_proof_of_backend_exn (t : Opening_proof_backend.t) =\nlet g (x : G.Affine.Backend.t) : G.Affine.t =\nG.Affine.of_backend x |> Pickles_types.Or_infinity.finite_exn\nin\n@@ -229,7 +229,7 @@ module Make (Inputs : Inputs_intf) = struct\n}\nlet of_backend (t : Backend.t) : t =\n- let proof = opening_proof_of_backend t.proof in\n+ let proof = opening_proof_of_backend_exn t.proof in\nlet evals =\n(fst t.evals, snd t.evals)\n|> Tuple_lib.Double.map ~f:(fun e ->\n",
        "date": "16.12.2021 22:02:43",
        "repo": "minaprotocol/mina",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor opening proof function to handle points at infinity"
    },
    {
        "msg": "rename fields",
        "diff": "diff --git a/src/lib/transaction_snark/transaction_snark.ml b/src/lib/transaction_snark/transaction_snark.ml @@ -4718,13 +4718,13 @@ let%test_module \"transaction_snark\" =\n{ pk = acct1.account.public_key\n; update = Party.Update.noop\n; token_id = Token_id.default\n- ; delta =\n+ ; balance_change =\nAmount.Signed.(of_unsigned receiver_amount |> negate)\n; increment_nonce = true\n; events = []\n; sequence_events = []\n; call_data = Field.zero\n- ; depth = 0\n+ ; call_depth = 0\n}\n; predicate = Accept\n}\n",
        "date": "20.12.2021 05:56:45",
        "repo": "minaprotocol/mina",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor balance change and call depth in transaction_snark module"
    },
    {
        "msg": "rename field in Block.t",
        "diff": "diff --git a/src/app/archive/archive_lib/processor.ml b/src/app/archive/archive_lib/processor.ml @@ -2114,7 +2114,7 @@ module Block = struct\n; next_available_token : int64\n; ledger_hash : string\n; height : int64\n- ; global_slot_since_hard_fork : int64\n+ ; global_slot : int64\n; global_slot_since_genesis : int64\n; timestamp : int64\n}\n@@ -2240,7 +2240,7 @@ module Block = struct\nconsensus_state\n|> Consensus.Data.Consensus_state.blockchain_length\n|> Unsigned.UInt32.to_int64\n- ; global_slot_since_hard_fork =\n+ ; global_slot =\nConsensus.Data.Consensus_state.curr_global_slot consensus_state\n|> Unsigned.UInt32.to_int64\n; global_slot_since_genesis =\n@@ -2557,7 +2557,7 @@ module Block = struct\n|> Unsigned.UInt64.to_int64\n; ledger_hash = block.ledger_hash |> Ledger_hash.to_base58_check\n; height = block.height |> Unsigned.UInt32.to_int64\n- ; global_slot_since_hard_fork =\n+ ; global_slot =\nblock.global_slot_since_hard_fork |> Unsigned.UInt32.to_int64\n; global_slot_since_genesis =\nblock.global_slot_since_genesis |> Unsigned.UInt32.to_int64\n",
        "date": "23.12.2021 17:38:03",
        "repo": "minaprotocol/mina",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor global slot variable names in processor module"
    },
    {
        "msg": "rename type versions",
        "diff": "diff --git a/src/lib/staged_ledger_diff/staged_ledger_diff.ml b/src/lib/staged_ledger_diff/staged_ledger_diff.ml @@ -78,7 +78,7 @@ module Pre_diff_two = struct\nmodule Stable = struct\n[@@@no_toplevel_latest_type]\n- module V1 = struct\n+ module V2 = struct\ntype ('a, 'b) t =\n{ completed_works : 'a list\n; commands : 'b list\n@@ -107,7 +107,7 @@ module Pre_diff_one = struct\nmodule Stable = struct\n[@@@no_toplevel_latest_type]\n- module V1 = struct\n+ module V2 = struct\ntype ('a, 'b) t =\n{ completed_works : 'a list\n; commands : 'b list\n@@ -140,7 +140,7 @@ module Pre_diff_with_at_most_two_coinbase = struct\ntype t =\n( Transaction_snark_work.Stable.V2.t\n, User_command.Stable.V2.t With_status.Stable.V2.t )\n- Pre_diff_two.Stable.V1.t\n+ Pre_diff_two.Stable.V2.t\n[@@deriving compare, sexp, yojson]\nlet to_latest = Fn.id\n@@ -159,7 +159,7 @@ module Pre_diff_with_at_most_one_coinbase = struct\ntype t =\n( Transaction_snark_work.Stable.V2.t\n, User_command.Stable.V2.t With_status.Stable.V2.t )\n- Pre_diff_one.Stable.V1.t\n+ Pre_diff_one.Stable.V2.t\n[@@deriving compare, sexp, yojson]\nlet to_latest = Fn.id\n",
        "date": "07.04.2022 10:44:04",
        "repo": "minaprotocol/mina",
        "type": "rename",
        "chatgpt_zeroshot": "Update stable versions to V2 in staged ledger diff modules"
    },
    {
        "msg": "rename zkapp_precondition type; formatting",
        "diff": "diff --git a/src/app/archive/zkapp_tables.sql b/src/app/archive/zkapp_tables.sql @@ -112,7 +112,7 @@ CREATE TABLE zkapp_nonce_bounds\n, nonce_upper_bound bigint NOT NULL\n);\n-CREATE TYPE zkapp_account_precondition_type AS ENUM ('full', 'nonce', 'accept');\n+CREATE TYPE zkapp_precondition_type AS ENUM ('full', 'nonce', 'accept');\n/* NULL convention */\nCREATE TABLE zkapp_precondition_accounts\n@@ -132,7 +132,7 @@ CREATE TABLE zkapp_precondition_accounts\n*/\nCREATE TABLE zkapp_account_precondition\n( id serial PRIMARY KEY\n-, kind zkapp_account_precondition_type NOT NULL\n+, kind zkapp_precondition_type NOT NULL\n, precondition_account_id int REFERENCES zkapp_precondition_accounts(id)\n, nonce bigint\n);\n@@ -235,7 +235,7 @@ CREATE TABLE zkapp_party_body\n);\nCREATE TABLE zkapp_party\n-( id serial NOT NULL PRIMARY KEY\n+( id serial PRIMARY KEY\n, body_id int NOT NULL REFERENCES zkapp_party_body(id)\n, account_precondition_id int NOT NULL REFERENCES zkapp_account_precondition(id)\n, authorization_kind zkapp_authorization_kind_type NOT NULL\n",
        "date": "07.04.2022 13:31:18",
        "repo": "minaprotocol/mina",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor account precondition type in zkapp tables"
    },
    {
        "msg": "rename `public` to `public_` for JS codegen",
        "diff": "diff --git a/src/lib/crypto/kimchi_bindings/wasm/src/plonk_verifier_index.rs b/src/lib/crypto/kimchi_bindings/wasm/src/plonk_verifier_index.rs @@ -224,7 +224,7 @@ macro_rules! impl_verification_key {\npub domain: WasmDomain,\npub max_poly_size: i32,\npub max_quot_size: i32,\n- pub public: i32,\n+ pub public_: i32,\n#[wasm_bindgen(skip)]\npub srs: $WasmSrs,\n#[wasm_bindgen(skip)]\n@@ -241,7 +241,7 @@ macro_rules! impl_verification_key {\ndomain: &WasmDomain,\nmax_poly_size: i32,\nmax_quot_size: i32,\n- public: i32,\n+ public_: i32,\nsrs: &$WasmSrs,\nevals: &WasmPlonkVerificationEvals,\nshifts: &WasmShifts,\n@@ -250,7 +250,7 @@ macro_rules! impl_verification_key {\ndomain: domain.clone(),\nmax_poly_size,\nmax_quot_size,\n- public,\n+ public_,\nsrs: srs.clone(),\nevals: evals.clone(),\nshifts: shifts.clone(),\n@@ -289,7 +289,7 @@ macro_rules! impl_verification_key {\n},\nmax_poly_size: vi.max_poly_size as i32,\nmax_quot_size: vi.max_quot_size as i32,\n- public: vi.public as i32,\n+ public_: vi.public as i32,\nsrs: srs.into(),\nevals: WasmPlonkVerificationEvals {\nsigma_comm: IntoIterator::into_iter(vi.sigma_comm).map(From::from).collect(),\n@@ -363,7 +363,7 @@ macro_rules! impl_verification_key {\npub fn of_wasm(\nmax_poly_size: i32,\nmax_quot_size: i32,\n- public: i32,\n+ public_: i32,\nlog_size_of_group: i32,\nsrs: &$WasmSrs,\nevals: &WasmPlonkVerificationEvals,\n@@ -410,7 +410,7 @@ macro_rules! impl_verification_key {\nendo: endo_q,\nmax_poly_size: max_poly_size as usize,\nmax_quot_size: max_quot_size as usize,\n- public: public as usize,\n+ public: public_ as usize,\nzkpm: {\nlet res = once_cell::sync::OnceCell::new();\nres.set(zk_polynomial(domain)).unwrap();\n@@ -443,7 +443,7 @@ macro_rules! impl_verification_key {\nof_wasm(\nindex.max_poly_size,\nindex.max_quot_size,\n- index.public,\n+ index.public_,\nindex.domain.log_size_of_group,\n&index.srs,\n&index.evals,\n@@ -582,7 +582,7 @@ macro_rules! impl_verification_key {\n},\nmax_poly_size: 0,\nmax_quot_size: 0,\n- public: 0,\n+ public_: 0,\nsrs: $WasmSrs(Arc::new(SRS::create(0))),\nevals: WasmPlonkVerificationEvals {\nsigma_comm: vec_comm(PERMUTS),\n",
        "date": "30.06.2022 14:41:33",
        "repo": "minaprotocol/mina",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor variable name 'public' to 'public_' in plonk_verifier_index.rs"
    },
    {
        "msg": "rename plugin names",
        "diff": "diff --git a/packages/jss-preset-default/src/index.js b/packages/jss-preset-default/src/index.js -import functionPlugin from 'jss-plugin-syntax-rule-value-function'\n-import observablePlugin from 'jss-plugin-syntax-rule-value-observable'\n+import functions from 'jss-plugin-syntax-rule-value-function'\n+import observable from 'jss-plugin-syntax-rule-value-observable'\nimport template from 'jss-plugin-syntax-template'\nimport global from 'jss-plugin-syntax-global'\nimport extend from 'jss-plugin-syntax-extend'\n@@ -13,8 +13,8 @@ import propsSort from 'jss-plugin-props-sort'\nexport default (options = {}) => ({\nplugins: [\n- functionPlugin(options.function),\n- observablePlugin(options.observable),\n+ functions(options.function),\n+ observable(options.observable),\ntemplate(options.template),\nglobal(options.global),\nextend(options.extend),\n",
        "date": "15.07.2018 02:22:01",
        "repo": "cssinjs/jss",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor JSS preset default plugins import statements"
    },
    {
        "msg": "rename cardImg to cardImageUrl",
        "diff": "diff --git a/src/utils/Card.js b/src/utils/Card.js @@ -95,7 +95,7 @@ export const cardRarity = (card) => card.rarity ?? card.details.rarity;\nexport const cardAddedTime = (card) => card.addedTmsp;\n-export const cardImg = (card) => card.imgUrl ?? card.details.image_normal ?? card.details.image_small;\n+export const cardImageUrl = (card) => card.imgUrl ?? card.details.image_normal ?? card.details.image_small;\nexport const cardNotes = (card) => card.notes;\n@@ -178,7 +178,7 @@ export default {\ncardType,\ncardRarity,\ncardAddedTime,\n- cardImg,\n+ cardImageUrl,\ncardNotes,\ncardColorCategory,\ncardCost,\n",
        "date": "18.04.2020 08:15:10",
        "repo": "dekkerglen/cubecobra",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor cardImg function to cardImageUrl in Card.js"
    },
    {
        "msg": "rename type -> meth",
        "diff": "diff --git a/index.html b/index.html this.state.login.trim(),\nthis.state.password.trim(),\nvcard(this.state.fn, this.state.imageDataUrl),\n- {\"type\": \"email\", \"val\": this.state.email});\n+ {\"meth\": \"email\", \"val\": this.state.email});\n}\n},\nrender: function() {\n",
        "date": "16.03.2018 18:49:01",
        "repo": "tinode/webapp",
        "type": "rename",
        "chatgpt_zeroshot": "Fix email validation method in form submission"
    },
    {
        "msg": "rename the app",
        "diff": "diff --git a/index.html b/index.html <title>Tinode</title>\n<meta charset=\"utf-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n- <meta name=\"application-name\" content=\"Tinode\">\n- <meta name=\"description\" content=\"Instant messaging\">\n+ <meta name=\"application-name\" content=\"TinodeWeb\">\n+ <meta name=\"description\" content=\"Tinode instant messaging\">\n<meta name=\"application-url\" content=\"https://api.tinode.co/\">\n<!-- Browser styling for Chrome, FF, Opera -->\n<meta name=\"theme-color\" content=\"#3949AB\">\n",
        "date": "17.09.2018 10:03:46",
        "repo": "tinode/webapp",
        "type": "rename",
        "chatgpt_zeroshot": "Update meta tags for application name and description in index.html"
    },
    {
        "msg": "rename ambiguous variable",
        "diff": "diff --git a/src/widgets/contact-list.jsx b/src/widgets/contact-list.jsx @@ -48,14 +48,14 @@ class ContactList extends React.Component {\n// If filter function is provided, filter out the items\n// which don't satisfy the condition.\nif (this.props.filterFunc && this.props.filter) {\n- let content = [key];\n+ const filterOn = [key];\nif (c.private && c.private.comment) {\n- content.push(('' + c.private.comment).toLowerCase());\n+ filterOn.push(('' + c.private.comment).toLowerCase());\n}\nif (c.public && c.public.fn) {\n- content.push(('' + c.public.fn).toLowerCase());\n+ filterOn.push(('' + c.public.fn).toLowerCase());\n}\n- if (!this.props.filterFunc(this.props.filter, content)) {\n+ if (!this.props.filterFunc(this.props.filter, filterOn)) {\nreturn;\n}\n}\n",
        "date": "15.03.2021 16:46:39",
        "repo": "tinode/webapp",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor filter logic in ContactList component"
    },
    {
        "msg": "rename calcPreviewBars -> resampleBars",
        "diff": "diff --git a/src/widgets/audio-player.jsx b/src/widgets/audio-player.jsx @@ -39,7 +39,7 @@ export default class AudioPlayer extends React.PureComponent {\nthis.initAudio = this.initAudio.bind(this);\nthis.initCanvas = this.initCanvas.bind(this);\n- this.calcPreviewBars = this.calcPreviewBars.bind(this);\n+ this.resampleBars = this.resampleBars.bind(this);\nthis.visualize = this.visualize.bind(this);\nthis.handlePlay = this.handlePlay.bind(this);\n@@ -106,7 +106,7 @@ export default class AudioPlayer extends React.PureComponent {\nthis.canvasContext = this.canvasRef.current.getContext('2d');\nthis.canvasContext.lineCap = 'round';\n- this.viewBuffer = this.calcPreviewBars(this.state.preview);\n+ this.viewBuffer = this.resampleBars(this.state.preview);\nthis.visualize();\n}\n@@ -172,7 +172,7 @@ export default class AudioPlayer extends React.PureComponent {\n}\n// Quick and dirty downsampling of the original preview bars into a smaller (or equal) number of bars we can display here.\n- calcPreviewBars(original) {\n+ resampleBars(original) {\nconst barCount = Math.min(original.length, ((this.canvasRef.current.width - SPACING) / (LINE_WIDTH + SPACING)) | 0);\nconst factor = original.length / barCount;\nlet amps = [];\n",
        "date": "23.03.2022 16:10:47",
        "repo": "tinode/webapp",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor calcPreviewBars to resampleBars in AudioPlayer"
    },
    {
        "msg": "rename yarn command",
        "diff": "diff --git a/package.json b/package.json \"test:ci\": \"NODE_ENV=test BABEL_ENV=test jest --ci --coverage\",\n\"test:update-snaps\": \"NODE_ENV=test BABEL_ENV=test jest -u\",\n\"test\": \"NODE_ENV=test BABEL_ENV=test jest\",\n- \"component\": \"node scripts/create_component.js\"\n+ \"create-common-component\": \"node scripts/create_component.js\"\n},\n\"lint-staged\": {\n\"*.js\": [\n",
        "date": "09.09.2018 21:45:25",
        "repo": "operationcode/front-end",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor test scripts and rename create component script."
    },
    {
        "msg": "rename component class",
        "diff": "diff --git a/components/Press/PressLinks/ArticleGroup/ArticleGroup.js b/components/Press/PressLinks/ArticleGroup/ArticleGroup.js @@ -4,7 +4,7 @@ import OutboundLink from 'components/_common_/OutboundLink/OutboundLink';\nimport Button from 'components/_common_/Button/Button';\nimport styles from './ArticleGroup.css';\n-class ArticleItem extends Component {\n+class ArticleGroup extends Component {\nstatic propTypes = {\nlinks: PropTypes.arrayOf(\nPropTypes.shape({\n@@ -57,4 +57,4 @@ class ArticleItem extends Component {\n}\n}\n-export default ArticleItem;\n+export default ArticleGroup;\n",
        "date": "03.10.2018 14:25:05",
        "repo": "operationcode/front-end",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor ArticleItem component to ArticleGroup component"
    },
    {
        "msg": "rename knob to match prop name",
        "diff": "diff --git a/components/HeroBanner/__stories__/HeroBanner.stories.js b/components/HeroBanner/__stories__/HeroBanner.stories.js @@ -12,7 +12,7 @@ storiesOf('Common/HeroBanner', module)\n'default',\nwithInfo()(() => (\n<HeroBanner\n- backgroundImageSource={text('imageSource', `${s3}heroBanners/stock_family-2.jpg`)}\n+ backgroundImageSource={text('backgroundImageSource', `${s3}heroBanners/stock_family-2.jpg`)}\nisFullViewportHeight={boolean('isFullViewportHeight', false)}\ntitle={text('title', 'Hero Banner')}\n>\n",
        "date": "01.03.2019 22:29:16",
        "repo": "operationcode/front-end",
        "type": "rename",
        "chatgpt_zeroshot": "Fix backgroundImageSource prop name in HeroBanner component story"
    },
    {
        "msg": "rename import",
        "diff": "diff --git a/components/SocialMedia/SocialMedia.js b/components/SocialMedia/SocialMedia.js import React from 'react';\nimport FacebookLogo from 'static/images/icons/facebook_logo.svg';\nimport TwitterLogo from 'static/images/icons/twitter_logo.svg';\n-import GithubLogoCircle from 'static/images/icons/github_logo_circle.svg';\n+import GitHubLogo from 'static/images/icons/github_logo_circle.svg';\nimport InstagramLogo from 'static/images/icons/instagram_logo.svg';\nimport SocialMediaContainer from './SocialMediaContainer/SocialMediaContainer';\nimport SocialMediaItem from './SocialMediaItem/SocialMediaItem';\n@@ -28,7 +28,7 @@ function SocialMedia() {\n<SocialMediaItem\nhref=\"https://github.com/OperationCode/\"\nname=\"GitHub\"\n- svg={<GithubLogoCircle className={styles.logo} />}\n+ svg={<GitHubLogo className={styles.logo} />}\n/>\n</SocialMediaContainer>\n);\n",
        "date": "06.10.2019 15:04:59",
        "repo": "operationcode/front-end",
        "type": "rename",
        "chatgpt_zeroshot": "Update GitHub logo import and component in SocialMedia component"
    },
    {
        "msg": "rename Zeit -> Vercel",
        "diff": "diff --git a/common/constants/partners.js b/common/constants/partners.js @@ -74,9 +74,9 @@ const partners = [\ntype: PARTNER_TYPES.KIND,\n},\n{\n- name: 'Zeit',\n- logoSource: `${s3}partnerLogos/zeit.png`,\n- url: 'https://zeit.co/home',\n+ name: 'Vercel',\n+ logoSource: `${s3}partnerLogos/vercel.png`,\n+ url: 'https://vercel.com/home',\ntype: PARTNER_TYPES.KIND,\n},\n];\n",
        "date": "26.04.2020 16:35:59",
        "repo": "operationcode/front-end",
        "type": "rename",
        "chatgpt_zeroshot": "Update partner name and logo from Zeit to Vercel"
    },
    {
        "msg": "rename url --> homepage",
        "diff": "diff --git a/package.json b/package.json \"name\": \"materialize-css\",\n\"description\": \"Builds Materialize distribution packages\",\n\"author\": \"Alvin Wang, Alan Chang\",\n- \"url\": \"http://materializecss.com/\",\n+ \"homepage\": \"http://materializecss.com/\",\n\"version\": \"0.98.2\",\n\"main\": \"dist/js/materialize.js\",\n\"style\": \"dist/css/materialize.css\",\n",
        "date": "05.06.2017 13:15:14",
        "repo": "dogfalo/materialize",
        "type": "rename",
        "chatgpt_zeroshot": "Update package.json homepage URL to fix broken link"
    },
    {
        "msg": "rename section to include showing",
        "diff": "diff --git a/jade/page-contents/helpers_content.html b/jade/page-contents/helpers_content.html </div><!-- End Valign Section -->\n- <!-- Hiding Section-->\n+ <!-- Hiding/Showing Section-->\n<div id=\"hiding\" class=\"section scrollspy\">\n- <h2 class=\"header\">Hiding Content</h2>\n- <p>We provide easy to use classes to hide content on specific screen sizes. </p>\n+ <h2 class=\"header\">Hiding/Showing Content</h2>\n+ <p>We provide easy to use classes to hide/show content on specific screen sizes. </p>\n<table class=\"striped\">\n<thead>\n<tr>\n",
        "date": "17.07.2017 17:21:07",
        "repo": "dogfalo/materialize",
        "type": "rename",
        "chatgpt_zeroshot": "Update hiding content section to include showing functionality"
    },
    {
        "msg": "rename sideNav in documentation",
        "diff": "diff --git a/jade/_navbar.jade b/jade/_navbar.jade @@ -77,7 +77,7 @@ header\na(href='pagination.html') Pagination\nli(class=(page == \"Preloader\" ? \"active\" : \"\"))\na(href='preloader.html') Preloader\n- li.bold(class=(page == \"Dialogs\" || page == \"Modals\" || page == \"Dropdown\" || page == \"FeatureDiscovery\" || page == \"Tabs\" || page == \"ScrollFire\" || page == \"Scrollspy\" || page == \"SideNav\" || page == \"Pushpin\" || page == \"Waves\" || page == \"Media\" || page == \"Transitions\" || page == \"Parallax\" || page == \"Collapsible\" ? \"active\" : \"\" || page == \"Carousel\" ? \"active\" : \"\"))\n+ li.bold(class=(page == \"Dialogs\" || page == \"Modals\" || page == \"Dropdown\" || page == \"FeatureDiscovery\" || page == \"Tabs\" || page == \"ScrollFire\" || page == \"Scrollspy\" || page == \"Sidenav\" || page == \"Pushpin\" || page == \"Waves\" || page == \"Media\" || page == \"Transitions\" || page == \"Parallax\" || page == \"Collapsible\" ? \"active\" : \"\" || page == \"Carousel\" ? \"active\" : \"\"))\na.collapsible-header(class=\"waves-effect waves-teal\")\n| JavaScript\n.collapsible-body\n",
        "date": "14.08.2017 13:48:15",
        "repo": "dogfalo/materialize",
        "type": "rename",
        "chatgpt_zeroshot": "Fix typo in navbar class name \"Sidenav\""
    },
    {
        "msg": "rename cloud cover column.",
        "diff": "diff --git a/modules/sepal-server/src/main/groovy/org/openforis/sepal/component/datasearch/adapter/CsvBackedUsgsGateway.groovy b/modules/sepal-server/src/main/groovy/org/openforis/sepal/component/datasearch/adapter/CsvBackedUsgsGateway.groovy @@ -110,7 +110,7 @@ class CsvBackedUsgsGateway implements DataSetMetadataGateway {\n}\nprivate Double cloudCover(Sensor sensor, data) {\n- def result = data.cloudCoverFull.toDouble() as Double\n+ def result = data.cloudCover.toDouble() as Double\n// LANDSAT_7 with SLC off always miss about 22% of its data. Consider that cloud cover.\nif (result && sensor == LANDSAT_7 && data.SCAN_GAP_INTERPOLATION)\nresult = Math.min(100, result + 22)\n@@ -121,7 +121,7 @@ class CsvBackedUsgsGateway implements DataSetMetadataGateway {\ndef prefix = (data.sceneID as String).substring(0, 3)\nreturn data.COLLECTION_CATEGORY in ['T1', 'T2'] &&\ndata.dayOrNight == 'DAY' &&\n- data.cloudCoverFull.toDouble() >= 0d &&\n+ data.cloudCover.toDouble() >= 0d &&\nprefix in ['LT4', 'LT5', 'LE7', 'LC8']\n}\n",
        "date": "04.06.2018 13:42:08",
        "repo": "openforis/sepal",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor cloudCover method and update cloudCover condition in CsvBackedUsgsGateway"
    },
    {
        "msg": "rename Fusion Table AOI properties.",
        "diff": "diff --git a/modules/gui-react/frontend/src/backend.js b/modules/gui-react/frontend/src/backend.js @@ -256,9 +256,9 @@ const transformAoi = (aoi) => {\ncase 'fusionTable':\nreturn {\ntype: 'fusionTable',\n- tableName: aoi.id,\n+ id: aoi.id,\nkeyColumn: aoi.keyColumn,\n- keyValue: aoi.key\n+ key: aoi.key\n}\ncase 'polygon':\nreturn {\n",
        "date": "03.08.2018 09:06:25",
        "repo": "openforis/sepal",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor transformAoi function to update fusionTable object structure"
    },
    {
        "msg": "rename typology button.",
        "diff": "diff --git a/modules/gui-react/frontend/src/locale/en/translations.json b/modules/gui-react/frontend/src/locale/en/translations.json },\n\"typology\": {\n\"title\": \"Typology\",\n- \"button\": \"TOP\",\n+ \"button\": \"TYP\",\n\"tooltip\": \"Select typology\"\n},\n\"trainingData\": {\n",
        "date": "07.08.2018 10:02:14",
        "repo": "openforis/sepal",
        "type": "rename",
        "chatgpt_zeroshot": "Update typology button text in translations.json"
    },
    {
        "msg": "rename button to select individual scenes.",
        "diff": "diff --git a/modules/gui/frontend/src/locale/en/translations.json b/modules/gui/frontend/src/locale/en/translations.json \"type\": {\n\"label\": \"Scene selection\",\n\"all.label\": \"Use all scenes\",\n- \"select.label\": \"Select individual scenes\"\n+ \"select.label\": \"Select scenes\"\n},\n\"targetDateWeight\": {\n\"label\": \"Priority\",\n",
        "date": "10.05.2019 15:25:01",
        "repo": "openforis/sepal",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor scene selection label in translations.json"
    },
    {
        "msg": "rename input image panel and sections.",
        "diff": "diff --git a/modules/gui/frontend/src/locale/en/translations.json b/modules/gui/frontend/src/locale/en/translations.json \"tooltip\":\"Remove image from classification\"\n},\n\"sections\": {\n- \"title\": \"Add image to classify\"\n+ \"title\": \"Image to classify\"\n},\n\"recipe\": {\n- \"title\": \"Add saved Sepal recipe\"\n+ \"title\": \"Saved Sepal recipe\"\n},\n\"asset\": {\n- \"title\": \"Add Earth Engine asset\"\n+ \"title\": \"Earth Engine asset\"\n},\n\"form\": {\n\"section\": {\n",
        "date": "17.05.2019 07:44:22",
        "repo": "openforis/sepal",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor titles for clarity and consistency"
    },
    {
        "msg": "rename alert email variable.",
        "diff": "diff --git a/hosting-services/aws/sepal/monit/config.template b/hosting-services/aws/sepal/monit/config.template @@ -8,4 +8,4 @@ set mailserver {{ smtp_host }} port {{ smtp_port }}\nset mail-format { from: {{ smtp_from }} }\n-set alert {{ sepal_operator_email }}\n+set alert {{ sepal_monitoring_email }}\n",
        "date": "14.10.2019 11:25:19",
        "repo": "openforis/sepal",
        "type": "rename",
        "chatgpt_zeroshot": "Update alert email in Monit config template"
    },
    {
        "msg": "rename options.use to options.useOnly to make it more clear",
        "diff": "diff --git a/plugin.js b/plugin.js @@ -14,23 +14,23 @@ export default function({ app }, inject) {\n}\nlet _fireStore, _fireFunc, _fireStorage, _fireAuth\n- if (!options.use || options.use.includes('firestore')) {\n+ if (!options.useOnly || options.useOnly.includes('firestore')) {\nfirebase.firestore().settings({ timestampsInSnapshots: true })\n_fireStore = firebase.firestore()\ninject('fireStore', _fireStore)\n}\n- if (!options.use || options.use.includes('functions')) {\n+ if (!options.useOnly || options.useOnly.includes('functions')) {\n_fireFunc = firebase.functions()\ninject('fireFunc', _fireFunc)\n}\n- if (!options.use || options.use.includes('storage')) {\n+ if (!options.useOnly || options.useOnly.includes('storage')) {\n_fireStorage = firebase.storage()\ninject('fireStorage', _fireStorage)\n}\n- if (!options.use || options.use.includes('auth')) {\n+ if (!options.useOnly || options.useOnly.includes('auth')) {\nconst _fireAuth = firebase.auth()\ninject('fireAuth', _fireAuth)\n}\n",
        "date": "18.11.2018 13:33:50",
        "repo": "nuxt-community/firebase-module",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor plugin.js to use options.useOnly instead of options.use for specifying Firebase services."
    },
    {
        "msg": "rename \"services\" to \"products\"",
        "diff": "diff --git a/README.md b/README.md @@ -44,7 +44,7 @@ modules: [\n#### useOnly\n-By default, all supported services are loaded. If you only wish to load certain services (recommended!), add this `useOnly` option.\n+By default, all supported Firebase products are loaded. If you only wish to load certain products (recommended!), add this `useOnly` option.\n- type: `Array<string>`\n- default: `null`\n@@ -75,11 +75,11 @@ Same es `config`, but applies when `NODE_ENV === 'development'`.\n## Usage\n-You can access the various Firebase services with **\\$foo** in almost any context using `app.$foo` or `this.$foo`, including store actions. Make sure to replace the _foo_ with a shortcut from the table below.\n+You can access the various Firebase products with **\\$foo** in almost any context using `app.$foo` or `this.$foo`, including store actions. Make sure to replace the _foo_ with a shortcut from the table below.\n-Services supported by nuxt-fire so far:\n+Firebase products supported by nuxt-fire so far:\n-| Firebase Service | Shortcut |\n+| Firebase Product | Shortcut |\n| ----------------- | --------------- |\n| Authentication | \\$fireAuth |\n| RealTime Database | \\$fireDb |\n",
        "date": "18.11.2018 14:36:04",
        "repo": "nuxt-community/firebase-module",
        "type": "rename",
        "chatgpt_zeroshot": "Update terminology from \"services\" to \"products\" in README.md"
    },
    {
        "msg": "rename $fireFunctions to $fireFunc",
        "diff": "diff --git a/README.md b/README.md @@ -82,12 +82,12 @@ You can access the various Firebase products with **\\$foo** in almost any contex\nFirebase products supported by nuxt-fire so far:\n| Firebase Product | Shortcut |\n-| ----------------- | --------------- |\n+| ----------------- | ------------- |\n| Authentication | \\$fireAuth |\n| RealTime Database | \\$fireDb |\n| Firestore | \\$fireStore |\n| Storage | \\$fireStorage |\n-| Functions | \\$fireFunctions |\n+| Functions | \\$fireFunc |\nSee [Firebase's official docs](https://firebase.google.com/docs/) for more usage information.\n",
        "date": "18.11.2018 16:18:12",
        "repo": "nuxt-community/firebase-module",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor Firebase Functions shortcut in README.md"
    },
    {
        "msg": "rename firePerf to be consistant",
        "diff": "diff --git a/plugin.js b/plugin.js @@ -50,8 +50,8 @@ export default (ctx, inject) => {\n}\nif(process.browser && options.useOnly.includes('performance')){\n- const perf = firebase.performance()\n- inject('perf', perf)\n+ const firePerf = firebase.performance()\n+ inject('firePerf', firePerf)\n}\n}\n",
        "date": "17.05.2019 19:44:53",
        "repo": "nuxt-community/firebase-module",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor plugin.js to rename firebase performance object to firePerf"
    },
    {
        "msg": "rename vendor.js to vendors.app.js",
        "diff": "diff --git a/packages/docs/options/README.md b/packages/docs/options/README.md @@ -113,7 +113,7 @@ All services mentioned below can have the following options:\n#### static\n-By default, each service gets imported dynamically, which splits them into separate chunks. If `static = true` however, we import them statically, so the services are bundled into `vendor.js`.\n+By default, each service gets imported dynamically, which splits them into separate chunks. If `static = true` however, we import them statically, so the services are bundled into `vendors.app.js`.\n```js\n// static: false (default)\n",
        "date": "07.12.2019 14:37:36",
        "repo": "nuxt-community/firebase-module",
        "type": "rename",
        "chatgpt_zeroshot": "Update README.md to specify that services are bundled into `vendors.app.js` when `static = true`."
    },
    {
        "msg": "rename joy plot to ridgeline plot",
        "diff": "diff --git a/docs/examples/u-district-cuisine.md b/docs/examples/u-district-cuisine.md @@ -5,6 +5,6 @@ permalink: /examples/u-district-cuisine/index.html\nspec: u-district-cuisine\n---\n-A [joy plot](http://blog.revolutionanalytics.com/2017/07/joyplots.html) showing the prevalence of various food and beverage categories in Seattle's University District. One never has to go far for coffee! Similar to a [violin plot](../violin-plot), this plot uses a continuous approximation of discrete data computed using [kernel density estimation (KDE)](https://en.wikipedia.org/wiki/Kernel_density_estimation). This graphic originally appeared in [Alaska Airlines Beyond Magazine (Sep 2017, p. 120)](http://www.paradigmcg.com/digitaleditions/abm-0917/html5/).\n+A [ridgeline plot](http://blog.revolutionanalytics.com/2017/07/joyplots.html) showing the prevalence of various food and beverage categories in Seattle's University District. One never has to go far for coffee! Similar to a [violin plot](../violin-plot), this plot uses a continuous approximation of discrete data computed using [kernel density estimation (KDE)](https://en.wikipedia.org/wiki/Kernel_density_estimation). This graphic originally appeared in [Alaska Airlines Beyond Magazine (Sep 2017, p. 120)](http://www.paradigmcg.com/digitaleditions/abm-0917/html5/).\n{% include example spec=page.spec %}\n",
        "date": "28.09.2017 12:01:04",
        "repo": "vega/vega",
        "type": "rename",
        "chatgpt_zeroshot": "Update plot type from joy plot to ridgeline plot in u-district-cuisine.md"
    },
    {
        "msg": "rename ImageLoader load options.",
        "diff": "diff --git a/packages/vega-scenegraph/src/ImageLoader.js b/packages/vega-scenegraph/src/ImageLoader.js import Image from './util/canvas/image';\nimport {load} from 'vega-loader';\n-export default function ImageLoader(loadConfig) {\n+export default function ImageLoader(loadOptions) {\nthis._pending = 0;\n- this._config = loadConfig || ImageLoader.Config;\n+ this._options = loadOptions || ImageLoader.Options;\n}\n// Overridable global default load configuration\n-ImageLoader.Config = {};\n+ImageLoader.Options = {};\nvar prototype = ImageLoader.prototype;\n@@ -16,7 +16,7 @@ prototype.pending = function() {\n};\nprototype.imageURL = function(uri) {\n- return load.sanitize(uri, this._config);\n+ return load.sanitize(uri, this._options);\n};\nprototype.loadImage = function(uri) {\n",
        "date": "09.08.2016 10:26:53",
        "repo": "vega/vega",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor ImageLoader to use options instead of config parameters"
    },
    {
        "msg": "rename bandSize to rangeStep, update range calculation.",
        "diff": "diff --git a/packages/vega-encode/src/Scale.js b/packages/vega-encode/src/Scale.js @@ -17,8 +17,8 @@ var SKIP = {\n'zero': 1,\n'range': 1,\n+ 'rangeStep': 1,\n'round': 1,\n- 'bandSize': 1,\n'reverse': 1\n};\n@@ -89,11 +89,15 @@ function configureRange(scale, _, count) {\nvar type = scale.type,\nrange = _.range;\n- if (_.bandSize != null) {\n+ if (_.rangeStep != null) {\nif (type !== 'band' && type !== 'point') {\n- error('Only band and point scales support bandSize.');\n+ error('Only band and point scales support rangeStep.');\n}\n- range = [0, _.bandSize * count];\n+ // calculate full range based on requested step size and padding\n+ // Mirrors https://github.com/d3/d3-scale/blob/master/src/band.js#L23\n+ var inner = (_.paddingInner != null ? _.paddingInner : _.padding) || 0,\n+ outer = (_.paddingOuter != null ? _.paddingOuter : _.padding) || 0;\n+ range = [0, _.rangeStep * (count - (count > 1 ? inner : 0) + outer * 2)];\n}\nif (range) {\n",
        "date": "30.11.2016 17:19:44",
        "repo": "vega/vega",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor scale configuration to support rangeStep and padding calculations"
    },
    {
        "msg": "rename Apply to Formula.",
        "diff": "diff --git a/packages/vega-runtime/test/expression-test.js b/packages/vega-runtime/test/expression-test.js @@ -15,7 +15,7 @@ tape('Parser parses expressions', function(test) {\n{id:0, type:'Operator', value: 50},\n{id:1, type:'Operator', update: '2 * _.foo', params: {foo:{$ref:0}}},\n{id:2, type:'Collect', value: {$ingest: values}},\n- {id:3, type:'Apply', params: {\n+ {id:3, type:'Formula', params: {\nexpr: {\n$expr: 'datum.x * datum.y',\n$fields: ['x', 'y']\n",
        "date": "06.09.2016 13:39:07",
        "repo": "vega/vega",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor Apply to Formula in expression-test.js"
    },
    {
        "msg": "rename Nice to TimeInterval",
        "diff": "diff --git a/packages/vega-typings/types/spec/scale.d.ts b/packages/vega-typings/types/spec/scale.d.ts @@ -114,23 +114,23 @@ export interface SequentialScale extends BaseScale {\nrange: RangeScheme;\nclamp?: boolean | SignalRef;\nzero?: boolean | SignalRef;\n- nice?: boolean | Nice | SignalRef;\n+ nice?: boolean | TimeInterval | SignalRef;\n}\n-export type Nice = 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'year';\n+export type TimeInterval = 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'year';\nexport interface TimeScale extends BaseScale {\ntype: 'time' | 'utc';\nrange?: RangeScheme;\nclamp?: boolean | SignalRef;\n- nice?: boolean | Nice | SignalRef;\n+ nice?: boolean | TimeInterval | SignalRef;\n}\nexport interface IdentityScale extends BaseScale {\ntype: 'identity';\n- nice?: Nice;\n+ nice?: TimeInterval;\n}\nexport interface DiscretizingScale extends BaseScale {\ntype: DiscreteScaleType;\nrange?: RangeScheme;\n- nice?: boolean | Nice | SignalRef;\n+ nice?: boolean | TimeInterval | SignalRef;\nzero?: boolean | SignalRef;\n}\nexport interface LinearScale extends BaseScale {\n",
        "date": "28.05.2018 08:54:16",
        "repo": "vega/vega",
        "type": "rename",
        "chatgpt_zeroshot": "refactor: Changed type definition for nice property in scale interfaces"
    },
    {
        "msg": "rename empty string fields and fields with dots",
        "diff": "diff --git a/plugins/candela/web_client/views/CandelaWidget.js b/plugins/candela/web_client/views/CandelaWidget.js @@ -6,7 +6,6 @@ import CandelaWidgetTemplate from '../templates/candelaWidget.pug';\nimport '../stylesheets/candelaWidget.styl';\nimport candela from 'candela';\n-import d3 from 'd3';\nimport datalib from 'datalib';\nvar CandelaWidget = View.extend({\n@@ -46,8 +45,30 @@ var CandelaWidget = View.extend({\ncomponents: this._components\n}));\nthis.parametersView.setElement($('.g-item-candela-parameters'));\n- d3.csv('/api/v1/item/' + this.item.get('_id') + '/download', (error, data) => {\n+ datalib.csv('/api/v1/item/' + this.item.get('_id') + '/download', (error, data) => {\ndatalib.read(data, {parse: 'auto'});\n+\n+ // Vega has issues with empty-string fields and fields with dots, so rename those.\n+ let rename = [];\n+ for (let key in data.__types__) {\n+ if (data.__types__.hasOwnProperty(key)) {\n+ if (key === '') {\n+ rename.push(['', 'id']);\n+ } else if (key.indexOf('.') >= 0) {\n+ rename.push([key, key.replace(/\\./g, '_')]);\n+ }\n+ }\n+ }\n+\n+ rename.forEach(d => {\n+ data.__types__[d[1]] = data.__types__[d[0]];\n+ delete data.__types__[d[0]];\n+ data.forEach(row => {\n+ row[d[1]] = row[d[0]];\n+ delete row[d[0]];\n+ });\n+ });\n+\nlet columns = [];\nfor (let key in data.__types__) {\nif (data.__types__.hasOwnProperty(key)) {\n",
        "date": "03.05.2017 14:54:54",
        "repo": "kitware/candela",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor data loading and processing in CandelaWidget.js"
    },
    {
        "msg": "rename plugin property in package.json to girderPlugin",
        "diff": "diff --git a/plugins/candela/girder_candela/web_client/package.json b/plugins/candela/girder_candela/web_client/package.json \"peerDependencies\": {\n\"@girder/item_tasks\": \"*\"\n},\n- \"girder-plugin\": {\n+ \"girderPlugin\": {\n\"name\": \"candela\",\n\"main\": \"./main.js\",\n\"dependencies\": [\"item_tasks\"],\n",
        "date": "27.06.2018 14:40:39",
        "repo": "kitware/candela",
        "type": "rename",
        "chatgpt_zeroshot": "Fix casing of girderPlugin key in package.json"
    },
    {
        "msg": "rename ctx to dt",
        "diff": "diff --git a/html/app.js b/html/app.js @@ -123,21 +123,21 @@ if (window.CefSharp) {\nVue.filter('commaNumber', commaNumber);\nvar formatDate = (s, format) => {\n- var ctx = new Date(s);\n- if (isNaN(ctx)) {\n+ var dt = new Date(s);\n+ if (isNaN(dt)) {\nreturn escapeTag(s);\n}\n- var hours = ctx.getHours();\n+ var hours = dt.getHours();\nvar map = {\n- 'YYYY': String(10000 + ctx.getFullYear()).substr(-4),\n- 'MM': String(101 + ctx.getMonth()).substr(-2),\n- 'DD': String(100 + ctx.getDate()).substr(-2),\n+ 'YYYY': String(10000 + dt.getFullYear()).substr(-4),\n+ 'MM': String(101 + dt.getMonth()).substr(-2),\n+ 'DD': String(100 + dt.getDate()).substr(-2),\n'HH24': String(100 + hours).substr(-2),\n'HH': String(100 + (hours > 12\n? hours - 12\n: hours)).substr(-2),\n- 'MI': String(100 + ctx.getMinutes()).substr(-2),\n- 'SS': String(100 + ctx.getSeconds()).substr(-2),\n+ 'MI': String(100 + dt.getMinutes()).substr(-2),\n+ 'SS': String(100 + dt.getSeconds()).substr(-2),\n'AMPM': hours >= 12\n? 'PM'\n: 'AM'\n",
        "date": "11.01.2020 19:58:05",
        "repo": "pypy-vrc/vrcx",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor date formatting function in app.js"
    },
    {
        "msg": "rename variable name",
        "diff": "diff --git a/html/app.js b/html/app.js @@ -206,11 +206,11 @@ if (window.CefSharp) {\nvar API = {};\n- API.$eventHandlers = new Map();\n+ API.eventHandlers = new Map();\nAPI.$emit = function (name, ...args) {\n// console.log(name, ...args);\n- var handlers = this.$eventHandlers.get(name);\n+ var handlers = this.eventHandlers.get(name);\nif (handlers === undefined) {\nreturn;\n}\n@@ -225,16 +225,16 @@ if (window.CefSharp) {\n};\nAPI.$on = function (name, fx) {\n- var handlers = this.$eventHandlers.get(name);\n+ var handlers = this.eventHandlers.get(name);\nif (handlers === undefined) {\nhandlers = [];\n- this.$eventHandlers.set(name, handlers);\n+ this.eventHandlers.set(name, handlers);\n}\nhandlers.push(fx);\n};\nAPI.$off = function (name, fx) {\n- var handlers = this.$eventHandlers.get(name);\n+ var handlers = this.eventHandlers.get(name);\nif (handlers === undefined) {\nreturn;\n}\n@@ -244,14 +244,14 @@ if (window.CefSharp) {\nif (length > 1) {\nhandlers.splice(i, 1);\n} else {\n- this.$eventHandlers.delete(name);\n+ this.eventHandlers.delete(name);\n}\nbreak;\n}\n}\n};\n- API.$pendingGetRequests = new Map();\n+ API.pendingGetRequests = new Map();\nAPI.call = function (endpoint, options) {\nvar input = `https://api.vrchat.cloud/api/1/${endpoint}`;\n@@ -276,7 +276,7 @@ if (window.CefSharp) {\n}\ndelete init.body;\n// merge requests\n- var request = this.$pendingGetRequests.get(input);\n+ var request = this.pendingGetRequests.get(input);\nif (request) {\nreturn request;\n}\n@@ -324,15 +324,15 @@ if (window.CefSharp) {\nif (isGetRequest) {\nreq.finally(() => {\n- this.$pendingGetRequests.delete(input);\n+ this.pendingGetRequests.delete(input);\n});\n- this.$pendingGetRequests.set(input, req);\n+ this.pendingGetRequests.set(input, req);\n}\nreturn req;\n};\n- API.$status = {\n+ API.statusCodes = {\n100: 'Continue',\n101: 'Switching Protocols',\n102: 'Processing',\n@@ -410,7 +410,7 @@ if (window.CefSharp) {\nAPI.$throw = function (code, error, extra) {\nvar text = [];\nif (code) {\n- var status = this.$status[code];\n+ var status = this.statusCodes[code];\nif (status) {\ntext.push(`${code} ${status}`);\n} else {\n",
        "date": "11.01.2020 21:25:40",
        "repo": "pypy-vrc/vrcx",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor eventHandlers and pendingGetRequests in API object"
    },
    {
        "msg": "rename $isVIP to $isModerator",
        "diff": "diff --git a/html/app.js b/html/app.js @@ -798,12 +798,12 @@ CefSharp.BindObjectAsync(\n};\nvar applyUserTrustLevel = function (ref) {\n- ref.$isVIP = ref.developerType &&\n+ ref.$isModerator = ref.developerType &&\nref.developerType !== 'none';\nref.$isTroll = false;\nvar { tags } = ref;\nif (tags.includes('admin_moderator')) {\n- ref.$isVIP = true;\n+ ref.$isModerator = true;\n}\nif (tags.includes('system_troll') ||\ntags.includes('system_probable_troll')) {\n@@ -831,7 +831,7 @@ CefSharp.BindObjectAsync(\nref.$trustLevel = 'Visitor';\nref.$trustClass = 'x-tag-untrusted';\n}\n- if (ref.$isVIP) {\n+ if (ref.$isModerator) {\nref.$trustLevel = 'VRChat Team';\nref.$trustClass = 'x-tag-vip';\n} else if (ref.$isTroll) {\n@@ -876,7 +876,7 @@ CefSharp.BindObjectAsync(\nofflineFriends: [],\n// VRCX\n$homeLocation: {},\n- $isVIP: false,\n+ $isModerator: false,\n$isTroll: false,\n$trustLevel: 'Visitor',\n$trustClass: 'x-tag-untrusted',\n@@ -956,7 +956,7 @@ CefSharp.BindObjectAsync(\n// VRCX\n$location: {},\n$location_at: Date.now(),\n- $isVIP: false,\n+ $isModerator: false,\n$isTroll: false,\n$trustLevel: 'Visitor',\n$trustClass: 'x-tag-untrusted',\n",
        "date": "12.01.2020 19:37:25",
        "repo": "pypy-vrc/vrcx",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor user trust level logic to use $isModerator instead of $isVIP"
    },
    {
        "msg": "rename config.json stuff",
        "diff": "diff --git a/html/src/app.js b/html/src/app.js @@ -10912,9 +10912,9 @@ speechSynthesis.getVoices();\n$app.data.VRChatConfigFile = {};\n$app.data.VRChatConfigList = {\n- cache_size: { name: 'Max Cache Size in Gigabytes (minimum 20)', default: '20' },\n- cache_expiry_delay: { name: 'Expire Cache in Days (minimum 30)', default: '30' },\n- cache_directory: { name: 'Custom Cache Directory Location', default: '%AppData%\\\\..\\\\LocalLow\\\\VRChat\\\\vrchat' },\n+ cache_size: { name: 'Max Cache Size [GB] (minimum 20)', default: '20' },\n+ cache_expiry_delay: { name: 'Cache Expiry [Days] (minimum 30)', default: '30' },\n+ cache_directory: { name: 'Custom Cache Folder Location', default: '%AppData%\\\\..\\\\LocalLow\\\\VRChat\\\\vrchat' },\ndynamic_bone_max_affected_transform_count: { name: 'Dynamic Bones Limit Max Transforms (0 disables all components)', default: '32' },\ndynamic_bone_max_collider_check_count: { name: 'Dynamic Bones Limit Max Collider Collisions (0 disables all components)', default: '8' }\n};\n",
        "date": "08.05.2021 00:19:07",
        "repo": "pypy-vrc/vrcx",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor cache configuration names and descriptions in VRChatConfigList"
    },
    {
        "msg": "rename network start/end time data",
        "diff": "diff --git a/src/browser/telemetry.js b/src/browser/telemetry.js @@ -87,8 +87,8 @@ Instrumenter.prototype.instrumentNetwork = function() {\nmethod: method,\nurl: url,\nstatus_code: null,\n- open_time_ms: _.now(),\n- done_time_ms: null\n+ start_time_ms: null,\n+ end_time_ms: null\n};\n}\nreturn orig.apply(this, arguments);\n@@ -102,9 +102,14 @@ Instrumenter.prototype.instrumentNetwork = function() {\nvar xhr = this;\nfunction onreadystatechangeHandler() {\n- if (xhr.__rollbar_xhr && xhr.readyState === 4) {\n+ // FIXME: This may create two identical events because of JS references\n+ if (xhr.__rollbar_xhr && (xhr.readState === 1 || xhr.readyState === 4)) {\ntry {\n- xhr.__rollbar_xhr.done_time_ms = _.now();\n+ if (xhr.readState === 1) {\n+ xhr.__rollbar_xhr.start_time_ms = _.now();\n+ } else {\n+ xhr.__rollbar_xhr.end_time_ms = _.now();\n+ }\nxhr.__rollbar_xhr.status_code = xhr.status;\n} catch (e) {\n/* ignore possible exception from xhr.status */\n@@ -156,12 +161,12 @@ Instrumenter.prototype.instrumentNetwork = function() {\nmethod: method,\nurl: url,\nstatus_code: null,\n- open_time_ms: _.now(),\n- done_time_ms: null\n+ start_time_ms: _.now(),\n+ end_time_ms: null\n};\nself.telemeter.captureNetwork(metadata, 'fetch');\nreturn orig.apply(this, args).then(function (resp) {\n- metadata.done_time_ms = _.now();\n+ metadata.end_time_ms = _.now();\nmetadata.status_code = resp.status;\nreturn resp;\n});\n",
        "date": "25.07.2017 21:41:07",
        "repo": "rollbar/rollbar.js",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor network instrumentation in telemetry.js"
    },
    {
        "msg": "rename scrub -> scrubFn",
        "diff": "diff --git a/src/browser/transforms.js b/src/browser/transforms.js @@ -309,12 +309,12 @@ function errorClass(stackInfo, guess, options) {\n}\n}\n-function addScrubber(scrub) {\n+function addScrubber(scrubFn) {\nreturn function (item, options, callback) {\n- if (scrub) {\n+ if (scrubFn) {\nvar scrubFields = options.scrubFields || [];\nvar scrubPaths = options.scrubPaths || [];\n- item.data = scrub(item.data, scrubFields, scrubPaths);\n+ item.data = scrubFn(item.data, scrubFields, scrubPaths);\n}\ncallback(null, item);\n}\n",
        "date": "21.07.2020 08:05:15",
        "repo": "rollbar/rollbar.js",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor addScrubber function to accept a scrubFn parameter"
    },
    {
        "msg": "rename BUILD_GH_DEMO to BUILD_DEMO",
        "diff": "diff --git a/package.json b/package.json \"scripts\": {\n\"db\": \"nodemon ./db\",\n\"build\": \"webpack --config webpack_config/webpack.prod.js\",\n- \"build:demo\": \"BUILD_GH_PAGES=true webpack --config webpack_config/webpack.prod.js\",\n- \"jest\": \"jest\",\n- \"test\": \"jest --config=jest_config/jest.config.json --coverage\",\n+ \"build:demo\": \"BUILD_DEMO=true webpack --config webpack_config/webpack.prod.js\",\n+ \"test\": \"jest --config=jest_config/jest.config.json --coverage --forceExit\",\n\"dev\": \"node webpack_config/server.js\",\n\"ssr\": \"nodemon --exec REACT_WEBPACK_ENV='dev' babel-node ./common/server\"\n},\n",
        "date": "14.04.2017 16:53:12",
        "repo": "metnew/suicrux",
        "type": "rename",
        "chatgpt_zeroshot": "Update build:demo and test scripts in package.json"
    },
    {
        "msg": "rename section",
        "diff": "diff --git a/docs/components/forms.md b/docs/components/forms.md @@ -189,7 +189,7 @@ Here are examples of `.form-control` applied to each textual HTML5 `<input>` `ty\n| `time` | <input class=\"form-control\" type=\"time\" value=\"13:45:00\" id=\"example-time-input\"> |\n| `color` | <input class=\"form-control\" type=\"color\" value=\"#563d7c\" id=\"example-color-input\"> |\n-## Form layouts\n+## Layout\nSince Bootstrap applies `display: block` and `width: 100%` to almost all our form controls, forms will by default stack vertically. Additional classes can be used to vary this layout on a per-form basis.\n",
        "date": "27.05.2017 14:38:37",
        "repo": "coreui/coreui",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor form layout section in documentation"
    },
    {
        "msg": "rename variables and remove unneeded return.",
        "diff": "diff --git a/build/saucelabs-unit-test.js b/build/saucelabs-unit-test.js @@ -17,13 +17,12 @@ const jsUnitSaucelabs = new JSUnitSaucelabs({\nconst testURL = 'http://localhost:3000/js/tests/index.html?hidepassed'\nconst browsersFile = require(path.resolve(__dirname, './sauce_browsers.json'))\nlet jobsDone = 0\n-let jobsSuccess = 0\n+let jobsSucceeded = 0\nconst waitingCallback = (error, body, id) => {\nif (error) {\nconsole.error(error)\nprocess.exit(1)\n- return\n}\nif (typeof body !== 'undefined') {\n@@ -55,14 +54,14 @@ const waitingCallback = (error, body, id) => {\n}\nif (passed) {\n- jobsSuccess++\n+ jobsSucceeded++\n}\njobsDone++\n// Exit\nif (jobsDone === browsersFile.length - 1) {\njsUnitSaucelabs.stop()\n- process.exit(jobsDone === jobsSuccess ? 0 : 1)\n+ process.exit(jobsDone === jobsSucceeded ? 0 : 1)\n}\n}\n}\n@@ -70,9 +69,10 @@ const waitingCallback = (error, body, id) => {\njsUnitSaucelabs.on('tunnelCreated', () => {\nbrowsersFile.forEach((tmpBrowser) => {\n- const broPlatform = typeof tmpBrowser.platform === 'undefined' ? tmpBrowser.platformName : tmpBrowser.platform\n- const arrayBro = [broPlatform, tmpBrowser.browserName, tmpBrowser.version]\n- jsUnitSaucelabs.start([arrayBro], testURL, 'qunit', (error, success) => {\n+ const browsersPlatform = typeof tmpBrowser.platform === 'undefined' ? tmpBrowser.platformName : tmpBrowser.platform\n+ const browsersArray = [browsersPlatform, tmpBrowser.browserName, tmpBrowser.version]\n+\n+ jsUnitSaucelabs.start([browsersArray], testURL, 'qunit', (error, success) => {\nif (typeof success !== 'undefined') {\nconst taskIds = success['js tests']\n@@ -91,4 +91,5 @@ jsUnitSaucelabs.on('tunnelCreated', () => {\n})\n})\n})\n+\njsUnitSaucelabs.initTunnel()\n",
        "date": "29.09.2017 19:27:32",
        "repo": "coreui/coreui",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor variable names and fix exit condition in saucelabs-unit-test script"
    },
    {
        "msg": "rename navbar height variables to reflect their value",
        "diff": "diff --git a/scss/_variables.scss b/scss/_variables.scss @@ -530,9 +530,9 @@ $navbar-padding-x: $spacer !default;\n$navbar-brand-font-size: $font-size-lg !default;\n// Compute the navbar-brand padding-y so the navbar-brand will have the same height as navbar-text and nav-link\n-$nav-link-height: $navbar-brand-font-size * $line-height-base !default;\n-$navbar-brand-height: ($font-size-base * $line-height-base + $nav-link-padding-y * 2) !default;\n-$navbar-brand-padding-y: ($navbar-brand-height - $nav-link-height) / 2 !default;\n+$nav-link-height: ($font-size-base * $line-height-base + $nav-link-padding-y * 2) !default;\n+$navbar-brand-height: $navbar-brand-font-size * $line-height-base !default;\n+$navbar-brand-padding-y: ($nav-link-height - $navbar-brand-height) / 2 !default;\n$navbar-toggler-padding-y: .25rem !default;\n$navbar-toggler-padding-x: .75rem !default;\n",
        "date": "18.10.2017 22:51:45",
        "repo": "coreui/coreui",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor navbar brand height and padding calculation in _variables.scss"
    },
    {
        "msg": "rename script.",
        "diff": "diff --git a/package.json b/package.json \"docs-lint-vnu-jar\": \"node build/vnu-jar.js\",\n\"docs-serve\": \"bundle exec jekyll serve\",\n\"docs-workbox-precache\": \"node build/workbox.js\",\n- \"maintenance-dependencies\": \"ncu -a -x jquery && npm update && bundle update && shx echo \\\"Manually update site/docs/4.1/assets/js/vendor/*, js/tests/vendor/* and .travis.yml\\\"\",\n+ \"update-deps\": \"ncu -a -x jquery -x bundlesize && npm update && bundle update && shx echo Manually update \\\"site/docs/4.1/assets/js/vendor/\\\"\",\n\"release-sri\": \"node build/generate-sri.js\",\n\"release-version\": \"node build/change-version.js\",\n\"release-zip\": \"cross-env-shell \\\"shx cp -r dist/ bootstrap-$npm_package_version-dist && zip -r9 bootstrap-$npm_package_version-dist.zip bootstrap-$npm_package_version-dist && shx rm -rf bootstrap-$npm_package_version-dist\\\"\",\n",
        "date": "19.09.2018 09:53:17",
        "repo": "coreui/coreui",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor package.json scripts and update dependencies"
    },
    {
        "msg": "rename dropdown-shadow to dropdown-box-shadow for consistency",
        "diff": "diff --git a/scss/_dropdown.scss b/scss/_dropdown.scss --#{$variable-prefix}dropdown-inner-border: #{$dropdown-inner-border-radius};\n--#{$variable-prefix}dropdown-divider-bg: #{$dropdown-divider-bg};\n--#{$variable-prefix}dropdown-divider-margin-y: #{$dropdown-divider-margin-y};\n- --#{$variable-prefix}dropdown-shadow: #{$dropdown-box-shadow};\n+ --#{$variable-prefix}dropdown-box-shadow: #{$dropdown-box-shadow};\n--#{$variable-prefix}dropdown-link-color: #{$dropdown-link-color};\n--#{$variable-prefix}dropdown-link-hover-color: #{$dropdown-link-hover-color};\n--#{$variable-prefix}dropdown-link-hover-bg: #{$dropdown-link-hover-bg};\nbackground-clip: padding-box;\nborder: var(--#{$variable-prefix}dropdown-border-width) solid var(--#{$variable-prefix}dropdown-border-color);\n@include border-radius(var(--#{$variable-prefix}dropdown-border-radius));\n- @include box-shadow(var(--#{$variable-prefix}dropdown-shadow));\n+ @include box-shadow(var(--#{$variable-prefix}dropdown-box-shadow));\n&[data-bs-popper] {\ntop: 100%;\n--#{$variable-prefix}dropdown-color: #{$dropdown-dark-color};\n--#{$variable-prefix}dropdown-bg: #{$dropdown-dark-bg};\n--#{$variable-prefix}dropdown-border-color: #{$dropdown-dark-border-color};\n- --#{$variable-prefix}dropdown-shadow: #{$dropdown-dark-box-shadow};\n+ --#{$variable-prefix}dropdown-box-shadow: #{$dropdown-dark-box-shadow};\n--#{$variable-prefix}dropdown-link-color: #{$dropdown-dark-link-color};\n--#{$variable-prefix}dropdown-link-hover-color: #{$dropdown-dark-link-hover-color};\n--#{$variable-prefix}dropdown-divider-bg: #{$dropdown-dark-divider-bg};\n",
        "date": "16.02.2022 08:50:50",
        "repo": "coreui/coreui",
        "type": "rename",
        "chatgpt_zeroshot": "Refactor dropdown styles and update box shadow variable names"
    },
    {
        "msg": "allow double click zoom when map is not frozen",
        "diff": "diff --git a/src/components/CenteredMap.js b/src/components/CenteredMap.js @@ -40,7 +40,7 @@ class CenteredMap extends React.PureComponent {\nminZoom={zoom}\ndragging={!frozen}\nscrollWheelZoom={false}\n- doubleClickZoom={false}\n+ doubleClickZoom={!frozen}\nzoomControl={!frozen}\n>\n<TileLayer\n",
        "date": "31.07.2017 22:09:22",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "allow",
        "chatgpt_zeroshot": "Enable double click zoom when map is not frozen"
    },
    {
        "msg": "allow button links",
        "diff": "diff --git a/components/button.js b/components/button.js import React from 'react'\nimport PropTypes from 'prop-types'\n-const Button = ({ children, type, name, onClick, disabled, size }) => (\n- <button type={type} name={name} onClick={onClick} disabled={disabled} className={size}>\n- {children}\n+const Button = ({ children, type, size, href, ...props }) => {\n+ const buttonProps = href ? {} : props\n+\n+ return (\n+ <button type={type} className={size} {...buttonProps}>\n+ {href ? (\n+ <a href={href} {...props}>{children}</a>\n+ ) : children}\n<style jsx>{`\n@import 'colors';\n@@ -19,7 +24,7 @@ const Button = ({ children, type, name, onClick, disabled, size }) => (\ncursor: pointer;\n&:hover {\n- background-color: $highlight-blue;\n+ background-color: darken($blue, 7%);\n}\n&:disabled {\n@@ -29,20 +34,32 @@ const Button = ({ children, type, name, onClick, disabled, size }) => (\n}\n}\n+ a {\n+ display: block;\n+ margin: -6px -8px;\n+ padding: 6px 8px;\n+ color: inherit;\n+ }\n+\n.large {\nfont-size: 1.2em;\npadding: 12px 16px;\n+\n+ a {\n+ display: block;\n+ margin: -12px -16px;\n+ padding: 12px 16px;\n+ }\n}\n`}</style>\n</button>\n)\n+}\nButton.propTypes = {\nchildren: PropTypes.node,\ntype: PropTypes.string,\n- name: PropTypes.string,\n- onClick: PropTypes.func,\n- disabled: PropTypes.bool,\n+ href: PropTypes.string,\nsize: PropTypes.oneOf([\n'large'\n])\n@@ -50,7 +67,7 @@ Button.propTypes = {\nButton.defaultProps = {\ntype: 'button',\n- disabled: false\n+ href: null\n}\nexport default Button\n",
        "date": "22.11.2017 15:16:50",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor Button component to allow for rendering as a link with href prop."
    },
    {
        "msg": "allow subtitles to box component",
        "diff": "diff --git a/components/box.js b/components/box.js import React from 'react'\nimport PropTypes from 'prop-types'\n-const Box = ({ children, title, color }) => (\n+const Box = ({ children, title, subtitle, color }) => (\n<div className='wrapper'>\n- {title && <h3 className={color}>{title}</h3>}\n+ {(title || subtitle) && (\n+ <div className={`header ${color}`}>\n+ {title && <h3>{title}</h3>}\n+ {subtitle && <div className='subtitle'>{subtitle}</div>}\n+ </div>\n+ )}\n<div className='inner'>\n{children}\n</div>\n@@ -19,16 +24,23 @@ const Box = ({ children, title, color }) => (\noverflow: hidden;\n}\n+ .header {\n+ padding: 0.6em 0.75em 0.55em;\n+ }\n+\nh3 {\nfont-size: 1.1em;\nmargin: 0;\n- padding: 0.6em 0.75em 0.55em;\nmax-width: 100%;\noverflow: hidden;\ntext-overflow: ellipsis;\nfont-weight: normal;\n}\n+ .subtitle {\n+ font-size: 0.9em;\n+ }\n+\n.inner {\npadding: 1.5em 1.7em;\n@@ -41,11 +53,19 @@ const Box = ({ children, title, color }) => (\n.grey {\nbackground-color: $lightgrey;\n+\n+ .subtitle {\n+ color: $grey;\n+ }\n}\n.blue {\nbackground-color: $blue;\ncolor: $white;\n+\n+ .subtitle {\n+ color: lighten($blue, 35%);\n+ }\n}\n`}</style>\n</div>\n@@ -54,6 +74,7 @@ const Box = ({ children, title, color }) => (\nBox.propTypes = {\nchildren: PropTypes.node,\ntitle: PropTypes.string,\n+ subtitle: PropTypes.string,\ncolor: PropTypes.oneOf([\n'grey',\n'blue'\n",
        "date": "07.12.2017 14:31:33",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "allow",
        "chatgpt_zeroshot": "Add subtitle support to Box component"
    },
    {
        "msg": "allow queue to be modified when player is off",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/queue-page.js b/MaterialSkin/HTML/material/html/js/queue-page.js @@ -83,10 +83,10 @@ var lmsQueue = Vue.component(\"LmsQueue\", {\n</v-dialog>\n<v-snackbar v-model=\"snackbar.show\" :multi-line=\"true\" :timeout=\"2500\" :color=\"snackbar.color\" top>{{ snackbar.msg }}</v-snackbar>\n<v-card class=\"subtoolbar pq-details\">\n- <v-layout v-if=\"playerIsOn\">\n+ <v-layout>\n<v-flex class=\"pq-text\" v-if=\"trackCount>0\">{{trackCount | displayCount}} {{duration | displayTime(true)}}</v-flex>\n<v-spacer></v-spacer>\n- <v-btn flat icon @click.stop=\"scrollToCurrent()\" class=\"toolbar-button\"><v-icon>queue_music</v-icon></v-btn>\n+ <v-btn flat icon v-if=\"playerIsOn\" @click.stop=\"scrollToCurrent()\" class=\"toolbar-button\"><v-icon>queue_music</v-icon></v-btn>\n<v-btn flat icon @click.stop=\"save()\" class=\"toolbar-button\"><v-icon>save</v-icon></v-btn>\n<v-btn flat icon @click.stop=\"clear()\" class=\"toolbar-button\"><v-icon>clear_all</v-icon></v-btn>\n</v-layout>\n@@ -108,7 +108,7 @@ var lmsQueue = Vue.component(\"LmsQueue\", {\n<v-list-tile-sub-title>{{item.subtitle}}</v-list-tile-sub-title>\n</v-list-tile-content>\n<v-list-tile-action v-if=\"item.duration>0\" class=\"pq-time\">{{item.duration | displayTime}}</v-list-tile-action>\n- <v-list-tile-action v-if=\"playerIsOn && item.actions && item.actions.length>1\" @click.stop=\"itemMenu(item, index, $event)\">\n+ <v-list-tile-action v-if=\"item.actions && item.actions.length>0\" @click.stop=\"itemMenu(item, index, $event)\">\n<v-btn icon>\n<v-icon>more_vert</v-icon>\n</v-btn>\n",
        "date": "30.10.2018 22:42:24",
        "repo": "cdrummond/lms-material",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor queue-page.js to improve code readability and remove unnecessary conditionals."
    },
    {
        "msg": "allow play.pause even if player is off - as per now playing page",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/toolbar.js b/MaterialSkin/HTML/material/html/js/toolbar.js @@ -58,10 +58,10 @@ Vue.component('lms-toolbar', {\n<v-btn icon :title=\"trans.info\" v-if=\"!desktop && infoPlugin && !infoOpen && $route.path=='/nowplaying'\" @click.native=\"bus.$emit('info')\" class=\"toolbar-button\">\n<v-icon>info</v-icon>\n</v-btn>\n- <v-btn icon v-else-if=\"!desktop && playerStatus.ison && playerStatus.isplaying\" @click.native=\"doAction(['pause', '1'])\" class=\"toolbar-button\">\n+ <v-btn icon v-else-if=\"!desktop && playerStatus.isplaying\" @click.native=\"doAction(['pause', '1'])\" class=\"toolbar-button\">\n<v-icon>pause_circle_outline</v-icon>\n</v-btn>\n- <v-btn icon v-else-if=\"!desktop && playerStatus.ison\" @click.native=\"doAction(['play'])\" class=\"toolbar-button\">\n+ <v-btn icon v-else-if=\"!desktop\" @click.native=\"doAction(['play'])\" class=\"toolbar-button\">\n<v-icon>play_circle_outline</v-icon>\n</v-btn>\n<v-btn v-if=\"desktop && playerStatus.ison\" icon flat class=\"toolbar-button\" @click=\"volumeDown\"><v-icon>volume_down</v-icon></v-btn>\n",
        "date": "22.12.2018 16:41:49",
        "repo": "cdrummond/lms-material",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor toolbar.js to simplify player status conditions"
    },
    {
        "msg": "allow player name to be specified in URL Issue",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/store.js b/MaterialSkin/HTML/material/html/js/store.js @@ -145,7 +145,7 @@ const store = new Vuex.Store({\nvar config = getLocalStorageVal('player');\nif (config) {\nstate.players.forEach(p => {\n- if (p.id === config) {\n+ if (p.id === config || p.name == config) {\nstate.player = p;\n}\n});\n",
        "date": "30.12.2018 19:38:43",
        "repo": "cdrummond/lms-material",
        "type": "allow",
        "chatgpt_zeroshot": "Update store.js to allow player selection by name as well as ID"
    },
    {
        "msg": "allow slightly large now-playing image",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/css/mobile.css b/MaterialSkin/HTML/material/html/css/mobile.css .np-image {\ndisplay: block;\nobject-fit: contain;\n- height:calc((var(--vh, 1vh)*100) - (var(--main-toolbar-height) + var(--bottom-nav-height) - 24px));\n+ height:calc((var(--vh, 1vh)*100) - (var(--main-toolbar-height) + var(--bottom-nav-height) - 32px));\nwidth:calc(100vw - 16px);\nmargin-left: auto;\nmargin-right: auto;\n",
        "date": "20.01.2019 10:13:11",
        "repo": "cdrummond/lms-material",
        "type": "allow",
        "chatgpt_zeroshot": "Adjust height calculation in mobile.css for better spacing."
    },
    {
        "msg": "allow some actions even when there is no player",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-page.js b/MaterialSkin/HTML/material/html/js/browse-page.js @@ -959,20 +959,35 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\n}\n},\nitemAction(act, item, index, suppressNotification) {\n- if (!this.playerId()) {\n- bus.$emit('showError', undefined, i18n(\"No Player\"));\n- return;\n+ if (act==SEARCH_LIB_ACTION) {\n+ this.dialog = { show:true, title:i18n(\"Search library\"), ok: i18n(\"Search\"), cancel:undefined,\n+ command:[\"search\"], params:[\"tags:jlyAdt\", \"extended:1\", \"term:\"+TERM_PLACEHOLDER], item:{title:i18n(\"Search\"), id:TOP_SEARCH_ID}};\n+ } else if (act===MORE_ACTION) {\n+ this.fetchItems(this.buildCommand(item, B_ACTIONS[act].cmd), item);\n+ } else if (act===MORE_LIB_ACTION) {\n+ if (item.id) {\n+ if (item.id.startsWith(\"artist_id:\")) {\n+ this.fetchItems({command: [\"artistinfo\", \"items\"], params: [\"menu:1\", item.id, \"html:1\"]}, item);\n+ } else if (item.id.startsWith(\"album_id:\")) {\n+ this.fetchItems({command: [\"albuminfo\", \"items\"], params: [\"menu:1\", item.id, \"html:1\"]}, item);\n+ } else if (item.id.startsWith(\"track_id:\")) {\n+ this.fetchItems({command: [\"trackinfo\", \"items\"], params: [\"menu:1\", item.id, \"html:1\"]}, item);\n+ } else if (item.id.startsWith(\"genre_id:\")) {\n+ this.fetchItems({command: [\"genreinfo\", \"items\"], params: [\"menu:1\", item.id, \"html:1\"]}, item);\n}\n-\n- if (act===RENAME_PL_ACTION) {\n+ }\n+ } else if (act===PIN_ACTION) {\n+ this.pin(item, true);\n+ } else if (act===UNPIN_ACTION) {\n+ this.pin(item, false);\n+ } else if (!this.playerId()) { // *************** NO PLAYER ***************\n+ bus.$emit('showError', undefined, i18n(\"No Player\"));\n+ } else if (act===RENAME_PL_ACTION) {\nthis.dialog = { show:true, title:i18n(\"Rename playlist\"), hint:item.value, value:item.title, ok: i18n(\"Rename\"), cancel:undefined,\ncommand:[\"playlists\", \"rename\", item.id, \"newname:\"+TERM_PLACEHOLDER]};\n} else if (act==RENAME_FAV_ACTION) {\nthis.dialog = { show:true, title:i18n(\"Rename favorite\"), hint:item.value, value:item.title, ok: i18n(\"Rename\"), cancel:undefined,\ncommand:[\"favorites\", \"rename\", item.id, \"title:\"+TERM_PLACEHOLDER]};\n- } else if (act==SEARCH_LIB_ACTION) {\n- this.dialog = { show:true, title:i18n(\"Search library\"), ok: i18n(\"Search\"), cancel:undefined,\n- command:[\"search\"], params:[\"tags:jlyAdt\", \"extended:1\", \"term:\"+TERM_PLACEHOLDER], item:{title:i18n(\"Search\"), id:TOP_SEARCH_ID}};\n} else if (act==ADD_FAV_ACTION) {\nbus.$emit('dlg.open', 'favorite', 'add');\n} else if (act==EDIT_FAV_ACTION) {\n@@ -1074,24 +1089,6 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\n}).catch(err => {\nlogAndShowError(err, undefined, [\"albums\"], params, 0, 1);\n});\n- } else if (act===MORE_ACTION) {\n- this.fetchItems(this.buildCommand(item, B_ACTIONS[act].cmd), item);\n- } else if (act===MORE_LIB_ACTION) {\n- if (item.id) {\n- if (item.id.startsWith(\"artist_id:\")) {\n- this.fetchItems({command: [\"artistinfo\", \"items\"], params: [\"menu:1\", item.id, \"html:1\"]}, item);\n- } else if (item.id.startsWith(\"album_id:\")) {\n- this.fetchItems({command: [\"albuminfo\", \"items\"], params: [\"menu:1\", item.id, \"html:1\"]}, item);\n- } else if (item.id.startsWith(\"track_id:\")) {\n- this.fetchItems({command: [\"trackinfo\", \"items\"], params: [\"menu:1\", item.id, \"html:1\"]}, item);\n- } else if (item.id.startsWith(\"genre_id:\")) {\n- this.fetchItems({command: [\"genreinfo\", \"items\"], params: [\"menu:1\", item.id, \"html:1\"]}, item);\n- }\n- }\n- } else if (act===PIN_ACTION) {\n- this.pin(item, true);\n- } else if (act===UNPIN_ACTION) {\n- this.pin(item, false);\n} else if (SELECT_ACTION===act) {\nvar idx=this.selection.indexOf(index);\nif (idx<0) {\n",
        "date": "19.05.2019 07:19:35",
        "repo": "cdrummond/lms-material",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor itemAction method in browse-page.js"
    },
    {
        "msg": "allow headers to span more than 1 line",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/css/classic-skin-mods.css b/MaterialSkin/HTML/material/html/css/classic-skin-mods.css @@ -124,7 +124,8 @@ select option[value=INTERFACE_SETTINGS] {\n.homeMenuSection div, .settingSection .groupHead, .settingSection .prefHead {\nbackground-color: transparent;\n- height: 15px;\n+ min-height: 15px;\n+ height: auto !important;\npadding: 8px 6px 4px 0px;\nfont-weight: bold;\n}\n",
        "date": "04.10.2019 16:48:58",
        "repo": "cdrummond/lms-material",
        "type": "allow",
        "chatgpt_zeroshot": "Adjust height property for select options and menu sections in classic skin."
    },
    {
        "msg": "allow volume control, etc, when info shown",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/server.js b/MaterialSkin/HTML/material/html/js/server.js @@ -761,7 +761,7 @@ var lmsServer = Vue.component('lms-server', {\nbindKey('left');\nbindKey('right');\nbus.$on('keyboard', function(key) {\n- if (!this.$store.state.keyboardControl || this.$store.state.visibleMenus.size>0 || this.$store.state.openDialogs.length>0 || !this.$store.state.player) {\n+ if (!this.$store.state.keyboardControl || !this.$store.state.player || this.$store.state.visibleMenus.size>0 || (this.$store.state.openDialogs.length>0 && this.$store.state.openDialogs[0]!='info-dialog')) {\nreturn;\n}\nvar command = undefined;\n",
        "date": "10.10.2019 15:54:48",
        "repo": "cdrummond/lms-material",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor keyboard event handling in server.js"
    },
    {
        "msg": "allow cometd logging with no mesasge",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/utils.js b/MaterialSkin/HTML/material/html/js/utils.js @@ -19,7 +19,7 @@ function logJsonMessage(type, msg) {\nfunction logCometdMessage(type, msg) {\nif (debug && (debug.has(\"cometd\") || debug.has(\"true\"))) {\n- console.log(\"[\" + new Date().toLocaleTimeString()+\"] COMETED \"+type+\": \"+JSON.stringify(msg));\n+ console.log(\"[\" + new Date().toLocaleTimeString()+\"] COMETED \"+type+(msg ? (\": \"+JSON.stringify(msg)) : \"\"));\n}\n}\n",
        "date": "11.10.2019 12:03:07",
        "repo": "cdrummond/lms-material",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor logCometdMessage function to handle empty messages"
    },
    {
        "msg": "allow mini even if only 1 player",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/toolbar.js b/MaterialSkin/HTML/material/html/js/toolbar.js @@ -39,7 +39,7 @@ Vue.component('lms-toolbar', {\n</v-list-tile-content>\n<v-list-tile-action v-if=\"index<10 && keyboardControl\" class=\"menu-shortcut\" v-bind:class=\"{'menu-shortcut-player':item.canpoweroff}\">{{index|playerShortcut}}</v-list-tile-action>\n<v-list-tile-action>\n- <v-layout v-if=\"!IS_MOBILE && desktopLayout && players.length>1\">\n+ <v-layout v-if=\"!IS_MOBILE && desktopLayout\">\n<v-flex xs6 style=\"margin-left:6px\">\n<v-btn icon class=\"hide-for-mini\" small :title=\"trans.openmini\" @click.stop=\"openMiniPlayer(item)\"><v-icon small>open_in_new</v-icon></v-btn>\n</v-flex>\n",
        "date": "15.02.2020 09:48:16",
        "repo": "cdrummond/lms-material",
        "type": "allow",
        "chatgpt_zeroshot": "Remove unnecessary condition for displaying mini player button in toolbar."
    },
    {
        "msg": "allow chips to be removed",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/randommix-dialog.js b/MaterialSkin/HTML/material/html/js/randommix-dialog.js @@ -20,7 +20,7 @@ Vue.component('lms-randommix', {\n</v-list-tile>\n<v-divider slot=\"prepend-item\"></v-divider>\n<template v-slot:selection=\"{ item, index }\">\n- <v-chip v-if=\"(index < 5) || chosenGenres.length==6\">\n+ <v-chip v-if=\"(index < 5) || chosenGenres.length==6\" close @input=\"chosenGenres.splice(index, 1)\">\n<span>{{ item }}</span>\n</v-chip>\n<span v-if=\"index == 5 && chosenGenres.length>6\" class=\"subtext\">{{i18n(\"(+%1 others)\", chosenGenres.length - 5) }}</span>\n",
        "date": "13.08.2020 12:29:09",
        "repo": "cdrummond/lms-material",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor randommix-dialog.js to allow removing selected genres."
    },
    {
        "msg": "allow plugin images to be mapped to Material library images by convention",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/icon-mapping.js b/MaterialSkin/HTML/material/html/js/icon-mapping.js @@ -101,6 +101,16 @@ function mapIconType(item, app, type) {\nif (undefined==lmsIcon || (typeof lmsIcon !== 'string')) {\nreturn false;\n}\n+ if (lmsIcon.includes(\"MTL_icon_\")) {\n+ item.image=item.svg=undefined;\n+ item.icon=lmsIcon.split(\"MTL_icon_\").pop().split(\"_MTL_end\")[0];\n+ return true;\n+ }\n+ if (lmsIcon.includes(\"MTL_svg_\")) {\n+ item.image=item.icon=undefined;\n+ item.svg=lmsIcon.split(\"MTL_svg_\").pop().split(\"_MTL_end\")[0];\n+ return true;\n+ }\nfor (const [key, value] of Object.entries(iconMap[\"endsWith\"])) {\nif (lmsIcon.endsWith(key) || (lmsIcon.indexOf('imageproxy')>0 && lmsIcon.endsWith(key.substring(1)+\"/image.png\"))) {\nlet entry = undefined!=app && undefined!=value[app] ? value[app] : value;\n",
        "date": "29.01.2021 17:03:57",
        "repo": "cdrummond/lms-material",
        "type": "allow",
        "chatgpt_zeroshot": "Add support for mapping icons with prefix \"MTL_icon_\" and \"MTL_svg_\" in icon-mapping.js"
    },
    {
        "msg": "allow sub-titles in dialogs to span multiple lines",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/css/style.css b/MaterialSkin/HTML/material/html/css/style.css @@ -1309,10 +1309,13 @@ progress {\nmargin-top:8px;\nmargin-bottom:8px;\nmin-height:58px;\n- max-height:232px;\nheight:auto;\n}\n+.v-dialog .v-list__tile__sub-title {\n+ white-space:normal; /* Allow sub-titles in dialogs to span multiple lines */\n+}\n+\n.v-tabs__slider-wrapper .accent {\nbackground-color: var(--active-color) !important;\nborder-color: var(--active-color) !important;\n",
        "date": "23.02.2021 18:23:02",
        "repo": "cdrummond/lms-material",
        "type": "allow",
        "chatgpt_zeroshot": "Allow sub-titles in dialogs to span multiple lines and adjust progress bar height in style.css"
    },
    {
        "msg": "allow plugins to list results",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-page.js b/MaterialSkin/HTML/material/html/js/browse-page.js @@ -498,6 +498,9 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\nthis.tbarActions.unshift(SAVE_VLIB_ACTION);\n}\n}.bind(this));\n+ bus.$on('pluginListResponse', function(item, command, resp) {\n+ this.handleListResponse(item, command, resp);\n+ }.bind(this));\n},\nmethods: {\ninitItems() {\n",
        "date": "23.01.2022 17:31:22",
        "repo": "cdrummond/lms-material",
        "type": "allow",
        "chatgpt_zeroshot": "Add event listener for plugin list response in browse-page.js"
    },
    {
        "msg": "allow more test versions",
        "diff": "diff --git a/mkrel.py b/mkrel.py @@ -447,7 +447,7 @@ def updateRepoXml(repoFile, version, zipFile, sha1, pluginName=None):\nif 1==len(sys.argv):\nusage()\nversion=sys.argv[1]\n-if version!=\"test\" and (len(sys.argv)<3 or \"--nocheck\" != sys.argv[2]):\n+if (not version.startswith(\"test\")) and (len(sys.argv)<3 or \"--nocheck\" != sys.argv[2]):\ncheckVersion(version)\ncheckVersionExists(version)\nprepare()\n",
        "date": "01.07.2022 12:38:35",
        "repo": "cdrummond/lms-material",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor version check logic in updateRepoXml function"
    },
    {
        "msg": "allow autocomplete selection to work when two items have same value",
        "diff": "diff --git a/js/autocomplete.js b/js/autocomplete.js }\n// Default Autocomplete Result Item Template\n- var resultTemplate = '<li id=\"{{listItemId}}\" {{#hasValue}}data-value=\"{{value}}\"{{/hasValue}} role=\"listitem\">' + '\\n\\n' +\n+ var resultTemplate = '<li id=\"{{listItemId}}\" data-index=\"{{index}}\" {{#hasValue}}data-value=\"{{value}}\"{{/hasValue}} role=\"listitem\">' + '\\n\\n' +\n'<a href=\"#\" tabindex=\"-1\">' + '\\n\\n' +\n'<span>{{{label}}}</span>' + '\\n\\n' +\n'</a>' + '\\n\\n' +\n// Build the dataset that will be submitted to the template\ndataset.listItemId = 'ac-list-option' + i;\n+ dataset.index = i;\nif (this.settings.filterMode === 'contains') {\ndataset.label = dataset.label.replace(new RegExp('(' + term + ')', 'ig'), '<i>$1</i>');\n} else {\nvar listItem = $('<li role=\"listitem\"></li>');\nlistItem.attr('id', dataset.listItemId);\n+ listItem.attr('data-index', dataset.index);\nlistItem.attr('data-value', dataset.value);\nlistItem.append('<a href=\"#\" tabindex=\"-1\"><span>' + dataset.label + '</span></a>');\nself.list.append($.sanitizeHTML(listItem));\n},\nselect: function(anchorOrEvent, items) {\n- var a, li, ret, dataValue,\n+ var a, li, ret, dataIndex, dataValue,\nisEvent = false;\n// Initial Values\nli = a.parent('li');\nret = a.text().trim();\n+ dataIndex = li.attr('data-index');\ndataValue = li.attr('data-value');\nthis.element.attr('aria-activedescendant', li.attr('id'));\n- if (items && items.length && dataValue) {\n+ if (items && items.length) {\n+ // If the data-index attr is supplied, use it to get the item (since two items could have same value)\n+ if (dataIndex) {\n+ ret = items[parseInt(dataIndex, 10)];\n+ } else if (dataValue) {\n+ // Otherwise use data-value to get the item (a custom template may not supply data-index)\nfor (var i = 0, value; i < items.length; i++) {\nvalue = items[i].value.toString();\nif (value === dataValue) {\n}\n}\n}\n+ }\nthis.closeList();\nthis.highlight(a);\n",
        "date": "23.03.2017 11:26:46",
        "repo": "infor-design/enterprise",
        "type": "allow",
        "chatgpt_zeroshot": "Add data-index attribute to autocomplete result items and use it to retrieve selected item."
    },
    {
        "msg": "allow null values for does-not-contain and does-not-equal",
        "diff": "diff --git a/js/datagrid.js b/js/datagrid.js @@ -2077,7 +2077,6 @@ $.fn.datagrid = function(options) {\nvar checkRow = function (rowData) {\nvar isMatch = true;\n-\nfor (var i = 0; i < conditions.length; i++) {\nvar columnDef = self.columnById(conditions[i].columnId)[0],\nfield = columnDef.field,\n@@ -2141,13 +2140,13 @@ $.fn.datagrid = function(options) {\nbreak;\ncase 'does-not-equal':\n- isMatch = (rowValue !== conditionValue && rowValue !== '');\n+ isMatch = (rowValue !== conditionValue);\nbreak;\ncase 'contains':\nisMatch = (rowValueStr.indexOf(conditionValue) > -1 && rowValue.toString() !== '');\nbreak;\ncase 'does-not-contain':\n- isMatch = (rowValueStr.indexOf(conditionValue) === -1 && rowValue.toString() !== '');\n+ isMatch = (rowValueStr.indexOf(conditionValue) === -1);\nbreak;\ncase 'end-with':\nisMatch = (rowValueStr.lastIndexOf(conditionValue) === (rowValueStr.length - conditionValue.toString().length) && rowValueStr !== '' && (rowValueStr.length >= conditionValue.toString().length));\n",
        "date": "17.05.2017 13:29:08",
        "repo": "infor-design/enterprise",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor row matching logic in datagrid.js"
    },
    {
        "msg": "allow modal to return focus to more types of elements after closing",
        "diff": "diff --git a/js/modal.js b/js/modal.js //Fire Events\nself.element.trigger('close', self.isCancelled);\n- if (this.oldActive && $(this.oldActive).is('button:visible')) {\n+ // Restore focus\n+ if (this.oldActive && $(this.oldActive).is('a:visible, button:visible, input:visible, textarea:visible')) {\nthis.oldActive.focus();\nthis.oldActive = null;\n} else if (this.trigger.parents('.toolbar, .formatter-toolbar').length < 1) {\n",
        "date": "13.07.2017 15:16:52",
        "repo": "infor-design/enterprise",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor focus restoration logic in modal.js"
    },
    {
        "msg": "allow callOnBeforeSelect on last step",
        "diff": "diff --git a/src/patterns/stepprocess/stepprocess.js b/src/patterns/stepprocess/stepprocess.js @@ -19,6 +19,7 @@ const STEPPROCESS_DEFAULTS = {\nstepFolder: '.js-step-folder',\nbtnPrev: '.js-step-link-prev',\nbtnNext: '.js-step-link-next',\n+ btnSaveClose: '.js-btn-save-changes',\nbeforeSelectStep: null,\n};\n@@ -385,9 +386,13 @@ Stepprocess.prototype = {\n* @returns {void}\n*/\ngoToNextStep() {\n- const stepLink = this.getNextStep();\n+ const self = this;\n+ const stepLink = self.getNextStep();\nif (stepLink.length) {\n- this.selectStep(stepLink, 'next');\n+ self.selectStep(stepLink, 'next');\n+ } else if (typeof self.settings.beforeSelectStep === 'function') {\n+ const args = { isStepping: 'next' };\n+ self.settings.beforeSelectStep(args);\n}\n},\n",
        "date": "29.05.2018 10:59:22",
        "repo": "infor-design/enterprise",
        "type": "allow",
        "chatgpt_zeroshot": "Add btnSaveClose button and update goToNextStep method to handle beforeSelectStep callback."
    },
    {
        "msg": "allow theme options to be passed to `/api` route error pages",
        "diff": "diff --git a/app/src/js/middleware/option-handler-themes.js b/app/src/js/middleware/option-handler-themes.js @@ -10,12 +10,16 @@ const URL = require('url');\nmodule.exports = function (app) {\nreturn function optionHandler(req, res, next) {\n- if (!req.url.includes('api/')) {\n+ // NOTE: Ignore theming if the client doesn't accept HTML\n+ if (req.url.includes('api/') && !req.accepts('html')) {\n+ next();\n+ return;\n+ }\n/**\n* Set the theme, theme variant, icons, and colorScheme\n* Example: http://localhost:4000/controls/modal?theme=soho&variant=dark\n-\n+ * ====================================================================================\n* Note: We have a prop called \"isSohoUseLegacyNaming\" becasue we can't rename the\n* original soho css files and our templating system (hogan/mustache) doesn't do logic.\n*/\n@@ -50,7 +54,6 @@ module.exports = function (app) {\nconst theUrl = URL.format({ query: q });\nlogger('info', `Redirecting legacy query string params to \"${theUrl}\"`);\nreturn res.redirect(theUrl);\n-\n} else {\n// Set the theme\nres.opts.theme.name = req.query.theme.toLowerCase();\n@@ -63,11 +66,10 @@ module.exports = function (app) {\n}\nlogger('info', `Setting theme to \"theme-${res.opts.theme.name}-${res.opts.theme.variant}\"`);\n- const svgHtmlPartial = fs.readFileSync(`${iconsPath}/theme-${res.opts.theme.name}-svg.html`).toString()\n+ const svgHtmlPartial = fs.readFileSync(`${iconsPath}/theme-${res.opts.theme.name}-svg.html`).toString();\n// Set icons to the partials in hopes its cached\napp.locals.partials = { svgIcons: svgHtmlPartial };\nlogger('info', `Setting icons to \"theme-${res.opts.theme.name}-svg.html\"`);\n- }\nnext();\n};\n",
        "date": "12.06.2019 13:57:06",
        "repo": "infor-design/enterprise",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor theme handling middleware to ignore non-HTML requests and improve code readability"
    },
    {
        "msg": "allow focus-state on parent 'div' or 'img' tag. Add initial-state transparent border on 'img' tag to prevent jump.",
        "diff": "diff --git a/src/components/images/_images.scss b/src/components/images/_images.scss @@ -26,6 +26,12 @@ $images-size: (\n@each $key, $value in $images-size {\n.image-#{$key} {\n+ border: 1px solid transparent; // to prevent jump on focus\n+\n+ &:focus {\n+ @include focus-state();\n+ }\n+\nimg {\nborder: 1px solid transparent; // to prevent jump on focus\nmax-height: nth($value, 2);\n@@ -43,7 +49,14 @@ $images-size: (\n}\n.image-auto {\n+ border: 1px solid transparent; // to prevent jump on focus\n+\n+ &:focus {\n+ @include focus-state();\n+ }\n+\nimg {\n+ border: 1px solid transparent; // to prevent jump on focus\n&:focus {\n@include focus-state();\n}\n",
        "date": "27.06.2019 11:04:56",
        "repo": "infor-design/enterprise",
        "type": "allow",
        "chatgpt_zeroshot": "Add focus state styling to image components"
    },
    {
        "msg": "allow theme switcher to work when implemented in a Flex Toolbar",
        "diff": "diff --git a/src/components/header/header.js b/src/components/header/header.js @@ -528,6 +528,13 @@ Header.prototype = {\n}\nthis.changer.on('selected.header', (e, link) => {\n+ e.preventDefault();\n+\n+ // handle `ToolbarFlexItem` types\n+ if (link !== undefined && !(link instanceof $) && link.element instanceof HTMLElement) {\n+ link = $(link.element);\n+ }\n+\n// Change Theme with Variant\nconst themeNameAttr = link.attr('data-theme-name');\nconst themeVariantAttr = link.attr('data-theme-variant');\n",
        "date": "24.02.2020 10:37:43",
        "repo": "infor-design/enterprise",
        "type": "allow",
        "chatgpt_zeroshot": "Prevent default action and handle `ToolbarFlexItem` types in header.js"
    },
    {
        "msg": "allow chrome 90",
        "diff": "diff --git a/package.json b/package.json \"e2e:local:bs\": \"npm run webdriver:update && npx protractor test/protractor.local.bs.conf.js\",\n\"e2e:local:debug\": \"npm run webdriver:update && npx protractor test/protractor.local.debug.conf.js\",\n\"webdriver:clean\": \"npx webdriver-manager clean\",\n- \"webdriver:update\": \"npx webdriver-manager update --versions.chrome 89.0.4389.128 --standalone false --quiet --gecko=false\",\n+ \"webdriver:update\": \"npx webdriver-manager update --standalone false --quiet --gecko=false\",\n\"zip-dist\": \"npx grunt zip-dist\",\n\"documentation\": \"node ./scripts/deploy-documentation.js\",\n\"release:dev\": \"node scripts/publish-nightly-manual\",\n",
        "date": "19.04.2021 11:32:29",
        "repo": "infor-design/enterprise",
        "type": "allow",
        "chatgpt_zeroshot": "Remove specific Chrome version from webdriver update command"
    },
    {
        "msg": "allow long node text to wrap to lines.",
        "diff": "diff --git a/src/components/tree/_tree.scss b/src/components/tree/_tree.scss line-height: 28px;\npadding: 6px 5px 3px;\ntext-decoration: none;\n- white-space: nowrap;\n//Badge in the tree items\n.tree-badge {\nul {\ndisplay: none;\nleft: 13px;\n+ width: calc(100% - 13px);\noverflow: hidden;\nposition: relative;\ntop: -7px;\nul {\nleft: 15px;\n+ width: calc(100% - 15px);\n}\nli:first-child {\n.sidebar .tree {\nmin-width: 200px;\npadding: 20px;\n-\n- a {\n- white-space: normal;\n- }\n}\n//IE\n",
        "date": "12.08.2021 13:32:05",
        "repo": "infor-design/enterprise",
        "type": "allow",
        "chatgpt_zeroshot": "Update tree item badge styling and remove unnecessary white-space styling."
    },
    {
        "msg": "allow commitCellEditBefore for a Editors.Fileupload",
        "diff": "diff --git a/docs/CHANGELOG.md b/docs/CHANGELOG.md ## v4.68.0 Fixes\n- `[Datagrid]` Fixed alignment issues in trigger fields. ([#6678](https://github.com/infor-design/enterprise/issues/6678))\n+- `[Datagrid]` Allow beforeCommitCellEdit event to be sent for Editors.Fileupload. ([#6821](https://github.com/infor-design/enterprise/issues/6821))\n## v4.67.0\n",
        "date": "14.09.2022 15:07:36",
        "repo": "infor-design/enterprise",
        "type": "allow",
        "chatgpt_zeroshot": "Fix alignment issues in trigger fields and allow beforeCommitCellEdit event for Editors.Fileupload in Datagrid."
    },
    {
        "msg": "allow all host names",
        "diff": "diff --git a/examples/server/settings.py b/examples/server/settings.py @@ -8,6 +8,8 @@ DEBUG = True\nPROJECT_DIR = os.path.dirname(__file__)\nBASE_DIR = os.path.abspath(os.path.join(PROJECT_DIR, os.pardir, os.pardir))\n+ALLOWED_HOSTS = ['*']\n+\nDATABASES = {\n'default': {\n'ENGINE': 'django.db.backends.sqlite3',\n",
        "date": "14.08.2017 13:25:18",
        "repo": "jrief/django-angular",
        "type": "allow",
        "chatgpt_zeroshot": "Add ALLOWED_HOSTS to settings.py"
    },
    {
        "msg": "allow directive djngEndpoint inside djngFormsSet",
        "diff": "diff --git a/client/src/js/djng-forms.js b/client/src/js/djng-forms.js @@ -510,28 +510,29 @@ djngModule.directive('ngModel', ['djangoForm', function(djangoForm) {\nrestrict: 'A',\nrequire: ['^?djngFormsSet', '^?form', '^?djngEndpoint'],\nlink: function(scope, element, attrs, controllers) {\n- var formController, digestUploadScope, scopePrefix;\n+ var formController = controllers[1], digestUploadScope, scopePrefix;\n+ if (!formController)\n+ return; // outside of neither <djng-forms-set /> nor <form djng-endpoint=\"...\" />\n+\n+ scopePrefix = djangoForm.getScopePrefix(attrs.ngModel);\nif (controllers[0]) {\n// inside <djng-forms-set>...</djng-forms-set>\n- formController = controllers[1];\n- digestUploadScope = controllers[0].digestUploadScope;\n- } else if (controllers[2]) {\n+ digestUploadScope(controllers[0]);\n+ }\n+ if (controllers[2]) {\n// inside <form djng-endpoint=\"...\">...</form>\n- formController = controllers[1];\n- digestUploadScope = controllers[2].digestUploadScope;\n+ digestUploadScope(controllers[2]);\n}\n- if (!formController)\n- return; // outside of neither <djng-forms-set /> nor <form djng-endpoint=\"...\" />\n- if (!angular.isArray(digestUploadScope[formController.$name])) {\n- digestUploadScope[formController.$name] = [];\n+ function digestUploadScope(controller) {\n+ if (!angular.isArray(controller.digestUploadScope[formController.$name])) {\n+ controller.digestUploadScope[formController.$name] = [];\n+ }\n+ if (scopePrefix && controller.digestUploadScope[formController.$name].indexOf(scopePrefix) === -1) {\n+ controller.digestUploadScope[formController.$name].push(scopePrefix);\n}\n- scopePrefix = djangoForm.getScopePrefix(attrs.ngModel);\n- if (scopePrefix && digestUploadScope[formController.$name].indexOf(scopePrefix) === -1) {\n- digestUploadScope[formController.$name].push(scopePrefix);\n}\n-\n}\n};\n}]);\n",
        "date": "04.10.2017 18:41:36",
        "repo": "jrief/django-angular",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor ngModel directive to improve code readability and efficiency"
    },
    {
        "msg": "allow \"module\" environment key in export maps Webpack is pushing folks to use it, and it aligns reasonably with our needs.",
        "diff": "diff --git a/src/plugins/npm-plugin/resolve.js b/src/plugins/npm-plugin/resolve.js @@ -77,7 +77,7 @@ function getLegacyEntry(pkg) {\nreturn '/' + entry.replace(/^\\.?\\//, '');\n}\n-const ENV_KEYS = ['esmodules', 'import', 'require', 'browser', 'node', 'default'];\n+const ENV_KEYS = ['esmodules', 'import', 'module', 'require', 'browser', 'node', 'default'];\n/** Get the best resolution for an entry from an Export Map\n* @param {Object} exp `package.exports`\n",
        "date": "27.10.2020 17:45:16",
        "repo": "preactjs/wmr",
        "type": "allow",
        "chatgpt_zeroshot": "Update ENV_KEYS in resolve.js to include 'module' key"
    },
    {
        "msg": "allow testresults processor to be configured",
        "diff": "diff --git a/packages/razzle/config/createJestConfig.js b/packages/razzle/config/createJestConfig.js @@ -46,6 +46,7 @@ module.exports = (resolve, rootDir) => {\n'testMatch',\n'transform',\n'transformIgnorePatterns',\n+ 'testResultsProcessor',\n];\nif (overrides) {\nsupportedKeys.forEach(key => {\n",
        "date": "22.06.2017 14:35:54",
        "repo": "jaredpalmer/razzle",
        "type": "allow",
        "chatgpt_zeroshot": "Add 'testResultsProcessor' to supported keys in createJestConfig"
    },
    {
        "msg": "allow Jest's modulePaths option to be overridable",
        "diff": "diff --git a/packages/razzle/config/createJestConfig.js b/packages/razzle/config/createJestConfig.js @@ -42,11 +42,12 @@ module.exports = (resolve, rootDir) => {\n'coverageThreshold',\n'moduleFileExtensions',\n'moduleNameMapper',\n+ 'modulePaths',\n'snapshotSerializers',\n'testMatch',\n+ 'testResultsProcessor',\n'transform',\n'transformIgnorePatterns',\n- 'testResultsProcessor',\n];\nif (overrides) {\nsupportedKeys.forEach(key => {\n",
        "date": "05.09.2017 15:39:48",
        "repo": "jaredpalmer/razzle",
        "type": "allow",
        "chatgpt_zeroshot": "Add modulePaths to Jest config and reorganize key order"
    },
    {
        "msg": "allow jest watchPlugins option",
        "diff": "diff --git a/packages/razzle/config/createJestConfig.js b/packages/razzle/config/createJestConfig.js @@ -68,6 +68,7 @@ module.exports = (resolve, rootDir) => {\n'transform',\n'transformIgnorePatterns',\n'reporters',\n+ 'watchPlugins',\n];\nif (overrides) {\nsupportedKeys.forEach(key => {\n",
        "date": "20.06.2019 21:52:34",
        "repo": "jaredpalmer/razzle",
        "type": "allow",
        "chatgpt_zeroshot": "Add watchPlugins to Jest config options"
    },
    {
        "msg": "allow custom GUI construction This way one can still get the benefits of the GUI container but have a custom collection of components within it.",
        "diff": "diff --git a/src/containers/gui.jsx b/src/containers/gui.jsx @@ -36,6 +36,7 @@ class GUI extends React.Component {\n}\nrender () {\nconst {\n+ children,\nprojectData, // eslint-disable-line no-unused-vars\nvm,\n...componentProps\n@@ -46,7 +47,9 @@ class GUI extends React.Component {\nvm={vm}\nonTabSelect={this.handleTabSelect}\n{...componentProps}\n- />\n+ >\n+ {children}\n+ </GUIComponent>\n);\n}\n}\n",
        "date": "14.08.2017 17:21:02",
        "repo": "wdr-data/code4maus",
        "type": "allow",
        "chatgpt_zeroshot": "Add children prop to GUI component render method"
    },
    {
        "msg": "allow configuration of S3 branches to release",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -38,7 +38,9 @@ deploy:\napi_key: $NPM_TOKEN\n- provider: s3\non:\n- branch: master\n+ branch:\n+ - master\n+ - $PREVIEW_BRANCH\naccess_key_id: $AWS_ACCESS_KEY_ID\nsecret_access_key: $AWS_SECRET_ACCESS_KEY\nbucket: $AWS_BUCKET_NAME\n",
        "date": "17.01.2018 11:40:03",
        "repo": "wdr-data/code4maus",
        "type": "allow",
        "chatgpt_zeroshot": "Update Travis CI deployment configuration to deploy on both master and $PREVIEW_BRANCH branches"
    },
    {
        "msg": "allow #fullscreen and #player links in modal.",
        "diff": "diff --git a/src/containers/import-modal.jsx b/src/containers/import-modal.jsx @@ -50,7 +50,7 @@ class ImportModal extends React.Component {\nthis.setState({inputValue: e.target.value, hasValidationError: false});\n}\nvalidate (input) {\n- const urlMatches = input.match(/^(https:\\/\\/)?scratch\\.mit\\.edu\\/projects\\/(\\d+)(\\/?|(\\/#editor)?)$/);\n+ const urlMatches = input.match(/^(https:\\/\\/)?scratch\\.mit\\.edu\\/projects\\/(\\d+)(\\/?|(\\/#((editor)|(fullscreen)|(player)))?)$/);\nif (urlMatches && urlMatches.length > 0) {\nreturn urlMatches[2];\n}\n",
        "date": "23.02.2018 09:00:44",
        "repo": "wdr-data/code4maus",
        "type": "allow",
        "chatgpt_zeroshot": "Update project URL regex to include additional editor modes"
    },
    {
        "msg": "allow http url in import modal",
        "diff": "diff --git a/src/containers/import-modal.jsx b/src/containers/import-modal.jsx @@ -51,7 +51,7 @@ class ImportModal extends React.Component {\nthis.setState({inputValue: e.target.value, hasValidationError: false});\n}\nvalidate (input) {\n- const urlMatches = input.match(/^(?:https:\\/\\/)?scratch\\.mit\\.edu\\/projects\\/(\\d+)/);\n+ const urlMatches = input.match(/^(?:https?:\\/\\/)?scratch\\.mit\\.edu\\/projects\\/(\\d+)/);\nif (urlMatches && urlMatches.length > 0) {\nreturn urlMatches[1];\n}\n",
        "date": "04.03.2018 16:45:51",
        "repo": "wdr-data/code4maus",
        "type": "allow",
        "chatgpt_zeroshot": "Fix regex pattern in validate method in ImportModal"
    },
    {
        "msg": "allow new sprite to propagate before selecting costume tab",
        "diff": "diff --git a/src/containers/target-pane.jsx b/src/containers/target-pane.jsx @@ -74,8 +74,10 @@ class TargetPane extends React.Component {\nconst emptyItem = spriteLibraryContent.find(item => item.name === 'Empty');\nif (emptyItem) {\nthis.props.vm.addSprite2(JSON.stringify(emptyItem.json)).then(() => {\n+ setTimeout(() => { // Wait for targets update to propagate before tab switching\nthis.props.onActivateTab(COSTUMES_TAB_INDEX);\n});\n+ });\n}\n}\nhandleBlockDragEnd (blocks) {\n",
        "date": "12.03.2018 14:23:32",
        "repo": "wdr-data/code4maus",
        "type": "allow",
        "chatgpt_zeroshot": "Add delay before switching tabs to ensure targets update has propagated"
    },
    {
        "msg": "allow more mime types to be processed. Firefox and Safari both process mp3s as having audio/mpeg, and a variety of different audio/wav* possibilities.",
        "diff": "diff --git a/src/lib/file-uploader.js b/src/lib/file-uploader.js @@ -144,11 +144,15 @@ const costumeUpload = function (fileData, fileType, costumeName, storage, handle\nconst soundUpload = function (fileData, fileType, soundName, storage, handleSound) {\nlet soundFormat;\nswitch (fileType) {\n- case 'audio/mp3': {\n+ case 'audio/mp3':\n+ case 'audio/mpeg': {\nsoundFormat = storage.DataFormat.MP3;\nbreak;\n}\n- case 'audio/wav': { // TODO support audio/x-wav? Do we see this in the wild?\n+ case 'audio/wav':\n+ case 'audio/wave':\n+ case 'audio/x-wav':\n+ case 'audio/x-pn-wav': {\nsoundFormat = storage.DataFormat.WAV;\nbreak;\n}\n",
        "date": "27.04.2018 15:25:34",
        "repo": "wdr-data/code4maus",
        "type": "allow",
        "chatgpt_zeroshot": "Add support for additional sound file formats in soundUpload function"
    },
    {
        "msg": "allow styled components to style AddonList",
        "diff": "diff --git a/src/components/screens/AddonScreen/AddonList.js b/src/components/screens/AddonScreen/AddonList.js @@ -80,9 +80,9 @@ const Layout = styled.div`\n`};\n`;\n-export default function AddonList({ appearance, children }) {\n+export default function AddonList({ appearance, children, ...props }) {\nreturn (\n- <Layout appearance={appearance}>\n+ <Layout appearance={appearance} {...props}>\n{appearance === 'official' ? <Grid>{children}</Grid> : <List>{children}</List>}\n</Layout>\n);\n",
        "date": "13.12.2018 10:54:22",
        "repo": "storybookjs/frontpage",
        "type": "allow",
        "chatgpt_zeroshot": "Add spread operator for props in AddonList component"
    },
    {
        "msg": "allow ConfirmedMailingList to be styled with styled-components",
        "diff": "diff --git a/src/components/screens/CommunityScreen/CommunityHero.js b/src/components/screens/CommunityScreen/CommunityHero.js @@ -8,7 +8,7 @@ import { Cardinal, styles, site } from '../../basics';\nimport ConfirmedMailingList from '../../layout/ConfirmedMailingList';\nimport { Heading, Title, Desc } from '../../layout/PageTitle';\n-const { background, typography, pageMargins, breakpoint } = styles;\n+const { pageMargins, breakpoint } = styles;\nconst { url } = site;\nconst Image = styled.img``;\n@@ -127,16 +127,6 @@ const Stats = styled.div`\n}\n`;\n-const MailingListConfirm = styled.div`\n- font-size: ${typography.size.s2}px;\n- line-height: 20px;\n- background: ${background.positive};\n- padding: 10px;\n- text-align: center;\n- border-radius: 4px;\n- max-width: 340px;\n-`;\n-\nconst MailingListForm = styled(ConfirmedMailingList)`\nmin-width: 280px;\nwidth: 100%;\n@@ -151,7 +141,7 @@ const MailingListWrapper = styled.div`\nmargin-bottom: 2rem;\n}\n- ${MailingListConfirm}, ${MailingListForm} {\n+ ${MailingListForm} {\nmargin: 0 auto;\n@media (min-width: ${breakpoint}px) {\nmargin: 0;\n@@ -171,7 +161,7 @@ export default function CommunityHero(props) {\nget help, and develop UIs faster.\n</Desc>\n<MailingListWrapper>\n- <ConfirmedMailingList />\n+ <MailingListForm />\n</MailingListWrapper>\n<Stats>\n<Stat\n",
        "date": "19.12.2018 11:35:54",
        "repo": "storybookjs/frontpage",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor CommunityHero component styling and remove unused MailingListConfirm styled component."
    },
    {
        "msg": "allow Video to be styled w/styled-components",
        "diff": "diff --git a/src/components/basics/Video.js b/src/components/basics/Video.js @@ -8,12 +8,12 @@ const StyledVideo = styled.video`\nheight: auto;\n`;\n-const Video = ({ src, shouldChangeSize, alt }) => {\n+const Video = ({ src, shouldChangeSize, alt, ...props }) => {\nconst videoSize = shouldChangeSize && window.innerWidth < 600 ? 'sm' : 'lg';\nconst videoSrc = videoSize === 'sm' ? src.replace('lg', 'sm') : src;\nreturn (\n- <StyledVideo autoPlay muted loop playsInline alt={alt}>\n+ <StyledVideo autoPlay muted loop playsInline alt={alt} {...props}>\n<source src={videoSrc} type=\"video/mp4\" />\n</StyledVideo>\n);\n",
        "date": "25.01.2019 13:28:54",
        "repo": "storybookjs/frontpage",
        "type": "allow",
        "chatgpt_zeroshot": "Add spread operator for additional props in Video component"
    },
    {
        "msg": "allow Releases to have styling",
        "diff": "diff --git a/src/components/screens/ReleasesScreen/Release.js b/src/components/screens/ReleasesScreen/Release.js @@ -45,9 +45,9 @@ const StyledConfirmedMailingList = styled(ConfirmedMailingList)`\nmin-width: auto;\n`;\n-function Release({ title, html }) {\n+function Release({ title, html, ...props }) {\nreturn (\n- <Wrapper>\n+ <Wrapper {...props}>\n<Title>{title}</Title>\n<Highlight>{html}</Highlight>\n<EmailWrapper>\n",
        "date": "07.07.2020 21:32:54",
        "repo": "storybookjs/frontpage",
        "type": "allow",
        "chatgpt_zeroshot": "Add spread operator for props in Release component"
    },
    {
        "msg": "allow 3 char search for addons",
        "diff": "diff --git a/src/hooks/use-addons-search.js b/src/hooks/use-addons-search.js @@ -3,6 +3,7 @@ import { useState, useEffect, useLayoutEffect, useRef } from 'react';\nimport buildTagLinks from '../util/build-tag-links';\nconst initalValue = { search: [], relatedTags: [] };\n+const minQueryLength = 2;\nexport function useAddonsSearch() {\nconst [query, setQuery] = useState('');\n@@ -20,14 +21,14 @@ export function useAddonsSearch() {\nif (query === '') {\nsetIsSearching(false);\nsetResults(initalValue);\n- } else if (query !== '' && query.length > 3 && isSearching === false) {\n+ } else if (query !== '' && query.length > minQueryLength && isSearching === false) {\nsetIsSearching(true);\n}\n}, [query]);\n// Fetch search results with a debounce\nuseEffect(() => {\n- if (debouncedSearchTerm && debouncedSearchTerm.length >= 3) {\n+ if (debouncedSearchTerm && debouncedSearchTerm.length > 2) {\nsearchAddons(debouncedSearchTerm).then((resultsData) => {\nsetIsSearchLoading(false);\nsetResults(resultsData);\n",
        "date": "07.12.2021 14:37:44",
        "repo": "storybookjs/frontpage",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor search query length check to use constant value"
    },
    {
        "msg": "allow manual port forwarding to local daemon",
        "diff": "diff --git a/frontend/wallet/src/render/Apollo.re b/frontend/wallet/src/render/Apollo.re @@ -9,7 +9,7 @@ external createRetryLink: retryOptions => ReasonApolloTypes.apolloLink =\nlet client = {\nlet inMemoryCache = ApolloInMemoryCache.createInMemoryCache();\n- let uri = \"http://localhost:49370/graphql\";\n+ let uri = \"http://localhost:3085/graphql\";\nlet codaLink =\nApolloLinks.createHttpLink(~uri, ~fetch=Bindings.Fetch.fetch, ());\n",
        "date": "09.09.2019 14:55:41",
        "repo": "minaprotocol/mina",
        "type": "allow",
        "chatgpt_zeroshot": "Update GraphQL server URI to localhost:3085"
    },
    {
        "msg": "allow generation of let version = for types with params",
        "diff": "diff --git a/src/lib/ppx_coda/versioned.ml b/src/lib/ppx_coda/versioned.ml @@ -182,7 +182,11 @@ let generate_version_number_decl inner3_modules loc generation_kind =\nString.sub module_name ~pos:1 ~len:(String.length module_name - 1)\n|> int_of_string\nin\n- [%stri let version = [%e eint version]]\n+ [%str\n+ let version = [%e eint version]\n+\n+ (* to prevent unused value warnings *)\n+ let _ = version]\nlet ocaml_builtin_types =\n[\"bytes\"; \"int\"; \"int32\"; \"int64\"; \"float\"; \"char\"; \"string\"; \"bool\"; \"unit\"]\n@@ -467,18 +471,15 @@ let generate_let_bindings_for_type_decl_str ~options ~path type_decls =\ngenerate_versioned_decls ~asserted generation_kind type_decl\nin\nlet type_name = type_decl.ptype_name.txt in\n- let has_type_params = not (List.is_empty type_decl.ptype_params) in\n(* generate version number for Rpc response, but not for query, so we\ndon't get an unused value\n*)\n- if\n- unnumbered || has_type_params\n- || (generation_kind = Rpc && String.equal type_name \"query\")\n+ if unnumbered || (generation_kind = Rpc && String.equal type_name \"query\")\nthen versioned_decls\nelse\ngenerate_version_number_decl inner3_modules type_decl.ptype_loc\ngeneration_kind\n- :: versioned_decls\n+ @ versioned_decls\nlet generate_val_decls_for_type_decl type_decl ~numbered =\nmatch type_decl.ptype_kind with\n",
        "date": "14.10.2019 05:01:32",
        "repo": "minaprotocol/mina",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor version number generation and prevent unused value warnings"
    },
    {
        "msg": "allow flexible account JSON",
        "diff": "diff --git a/src/lib/account_config/account_config.ml b/src/lib/account_config/account_config.ml @@ -2,11 +2,22 @@ open Core_kernel\ntype account_data =\n{ pk: Signature_lib.Public_key.Compressed.t\n- ; sk: Signature_lib.Private_key.t option\n+ ; sk: Signature_lib.Private_key.t option [@default None]\n; balance: Currency.Balance.t\n- ; delegate: Signature_lib.Public_key.Compressed.t option }\n+ ; delegate: Signature_lib.Public_key.Compressed.t option [@default None] }\n[@@deriving yojson]\n+let account_data_of_yojson = function\n+ | `Assoc l ->\n+ account_data_of_yojson\n+ (`Assoc\n+ (List.filter l ~f:(fun (key, _) ->\n+ Array.mem ~equal:String.equal\n+ [|\"pk\"; \"sk\"; \"balance\"; \"delegate\"|]\n+ key )))\n+ | json ->\n+ account_data_of_yojson json\n+\ntype t = account_data list [@@deriving yojson]\nmodule Fake_accounts = struct\n",
        "date": "06.05.2020 20:16:43",
        "repo": "minaprotocol/mina",
        "type": "allow",
        "chatgpt_zeroshot": "Add default values for private key and delegate in account_data structure"
    },
    {
        "msg": "allow ip6, dns4, dns6 protocols",
        "diff": "diff --git a/src/lib/mina_net2/mina_net2.ml b/src/lib/mina_net2/mina_net2.ml @@ -1147,7 +1147,9 @@ module Multiaddr = struct\nlet to_peer t =\nmatch String.split ~on:'/' t with\n- | [\"\"; \"ip4\"; ip4_str; \"tcp\"; tcp_str; \"p2p\"; peer_id] -> (\n+ | [\"\"; protocol; ip4_str; \"tcp\"; tcp_str; \"p2p\"; peer_id]\n+ when List.mem [\"ip4\"; \"ip6\"; \"dns4\"; \"dns6\"] protocol ~equal:String.equal\n+ -> (\ntry\nlet host = Unix.Inet_addr.of_string ip4_str in\nlet libp2p_port = Int.of_string tcp_str in\n",
        "date": "15.01.2021 16:56:44",
        "repo": "minaprotocol/mina",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor Multiaddr parsing to support multiple protocols"
    },
    {
        "msg": "allow only peer-list-url",
        "diff": "diff --git a/src/app/cli/src/coda.ml b/src/app/cli/src/coda.ml @@ -963,11 +963,12 @@ let setup_daemon logger =\nin\nif enable_tracing then Coda_tracing.start conf_dir |> don't_wait_for ;\nif is_seed then [%log info] \"Starting node as a seed node\"\n- else if List.is_empty initial_peers then\n+ else if List.is_empty initial_peers && Option.is_none seed_peer_list_url\n+ then\nMina_user_error.raise\n{|No peers were given.\n-Pass one of -peer, -peer-list-file, -seed.|} ;\n+Pass one of -peer, -peer-list-file, -seed, -peer-list-url.|} ;\nlet chain_id =\nchain_id ~genesis_state_hash\n~genesis_constants:precomputed_values.genesis_constants\n",
        "date": "17.02.2021 10:52:33",
        "repo": "minaprotocol/mina",
        "type": "allow",
        "chatgpt_zeroshot": "Add support for specifying peer list URL in node setup"
    },
    {
        "msg": "allow cliff time months to be a float",
        "diff": "diff --git a/src/app/genesis_ledger_from_tsv/genesis_ledger_from_tsv.ml b/src/app/genesis_ledger_from_tsv/genesis_ledger_from_tsv.ml @@ -39,6 +39,8 @@ let slot_duration_ms =\n(* a month = 30 days, for purposes of vesting *)\nlet slots_per_month = 30 * 24 * 60 * 60 * 1000 / slot_duration_ms\n+let slots_per_month_float = Float.of_int slots_per_month\n+\nlet valid_mina_amount amount =\nlet is_num_string s = String.for_all s ~f:Char.is_digit in\nmatch String.split ~on:'.' amount with\n@@ -92,7 +94,11 @@ let runtime_config_account ~logger ~wallet_pk ~amount ~initial_min_balance\nelse Currency.Balance.of_formatted_string initial_min_balance\nin\nlet cliff_time =\n- Global_slot.of_int (Int.of_string cliff_time_months * slots_per_month)\n+ let num_slots_float =\n+ Float.of_string cliff_time_months *. slots_per_month_float\n+ in\n+ (* if there's a fractional slot, wait until next slot by rounding up *)\n+ Global_slot.of_int (Float.iround_up_exn num_slots_float)\nin\nlet cliff_amount = Currency.Amount.of_formatted_string cliff_amount in\nlet vesting_period =\n@@ -163,8 +169,8 @@ let validate_fields ~wallet_pk ~amount ~initial_min_balance ~cliff_time_months\nin\nlet valid_cliff_time_months =\ntry\n- let n = Int.of_string cliff_time_months in\n- n >= 0\n+ let n = Float.of_string cliff_time_months in\n+ n >= 0.0\nwith _ -> false\nin\nlet valid_cliff_amount = valid_mina_amount cliff_amount in\n",
        "date": "08.03.2021 17:42:57",
        "repo": "minaprotocol/mina",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor cliff time calculation to handle fractional slots"
    },
    {
        "msg": "allow coda- binaries",
        "diff": "diff --git a/src/lib/child_processes/child_processes.ml b/src/lib/child_processes/child_processes.ml @@ -279,7 +279,8 @@ let start_custom :\n[ Unix.getenv @@ \"CODA_\" ^ String.uppercase name ^ \"_PATH\"\n; relative_to_root\n; Some (Filename.dirname mina_binary_path ^/ name)\n- ; Some (\"mina-\" ^ name) ])\n+ ; Some (\"mina-\" ^ name)\n+ ; Some (\"coda-\" ^ name) ])\n~f:(fun prog -> Process.create ~stdin:\"\" ~prog ~args ())\nin\n[%log info] \"Custom child process $name started with pid $pid\"\n",
        "date": "13.04.2021 12:22:19",
        "repo": "minaprotocol/mina",
        "type": "allow",
        "chatgpt_zeroshot": "Update custom child process naming convention to use \"coda-\" prefix instead of \"mina-\""
    },
    {
        "msg": "allow uptime submitter keyfile",
        "diff": "diff --git a/src/app/cli/src/cli_entrypoint/mina_cli_entrypoint.ml b/src/app/cli/src/cli_entrypoint/mina_cli_entrypoint.ml @@ -378,11 +378,21 @@ let setup_daemon logger =\nand uptime_url_string =\nflag \"--uptime-url\" ~aliases:[\"uptime-url\"] (optional string)\n~doc:\"URL URL of the uptime service of the Mina delegation program\"\n- and uptime_submitter_string =\n- flag \"--uptime-submitter\" ~aliases:[\"uptime-submitter\"] (optional string)\n+ and uptime_submitter_key =\n+ flag \"--uptime-submitter-key\" ~aliases:[\"uptime-submitter-key\"]\n~doc:\n- \"PUBLICKEY Public key of the submitter to the uptime service of the \\\n- Mina delegation program\"\n+ \"KEYFILE Private key file for the uptime submitter. You cannot \\\n+ provide both `uptime-submitter-key` and `uptime-submitter-pubkey`.\"\n+ (optional string)\n+ and uptime_submitter_pubkey =\n+ flag \"--uptime-submitter-pubkey\"\n+ ~aliases:[\"uptime-submitter-pubkey\"]\n+ (optional string)\n+ ~doc:\n+ \"PUBLICKEY Public key of the submitter to the Mina delegation \\\n+ program, for the associated private key that is being tracked by \\\n+ this daemon. You cannot provide both `uptime-submitter-key` and \\\n+ `uptime-submitter-pubkey`.\"\nin\nfun () ->\nlet open Deferred.Let_syntax in\n@@ -1115,17 +1125,20 @@ Pass one of -peer, -peer-list-file, -seed, -peer-list-url.|} ;\nCoda_run.get_proposed_protocol_version_opt ~conf_dir ~logger\nproposed_protocol_version\nin\n- ( match (uptime_url_string, uptime_submitter_string) with\n- | Some _, Some _ | None, None ->\n+ ( match\n+ (uptime_url_string, uptime_submitter_key, uptime_submitter_pubkey)\n+ with\n+ | Some _, Some _, None | Some _, None, Some _ | None, None, None ->\n()\n| _ ->\nMina_user_error.raise\n- \"Must provide both --uptime-url and --uptime-submitter\" ) ;\n+ \"Must provide both --uptime-url and exactly one of \\\n+ --uptime-submitter-key or --uptime-submitter-pubkey\" ) ;\nlet uptime_url =\nOption.map uptime_url_string ~f:(fun s -> Uri.of_string s)\nin\n- let uptime_submitter =\n- Option.map uptime_submitter_string ~f:(fun s ->\n+ let uptime_submitter_opt =\n+ Option.map uptime_submitter_pubkey ~f:(fun s ->\nmatch Public_key.Compressed.of_base58_check s with\n| Ok pk -> (\nmatch Public_key.decompress pk with\n@@ -1142,10 +1155,10 @@ Pass one of -peer, -peer-list-file, -seed, -peer-list-url.|} ;\n(Error.to_string_hum err) () )\nin\nlet%bind uptime_submitter_keypair =\n- match uptime_submitter with\n- | None ->\n+ match (uptime_submitter_key, uptime_submitter_opt) with\n+ | None, None ->\nreturn None\n- | Some pk ->\n+ | None, Some pk ->\nlet%map kp =\nSecrets.Wallets.get_tracked_keypair ~logger\n~which:\"uptime submitter keypair\"\n@@ -1154,6 +1167,17 @@ Pass one of -peer, -peer-list-file, -seed, -peer-list-url.|} ;\n~conf_dir pk\nin\nSome kp\n+ | Some sk_file, None ->\n+ let%map kp =\n+ Secrets.Uptime_keypair.Terminal_stdin.read_from_env_exn ~logger\n+ ~which:\"uptime submitter keypair\" sk_file\n+ in\n+ Some kp\n+ | _ ->\n+ (* unreachable, because of earlier check *)\n+ failwith\n+ \"Cannot provide both uptime submitter public key and uptime \\\n+ submitter keyfile\"\nin\nlet start_time = Time.now () in\nlet%map coda =\n",
        "date": "15.09.2021 17:23:00",
        "repo": "minaprotocol/mina",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor uptime submitter key handling in CLI entrypoint"
    },
    {
        "msg": "allow new threads in daemonized daemon, to allow cmd line unit test to pass",
        "diff": "diff --git a/src/app/cli/src/cli_entrypoint/mina_cli_entrypoint.ml b/src/app/cli/src/cli_entrypoint/mina_cli_entrypoint.ml @@ -378,8 +378,9 @@ let setup_daemon logger =\nif is_background then (\nCore.printf \"Starting background mina daemon. (Log Dir: %s)\\n%!\"\nconf_dir ;\n- Daemon.daemonize ~redirect_stdout:`Dev_null ?cd:working_dir\n- ~redirect_stderr:`Dev_null () )\n+ Daemon.daemonize ~allow_threads_to_have_been_created:true\n+ ~redirect_stdout:`Dev_null ?cd:working_dir ~redirect_stderr:`Dev_null\n+ () )\nelse ignore (Option.map working_dir ~f:Caml.Sys.chdir)\nin\nStdout_log.setup log_json log_level ;\n",
        "date": "29.09.2021 13:21:13",
        "repo": "minaprotocol/mina",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor daemon setup in CLI entrypoint"
    },
    {
        "msg": "allow Full predicates for non-snapp parties This ensures that we can make assertions about the balances etc. of non-snapp parties, for use by snapp parties.",
        "diff": "diff --git a/src/lib/transaction_snark/transaction_snark.ml b/src/lib/transaction_snark/transaction_snark.ml @@ -537,13 +537,10 @@ module Parties_segment = struct\nfailwith \"Parties_segment.Basic.of_controls: Unsupported combination\"\nlet opt_signed ~is_start : Spec.single =\n- { predicate_type = `Nonce_or_accept; auth_type = Signature; is_start }\n+ { predicate_type = `Full; auth_type = Signature; is_start }\nlet unsigned : Spec.single =\n- { predicate_type = `Nonce_or_accept\n- ; auth_type = None_given\n- ; is_start = `No\n- }\n+ { predicate_type = `Full; auth_type = None_given; is_start = `No }\nlet opt_signed = opt_signed ~is_start:`Compute_in_circuit\n",
        "date": "01.11.2021 15:29:16",
        "repo": "minaprotocol/mina",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor predicate_type and auth_type in Parties_segment module"
    },
    {
        "msg": "allow replayer to compile",
        "diff": "diff --git a/src/app/replayer/replayer.ml b/src/app/replayer/replayer.ml @@ -1402,8 +1402,9 @@ let parties_of_snapp_command ~pool (cmd : Sql.Snapp_command.t) :\n\"Expected account id for account precondition of kind \\\nFull\"\n| Some account_id ->\n- query_db pool ~item:\"Snapp account\" ~f:(fun db ->\n- Processor.Zkapp_account.load db account_id)\n+ query_db pool ~item:\"Zkapp account\" ~f:(fun db ->\n+ Processor.Zkapp_precondition_account.load db\n+ account_id)\nin\nlet%map zkapp_account =\nlet%bind balance =\n",
        "date": "12.04.2022 15:30:09",
        "repo": "minaprotocol/mina",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor account loading in replayer.ml"
    },
    {
        "msg": "allow reversed fields in Fee_excess JSON",
        "diff": "diff --git a/src/lib/mina_base/fee_excess.ml b/src/lib/mina_base/fee_excess.ml @@ -73,16 +73,30 @@ module Poly = struct\n]\nlet of_yojson token_of_yojson fee_of_yojson = function\n- | `List\n- [ `Assoc [ (\"token\", fee_token_l); (\"amount\", fee_excess_l) ]\n- ; `Assoc [ (\"token\", fee_token_r); (\"amount\", fee_excess_r) ]\n- ] ->\n+ | `List [ `Assoc [ left0; left1 ]; `Assoc [ right0; right1 ] ] -> (\n+ (* allow for reversed field order: \"be liberal in what you accept\" *)\n+ let token_and_excess pair0 pair1 =\n+ match (pair0, pair1) with\n+ | (\"token\", token), (\"amount\", excess) ->\n+ Some (token, excess)\n+ | (\"amount\", excess), (\"token\", token) ->\n+ Some (token, excess)\n+ | _ ->\n+ None\n+ in\n+ let left = token_and_excess left0 left1 in\n+ let right = token_and_excess right0 right1 in\n+ match (left, right) with\n+ | Some (fee_token_l, fee_excess_l), Some (fee_token_r, fee_excess_r)\n+ ->\nlet open Result.Let_syntax in\nlet%map fee_token_l = token_of_yojson fee_token_l\nand fee_excess_l = fee_of_yojson fee_excess_l\nand fee_token_r = token_of_yojson fee_token_r\nand fee_excess_r = fee_of_yojson fee_excess_r in\n{ fee_token_l; fee_excess_l; fee_token_r; fee_excess_r }\n+ | _ ->\n+ Error \"Fee_excess.Poly.Stable.V1.t, unexpected JSON field\" )\n| _ ->\nError \"Fee_excess.Poly.Stable.V1.t\"\nend\n",
        "date": "05.05.2022 14:59:36",
        "repo": "minaprotocol/mina",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor of `of_yojson` function in `fee_excess.ml` to allow for reversed field order and improve error handling."
    },
    {
        "msg": "allow snarkyjs to manipulate network state via apply_json_transaction",
        "diff": "diff --git a/src/lib/snarky_js_bindings/lib/snarky_js_bindings_lib.ml b/src/lib/snarky_js_bindings/lib/snarky_js_bindings_lib.ml @@ -2905,11 +2905,11 @@ module Ledger = struct\n}\nlet apply_parties_transaction l (txn : Parties.t)\n- (account_creation_fee : string) =\n+ (account_creation_fee : string) (network_state : Mina_base.Zkapp_precondition.Protocol_state.View.t) =\ncheck_party_signatures txn ;\nlet ledger = l##.value in\nlet applied_exn =\n- T.apply_parties_unchecked ~state_view:dummy_state_view\n+ T.apply_parties_unchecked ~state_view:network_state\n~constraint_constants:\n{ Genesis_constants.Constraint_constants.compiled with\naccount_creation_fee = Currency.Fee.of_string account_creation_fee\n@@ -2935,11 +2935,14 @@ module Ledger = struct\nJs.array @@ Array.of_list account_list\nlet apply_json_transaction l (tx_json : Js.js_string Js.t)\n- (account_creation_fee : Js.js_string Js.t) =\n+ (account_creation_fee : Js.js_string Js.t) (network_json : Js.js_string Js.t) =\nlet txn =\nParties.of_json @@ Yojson.Safe.from_string @@ Js.to_string tx_json\nin\n- apply_parties_transaction l txn (Js.to_string account_creation_fee)\n+ let network_state =\n+ protocol_state_of_json network_json\n+ in\n+ apply_parties_transaction l txn (Js.to_string account_creation_fee) network_state\nlet create_token_account pk token =\naccount_id pk token |> Mina_base.Account_id.public_key\n",
        "date": "08.08.2022 18:46:24",
        "repo": "minaprotocol/mina",
        "type": "allow",
        "chatgpt_zeroshot": "Add network state parameter to apply_parties_transaction and apply_json_transaction functions"
    },
    {
        "msg": "allow test logs to appear",
        "diff": "diff --git a/src/lib/mina_lib/mina_lib.ml b/src/lib/mina_lib/mina_lib.ml @@ -8,7 +8,8 @@ open Pipe_lib\nopen Strict_pipe\nopen Signature_lib\nopen Network_peer\n-open Inline_test_quiet_logs\n+\n+(* open Inline_test_quiet_logs *)\nmodule Archive_client = Archive_client\nmodule Config = Config\nmodule Conf_dir = Conf_dir\n",
        "date": "09.11.2022 20:42:28",
        "repo": "minaprotocol/mina",
        "type": "allow",
        "chatgpt_zeroshot": "Remove unused import of Inline_test_quiet_logs"
    },
    {
        "msg": "allow a Comment node as insertion point document.createComment(\"blah\") creates a node of type Comment, which works just fine.",
        "diff": "diff --git a/packages/jss/src/index.d.ts b/packages/jss/src/index.d.ts @@ -34,7 +34,7 @@ export type JssValue =\n| null\n| false\n-export type InsertionPoint = string | HTMLElement\n+export type InsertionPoint = string | HTMLElement | Comment\nexport interface UpdateOptions {\nprocess?: boolean\n",
        "date": "17.02.2020 10:51:19",
        "repo": "cssinjs/jss",
        "type": "allow",
        "chatgpt_zeroshot": "Add Comment type to InsertionPoint in JSS package"
    },
    {
        "msg": "allow full cube url to go into compare input",
        "diff": "diff --git a/public/js/editcube.js b/public/js/editcube.js @@ -31,7 +31,11 @@ cube.forEach(function(card, index) {\n$('#compareButton').click(function(e) {\nconst id_a = $('#cubeID').val();\n- const id_b = $('#compareInput').val();\n+ let id_b = $('#compareInput').val();\n+ if (id_b.includes('/')) {\n+ let parts = id_b.split('/');\n+ id_b = parts[parts.length - 1];\n+ }\nif (id_b) window.location.href = '/cube/compare/' + id_a + '/to/' + id_b;\n});\n",
        "date": "29.08.2019 21:45:50",
        "repo": "dekkerglen/cubecobra",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor compareButton click event to handle cube IDs with slashes"
    },
    {
        "msg": "allow banned cards to still count towards pauper, standard and modern cube types",
        "diff": "diff --git a/serverjs/updatecards.js b/serverjs/updatecards.js @@ -285,9 +285,9 @@ function convertLegalities(card, isExtra) {\n} else {\nreturn {\nLegacy: card.legalities.legacy == 'legal',\n- Modern: card.legalities.modern == 'legal',\n- Standard: card.legalities.standard == 'legal',\n- Pauper: card.legalities.pauper == 'legal'\n+ Modern: card.legalities.modern == 'legal' || card.legalities.modern == 'banned',\n+ Standard: card.legalities.standard == 'legal' || card.legalities.standard == 'banned',\n+ Pauper: card.legalities.pauper == 'legal' || card.legalities.pauper == 'banned',\n};\n}\n}\n",
        "date": "05.11.2019 09:31:15",
        "repo": "dekkerglen/cubecobra",
        "type": "allow",
        "chatgpt_zeroshot": "Update legalities to include banned status for Modern, Standard, and Pauper formats."
    },
    {
        "msg": "allow half values for cmc as well as negative values for power/toughness for",
        "diff": "diff --git a/src/util/Filter.js b/src/util/Filter.js @@ -250,9 +250,13 @@ const verifyTokens = (tokens) => {\nreturn false;\n}\nbreak;\n- case 'cmc':\ncase 'power':\ncase 'toughness':\n+ if (token(i).arg.search(/^[-\\+]?((\\d+(\\.5)?)|(\\.5))$/) < 0) return false;\n+ break;\n+ case 'cmc':\n+ if (token(i).arg.search(/^\\+?((\\d+(\\.5)?)|(\\.5))$/) < 0) return false;\n+ break;\ncase 'loyalty':\nif (token(i).arg.search(/^\\d+$/) < 0) return false;\nbreak;\n",
        "date": "13.11.2019 13:20:36",
        "repo": "dekkerglen/cubecobra",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor token verification for 'power' and 'cmc' arguments in Filter.js"
    },
    {
        "msg": "allow numbers in alphanumeric values.",
        "diff": "diff --git a/nearley/values.ne b/nearley/values.ne @@ -48,7 +48,7 @@ rarityOpValue -> anyOperator rarityValue {% ([op, value]) => rarityOperation(op,\nrarityValue -> (\"s\"i | \"special\"i | \"m\"i | \"mythic\"i | \"r\"i | \"rare\"i | \"u\"i | \"uncommon\"i | \"common\"i | \"c\"i) {% ([[rarity]]) => rarity %}\n-alphaNumericValue -> [a-zA-Z]:+ {% ([letters]) => letters.join('').toLowerCase() %}\n+alphaNumericValue -> [a-zA-Z0-9]:+ {% ([letters]) => letters.join('').toLowerCase() %}\nalphaNumericOpValue -> equalityOperator alphaNumericValue {% ([op, value]) => equalityOperation(op, value) %}\n",
        "date": "02.05.2020 14:30:54",
        "repo": "dekkerglen/cubecobra",
        "type": "allow",
        "chatgpt_zeroshot": "Update alphaNumericValue to include numbers in values"
    },
    {
        "msg": "allow optimization of deck and cube downloads.",
        "diff": "diff --git a/routes/tools_routes.js b/routes/tools_routes.js @@ -223,14 +223,25 @@ router.get('/api/downloadcubes/:page/:key', async (req, res) => {\n});\n}\n- const cubes = await Cube.find({}, 'cards')\n+ let cubeQ;\n+ if (req.query.maxShortId) {\n+ cubeQ = Deck.find({ shortID: { $gt: req.query.maxShortId } }, 'cards shortID')\n+ .sort({ shortID: 1 })\n+ .limit(cubePageSize)\n+ .lean();\n+ } else {\n+ cubeQ = Deck.find({}, 'cards shortID')\n.sort({ shortID: 1 })\n.skip(req.params.page * cubePageSize)\n.limit(cubePageSize)\n.lean();\n+ }\n+ const cubes = await cubeQ;\n+ const maxShortId = cubes[cubes.length - 1].shortID;\nreturn res.status(200).send({\nsuccess: 'true',\n+ maxShortId,\npages: Math.ceil(count / cubePageSize),\ncubes: cubes.map((cube) => cube.cards.map((card) => carddb.cardFromId(card.cardID).name_lower)),\n});\n@@ -260,14 +271,26 @@ router.get('/api/downloaddecks/:page/:key', async (req, res) => {\n});\n}\n- const decks = await Deck.find({}, 'seats')\n+ let deckQ;\n+ if (req.query.maxDate) {\n+ deckQ = Deck.find({ date: { $gt: req.query.maxDate } }, 'seats date')\n+ .sort({ date: 1 })\n+ .limit(deckPageSize)\n+ .lean();\n+ } else {\n+ deckQ = Deck.find({}, 'seats date')\n.sort({ date: 1 })\n.skip(req.params.page * deckPageSize)\n.limit(deckPageSize)\n.lean();\n+ }\n+ const decks = await deckQ;\n+\n+ const maxDate = decks[decks.length - 1].date;\nreturn res.status(200).send({\nsuccess: 'true',\n+ maxDate,\npages: Math.ceil(count / deckPageSize),\ndecks: decks.map((deck) => {\nconst main = [];\n",
        "date": "29.06.2020 20:29:34",
        "repo": "dekkerglen/cubecobra",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor code to handle querying based on maxShortId and maxDate parameters."
    },
    {
        "msg": "allow JS-Ref to accept integer numbers as args",
        "diff": "diff --git a/src/library/js_interface.js b/src/library/js_interface.js @@ -25,7 +25,7 @@ define_libfunc(\"js-eval\", 1, 1, function(ar){\nreturn eval2(ar[0]);\n});\ndefine_libfunc(\"js-ref\", 2, 2, function(ar){\n- if(typeof ar[1] === \"string\"){\n+ if(typeof ar[1] === \"string\" || Number.isInteger(ar[1)){\nreturn ar[0][ar[1]];\n}\nelse{\n",
        "date": "28.10.2021 16:12:04",
        "repo": "biwascheme/biwascheme",
        "type": "allow",
        "chatgpt_zeroshot": "Add support for accessing array elements by index in js-ref function"
    },
    {
        "msg": "allow filter arrays",
        "diff": "diff --git a/src/extensions/filter-control/bootstrap-table-filter-control.js b/src/extensions/filter-control/bootstrap-table-filter-control.js @@ -206,17 +206,39 @@ $.BootstrapTable = class extends $.BootstrapTable {\nif ($.inArray(key, that.header.fields) !== -1) {\nif (value === undefined || value === null) {\ntmpItemIsExpected = false\n+ } else if (typeof value === 'object') {\n+ value.forEach((objectValue) => {\n+ if (tmpItemIsExpected) {\n+ return\n+ }\n+ tmpItemIsExpected = that.isValueExpected(fval, objectValue, thisColumn, key)\n+ })\n} else if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n- if (thisColumn.filterStrictSearch) {\n- tmpItemIsExpected = value.toString().toLowerCase() === fval.toString().toLowerCase()\n- } else if (thisColumn.filterStartsWithSearch) {\n- tmpItemIsExpected = (`${value}`).toLowerCase().indexOf(fval) === 0\n+ tmpItemIsExpected = that.isValueExpected(fval, value, thisColumn, key)\n+ }\n+ }\n+ }\n+\n+ itemIsExpected.push(tmpItemIsExpected)\n+ })\n+\n+ return !itemIsExpected.includes(false)\n+ })\n+ : that.data\n+ }\n+\n+ isValueExpected (searchValue, value, column, key) {\n+ let tmpItemIsExpected = false\n+ if (column.filterStrictSearch) {\n+ tmpItemIsExpected = value.toString().toLowerCase() === searchValue.toString().toLowerCase()\n+ } else if (column.filterStartsWithSearch) {\n+ tmpItemIsExpected = (`${value}`).toLowerCase().indexOf(searchValue) === 0\n} else {\n- tmpItemIsExpected = (`${value}`).toLowerCase().includes(fval)\n+ tmpItemIsExpected = (`${value}`).toLowerCase().includes(searchValue)\n}\nconst largerSmallerEqualsRegex = /(?:(<=|=>|=<|>=|>|<)(?:\\s+)?(\\d+)?|(\\d+)?(\\s+)?(<=|=>|=<|>=|>|<))/gm\n- const matches = largerSmallerEqualsRegex.exec(fval)\n+ const matches = largerSmallerEqualsRegex.exec(searchValue)\nif (matches) {\nconst operator = matches[1] || `${matches[5]}l`\n@@ -250,22 +272,14 @@ $.BootstrapTable = class extends $.BootstrapTable {\n}\n}\n- if (thisColumn.filterCustomSearch) {\n- const customSearchResult = Utils.calculateObjectValue(that, thisColumn.filterCustomSearch, [fval, value, key, that.options.data], true)\n+ if (column.filterCustomSearch) {\n+ const customSearchResult = Utils.calculateObjectValue(this, column.filterCustomSearch, [searchValue, value, key, this.options.data], true)\nif (customSearchResult !== null) {\ntmpItemIsExpected = customSearchResult\n}\n}\n- }\n- }\n- }\n- itemIsExpected.push(tmpItemIsExpected)\n- })\n-\n- return !itemIsExpected.includes(false)\n- })\n- : that.data\n+ return tmpItemIsExpected\n}\ninitColumnSearch (filterColumnsDefaults) {\n",
        "date": "08.07.2020 21:05:29",
        "repo": "wenzhixin/bootstrap-table",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor filter control logic and add support for object values in search."
    },
    {
        "msg": "allow use of scoped packages with a pinned version Fixes",
        "diff": "diff --git a/packages/create-react-app/createReactApp.js b/packages/create-react-app/createReactApp.js @@ -441,7 +441,7 @@ function getPackageName(installPackage) {\n// git+https://github.com/mycompany/react-scripts.git\n// git+ssh://github.com/mycompany/react-scripts.git#v1.2.3\nreturn Promise.resolve(installPackage.match(/([^\\/]+)\\.git(#.*)?$/)[1]);\n- } else if (installPackage.indexOf('@') > 0) {\n+ } else if (installPackage.match(/.+@/)) {\n// Do not match @scope/ when stripping off @version or @tag\nreturn Promise.resolve(\ninstallPackage.charAt(0) + installPackage.substr(1).split('@')[0]\n",
        "date": "01.08.2017 17:10:55",
        "repo": "react-workspaces/create-react-app",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor getPackageName function to use regex for checking if installPackage contains '@' symbol."
    },
    {
        "msg": "allow parsing of ecma 8",
        "diff": "diff --git a/packages/react-scripts/config/webpack.config.prod.js b/packages/react-scripts/config/webpack.config.prod.js @@ -315,7 +315,7 @@ module.exports = {\n// Minify the code.\nnew UglifyJsPlugin({\nuglifyOptions: {\n- ecma: 5,\n+ ecma: 8,\ncompress: {\nwarnings: false,\n// Disabled because of an issue with Uglify breaking seemingly valid code:\n",
        "date": "13.01.2018 23:59:09",
        "repo": "react-workspaces/create-react-app",
        "type": "allow",
        "chatgpt_zeroshot": "Update UglifyJS ecma version to 8 in webpack config for production build"
    },
    {
        "msg": "allow dynamic import proposal in node_modules",
        "diff": "diff --git a/packages/babel-preset-react-app/dependencies.js b/packages/babel-preset-react-app/dependencies.js @@ -87,6 +87,8 @@ module.exports = function(api, opts) {\nasync: false,\n},\n],\n+ // Adds syntax support for import()\n+ require('@babel/plugin-syntax-dynamic-import').default,\n].filter(Boolean),\n};\n};\n",
        "date": "20.09.2018 16:54:12",
        "repo": "react-workspaces/create-react-app",
        "type": "allow",
        "chatgpt_zeroshot": "Add support for import() syntax in babel-preset-react-app"
    },
    {
        "msg": "allow additional Jest config keys",
        "diff": "diff --git a/packages/react-scripts/scripts/utils/createJestConfig.js b/packages/react-scripts/scripts/utils/createJestConfig.js @@ -74,15 +74,25 @@ module.exports = (resolve, rootDir, isEjecting) => {\n'extraGlobals',\n'globalSetup',\n'globalTeardown',\n+ 'moduleNameMapper',\n'resetMocks',\n'resetModules',\n'snapshotSerializers',\n+ 'transform',\n+ 'transformIgnorePatterns',\n'watchPathIgnorePatterns',\n];\nif (overrides) {\nsupportedKeys.forEach(key => {\nif (overrides.hasOwnProperty(key)) {\n+ if (Array.isArray(config[key]) || typeof config[key] !== 'object') {\n+ // for arrays or primitive types, directly override the config key\nconfig[key] = overrides[key];\n+ } else {\n+ // for object types, extend gracefully\n+ config[key] = Object.assign({}, config[key], overrides[key]);\n+ }\n+\ndelete overrides[key];\n}\n});\n",
        "date": "12.05.2019 07:30:58",
        "repo": "react-workspaces/create-react-app",
        "type": "allow",
        "chatgpt_zeroshot": "Add support for overriding module name mapper, transform, and transform ignore patterns in Jest config"
    },
    {
        "msg": "allow the same file to be attached, bug in login",
        "diff": "diff --git a/index.html b/index.html function(err) {\nthis.props.onError(err, \"err\");\n});\n+ // Clear the value so the same file can be uploaded again.\n+ e.target.value = '';\n},\nrender: function() {\nreturn (\n});\n}\n}\n+ // Clear the value so the same file can be uploaded again.\n+ e.target.value = '';\n},\nhandleAttachFile: function(e) {\n}, false);\nreader.readAsDataURL(file);\n}\n+ // Clear the value so the same file can be uploaded again.\n+ e.target.value = '';\n},\nhandleSend: function() {\nvar promise = null;\nvar token = Tinode.getLoginToken();\n- if (token) {\n- promise = Tinode.loginToken(token.token, cred);\n- } else if (password) {\n+ if (login && password) {\nthis.setState({password: null});\npromise = Tinode.loginBasic(login, password, cred);\n+ } else if (token) {\n+ promise = Tinode.loginToken(token.token, cred);\n} else {\nthis.setState({loginDisabled: false});\n}\n",
        "date": "23.03.2018 19:36:59",
        "repo": "tinode/webapp",
        "type": "allow",
        "chatgpt_zeroshot": "Clear file input value after uploading and fix login logic in handleSend."
    },
    {
        "msg": "allow instanceId to be passed through",
        "diff": "diff --git a/components/Form/Select/ThemedReactSelect.js b/components/Form/Select/ThemedReactSelect.js @@ -15,6 +15,7 @@ ThemedReactSelect.propTypes = {\ndisabled: bool,\nhasErrors: bool,\nid: string,\n+ instanceId: string,\n// TODO: Resolve why multiselects can end up with touched: { key: array }\n// see ThemedReactSelect as well\n// isTouched: bool,\n@@ -25,10 +26,11 @@ ThemedReactSelect.defaultProps = {\ndisabled: false,\nhasErrors: false,\nid: undefined,\n+ instanceId: undefined,\nisTouched: false,\n};\n-function ThemedReactSelect({ disabled, hasErrors, id, ...props }) {\n+function ThemedReactSelect({ disabled, hasErrors, id, instanceId, ...props }) {\n// See TODO in propTypes definition\n// eslint-disable-next-line react/destructuring-assignment\nconst isTouched = Array.isArray(props.isTouched) ? true : props.isTouched; // coerce to boolean\n@@ -44,7 +46,7 @@ function ThemedReactSelect({ disabled, hasErrors, id, ...props }) {\nreturn (\n<ReactSelect\n{...props}\n- instanceId={id}\n+ instanceId={instanceId || id}\ndisabled={disabled}\nstyles={{\ncontrol: base => {\n",
        "date": "15.05.2019 16:37:16",
        "repo": "operationcode/front-end",
        "type": "allow",
        "chatgpt_zeroshot": "Add instanceId prop to ThemedReactSelect component"
    },
    {
        "msg": "allow `data-testid` to get passed to <Container>",
        "diff": "diff --git a/components/Container/Container.js b/components/Container/Container.js import React from 'react';\nimport { bool, node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classNames from 'classnames';\n+import { getDataAttributes } from 'common/utils/prop-utils';\nimport styles from './Container.css';\nContainer.propTypes = {\n@@ -28,6 +29,7 @@ function Container({\nid,\nisFullViewportHeight,\ntheme,\n+ ...props\n}) {\n// See https://css-tricks.com/tinted-images-multiple-backgrounds/ for explanation\nconst darkOverlay = 'linear-gradient(rgba(33, 48, 69, 0.65),rgba(33, 48, 69, 0.65))';\n@@ -37,6 +39,8 @@ function Container({\n}\n: undefined;\n+ const customDataAttributes = getDataAttributes(props);\n+\nreturn (\n<div\nclassName={classNames(className, styles.Container, styles[theme], {\n@@ -44,6 +48,7 @@ function Container({\n})}\nid={id}\nstyle={dynamicBackgroundImage}\n+ {...customDataAttributes}\n>\n<div className={styles.content}>{children}</div>\n</div>\n",
        "date": "11.06.2019 12:56:43",
        "repo": "operationcode/front-end",
        "type": "allow",
        "chatgpt_zeroshot": "Add custom data attributes to Container component props"
    },
    {
        "msg": "allow select native browser validation to work if it is properly wrapped in input field class",
        "diff": "diff --git a/sass/components/forms/_select.scss b/sass/components/forms/_select.scss @@ -13,6 +13,20 @@ select {\nheight: $input-height;\n}\n+\n+.input-field {\n+ select {\n+ display: block;\n+ position: absolute;\n+ width: 0;\n+ pointer-events: none;\n+ height: 0;\n+ top: 0;\n+ left: 0;\n+ opacity: 0;\n+ }\n+}\n+\n.select-label {\nposition: absolute;\n}\n",
        "date": "20.07.2017 14:08:13",
        "repo": "dogfalo/materialize",
        "type": "allow",
        "chatgpt_zeroshot": "Add hidden input field for select element"
    },
    {
        "msg": "allow user to try to revoke non-existing tokens.",
        "diff": "diff --git a/modules/user/src/main/groovy/org/openforis/sepal/component/user/endpoint/UserEndpoint.groovy b/modules/user/src/main/groovy/org/openforis/sepal/component/user/endpoint/UserEndpoint.groovy @@ -206,6 +206,8 @@ class UserEndpoint {\npost('/google/revoke-access') {\nresponse.contentType = 'application/json'\n+ if (!sepalUser.googleTokens)\n+ return send(toJson([status: 'success', message: 'No tokens to revoke']))\ncomponent.submit(\nnew RevokeGoogleAccountAccess(\nusername: sepalUser.username,\n",
        "date": "03.05.2017 15:00:20",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Add check for existing Google tokens before revoking access"
    },
    {
        "msg": "allow home directory size check in Windows.",
        "diff": "diff --git a/modules/sepal-server/src/main/groovy/org/openforis/sepal/component/files/query/GbUsed.groovy b/modules/sepal-server/src/main/groovy/org/openforis/sepal/component/files/query/GbUsed.groovy package org.openforis.sepal.component.files.query\n+import org.apache.commons.lang.SystemUtils\nimport org.openforis.sepal.query.Query\nimport org.openforis.sepal.query.QueryHandler\nimport org.openforis.sepal.util.Terminal\n@@ -20,11 +21,16 @@ class GbUsedHandler implements QueryHandler<Double, GbUsed> {\nDouble execute(GbUsed query) {\ndef userDir = new File(homeDir, query.username)\nuserDir.mkdirs()\n+ double bytes\n+ if (SystemUtils.IS_OS_WINDOWS)\n+ bytes = userDir.directorySize()\n+ else {\ndef du = Terminal.execute(userDir,\n'/bin/bash', '-c',\n'command -v ionice >/dev/null 2>&1 && ionice -c 2 -n 7 nice -n 19 du -sk . || nice -n 19 du -sk .'\n)\n- def bytes = du.split(/\\W/).first() as double\n+ bytes = du.split(/\\W/).first() as double\n+ }\nreturn bytes / 1000 / 1000\n}\n}\n",
        "date": "15.01.2018 13:31:51",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Add support for calculating directory size on Windows in GbUsedHandler"
    },
    {
        "msg": "allow initial values to be explicitly set in form.",
        "diff": "diff --git a/modules/gui-react/frontend/src/widget/form.js b/modules/gui-react/frontend/src/widget/form.js @@ -96,6 +96,20 @@ export function form(inputs, mapStateToProps) {\nreturn !!Object.keys(this.state.values).find(name => this.error(name))\n}\n+ setInitialValues(values) {\n+ this.setState((prevState) => {\n+ const state = {...prevState, dirty: false}\n+ Object.keys(inputs).forEach(name => {\n+ state.initialValues[name] = name in values ? values[name] : ''\n+ state.values[name] = name in values ? values[name] : ''\n+ state.errors[name] = ''\n+ })\n+ if (prevState.dirty)\n+ this.onClean()\n+ return state\n+ })\n+ }\n+\nreset() {\nthis.setState((prevState) => {\nconst dirty = !!Object.keys(inputs).find((name) => {\n@@ -152,6 +166,7 @@ export function form(inputs, mapStateToProps) {\nhasInvalid: this.hasInvalid,\nonDirty: (listener) => this.onDirtyListeners.push(listener),\nonClean: (listener) => this.onCleanListeners.push(listener),\n+ setInitialValues: (values) => this.setInitialValues(values),\nreset: () => this.reset(),\nisDirty: () => this.isDirty,\nvalues: () => this.state.values\n",
        "date": "19.04.2018 13:17:09",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Add setInitialValues method to Form component"
    },
    {
        "msg": "allow className to be specified on input component.",
        "diff": "diff --git a/modules/gui-react/frontend/src/widget/form.js b/modules/gui-react/frontend/src/widget/form.js @@ -241,7 +241,7 @@ export const ErrorMessage = ({input}) =>\nexport class Input extends React.Component {\nrender() {\n- const {input, validate = 'onBlur', onChange, onBlur, ...props} = this.props\n+ const {input, validate = 'onBlur', onChange, className, onBlur, ...props} = this.props\nreturn (\n<input\n{...props}\n@@ -260,7 +260,7 @@ export class Input extends React.Component {\nif (validate === 'onBlur')\ninput.validate()\n}}\n- className={input.errorClass}\n+ className={[input.errorClass, className].join(' ')}\n/>\n)\n}\n@@ -274,4 +274,5 @@ Input.propTypes = {\nplaceholder: PropTypes.string,\ntabIndex: PropTypes.number,\nautoComplete: PropTypes.string,\n+ className: PropTypes.string\n}\n",
        "date": "17.05.2018 15:53:36",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Add className prop to Input component"
    },
    {
        "msg": "allow additional props to be passed to the datePicker input component.",
        "diff": "diff --git a/modules/gui-react/frontend/src/widget/datePicker.js b/modules/gui-react/frontend/src/widget/datePicker.js @@ -55,12 +55,13 @@ class DatePicker extends React.Component {\n}\nrender() {\n- const {input, fromYear, toYear, className} = this.props\n+ const {input, fromYear, toYear, className, ...props} = this.props\nconst {edit} = this.state\nreturn (\n<div className={className}>\n<div className={styles.input}>\n<Input\n+ {...props}\ninput={input}\nmaxLength={10}\nonFocus={() => this.editDate(true)}\n",
        "date": "17.05.2018 16:11:38",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor DatePicker component props to spread additional props"
    },
    {
        "msg": "allow single child.",
        "diff": "diff --git a/modules/gui/frontend/src/widget/button.js b/modules/gui/frontend/src/widget/button.js @@ -145,7 +145,7 @@ export const Button = ({\n)\nButton.propTypes = {\n- children: PropTypes.array,\n+ children: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\nclassName: PropTypes.string,\ndisabled: PropTypes.any,\nicon: PropTypes.string,\n",
        "date": "05.10.2018 11:22:48",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Update Button component propTypes for children to allow both arrays and objects."
    },
    {
        "msg": "allow PanelButtons to be used without a form.",
        "diff": "diff --git a/modules/gui/frontend/src/widget/panelButtons.js b/modules/gui/frontend/src/widget/panelButtons.js @@ -35,7 +35,7 @@ class PanelButtons extends React.Component {\napply() {\nconst {form, onApply} = this.props\n- onApply(form.values())\n+ onApply(form && form.values())\n}\nclosePanel() {\n@@ -209,8 +209,7 @@ class PanelButtons extends React.Component {\nrenderCancelButton() {\nconst {isActionForm, cancelLabel = msg('button.cancel'), form} = this.props\n- const dirty = form.isDirty()\n- const showCancelButton = isActionForm || dirty\n+ const showCancelButton = isActionForm || form.isDirty()\nreturn (\n<Button\nlook='cancel'\n@@ -229,17 +228,16 @@ class PanelButtons extends React.Component {\nrenderOkButton() {\nconst {isActionForm, applyLabel = msg('button.ok'), form} = this.props\n- const dirty = form.isDirty()\nreturn (\n<Button\n- type='submit'\n+ type={isActionForm ? 'button' : 'submit'}\nlook='apply'\nicon='check'\nlabel={applyLabel}\n- disabled={form.isInvalid()}\n+ disabled={!isActionForm && form.isInvalid()}\nonClick={e => {\ne.preventDefault()\n- dirty || isActionForm ? this.ok() : this.cancel()\n+ isActionForm || form.isDirty() ? this.ok() : this.cancel()\n}}\nonMouseDown={e => e.preventDefault()} // Prevent onBlur validation before canceling\n/>\n@@ -247,17 +245,17 @@ class PanelButtons extends React.Component {\n}\nrenderFormButtons() {\n+ const {isActionForm, onApply, onCancel} = this.props\nreturn (\n<ButtonGroup>\n- {this.renderCancelButton()}\n- {this.renderOkButton()}\n+ {!isActionForm || onCancel ? this.renderCancelButton() : null}\n+ {!isActionForm || onApply ? this.renderOkButton() : null}\n</ButtonGroup>\n)\n}\n}\nPanelButtons.propTypes = {\n- form: PropTypes.object.isRequired,\nstatePath: PropTypes.string.isRequired,\nadditionalButtons: PropTypes.arrayOf(\nPropTypes.shape({\n@@ -269,6 +267,7 @@ PanelButtons.propTypes = {\n),\napplyLabel: PropTypes.string,\ncancelLabel: PropTypes.string,\n+ form: PropTypes.object,\ninitialized: PropTypes.any,\nisActionForm: PropTypes.any,\nmodalOnDirty: PropTypes.any,\n",
        "date": "14.11.2018 16:56:15",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor form validation logic in PanelButtons component"
    },
    {
        "msg": "allow float values in slider.",
        "diff": "diff --git a/modules/gui/frontend/src/widget/slider.js b/modules/gui/frontend/src/widget/slider.js @@ -69,13 +69,14 @@ class SliderContainer extends React.Component {\n}\nrenderDynamics() {\n- const {input, width, range, ticks, snap, minValue, maxValue} = this.props\n+ const {input, width, range, float, ticks, snap, minValue, maxValue} = this.props\nreturn (\n<SliderDynamics\ninput={input}\nminValue={minValue}\nmaxValue={maxValue}\nwidth={width}\n+ float={float}\nticks={ticks}\nsnap={snap}\nrange={range}\n@@ -114,6 +115,7 @@ SliderContainer.propTypes = {\nmaxValue: PropTypes.number,\nminValue: PropTypes.number,\nnormalize: PropTypes.func,\n+ float: PropTypes.bool,\nsnap: PropTypes.bool,\nticks: PropTypes.oneOfType([\nPropTypes.number,\n@@ -346,8 +348,11 @@ class SliderDynamics extends React.Component {\nposition = Math.round(position)\nif (position !== this.state.position) {\nthis.setState(prevState => ({...prevState, position}))\n+ const value = this.toValue(this.snapPosition(position))\nthis.props.input.set(\n- Math.round(this.toValue(this.snapPosition(position)))\n+ this.props.float\n+ ? value\n+ : Math.round(value)\n)\n}\n}\n@@ -386,6 +391,7 @@ SliderDynamics.propTypes = {\nmaxValue: PropTypes.number.isRequired,\nminValue: PropTypes.number.isRequired,\nnormalize: PropTypes.func.isRequired,\n+ float: PropTypes.bool,\nsnap: PropTypes.bool,\nticks: PropTypes.array,\nwidth: PropTypes.number\n@@ -456,13 +462,14 @@ export default class Slider extends React.Component {\n}\nrenderContainer() {\n- const {input, logScale, snap, range = 'left', info, disabled} = this.props\n+ const {input, logScale, float = false, snap, range = 'left', info, disabled} = this.props\nconst {ticks, minValue, maxValue, width} = this.state\nreturn (\n<SliderContainer\ninput={input}\nminValue={minValue}\nmaxValue={maxValue}\n+ float={float}\nticks={ticks}\nsnap={snap}\nrange={range}\n@@ -516,6 +523,7 @@ Slider.propTypes = {\nmaxValue: PropTypes.number,\nminValue: PropTypes.number,\nrange: PropTypes.oneOf(['none', 'left', 'right']),\n+ float: PropTypes.any,\nsnap: PropTypes.any,\nticks: PropTypes.oneOfType([\n// PropTypes.number,\n",
        "date": "15.01.2019 11:29:44",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Add support for floating point values in Slider component"
    },
    {
        "msg": "allow node to ssh into ssh-gateway.",
        "diff": "diff --git a/modules/terminal/docker/Dockerfile b/modules/terminal/docker/Dockerfile @@ -8,7 +8,11 @@ ENV PORT 8000\nWORKDIR ${ROOT}\nADD package.json ${ROOT}/package.json\n-RUN npm install\n+RUN apt-get update && \\\n+ apt-get install sudo && \\\n+ adduser node sudo && \\\n+ echo -e \"\\nnode ALL = (root) NOPASSWD: /usr/bin/ssh\\n\" >> /etc/sudoers && \\\n+ npm install\nADD src ${ROOT}/src\n",
        "date": "12.03.2019 12:01:21",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Update Dockerfile to allow node user to run ssh command without password prompt"
    },
    {
        "msg": "allow additional policies to be specified.",
        "diff": "diff --git a/modules/gui/frontend/src/app/home/body/process/recipeFormPanel.js b/modules/gui/frontend/src/app/home/body/process/recipeFormPanel.js @@ -24,6 +24,7 @@ export const recipeFormPanel = ({\nmodelToValues = model => ({...model}),\nvaluesToModel = values => ({...values}),\npolicy = defaultPolicy,\n+ additionalPolicy = () => ({})\n}) => {\nconst createMapRecipeToProps = mapRecipeToProps =>\nrecipe => {\n@@ -65,10 +66,11 @@ export const recipeFormPanel = ({\n}\n}\n+ const policyToApply = props => ({...policy(props), ...additionalPolicy(props)})\nreturn (\nwithRecipe(createMapRecipeToProps(mapRecipeToProps))(\nwithPanelWizardContext()(\n- activatable({id, policy})(\n+ activatable({id, policy: policyToApply})(\ninitValues(valuesSpec)(\nform({fields, constraints})(\nHigherOrderComponent\n",
        "date": "17.04.2019 15:55:00",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Add additional policy function to recipeFormPanel"
    },
    {
        "msg": "allow activatable id to be a function.",
        "diff": "diff --git a/modules/gui/frontend/src/widget/activation/activatable.js b/modules/gui/frontend/src/widget/activation/activatable.js @@ -89,8 +89,9 @@ export const activatable = ({id, policy, alwaysAllow}) => {\nreturn WrappedComponent => {\nclass HigherOrderComponent extends React.Component {\nrender() {\n+ const activatableId = _.isFunction(id) ? id(this.props) : id\nreturn (\n- <Activatable id={id} policy={policy} alwaysAllow={alwaysAllow} otherProps={this.props}>\n+ <Activatable id={activatableId} policy={policy} alwaysAllow={alwaysAllow} otherProps={this.props}>\n{activatable =>\nReact.createElement(\nWrappedComponent,\n",
        "date": "25.04.2019 14:43:54",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor activatable component to dynamically generate activatableId"
    },
    {
        "msg": "allow lists to scroll vertically.",
        "diff": "diff --git a/modules/gui/frontend/src/widget/list.js b/modules/gui/frontend/src/widget/list.js @@ -67,7 +67,7 @@ export default class List extends React.Component {\nhandleHeight\nonResize={() => this.scrollHighlighted$.next()}>\n<ScrollableContainer className={className}>\n- <Scrollable className={styles.options}>\n+ <Scrollable className={styles.options} direction='xy'>\n{scrollableContainerHeight => this.renderList(scrollableContainerHeight)}\n</Scrollable>\n</ScrollableContainer>\n",
        "date": "13.05.2019 10:17:34",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Add direction prop to Scrollable component in List widget"
    },
    {
        "msg": "allow cancel with escape for invalid forms.",
        "diff": "diff --git a/modules/gui/frontend/src/widget/formPanel.js b/modules/gui/frontend/src/widget/formPanel.js @@ -138,12 +138,8 @@ export class FormPanelButtons extends React.Component {\ninvalid\n? null\n: onOk\n- const onEscape =\n- invalid\n- ? null\n- : canSubmit\n- ? onCancel\n- : onOk\n+ const onEscape = invalid || canSubmit ? onCancel : onOk\n+ console.log({invalid, canSubmit, onEscape})\nreturn (\n<PanelButtons\nonEnter={onEnter}\n",
        "date": "17.05.2019 07:50:21",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor FormPanelButtons component to simplify logic for onEscape event handling"
    },
    {
        "msg": "allow non-plain objects to be resolved.",
        "diff": "diff --git a/modules/gui/frontend/src/stateUtils.js b/modules/gui/frontend/src/stateUtils.js @@ -47,7 +47,7 @@ export const resolve = (object, path, createTemplates = false) =>\n}\nreturn value[index]\n}\n- if (_.isPlainObject(value)) {\n+ if (_.isObjectLike(value)) {\n// match object property\nif (value[pathElement] !== undefined) {\nreturn value[pathElement]\n",
        "date": "17.05.2019 10:17:16",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor resolve function to use _.isObjectLike instead of _.isPlainObject"
    },
    {
        "msg": "allow auxiliaryImagery to be undefined.",
        "diff": "diff --git a/modules/google-earth-engine/docker/src/sepalinternal/classification/__init__.py b/modules/google-earth-engine/docker/src/sepalinternal/classification/__init__.py @@ -25,7 +25,7 @@ class Classification(ImageSpec):\nreturn image_spec\nself.images = [to_image_spec(image) for image in model['inputImagery']['images']]\n- self.auxiliary_imagery = model['auxiliaryImagery']\n+ self.auxiliary_imagery = model.get('auxiliaryImagery', [])\nself.aoi = self.images[0].aoi\nself.scale = min([image.scale for image in self.images])\nself.bands = ['class']\n",
        "date": "27.05.2019 10:23:21",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Fix handling of missing auxiliary_imagery in Classification module"
    },
    {
        "msg": "allow any prop-type for button tooltip.",
        "diff": "diff --git a/modules/gui/frontend/src/widget/button.js b/modules/gui/frontend/src/widget/button.js @@ -328,7 +328,7 @@ Button.propTypes = {\nsize: PropTypes.oneOf(['small', 'normal', 'large', 'x-large', 'xx-large']),\nstopPropagation: PropTypes.any,\ntabIndex: PropTypes.number,\n- tooltip: PropTypes.string,\n+ tooltip: PropTypes.any,\ntooltipDisabled: PropTypes.any,\ntooltipPlacement: PropTypes.oneOf(['top', 'bottom', 'left', 'right']),\ntype: PropTypes.oneOf(['button', 'submit', 'reset']),\n",
        "date": "02.07.2019 07:57:13",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Update Button component propTypes for tooltip to accept any type."
    },
    {
        "msg": "allow ViewportResizeDetector children.",
        "diff": "diff --git a/modules/gui/frontend/src/widget/viewportResizeDetector.js b/modules/gui/frontend/src/widget/viewportResizeDetector.js @@ -14,11 +14,13 @@ class ViewportResizeDetector extends React.Component {\n}\nrender() {\n- return null\n+ const {children} = this.props\n+ return children\n}\n}\nViewportResizeDetector.propTypes = {\n+ children: PropTypes.any,\ndimensions: PropTypes.object,\nonChange: PropTypes.func\n}\n",
        "date": "03.07.2019 17:34:59",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor viewportResizeDetector to render children prop instead of returning null"
    },
    {
        "msg": "allow individual modules to be cleaned.",
        "diff": "diff --git a/dev-env/sepal.sh b/dev-env/sepal.sh @@ -108,6 +108,56 @@ module_kill () {\nfi\n}\n+\n+module_clean () {\n+ local MODULE=$1\n+ message \"CLEANING\" $MODULE YELLOW\n+ case $MODULE in\n+ api-gateway)\n+ $SEPAL/gradlew \\\n+ -p $SEPAL \\\n+ --no-daemon \\\n+ :sepal-api-gateway:clean &>/dev/null\n+ ;;\n+ mongo)\n+ ;;\n+ ceo)\n+ ;;\n+ gee)\n+ cd $SEPAL/lib/js/shared\n+ rm -rf node_modules package-lock.json\n+ cd $SEPAL/modules/gee/docker\n+ rm -rf node_modules package-lock.json\n+ ;;\n+ gui)\n+ cd $SEPAL/modules/gui/frontend\n+ rm -rf node_modules package-lock.json\n+ ;;\n+ sepal-server)\n+ $SEPAL/gradlew \\\n+ -p $SEPAL \\\n+ --no-daemon \\\n+ :sepal-server:clean &>/dev/null\n+ ;;\n+ task)\n+ cd $SEPAL/lib/js/shared\n+ rm -rf node_modules package-lock.json\n+ cd $SEPAL/modules/task/docker\n+ rm -rf node_modules package-lock.json\n+ ;;\n+ user)\n+ $SEPAL/gradlew \\\n+ -p $SEPAL \\\n+ --no-daemon \\\n+ :sepal-user:clean &>/dev/null\n+ ;;\n+ *)\n+ return 1\n+ ;;\n+ esac\n+}\n+\n+\ndo_with_modules () {\nlocal COMMAND=$1\nshift\n@@ -143,8 +193,8 @@ restart () {\n}\nclean () {\n- stop\n- $SEPAL/gradlew clean -p $SEPAL\n+ do_with_modules \"module_stop\" $@\n+ do_with_modules \"module_clean\" $@\n}\nbuild () {\n@@ -272,7 +322,7 @@ usage () {\necho \"Usage: $0 <command> [<arguments>]\"\necho \"\"\necho \"Commands:\"\n- echo \" clean clean SEPAL\"\n+ echo \" clean [<module>...] clean module(s)\"\necho \" build build SEPAL\"\necho \" build-debug build SEPAL w/debug enabled\"\necho \" status [<module>...] check module(s)\"\n@@ -299,7 +349,7 @@ no_one_argument () {\ncase \"$1\" in\nclean)\nshift\n- clean\n+ clean $@\n;;\nbuild)\nshift\n",
        "date": "12.06.2020 11:18:40",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor module cleaning functionality in sepal.sh"
    },
    {
        "msg": "allow admin flag to be changed for user.",
        "diff": "diff --git a/common/src/main/groovy/org/openforis/sepal/user/User.groovy b/common/src/main/groovy/org/openforis/sepal/user/User.groovy @@ -49,7 +49,7 @@ class User implements groovymvc.security.User {\nupdateTime: updateTime)\n}\n- User withDetails(String name, String email, String organization) {\n+ User withDetails(String name, String email, String organization, boolean admin) {\nnew User(\nid: id,\nname: name,\n@@ -57,7 +57,7 @@ class User implements groovymvc.security.User {\nemail: email,\norganization: organization,\nstatus: status,\n- roles: roles,\n+ roles: admin ? [Roles.ADMIN] : [],\ncreationTime: creationTime,\nupdateTime: updateTime)\n}\n",
        "date": "24.06.2020 15:16:32",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Add admin flag to User.withDetails method"
    },
    {
        "msg": "allow ANSI color sequences in rsyslog.",
        "diff": "diff --git a/hosting-services/aws/sepal/rsyslog.conf b/hosting-services/aws/sepal/rsyslog.conf @@ -89,3 +89,6 @@ local7.* /var/log/boot.log\n# remote host is: name/ip:port, e.g. 192.168.0.1:514, port optional\n#*.* @@remote-host:514\n# ### end of the forwarding rule ###\n+\n+# Allow ANSI color sequences\n+$EscapeControlCharactersOnReceive off\n",
        "date": "03.07.2020 18:59:11",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Allow ANSI color sequences and disable escaping control characters on receive"
    },
    {
        "msg": "allow closeTab to specify next selected tab id.",
        "diff": "diff --git a/modules/gui/frontend/src/widget/tabs/tabs.js b/modules/gui/frontend/src/widget/tabs/tabs.js @@ -32,8 +32,8 @@ export const addTab = statePath => {\nreturn tab\n}\n-export const closeTab = (id, statePath) => {\n- close$.next({id, statePath})\n+export const closeTab = (id, statePath, nextId) => {\n+ close$.next({id, statePath, nextId})\nactionBuilder('CLOSING_TAB')\n.set([statePath, 'tabs', {id}, 'closing'], true)\n.dispatch()\n@@ -255,12 +255,12 @@ class _Tabs extends React.Component {\nclose$.pipe(\ndelay(CLOSE_ANIMATION_DURATION_MS * 1.2)\n).subscribe(\n- ({id, statePath}) => this.finalizeCloseTab(id, statePath)\n+ ({id, statePath, nextId}) => this.finalizeCloseTab(id, statePath, nextId)\n)\n)\n}\n- finalizeCloseTab(id, statePath) {\n+ finalizeCloseTab(id, statePath, nextId) {\nconst nextSelectedTabId = () => {\nconst tabs = select([statePath, 'tabs'])\nconst tabIndex = tabs.findIndex(tab => tab.id === id)\n@@ -276,7 +276,7 @@ class _Tabs extends React.Component {\n}\nactionBuilder('CLOSE_TAB')\n- .set([statePath, 'selectedTabId'], nextSelectedTabId())\n+ .set([statePath, 'selectedTabId'], nextId || nextSelectedTabId())\n.del([statePath, 'tabs', {id}])\n.dispatch()\n}\n",
        "date": "17.07.2020 12:45:07",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Add nextId parameter to closeTab function and finalizeCloseTab method"
    },
    {
        "msg": "allow tag buttons to wrap.",
        "diff": "diff --git a/modules/gui/frontend/src/app/home/body/apps/appList/appListData.js b/modules/gui/frontend/src/app/home/body/apps/appList/appListData.js @@ -115,7 +115,7 @@ export class AppListData extends React.Component {\n{({tagFilter, setTagFilter}) => (\n<Buttons\nchromeless\n- layout='horizontal-nowrap'\n+ layout='horizontal-wrap'\nspacing='tight'\noptions={options}\nselected={tagFilter}\n",
        "date": "21.07.2020 10:28:27",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Fix layout property in Buttons component in AppListData"
    },
    {
        "msg": "allow any prop type for input busyMessage.",
        "diff": "diff --git a/modules/gui/frontend/src/widget/input.js b/modules/gui/frontend/src/widget/input.js @@ -207,7 +207,7 @@ Input.propTypes = {\nautoCorrect: PropTypes.any,\nautoFocus: PropTypes.any,\nborder: PropTypes.any,\n- busyMessage: PropTypes.string,\n+ busyMessage: PropTypes.any,\nclassName: PropTypes.string,\ndisabled: PropTypes.any,\nerrorMessage: PropTypes.string,\n",
        "date": "21.10.2020 18:47:18",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Update PropTypes for busyMessage in Input component to accept any type."
    },
    {
        "msg": "allow text to be entered freely in date picker input.",
        "diff": "diff --git a/modules/gui/frontend/src/widget/form/datePicker.js b/modules/gui/frontend/src/widget/form/datePicker.js @@ -39,10 +39,12 @@ export const constrainDate = (date, min, max) => maxDate(minDate(date, max), min\nexport class FormDatePicker extends React.Component {\nid = `DatePicker-${guid()}`\ninputElement = React.createRef()\n+ state = {value: ''}\nrender() {\nconst {input, startDate, endDate, label, autoFocus, tooltip, tooltipPlacement} = this.props\n- const date = moment(input.value, DATE_FORMAT)\n+ const {value} = this.state\n+ const date = moment(value, DATE_FORMAT)\nreturn (\n<Activator id={this.id}>\n{panel =>\n@@ -57,20 +59,26 @@ export class FormDatePicker extends React.Component {\nstartDate={momentDate(startDate)}\nendDate={momentDate(endDate)}\nonSelect={date => {\n- const dateString = date.format(DATE_FORMAT)\n- this.inputElement.current.value = dateString\n- input.set(dateString)\n+ const value = date.format(DATE_FORMAT)\n+ this.setState({value})\n+ input.set(value)\n}}/>\n<div className={styles.input}>\n<Input\nref={this.inputElement}\n- value={input.value}\n+ value={value}\ntype='text'\nmaxLength={10}\nautoFocus={autoFocus}\nclassName={styles.input}\n- onChange={e => this.setInput(e.target.value)}\n- onBlur={() => this.inputElement.current.value = input.value}\n+ onChange={e => this.updateValue(e.target.value)}\n+ onBlur={() => {\n+ const date = momentDate(value)\n+ const formattedDate = date.isValid()\n+ ? constrainDate(date, startDate, endDate).format(DATE_FORMAT)\n+ : this.state.lastValidValue\n+ this.updateValue(formattedDate)\n+ }}\n/>\n<Button\nadditionalClassName={styles.panelTrigger}\n@@ -87,16 +95,21 @@ export class FormDatePicker extends React.Component {\n)\n}\n- setInput(value) {\n+ componentDidMount() {\n+ const value = this.props.input.value\n+ this.setState({value, lastValidValue: value})\n+ }\n+\n+ updateValue(value) {\nconst {input, startDate, endDate} = this.props\nconst date = momentDate(value)\n- // const formattedDate = date.isValid()\n- // ? constrainDate(date, startDate, endDate).format(DATE_FORMAT)\n- // : momentDate(startDate).format(DATE_FORMAT)\n- // input.set(formattedDate)\n- if (date.isValid()) {\n- const formattedDate = constrainDate(date, startDate, endDate).format(DATE_FORMAT)\n- input.set(formattedDate)\n+ const validDate = date.isValid() && constrainDate(date, startDate, endDate).isSame(date)\n+ if (validDate) {\n+ input.set(date.format(DATE_FORMAT))\n+ this.setState({value, lastValidValue: value})\n+ } else {\n+ input.set('')\n+ this.setState({value})\n}\n}\n}\n",
        "date": "27.10.2020 11:47:42",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor FormDatePicker component to update state value and handle date input changes"
    },
    {
        "msg": "allow any type of children in Label widget.",
        "diff": "diff --git a/modules/gui/frontend/src/widget/label.js b/modules/gui/frontend/src/widget/label.js @@ -43,7 +43,7 @@ export default class Label extends React.Component {\nLabel.propTypes = {\nalignment: PropTypes.oneOf(['left', 'center', 'right']),\n- children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n+ children: PropTypes.any,\nclassName: PropTypes.string,\ndisabled: PropTypes.any,\nmsg: PropTypes.string,\n",
        "date": "04.11.2020 17:57:44",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Update children prop type in Label component to allow any type of value."
    },
    {
        "msg": "allow file with decision tree to be selected.",
        "diff": "diff --git a/modules/gui/frontend/src/app/home/body/process/classification/classifier/classifier.js b/modules/gui/frontend/src/app/home/body/process/classification/classifier/classifier.js import {Form} from 'widget/form/form'\nimport {Layout} from 'widget/layout'\nimport {Panel} from 'widget/panel/panel'\n-import {RecipeActions, defaultModel} from '../classificationRecipe'\n+import {RecipeActions} from '../classificationRecipe'\nimport {RecipeFormPanel, recipeFormPanel} from 'app/home/body/process/recipeFormPanel'\nimport {compose} from 'compose'\nimport {msg} from 'translate'\n@@ -11,6 +11,7 @@ import styles from './classifier.module.css'\nimport {Button} from 'widget/button'\nimport {selectFrom} from 'stateUtils'\nimport _ from 'lodash'\n+import {FileSelect} from '../../../../../../widget/fileSelect'\nconst mapRecipeToProps = recipe => ({\nlegend: selectFrom(recipe, 'model.legend')\n@@ -265,7 +266,7 @@ class Classifier extends React.Component {\nvalue: 'MINIMUM_DISTANCE',\nlabel: msg('process.classification.panel.classifier.form.minimumDistance.label')\n},\n- {value: 'DECISION_TREE', label: msg('process.classification.panel.classifier.form.decisionTree.label')},\n+ {value: 'DECISION_TREE', label: msg('process.classification.panel.classifier.form.decisionTree.label')}\n]\nreturn (\n<Form.Buttons\n@@ -638,6 +639,7 @@ class Classifier extends React.Component {\nreturn\nreturn (\n+ <React.Fragment>\n<Form.Input\nlabel={msg('process.classification.panel.classifier.form.decisionTree.label')}\ntooltip={msg('process.classification.panel.classifier.form.decisionTree.tooltip')}\n@@ -646,11 +648,16 @@ class Classifier extends React.Component {\ntextArea\nerrorMessage\n/>\n+ <FileSelect\n+ single\n+ onSelect={file => file.text().then(text => decisionTree.set(text))}\n+ />\n+ </React.Fragment>\n)\n}\ncomponentDidMount() {\n- const {recipeId, form, inputs: {advanced}} = this.props\n+ const {recipeId} = this.props\nRecipeActions(recipeId).hidePreview().dispatch()\n}\n@@ -710,3 +717,4 @@ export default compose(\nClassifier,\nrecipeFormPanel({id: 'classifier', fields, valuesToModel, mapRecipeToProps})\n)\n+\n",
        "date": "17.11.2020 14:03:58",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor classifier.js to remove defaultModel import and add FileSelect component for decision tree selection."
    },
    {
        "msg": "allow legend values up to 100 exclusive.",
        "diff": "diff --git a/modules/gui/frontend/src/app/home/body/process/recipe/classification/legend/legend.js b/modules/gui/frontend/src/app/home/body/process/recipe/classification/legend/legend.js @@ -220,7 +220,7 @@ const COLORS = [\n]\nconst isValid = entry => {\n- const validValue = _.inRange(entry.value, 0, 99)\n+ const validValue = _.inRange(entry.value, 0, 100)\nconst validColor = !!entry.color\nconst validLabel = !!entry.label\nreturn validValue && validColor && validLabel\n",
        "date": "25.11.2020 19:08:48",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Fix validation range for entry value in legend.js"
    },
    {
        "msg": "allow crash when creating manual mosaic without selecting scenes.",
        "diff": "diff --git a/lib/js/shared/src/ee/optical/mosaic.js b/lib/js/shared/src/ee/optical/mosaic.js @@ -106,7 +106,9 @@ const extractDataSets = sources =>\n.flat()\nconst extractScenes = scenes =>\n- Object.values(scenes).flat()\n+ scenes\n+ ? Object.values(scenes).flat()\n.map(scene => toDataSets(scene.dataSet).map(dataSet => ({...scene, dataSet})))\n.flat()\n+ : []\n",
        "date": "15.04.2021 14:53:52",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor extractScenes function to handle null input scenes"
    },
    {
        "msg": "allow BlurDetector to detect mousedown.",
        "diff": "diff --git a/modules/gui/frontend/src/widget/blurDetector.js b/modules/gui/frontend/src/widget/blurDetector.js @@ -20,7 +20,7 @@ class BlurDetector extends React.Component {\nconst {addSubscription} = this.props\naddSubscription(\nmerge(\n- fromEvent(document, 'click'),\n+ fromEvent(document, 'mousedown'),\nfromEvent(document, 'focus'),\n).subscribe(\ne => this.onEvent(e)\n",
        "date": "25.05.2021 16:42:56",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Update event listener from 'click' to 'mousedown' in BlurDetector component"
    },
    {
        "msg": "allow legend builder to be locked.",
        "diff": "diff --git a/modules/gui/frontend/src/app/home/map/legendBuilder.js b/modules/gui/frontend/src/app/home/map/legendBuilder.js @@ -28,7 +28,7 @@ export class LegendBuilder extends React.Component {\n}\nrender() {\n- const {entries} = this.props\n+ const {entries, locked} = this.props\nconst {show} = this.state\nreturn (\n<Widget label={msg('map.legendBuilder.label')} labelButtons={this.labelButtons()}>\n@@ -41,10 +41,12 @@ export class LegendBuilder extends React.Component {\nonChange={this.updateEntry}\nonValidate={this.updateValidation}\nonSwap={color => this.swap(color, entry.color)}\n+ locked={locked}\n/>\n<RemoveButton\nmessage={msg('map.legendBuilder.entry.confirmation')}\nsize='small'\n+ disabled={locked}\nonRemove={() => this.removeEntry(entry)}/>\n</Layout>\n)}\n@@ -196,7 +198,7 @@ class _Entry extends React.Component {\nstate = {invalid: true}\nrender() {\n- const {form, entry, entries, mode, hasTrainingData, inputs: {value, color, label}, onSwap} = this.props\n+ const {form, entry, entries, mode, locked, inputs: {value, color, label}, onSwap} = this.props\nconst otherColors = entries\n.filter(({id}) => entry.id !== id)\n.map(({color}) => color)\n@@ -210,6 +212,7 @@ class _Entry extends React.Component {\nonChange={color => this.notifyChange({color})}\nonSwap={color => onSwap(color)}\ninvalid={!!form.errors.colorUnique}\n+ disabled={locked}\n/>\n)\n: (\n@@ -218,6 +221,7 @@ class _Entry extends React.Component {\ninput={color}\nerrorMessage={[color, 'colorUnique']}\nautoComplete={false}\n+ disabled={locked}\nonChange={e => this.notifyChange({color: e.target.value})}\n/>\n)}\n@@ -227,7 +231,7 @@ class _Entry extends React.Component {\ninput={value}\nerrorMessage={[value, 'valueUnique']}\nautoComplete={false}\n- disabled={hasTrainingData}\n+ disabled={locked}\nonChange={e => this.notifyChange({value: e.target.value})}\n/>\n@@ -297,10 +301,19 @@ class ColorInput extends React.Component {\ncolorInputRef = React.createRef()\nrender() {\n- const {input, invalid, onChange} = this.props\n+ const {input, invalid, disabled, onChange} = this.props\nconst {swap} = this.state\nreturn (\n<div className={styles.colorContainer}>\n+ {disabled\n+ ? (\n+ <div\n+ className={[styles.color, invalid ? styles.invalid : ''].join(' ')}\n+ style={{'--color': input.value}}\n+ />\n+ )\n+ : (\n+ <React.Fragment>\n<input\ntype='color'\nclassName={styles.colorInput}\n@@ -322,6 +335,9 @@ class ColorInput extends React.Component {\nstyle={{'--color': input.value}}\n/>\n</Tooltip>\n+ </React.Fragment>\n+ )\n+ }\n</div>\n)\n}\n",
        "date": "28.05.2021 13:16:00",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Add 'locked' prop to LegendBuilder and Entry components, disable inputs when locked."
    },
    {
        "msg": "allow histogram maxPixels to be overridden for a recipe.",
        "diff": "diff --git a/modules/gee/docker/src/jobs/ee/image/histogram.js b/modules/gee/docker/src/jobs/ee/image/histogram.js @@ -9,7 +9,7 @@ const worker$ = ({recipe, band, aoi}) => {\nconst {switchMap} = require('rx/operators')\nconst {toGeometry} = require('sepal/ee/aoi')\n- const {getImage$} = ImageFactory(recipe, {selection: [band]})\n+ const {getImage$, histogramMaxPixels = MAX_PIXELS} = ImageFactory(recipe, {selection: [band]})\nconst histogram = image => {\nconst geometry = aoi\n? toGeometry(aoi)\n@@ -19,7 +19,7 @@ const worker$ = ({recipe, band, aoi}) => {\ngeometry,\nscale: 1,\nbestEffort: true,\n- maxPixels: MAX_PIXELS\n+ maxPixels: histogramMaxPixels\n}).get(band)\n}\n",
        "date": "02.06.2021 17:42:54",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Update ImageFactory to accept histogramMaxPixels parameter"
    },
    {
        "msg": "allow all aux covariates to be deselected.",
        "diff": "diff --git a/modules/gui/frontend/src/app/home/body/process/recipe/classification/panels/auxiliaryImagery/auxiliaryImagery.js b/modules/gui/frontend/src/app/home/body/process/recipe/classification/panels/auxiliaryImagery/auxiliaryImagery.js import {Form} from 'widget/form/form'\nimport {Layout} from 'widget/layout'\n-import {MosaicPreview} from '../../../mosaic/mosaicPreview'\n+import {MosaicPreview} from 'app/home/body/process/recipe/mosaic/mosaicPreview'\nimport {Panel} from 'widget/panel/panel'\n-import {RecipeActions} from '../../classificationRecipe'\n+import {RecipeActions} from 'app/home/body/process/recipe/classification/classificationRecipe'\nimport {RecipeFormPanel, recipeFormPanel} from 'app/home/body/process/recipeFormPanel'\nimport {compose} from 'compose'\nimport {msg} from 'translate'\n@@ -12,7 +12,6 @@ import styles from './auxiliaryImagery.module.css'\nconst fields = {\nincluded: new Form.Field()\n- .notBlank('process.classification.panel.auxiliaryImagery.form.required')\n}\nclass AuxiliaryImagery extends React.Component {\n",
        "date": "15.10.2021 13:04:01",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Refactor import paths in AuxiliaryImagery component"
    },
    {
        "msg": "allow errorBand to be empty.",
        "diff": "diff --git a/modules/gui/frontend/src/app/home/body/process/recipe/indexChange/panels/inputImage/inputImage.js b/modules/gui/frontend/src/app/home/body/process/recipe/indexChange/panels/inputImage/inputImage.js @@ -23,8 +23,7 @@ export const fields = {\n.notEmpty(),\nband: new Form.Field()\n.notBlank(),\n- errorBand: new Form.Field()\n- .notBlank(),\n+ errorBand: new Form.Field(),\nbandMin: new Form.Field(),\nbandMax: new Form.Field(),\nerrorBandMax: new Form.Field(),\n",
        "date": "19.10.2021 12:12:37",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Remove validation for errorBand field in inputImage panel"
    },
    {
        "msg": "allow minConfidence to have one decimal.",
        "diff": "diff --git a/modules/gui/frontend/src/app/home/body/process/recipe/indexChange/panels/options/options.js b/modules/gui/frontend/src/app/home/body/process/recipe/indexChange/panels/options/options.js @@ -46,6 +46,7 @@ class Options extends React.Component {\ninput={minConfidence}\nminValue={0}\nmaxValue={5}\n+ decimals={1}\nticks={[0, 1, 2, 3, 4, 5]}\ninfo={value => msg('process.indexChange.panel.options.minConfidence.value', {value})}\ndisabled={!hasError(recipe)}\n",
        "date": "19.10.2021 12:12:58",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Add decimal support for minConfidence input in Options panel"
    },
    {
        "msg": "allow ButtonSelect to use option label as label. It has lower priority than buttonLabel.",
        "diff": "diff --git a/modules/gui/frontend/src/widget/buttonSelect.js b/modules/gui/frontend/src/widget/buttonSelect.js @@ -116,7 +116,7 @@ class ButtonSelect extends React.Component {\ngetLabel() {\nconst {label} = this.props\nconst {selectedOption} = this.state\n- return (selectedOption && selectedOption.buttonLabel) || label\n+ return (selectedOption && (selectedOption.buttonLabel || selectedOption.label)) || label\n}\ngetChevronIcon() {\n",
        "date": "23.11.2021 22:15:20",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Fix issue with displaying button label in ButtonSelect widget"
    },
    {
        "msg": "allow HTTP/S ports to be configured.",
        "diff": "diff --git a/modules/haproxy/docker-compose.yml b/modules/haproxy/docker-compose.yml @@ -8,8 +8,8 @@ services:\nimage: \"${SEPAL_DOCKER_REPOSITORY:-localhost}/openforis/haproxy:${SEPAL_VERSION:-latest}\"\ncontainer_name: haproxy\nports:\n- - \"${SEPAL_IP_ADDRESS:-127.0.0.1}:80:80\"\n- - \"${SEPAL_IP_ADDRESS:-127.0.0.1}:443:443\"\n+ - \"${SEPAL_IP_ADDRESS:-0.0.0.0}:${SEPAL_HTTP_PORT:-80}:80\"\n+ - \"${SEPAL_IP_ADDRESS:-0.0.0.0}:${SEPAL_HTTPS_PORT:-443}:443\"\nvolumes:\n- \"${SEPAL_DATA_DIR}/letsencrypt:/etc/letsencrypt\"\nenvironment:\n",
        "date": "22.12.2021 15:59:42",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Update HAProxy ports configuration to use dynamic IP address and ports."
    },
    {
        "msg": "allow dashes in version number.",
        "diff": "diff --git a/modules/r-proxy/src/filesystem.js b/modules/r-proxy/src/filesystem.js @@ -20,7 +20,7 @@ const getRepoPath = path => {\nconst getPackageInfo = path => {\nconst {dir, base} = Path.parse(path)\n- const VERSION_REGEX = /(.*?)(?:_([\\d\\.]+))?(\\..*)/\n+ const VERSION_REGEX = /(.*?)(?:_([\\d\\.-]+))?(\\..*)/\nconst result = base.match(VERSION_REGEX)\nreturn result ? {\npath,\n",
        "date": "23.12.2021 21:30:32",
        "repo": "openforis/sepal",
        "type": "allow",
        "chatgpt_zeroshot": "Update VERSION_REGEX to allow for negative numbers in package version."
    },
    {
        "msg": "set moment default locale in i18next init",
        "diff": "diff --git a/src/i18n/index.js b/src/i18n/index.js -import i18n from 'i18next'\n+import i18next from 'i18next'\nimport LanguageDetector from 'i18next-browser-languagedetector'\n+import moment from 'moment'\n-export default () => i18n\n+\n+export default () => {\n+ const i18n = i18next\n.use(LanguageDetector)\n.init({\nresources: {\n@@ -30,3 +33,8 @@ export default () => i18n\nwait: true\n}\n})\n+\n+ moment.locale(i18n.language)\n+\n+ return i18n\n+}\n",
        "date": "28.07.2017 12:13:40",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "set",
        "chatgpt_zeroshot": "Refactor i18n setup to use i18next and moment for language detection and localization."
    },
    {
        "msg": "set server statusCode on error",
        "diff": "diff --git a/components/hoc/with-errors.js b/components/hoc/with-errors.js @@ -42,16 +42,22 @@ export default Page => {\n}\n}, Page)\n- if (Page.getInitialProps) {\nExtended.getInitialProps = async context => {\n+ if (Page.getInitialProps) {\ntry {\nreturn await Page.getInitialProps(context)\n} catch (error) {\n+ if (context.res) {\n+ context.res.statusCode = error.code || 500\n+ }\n+\nreturn {\nerror\n}\n}\n}\n+\n+ return {}\n}\nreturn Extended\n",
        "date": "26.03.2018 13:48:49",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "set",
        "chatgpt_zeroshot": "Refactor error handling in with-errors hoc"
    },
    {
        "msg": "set default configuration for tests",
        "diff": "diff --git a/jest.setup.js b/jest.setup.js @@ -5,5 +5,12 @@ import 'mock-local-storage'\nimport {configure} from 'enzyme'\nimport Adapter from 'enzyme-adapter-react-16'\n+import {setConfig} from 'next/config'\nconfigure({adapter: new Adapter()})\n+\n+// Initialize Next.js configuration with empty values.\n+setConfig({\n+ publicRuntimeConfig: {},\n+ secretRuntimeConfig: {}\n+})\n",
        "date": "30.03.2018 18:11:08",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "set",
        "chatgpt_zeroshot": "Add initialization of Next.js configuration with empty values"
    },
    {
        "msg": "set screenshot width?",
        "diff": "diff --git a/README.md b/README.md **NOTE** This is currently under development, and is not ready for regular\nusage.\n-![Browse](screenshots/browse.png)\n-![Now Playing](screenshots/now-playing.png)\n-![Queue](screenshots/queue.png)\n+![Browse](screenshots/browse.png =270x)\n+![Now Playing](screenshots/now-playing.png =270x)\n+![Queue](screenshots/queue.png =270x)\n## Features\n",
        "date": "07.10.2018 16:52:33",
        "repo": "cdrummond/lms-material",
        "type": "set",
        "chatgpt_zeroshot": "Update README.md with resized screenshots"
    },
    {
        "msg": "set title when adding item",
        "diff": "diff --git a/MaterialSkin/HTML/material/js/browse-page.js b/MaterialSkin/HTML/material/js/browse-page.js @@ -480,7 +480,7 @@ var lmsBrowse = Vue.component(\"LmsBrowse\", {\n} else {\nvar command = [];\nif (item.url) {\n- command = [\"playlist\", act==\"load\" ? \"play\" : \"add\", item.url];\n+ command = [\"playlist\", act==\"load\" ? \"play\" : \"add\", item.url, item.title];\n} else if (item.app && item.id) {\ncommand = [item.app, \"playlist\", act, \"item_id:\"+item.id];\n}\n",
        "date": "21.10.2018 18:20:24",
        "repo": "cdrummond/lms-material",
        "type": "set",
        "chatgpt_zeroshot": "Add item title to playlist command in browse-page.js"
    },
    {
        "msg": "set listSize when fetch more too",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-page.js b/MaterialSkin/HTML/material/html/js/browse-page.js @@ -183,6 +183,9 @@ var lmsBrowse = Vue.component(\"LmsBrowse\", {\nthis.items.push(i);\n});\n}\n+ if (data && data.result && data.result.count) {\n+ this.listSize = data.result.count;\n+ }\n}).catch(err => {\nthis.fetchingItems = false;\n});\n",
        "date": "29.10.2018 17:17:18",
        "repo": "cdrummond/lms-material",
        "type": "set",
        "chatgpt_zeroshot": "Add logic to update list size based on data result count"
    },
    {
        "msg": "set current volume too",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/toolbar.js b/MaterialSkin/HTML/material/html/js/toolbar.js @@ -165,6 +165,7 @@ Vue.component('lms-toolbar', {\nthis.playerVolume.muted != muted ||\n((val!=this.playerVolume.val && val!=this.playerVolume.prev &&\n(!this.playerVolume.lastUpdate || ((new Date())-this.playerVolume.lastUpdate)>500)))) {\n+ this.playerVolume.current = val;\nthis.playerVolume.val = val;\nthis.playerVolume.muted = muted;\nthis.playerVolume.lastUpdate = new Date();\n",
        "date": "24.12.2018 20:11:48",
        "repo": "cdrummond/lms-material",
        "type": "set",
        "chatgpt_zeroshot": "Update player volume handling in toolbar.js"
    },
    {
        "msg": "set background colour, in case image has transparency",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/utils.js b/MaterialSkin/HTML/material/html/js/utils.js @@ -190,6 +190,7 @@ function removeUniqueness(id) {\nfunction setBgndCover(elem, coverUrl, isDark) {\nif (elem) {\n+ elem.style.backgroundColor = isDark ? \"#424242\" : \"#fff\";\nelem.style.backgroundImage = \"url('\"+(undefined==coverUrl || coverUrl.endsWith(DEFAULT_COVER) || coverUrl.endsWith(\"/music/undefined/cover\")\n? undefined : coverUrl)+\"')\";\nif (isDark) {\n",
        "date": "31.12.2018 14:31:21",
        "repo": "cdrummond/lms-material",
        "type": "set",
        "chatgpt_zeroshot": "Set background color based on darkness in setBgndCover function"
    },
    {
        "msg": "set state after pause",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/toolbar.js b/MaterialSkin/HTML/material/html/js/toolbar.js @@ -28,8 +28,8 @@ var initMediaSessionAudio = function() {\nsetInterval(function() {\naudio.play().then(_ => {\naudio.currentTime = 0; // Go back to start\n- navigator.mediaSession.playbackState = toolbarComponent.playerStatus && toolbarComponent.playerStatus.isplaying ? \"playing\" : \"paused\";\naudio.pause();\n+ navigator.mediaSession.playbackState = toolbarComponent.playerStatus && toolbarComponent.playerStatus.isplaying ? \"playing\" : \"paused\";\n});\n}, 15*1000);\n});\n",
        "date": "02.02.2019 17:50:01",
        "repo": "cdrummond/lms-material",
        "type": "set",
        "chatgpt_zeroshot": "Fix issue with media session playback state in toolbar.js"
    },
    {
        "msg": "set recycler key field",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/queue-page.js b/MaterialSkin/HTML/material/html/js/queue-page.js @@ -176,7 +176,7 @@ var lmsQueue = Vue.component(\"lms-queue\", {\n<v-divider v-if=\"(index+1 < items.length) && (index!==currentIndex && (index+1)!==currentIndex)\"></v-divider>\n<!-- </div></recycle-list></template> -->\n</template>\n- <RecycleScroller v-else :items=\"items\" :item-size=\"56\" page-mode><div slot-scope=\"{item, index}\">\n+ <RecycleScroller v-else :items=\"items\" :item-size=\"56\" page-mode><div slot-scope=\"{item, index}\" key-field=\"key\">\n<v-list-tile :key=\"item.key\" avatar v-bind:class=\"{'pq-current': index==currentIndex}\" @dragstart=\"dragStart(index, $event)\" @dragend=\"dragEnd()\" @dragover=\"dragOver($event)\" @drop=\"drop(index, $event)\" draggable @click=\"click(item, index, $event)\">\n<v-list-tile-avatar v-if=\"item.selected\" :tile=\"true\" class=\"lms-avatar\">\n<v-icon>check_box</v-icon>\n",
        "date": "24.03.2019 10:24:51",
        "repo": "cdrummond/lms-material",
        "type": "set",
        "chatgpt_zeroshot": "Add key field to RecycleScroller in queue-page.js"
    },
    {
        "msg": "set maximum list size to 25k - more than this is not handled. If a user has this many, then they need to use A..Z groups.",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-resp.js b/MaterialSkin/HTML/material/html/js/browse-resp.js @@ -13,6 +13,13 @@ function parseBrowseResp(data, parent, options, idStart, cacheKey) {\ntry {\nif (data && data.result) {\nresp.total = data.result.count;\n+ if (resp.total>LMS_BATCH_SIZE) {\n+ resp.total = 1;\n+ resp.subtitle=i18n(\"%1 Items\", data.result.count);\n+ resp.items.push({title:i18n(\"ERROR: Too many items. A maximum of %1 items can be handled. Please use A..Z groups\"), type: 'text', id:'error'});\n+ return resp;\n+ }\n+\nresp.useScroller = (parent && parent.range ? parent.range.count : resp.total) >= LMS_MIN_LIST_SCROLLER_ITEMS;\nlogJsonMessage(\"RESP\", data);\nif (parent.id && TOP_SEARCH_ID===parent.id) {\n",
        "date": "29.03.2019 18:12:19",
        "repo": "cdrummond/lms-material",
        "type": "set",
        "chatgpt_zeroshot": "Handle error for too many items in browse response"
    },
    {
        "msg": "set background url to blnak if no cover",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/utils.js b/MaterialSkin/HTML/material/html/js/utils.js @@ -268,8 +268,11 @@ function fixId(id, prefix) {\nfunction setBgndCover(elem, coverUrl, isDark) {\nif (elem) {\nelem.style.backgroundColor = isDark ? \"#424242\" : \"#fff\";\n- elem.style.backgroundImage = \"url('\"+(undefined==coverUrl || coverUrl.endsWith(DEFAULT_COVER) || coverUrl.endsWith(\"/music/undefined/cover\")\n- ? undefined : coverUrl)+\"')\";\n+ if (undefined==coverUrl || coverUrl.endsWith(DEFAULT_COVER) || coverUrl.endsWith(\"/music/undefined/cover\")) {\n+ elem.style.backgroundImage = \"url()\";\n+ } else {\n+ elem.style.backgroundImage = \"url('\"+coverUrl+\"')\";\n+ }\nif (isDark) {\n//if (coverUrl) {\nelem.style.boxShadow = \"inset 0 0 120vw 120vh rgba(72,72,72,0.9)\";\n",
        "date": "09.04.2019 18:47:32",
        "repo": "cdrummond/lms-material",
        "type": "set",
        "chatgpt_zeroshot": "Refactor setBgndCover function to handle undefined coverUrl better"
    },
    {
        "msg": "set idStart to 0 for all, and fix dir browsing",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-resp.js b/MaterialSkin/HTML/material/html/js/browse-resp.js @@ -10,6 +10,9 @@ const MORE_COMMANDS = new Set([\"item_add\", \"item_insert\", \"itemplay\", \"item_fav\"\nfunction parseBrowseResp(data, parent, options, idStart, cacheKey) {\n// NOTE: If add key to resp, then update addToCache in utils.js\nvar resp = {items: [], baseActions:[], useGrid: false, total: 0, useScroller: false, jumplist:[] };\n+ if (undefined==idStart) {\n+ idStart = 0;\n+ }\ntry {\nif (data && data.result) {\n@@ -431,9 +434,6 @@ function parseBrowseResp(data, parent, options, idStart, cacheKey) {\n}\nif (!i.id) {\n- if (undefined==idStart) {\n- idStart = 0;\n- }\nif (parent.id.startsWith(TOP_ID_PREFIX)) {\ni.id=\"item_id:\"+idStart;\n} else {\n@@ -721,7 +721,7 @@ function parseBrowseResp(data, parent, options, idStart, cacheKey) {\nvar isFolder = i.type===\"folder\";\nvar key = i.textkey;\nif (undefined!=key && (resp.jumplist.length==0 || resp.jumplist[resp.jumplist.length-1].key!=key)) {\n- resp.jumplist.push({key: key, index: resp.items.length+idStart, title});\n+ resp.jumplist.push({key: key, index: resp.items.length+idStart});\n}\nresp.items.push({\nid: (isFolder ? \"folder_id:\" : \"track_id:\") + i.id,\n",
        "date": "09.04.2019 18:48:00",
        "repo": "cdrummond/lms-material",
        "type": "set",
        "chatgpt_zeroshot": "Refactor parseBrowseResp function in browse-resp.js"
    },
    {
        "msg": "set font weight in more places",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/css/style.css b/MaterialSkin/HTML/material/html/css/style.css .v-list__tile__title, .v-select__selection, .v-select__selection--comma {\nfont-size:var(--std-font-size);\n+ font-weight:var(--std-weight);\n}\n.v-list__tile__sub-title, .v-btn__content, .v-select__slot .v-label {\nfont-size:var(--small-font-size);\n+ font-weight:var(--std-weight);\n}\n.v-text-field, .v-select__slot .v-label, .v-input .v-label {\n@@ -44,6 +46,7 @@ html {\noverflow-y:hidden;\nmargin:0px;\nfont-size:var(--std-font-size);\n+ font-weight:var(--std-weight);\n}\nbody {\n@@ -371,6 +374,7 @@ a {\n.maintoolbar-title {\nfont-size:var(--std-font-size) !important;\n+ font-weight:var(--bold-weight);\n}\n.noplayer-title {\n",
        "date": "17.09.2019 19:47:12",
        "repo": "cdrummond/lms-material",
        "type": "set",
        "chatgpt_zeroshot": "Add font-weight property to various elements in style.css"
    },
    {
        "msg": "set shortcut tooltip in desktop mode too!",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/toolbar.js b/MaterialSkin/HTML/material/html/js/toolbar.js @@ -131,7 +131,7 @@ Vue.component('lms-toolbar', {\n<v-btn icon v-if=\"!desktop && ( (isNowPlayingPage && (infoOpen || !infoPlugin)) || !isNowPlayingPage)\" @click.stop=\"playPauseButton\" class=\"toolbar-button\" id=\"pp\">\n<v-icon>{{playerStatus.isplaying ? 'pause_circle_outline' : 'play_circle_outline'}}</v-icon>\n</v-btn>\n- <v-btn icon :title=\"trans.info\" v-if=\"desktop && infoPlugin && !mini && !nowplaying\" @click.native=\"emitInfo\" class=\"toolbar-button\">\n+ <v-btn icon :title=\"trans.info | tooltip(trans.infoShortcut,keyboardControl)\" v-if=\"desktop && infoPlugin && !mini && !nowplaying\" @click.native=\"emitInfo\" class=\"toolbar-button\">\n<v-icon>info_outline</v-icon>\n</v-btn>\n<v-btn icon :title=\"trans.showLarge\" v-if=\"desktop && !largeView && !mini && !nowplaying\" @click.native=\"toggleLargeView(true)\" class=\"toolbar-button\">\n",
        "date": "05.10.2019 17:22:51",
        "repo": "cdrummond/lms-material",
        "type": "set",
        "chatgpt_zeroshot": "Add tooltip with keyboard shortcut for info button in toolbar"
    },
    {
        "msg": "set playerVolume to undefined, not playerVolume.id",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/toolbar.js b/MaterialSkin/HTML/material/html/js/toolbar.js @@ -270,7 +270,7 @@ Vue.component('lms-toolbar', {\nif (this.desktop) {\nbus.$on('playerChanged', function() {\n// Ensure we update volume when player changes.\n- this.playerVolume.id = undefined;\n+ this.playerVolume = undefined;\n}.bind(this));\n}\n",
        "date": "05.02.2020 16:22:20",
        "repo": "cdrummond/lms-material",
        "type": "set",
        "chatgpt_zeroshot": "Fix issue with updating player volume in toolbar."
    },
    {
        "msg": "set minimum size",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/main.js b/MaterialSkin/HTML/material/html/js/main.js @@ -316,6 +316,7 @@ var app = new Vue({\nvar that = this;\nthis.splitter = Split([that.$refs.left, that.$refs.right], {\nsizes: [this.splitterPercent, 100-this.splitterPercent],\n+ minSize: Math.floor(LMS_MIN_DESKTOP_WIDTH/2),\ngutterSize: 3,\ngutterAlign: 'center',\nsnapOffset: 5,\n",
        "date": "15.02.2020 10:44:00",
        "repo": "cdrummond/lms-material",
        "type": "set",
        "chatgpt_zeroshot": "Add minimum size constraint to splitter in main.js"
    },
    {
        "msg": "set autoScrollRequired if current index changed when list of queue items also changes",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/queue-page.js b/MaterialSkin/HTML/material/html/js/queue-page.js @@ -399,6 +399,9 @@ var lmsQueue = Vue.component(\"lms-queue\", {\nthis.playlistName=playerStatus.playlist.name;\nif (playerStatus.playlist.timestamp!=this.timestamp || (playerStatus.playlist.timestamp>0 && this.items.length<1) ||\n(playerStatus.playlist.timestamp<=0 && this.items.length>0) || this.listSize!=playerStatus.playlist.count) {\n+ if (playerStatus.playlist.current!=this.currentIndex) {\n+ this.autoScrollRequired = true;\n+ }\nthis.currentIndex = playerStatus.playlist.current;\nthis.timestamp = playerStatus.playlist.timestamp;\nthis.updateItems();\n",
        "date": "20.04.2020 16:25:39",
        "repo": "cdrummond/lms-material",
        "type": "set",
        "chatgpt_zeroshot": "\"Add auto scroll feature when current playlist item changes\""
    },
    {
        "msg": "set min scrollbar thumb size",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/css/style.css b/MaterialSkin/HTML/material/html/css/style.css @@ -162,6 +162,14 @@ html, .mini-player {\nmax-width:10px;\n}\n+::-webkit-scrollbar-thumb:vertical {\n+ min-height:64px;\n+}\n+\n+::-webkit-scrollbar-thumb:horizontal {\n+ min-width:64px;\n+}\n+\nhtml {\noverflow-y:hidden;\nmargin:0px;\n",
        "date": "13.05.2020 16:38:48",
        "repo": "cdrummond/lms-material",
        "type": "set",
        "chatgpt_zeroshot": "Add custom styles for scrollbar thumb sizes."
    },
    {
        "msg": "set a max of 75 items before recylcer is used - to help with mobile",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/constants.js b/MaterialSkin/HTML/material/html/js/constants.js const LMS_BATCH_SIZE = 25000;\nconst LMS_QUEUE_BATCH_SIZE = 500;\n-const LMS_MAX_NON_SCROLLER_ITEMS = 200;\n+const LMS_MAX_NON_SCROLLER_ITEMS = 75;\nconst LMS_MAX_PLAYERS = 100;\nconst LMS_IMAGE_SZ = 300\nconst LMS_IMAGE_SIZE = \"_\"+LMS_IMAGE_SZ+\"x\"+LMS_IMAGE_SZ+\"_f\";\n",
        "date": "21.05.2020 22:41:43",
        "repo": "cdrummond/lms-material",
        "type": "set",
        "chatgpt_zeroshot": "Update LMS_MAX_NON_SCROLLER_ITEMS to 75"
    },
    {
        "msg": "set max non scroller to 100",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/constants.js b/MaterialSkin/HTML/material/html/js/constants.js const LMS_BATCH_SIZE = 25000;\nconst LMS_QUEUE_BATCH_SIZE = 500;\n-const LMS_MAX_NON_SCROLLER_ITEMS = 75;\n+const LMS_MAX_NON_SCROLLER_ITEMS = 100;\nconst LMS_MAX_PLAYERS = 100;\nconst LMS_IMAGE_SZ = 300\nconst LMS_IMAGE_SIZE = \"_\"+LMS_IMAGE_SZ+\"x\"+LMS_IMAGE_SZ+\"_f\";\n",
        "date": "22.05.2020 08:29:56",
        "repo": "cdrummond/lms-material",
        "type": "set",
        "chatgpt_zeroshot": "Increase LMS_MAX_NON_SCROLLER_ITEMS to 100"
    },
    {
        "msg": "set player drag image to icon only",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/manage-players.js b/MaterialSkin/HTML/material/html/js/manage-players.js @@ -96,7 +96,7 @@ Vue.component('lms-manage-players', {\n<img :key=\"player.image\" v-lazy=\"player.image\"></img>\n</v-list-tile-avatar>\n<v-list-tile-content>\n- <v-list-tile-title style=\"cursor:pointer\" @click=\"setActive(player.id)\"><v-icon v-if=\"player.icon.icon\" class=\"pmgr-icon\" v-bind:class=\"{'active-btn':currentPlayer && currentPlayer.id==player.id}\">{{player.icon.icon}}</v-icon><img v-else class=\"pmgr-icon svg-img\" :src=\"player.icon.svg | svgIcon(darkUi, currentPlayer && currentPlayer.id==player.id)\"></img>\n+ <v-list-tile-title style=\"cursor:pointer\" @click=\"setActive(player.id)\"><v-icon v-if=\"player.icon.icon\" class=\"pmgr-icon\" v-bind:class=\"{'active-btn':currentPlayer && currentPlayer.id==player.id}\" :id=\"'pmgr-player-'+index\">{{player.icon.icon}}</v-icon><img v-else class=\"pmgr-icon svg-img\" :src=\"player.icon.svg | svgIcon(darkUi, currentPlayer && currentPlayer.id==player.id)\" :id=\"'pmgr-player-'+index\"></img>\n{{player.name}}<v-icon v-if=\"player.id==defaultPlayer\" class=\"player-status-icon\">check</v-icon><v-icon v-if=\"player.will_sleep_in\" class=\"player-status-icon\">hotel</v-icon></v-list-tile-title>\n<v-list-tile-sub-title v-if=\"isMainPlayer(player)\" v-bind:class=\"{'dimmed': !player.ison}\">{{player.track}}</v-list-tile-sub-title>\n</v-list-tile-content>\n@@ -571,6 +571,7 @@ Vue.component('lms-manage-players', {\ndragStart(which, ev) {\nev.dataTransfer.dropEffect = 'move';\nev.dataTransfer.setData('Text', \"player:\"+which);\n+ ev.dataTransfer.setDragImage(document.getElementById(\"pmgr-player-\"+which), 0, 0);\nthis.dragIndex = which;\nthis.stopScrolling = false;\nthis.draggingSyncedPlayer = this.players[which].issyncmaster || undefined!=this.players[which].syncmaster;\n",
        "date": "29.05.2020 10:20:38",
        "repo": "cdrummond/lms-material",
        "type": "set",
        "chatgpt_zeroshot": "Add drag image to player list items in manage-players.js"
    },
    {
        "msg": "set debounceTimer to undefined when cleared",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/search-field.js b/MaterialSkin/HTML/material/html/js/search-field.js @@ -55,7 +55,7 @@ Vue.component('lms-search-field', {\nstopDebounce() {\nif (undefined!=this.debounceTimer) {\nclearTimeout(this.debounceTimer);\n- this.debounceTimer;\n+ this.debounceTimer = undefined;\n}\n},\nadvanced() {\n",
        "date": "05.09.2020 19:02:44",
        "repo": "cdrummond/lms-material",
        "type": "set",
        "chatgpt_zeroshot": "Fix debounceTimer assignment in stopDebounce method"
    },
    {
        "msg": "set icon to null",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-resp.js b/MaterialSkin/HTML/material/html/js/browse-resp.js @@ -145,6 +145,7 @@ function parseBrowseResp(data, parent, options, cacheKey, parentCommand, parentG\ni.text = undefined;\ni.image = resolveImage(i.icon ? i.icon : i[\"icon-id\"], undefined, LMS_IMAGE_SIZE);\n+ i.icon = undefined;\nif (!i.image && i.commonParams && i.commonParams.album_id) {\ni.image = resolveImage(\"music/0/cover\" + LMS_IMAGE_SIZE);\n",
        "date": "25.09.2020 17:14:31",
        "repo": "cdrummond/lms-material",
        "type": "set",
        "chatgpt_zeroshot": "Remove icon property and update image property in parseBrowseResp function"
    },
    {
        "msg": "set band to default too",
        "diff": "diff --git a/MaterialSkin/Plugin.pm b/MaterialSkin/Plugin.pm @@ -72,6 +72,8 @@ sub initPlugin {\nif (my $bandgenres = $prefs->get('bandgenres')) {\n$prefs->set('bandgenres', $DEFAULT_BAND_GENRES) if $bandgenres eq '';\n+ } else {\n+ $prefs->set('bandgenres', $DEFAULT_BAND_GENRES);\n}\n$prefs->init({\n",
        "date": "14.12.2020 16:52:22",
        "repo": "cdrummond/lms-material",
        "type": "set",
        "chatgpt_zeroshot": "Set default band genres if not already set in initPlugin."
    },
    {
        "msg": "set correct background when loading tech info page",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/iframe-dialog.js b/MaterialSkin/HTML/material/html/js/iframe-dialog.js @@ -165,7 +165,7 @@ function hideClassicSkinElems(page, textCol) {\nselector.addEventListener(\"change\", selectChanged);\nselectChanged();\n}\n- } else if ('other'==page || 'extra'==page) {\n+ } else if ('other'==page || 'lms'==page) {\nif (content) {\nif (content.addEventListener) {\ncontent.addEventListener('click', otherClickHandler);\n@@ -252,8 +252,8 @@ Vue.component('lms-iframe-dialog', {\n? \"player\"\n: page.indexOf(\"server/basic.html\")>0\n? \"server\"\n- : page.startsWith(\"plugins/\") && (page.indexOf(\"?player=\")>0 || page.indexOf(\"&player=\")>0)\n- ? \"extra\"\n+ : (page == '/material/html/docs/index.html') || (page.startsWith(\"plugins/\") && (page.indexOf(\"?player=\")>0 || page.indexOf(\"&player=\")>0))\n+ ? \"lms\" // tech info, or 'extra' entry\n: \"other\";\nthis.show = true;\nthis.showMenu = false;\n",
        "date": "06.03.2021 10:12:12",
        "repo": "cdrummond/lms-material",
        "type": "set",
        "chatgpt_zeroshot": "Refactor page handling in iframe-dialog.js to include 'lms' as a valid page type."
    },
    {
        "msg": "set prevPage to page passed in",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-page.js b/MaterialSkin/HTML/material/html/js/browse-page.js @@ -1555,7 +1555,7 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\nvar len = this.history.length;\nthis.click(item);\nif (this.history.length>len) {\n- this.prevPage = NP_INFO;\n+ this.prevPage = page;\n}\n} else {\nthis.fetchItems(this.replaceCommandTerms({command:cmd, params:params}), {cancache:false, id:params[0], title:title, stdItem:params[0].startsWith(\"artist_id:\") ? STD_ITEM_ARTIST : STD_ITEM_ALBUM}, page);\n",
        "date": "21.04.2021 18:33:50",
        "repo": "cdrummond/lms-material",
        "type": "set",
        "chatgpt_zeroshot": "Fix issue with prevPage not updating correctly in browse-page.js"
    },
    {
        "msg": "set fav icon",
        "diff": "diff --git a/MaterialSkin/HTML/material/standardheader.html b/MaterialSkin/HTML/material/standardheader.html <title>[% IF pagetitle %][% pagetitle | html -%][% ELSE %][% \"SQUEEZEBOX_SERVER\" | string %][% END -%]</title>\n-<link rel=\"shortcut icon\" href=\"[% webroot %]favicon.ico\" type=\"image/x-icon\"/>\n-<link rel=\"icon\" href=\"[% webroot %]favicon.ico\" type=\"image/x-icon\"/>\n+<link href=\"/material/icon.png\" rel=\"icon shortcut\" sizes=\"128x128\">\n+<link href=\"/material/icon.png\" rel=\"apple-touch-icon\" sizes=\"128x128\">\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=[% LOCALE %]\"/>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"[% webroot %]slimserver.css?r=[% revision %]\"/>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"[% webroot %]html/font/font.css?r=49\"/>\n",
        "date": "23.05.2021 08:13:39",
        "repo": "cdrummond/lms-material",
        "type": "set",
        "chatgpt_zeroshot": "Update favicon and icon links in standardheader.html"
    },
    {
        "msg": "set apple-mobile-web-app-title",
        "diff": "diff --git a/MaterialSkin/HTML/material/index.html b/MaterialSkin/HTML/material/index.html <meta name=\"mobile-web-app-capable\" content=\"yes\">\n<meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\">\n+ <meta name=\"apple-mobile-web-app-title\" content=\"Logitech Media Server\">\n<meta name=\"application-name\" content=\"Logitech Media Server\">\n</head>\n<body>\n",
        "date": "14.07.2021 07:54:35",
        "repo": "cdrummond/lms-material",
        "type": "set",
        "chatgpt_zeroshot": "Add title for Apple mobile web app in index.html"
    },
    {
        "msg": "set titles in index.html from plugin",
        "diff": "diff --git a/MaterialSkin/HTML/material/index.html b/MaterialSkin/HTML/material/index.html <head>\n<meta charset=\"utf-8\" />\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no, minimal-ui\">\n- <title>Logitech Media Server</title>\n<link href=\"html/font/font.css?r=49\" rel=\"stylesheet\">\n<!--CSS start-->\n<link href=\"html/lib/vuetify.min.css?r=1.5.24trim\" rel=\"stylesheet\">\n<!--CSS end-->\n[% PERL %]\nmy $version=Plugins::MaterialSkin::Plugin->pluginVersion();\n+ my $windowTitle=Plugins::MaterialSkin::Plugin->windowTitle();\nmy $ua=$stash->get('userAgent');\nprint(\"<link href=\\\"html/css/themes/\");\n# Keep in sync with store.js (defaultTheme)\nprint(\" <link href=\\\"html/css/variant/standard.css?r=$version\\\" rel=\\\"stylesheet\\\" id=\\\"variantcss\\\">\\n\");\nprint(\" <link href=\\\"html/css/colors/blue.css?r=$version\\\" rel=\\\"stylesheet\\\" id=\\\"colorcss\\\">\\n\");\nprint(\" <link href=\\\"html/css/style.css?r=$version\\\" rel=\\\"stylesheet\\\">\\n\");\n- print(\" <link href=\\\"html/css/mobile.css?r=$version\\\" rel=\\\"stylesheet\\\" id=\\\"layoutcss\\\">\");\n+ print(\" <link href=\\\"html/css/mobile.css?r=$version\\\" rel=\\\"stylesheet\\\" id=\\\"layoutcss\\\">\\n\");\n+ print(\" <title>${windowTitle}</title>\\n\");\n+ print(\" <meta name=\\\"apple-mobile-web-app-title\\\" content=\\\"${windowTitle}\\\">\\n\");\n+ print(\" <meta name=\\\"application-name\\\" content=\\\"${windowTitle}\\\">\");\n[% END %]\n<link href=\"/material/customcss/mobile\" rel=\"stylesheet\" id=\"customcss\">\n<link href=\"/material/material.webmanifest\" rel=\"manifest\">\n<meta name=\"mobile-web-app-capable\" content=\"yes\">\n<meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\">\n- <meta name=\"apple-mobile-web-app-title\" content=\"Logitech Media Server\">\n- <meta name=\"application-name\" content=\"Logitech Media Server\">\n</head>\n<body>\n<div id=\"app\" v-cloak>\n[% PERL %]\nmy $version=Plugins::MaterialSkin::Plugin->pluginVersion();\nmy $windowTitle=Plugins::MaterialSkin::Plugin->windowTitle();\n- print(\"<script>const LMS_MATERIAL_REVISION=\\\"$version\\\"; const LMS_WINDOW_TITLE=\\\"$windowTitle\\\"; document.title = LMS_WINDOW_TITLE;</script>\\n\");\n+ print(\"<script>const LMS_MATERIAL_REVISION=\\\"$version\\\"; const LMS_WINDOW_TITLE=\\\"$windowTitle\\\";</script>\\n\");\nprint(\" <script src=\\\"html/lib/longpress.min.js?r=$version\\\"></script>\\n\");\nprint(\" <script src=\\\"html/js/actions.js?r=$version\\\"></script>\\n\");\nprint(\" <script src=\\\"html/js/constants.js?r=$version\\\"></script>\\n\");\n",
        "date": "10.08.2021 12:03:17",
        "repo": "cdrummond/lms-material",
        "type": "set",
        "chatgpt_zeroshot": "Update window title and meta tags in index.html"
    },
    {
        "msg": "set text type",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-page.js b/MaterialSkin/HTML/material/html/js/browse-page.js @@ -181,7 +181,7 @@ var lmsBrowse = Vue.component(\"lms-browse\", {\n</v-list-tile>\n<v-list-tile v-else-if=\"item.type=='search' || item.type=='entry'\" avatar :key=\"item.id\" class=\"lms-avatar lms-list-item\" :id=\"'item'+index\" v-bind:class=\"{'list-active': (menu.show && index==menu.index) || (fetchingItem==item.id)}\">\n<v-list-tile-content>\n- <text-field :focus=\"index==0 && !IS_MOBILE\" :title=\"item.title\" @value=\"entry(item, $event)\"></text-field>\n+ <text-field :focus=\"index==0 && !IS_MOBILE\" :title=\"item.title\" :type=\"item.type\" @value=\"entry(item, $event)\"></text-field>\n</v-list-tile-content>\n</v-list-tile>\n<v-list-tile v-else-if=\"!(isTop && (disabled.has(item.id) || hidden.has(item.id)))\" avatar @click=\"click(item, index, $event)\" :key=\"item.id\" class=\"lms-avatar lms-list-item\" :id=\"'item'+index\" @dragstart=\"dragStart(index, $event)\" @dragend=\"dragEnd()\" @dragover=\"dragOver(index, $event)\" @drop=\"drop(index, $event)\" :draggable=\"(isTop && !sortHome) || (item.draggable && (current.section!=SECTION_FAVORITES || 0==selection.size))\" @contextmenu.prevent=\"itemMenu(item, index, $event)\" v-bind:class=\"{'drop-target': dragActive && index==dropIndex, 'list-active': (menu.show && index==menu.index) || (fetchingItem==item.id)}\">\n",
        "date": "12.05.2022 11:44:43",
        "repo": "cdrummond/lms-material",
        "type": "set",
        "chatgpt_zeroshot": "Update text-field component to include type attribute based on item type"
    },
    {
        "msg": "set type to search if key is search",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/browse-resp.js b/MaterialSkin/HTML/material/html/js/browse-resp.js @@ -184,7 +184,7 @@ function parseBrowseResp(data, parent, options, cacheKey, parentCommand, parentG\nif (!i.type && !i.style && i.actions && i.actions.go && i.actions.go.params) {\nfor (var key in i.actions.go.params) {\nif (i.actions.go.params[key]==TERM_PLACEHOLDER) {\n- i.type = \"entry\";\n+ i.type = key==\"search\" ? key : \"entry\";\n}\n}\n}\n",
        "date": "12.05.2022 11:46:12",
        "repo": "cdrummond/lms-material",
        "type": "set",
        "chatgpt_zeroshot": "Refactor browse-resp.js to set type as search if key is search in actions.go.params."
    },
    {
        "msg": "set max length for ssn-last-4 to 4",
        "diff": "diff --git a/app/templates/components/payments/funds-recipient/details-form.hbs b/app/templates/components/payments/funds-recipient/details-form.hbs <div class=\"input-section__label\">SSN Last 4</div>\n<div class=\"input-section__content\">\n<div class=\"input-group\">\n- {{input type=\"text\" name=\"legal-entity-ssn-last-4\" value=stripeConnectAccount.legalEntitySsnLast4}}\n+ {{input type=\"text\" name=\"legal-entity-ssn-last-4\" maxlength=\"4\" value=stripeConnectAccount.legalEntitySsnLast4}}\n</div>\n</div>\n</div>\n",
        "date": "08.02.2017 22:10:15",
        "repo": "code-corps/code-corps-ember",
        "type": "set",
        "chatgpt_zeroshot": "Add maxlength attribute to SSN Last 4 input field"
    },
    {
        "msg": "set correct template name for namespace route",
        "diff": "diff --git a/app/routes/project-version/namespaces/namespace.js b/app/routes/project-version/namespaces/namespace.js import ClassRoute from '../classes/class';\nexport default ClassRoute.extend({\n- templateName: 'project-version/class',\n+ templateName: 'project-version/classes/class',\nmodel(params, transition) {\nreturn this.getModel('namespace', params, transition);\n",
        "date": "28.06.2017 16:48:43",
        "repo": "ember-learn/ember-api-docs",
        "type": "set",
        "chatgpt_zeroshot": "Update template name in namespace route to point to correct location"
    },
    {
        "msg": "set cache control headers for static assets",
        "diff": "diff --git a/bin/ember-fastboot b/bin/ember-fastboot const FastBootAppServer = require('fastboot-app-server');\nconst ExpressHTTPServer = require('fastboot-app-server/src/express-http-server');\nconst parseArgs = require('minimist');\n+const express = require('express');\nconst { URL } = require('url');\n// Provide a title to the process in `ps`\n@@ -26,7 +27,6 @@ if (!distPath) {\n}\nconst serverOptions = {\n- // assetsCacheControl: 'max-age=365000000, immutable',\ndistPath,\ngzip: false, // Let Fastly take care of compression, reducing load on the fastboot\n};\n@@ -35,6 +35,12 @@ const httpServer = new ExpressHTTPServer(serverOptions);\nconst app = httpServer.app;\n+app.use(express.static(distPath, {\n+ setHeaders(res, path, stat) {\n+ res.setHeader('Cache-Control', 'public, max-age=365000000, immutable');\n+ }\n+}));\n+\n/** We rewrite the 307 location header into a relativeURL so that our special setup is handled */\napp.use(function(req, res, next) {\nconst originalSendFn = res.send;\n",
        "date": "28.07.2017 21:19:01",
        "repo": "ember-learn/ember-api-docs",
        "type": "set",
        "chatgpt_zeroshot": "Add express static middleware for serving assets with cache control headers"
    },
    {
        "msg": "set specific yarn version for travis CI",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -12,7 +12,7 @@ cache:\nyarn: true\nbefore_install:\n- - curl -o- -L https://yarnpkg.com/install.sh | bash\n+ - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.0.1\n- export PATH=$HOME/.yarn/bin:$PATH\n- yarn global add bower\n",
        "date": "10.09.2017 17:49:29",
        "repo": "ember-learn/ember-api-docs",
        "type": "set",
        "chatgpt_zeroshot": "Update yarn installation script to specify version 1.0.1"
    },
    {
        "msg": "set timezone to Eastern Standard (Americas/New_York)",
        "diff": "diff --git a/test/protractor.ci.bs.conf.js b/test/protractor.ci.bs.conf.js @@ -40,6 +40,7 @@ exports.config = {\n'browserstack.video': true,\n'browserstack.local': false,\n'browserstack.networkLogs': false,\n+ 'browserstack.timezone': 'America/New_York',\nbuild: browserstackBuildID,\nname: `${theme} theme ci:bs e2e tests`,\nproject: 'ids-enterprise-e2e-ci'\n",
        "date": "20.08.2018 15:00:43",
        "repo": "infor-design/enterprise",
        "type": "set",
        "chatgpt_zeroshot": "Add browserstack timezone setting to Protractor configuration"
    },
    {
        "msg": "set timezone on Travis to UTC -4:00",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -19,6 +19,7 @@ install:\n- npm install -g grunt-cli\n- npm install\nbefore_script:\n+ - export TZ=America/New_York\n- if [ $TEST_SUITE != lint ]; then npm run build; fi\nscript:\n- if [ $TEST_SUITE = e2e ]; then (npm run quickstart &) && sleep 5; fi\n",
        "date": "23.08.2018 10:34:27",
        "repo": "infor-design/enterprise",
        "type": "set",
        "chatgpt_zeroshot": "Add timezone setting for Travis CI build"
    },
    {
        "msg": "set first available tab to selected instead of the previous",
        "diff": "diff --git a/src/components/tabs/tabs.js b/src/components/tabs/tabs.js @@ -2500,12 +2500,12 @@ Tabs.prototype = {\n*/\nthis.element.trigger('close', [targetLi]);\n- // If any tabs are left in the list, set the previous tab as the currently selected one.\n+ // If any tabs are left in the list, set the first available tab as the currently selected one.\nlet count = targetLiIndex - 1;\nwhile (count > -1) {\ncount = -1;\nif (prevLi.is(notATab)) {\n- prevLi = prevLi.prev();\n+ prevLi = this.tablist.children('li').not(notATab)[0];\ncount -= 1;\n}\n}\n@@ -2538,6 +2538,7 @@ Tabs.prototype = {\n}\n}\n+ console.log(prevLi);\nthis.focusBar(prevLi);\na.focus();\n",
        "date": "12.10.2018 14:47:14",
        "repo": "infor-design/enterprise",
        "type": "set",
        "chatgpt_zeroshot": "Refactor tab selection logic to set the first available tab as the currently selected one."
    },
    {
        "msg": "set version to dev",
        "diff": "diff --git a/package.json b/package.json {\n\"name\": \"ids-enterprise\",\n\"slug\": \"ids-enterprise\",\n- \"version\": \"4.22.0-rc.0\",\n+ \"version\": \"4.23.0-dev\",\n\"description\": \"Infor Design System (IDS) Enterprise Components for the web\",\n\"repository\": {\n\"type\": \"git\",\n",
        "date": "10.10.2019 10:29:33",
        "repo": "infor-design/enterprise",
        "type": "set",
        "chatgpt_zeroshot": "Update version to 4.23.0-dev in package.json"
    },
    {
        "msg": "set editing private variable to false by default",
        "diff": "diff --git a/src/components/homepage/homepage.js b/src/components/homepage/homepage.js @@ -25,6 +25,7 @@ const HOMEPAGE_DEFAULTS = {\nanimate: true,\ncolumns: 3,\neditable: true,\n+ editing = false, // Private\neasing: 'blockslide', // Private\ngutterSize: 20, // Private\nwidgetWidth: 360, // Private\n@@ -34,7 +35,6 @@ const HOMEPAGE_DEFAULTS = {\nfunction Homepage(element, settings) {\nthis.settings = utils.mergeSettings(element, settings, HOMEPAGE_DEFAULTS);\n- this.editing = true; // Private\nthis.element = $(element);\ndebug.logTimeStart(COMPONENT_NAME);\nthis.init();\n",
        "date": "05.03.2020 15:55:36",
        "repo": "infor-design/enterprise",
        "type": "set",
        "chatgpt_zeroshot": "Remove unnecessary editing property initialization in Homepage component"
    },
    {
        "msg": "set position absolute and onscreen for checkboxes so they can be scrolled into view when focused.",
        "diff": "diff --git a/src/components/checkboxes/_checkboxes.scss b/src/components/checkboxes/_checkboxes.scss input.checkbox,\nspan.checkbox > input {\n- left: -99999px;\n+ left: 0;\nopacity: 0;\n- position: fixed;\n+ position: absolute;\ntop: 0;\nwidth: 16px;// use fixed, to prevent page jump on click\n",
        "date": "17.04.2020 08:28:01",
        "repo": "infor-design/enterprise",
        "type": "set",
        "chatgpt_zeroshot": "Update checkbox styles to prevent page jump on click"
    },
    {
        "msg": "set the decimal option after getting the current Locale",
        "diff": "diff --git a/src/components/mask/masks.js b/src/components/mask/masks.js @@ -129,6 +129,8 @@ function addThousandsSeparator(n, thousands, options, localeStringOpts) {\nzeros -= 1;\nformatted = `0${formatted}`;\n}\n+ } else {\n+ formatted = n;\n}\nreturn formatted;\n@@ -170,6 +172,12 @@ masks.numberMask = function sohoNumberMask(rawValue, options) {\nif (!options.locale || !options.locale.length) {\noptions.locale = Locale.currentLocale.name;\n}\n+\n+ const dSeparator = Locale.getSeparator(options.locale, 'decimal');\n+ if (dSeparator === ',') {\n+ options.symbols.decimal = ',';\n+ }\n+\n// Deprecated in v4.25.1\nif (options.allowLeadingZeroes) {\nwarnAboutDeprecation('allowLeadingZeros', 'allowLeadingZeroes', 'Number Mask');\n@@ -185,6 +193,9 @@ masks.numberMask = function sohoNumberMask(rawValue, options) {\nconst suffixLength = SUFFIX && SUFFIX.length || 0;\nconst thousandsSeparatorSymbolLength = THOUSANDS && THOUSANDS.length || 0;\n+ console.log(THOUSANDS);\n+ console.log(DECIMAL);\n+\nfunction numberMask(thisRawValue) {\nif (typeof thisRawValue !== 'string') {\nthisRawValue = masks.EMPTY_STRING;\n@@ -249,6 +260,7 @@ masks.numberMask = function sohoNumberMask(rawValue, options) {\nstyle: 'decimal',\nuseGrouping: true\n};\n+\ninteger = (options.allowThousandsSeparator) ?\naddThousandsSeparator(integer, THOUSANDS, options, localeOptions) : integer;\n",
        "date": "23.06.2020 14:13:39",
        "repo": "infor-design/enterprise",
        "type": "set",
        "chatgpt_zeroshot": "Refactor numberMask function in masks.js to handle decimal separator based on locale."
    },
    {
        "msg": "set OS to IOS",
        "diff": "diff --git a/src/utils/environment.js b/src/utils/environment.js @@ -273,6 +273,7 @@ const Environment = {\nif (Environment.browser.isIPad()) {\nconst osVersionStr = nUAgent.substr(nUAgent.indexOf('Version'), nUAgent.substr(nUAgent.indexOf('Version')).indexOf(' '));\nosVersion = osVersionStr.replace('Version/', '');\n+ os = 'IOS';\n}\nthis.devicespecs = {\n",
        "date": "18.02.2021 12:58:56",
        "repo": "infor-design/enterprise",
        "type": "set",
        "chatgpt_zeroshot": "Add check for iPad device and set OS to IOS"
    },
    {
        "msg": "set chrome to 98",
        "diff": "diff --git a/package.json b/package.json \"e2e:puppeteer\": \"npx --no-install jest --config=test/jest.config.js --runInBand --detectOpenHandles --forceExit\",\n\"e2e:update-imagesnapshots\": \"npx --no-install jest --config=test/jest.config.js --updateSnapshot --runInBand --detectOpenHandles --forceExit\",\n\"webdriver:clean\": \"npx webdriver-manager clean\",\n- \"webdriver:update\": \"npx webdriver-manager update --standalone false --quiet --gecko=false\",\n+ \"webdriver:update\": \"npx webdriver-manager update --versions.chrome=98.0.4758.102 --standalone false --quiet --gecko=false\",\n\"zip-dist\": \"npx grunt zip-dist\",\n\"documentation\": \"node ./scripts/deploy-documentation.js\",\n\"release:dev\": \"node scripts/publish-nightly-manual\",\n\"node-version-check\": \"npx check-node-version --node 14\",\n\"node-updates-check\": \"npx ncu\"\n},\n- \"chrome-version\": \"99\",\n+ \"chrome-version\": \"98\",\n\"dependencies\": {\n\"d3\": \"^5.16.0\",\n\"ids-identity\": \"4.11.3\",\n",
        "date": "11.03.2022 09:32:58",
        "repo": "infor-design/enterprise",
        "type": "set",
        "chatgpt_zeroshot": "Update Chrome version to 98 and webdriver update command in package.json"
    },
    {
        "msg": "set STATIC_ROOT",
        "diff": "diff --git a/examples/manage.py b/examples/manage.py @@ -6,6 +6,7 @@ sys.path[0:0] = [os.path.abspath('..'), os.path.abspath('../../django-websocket-\nif __name__ == \"__main__\":\nos.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"server.settings\")\n+ os.environ.setdefault('DJANGO_STATIC_ROOT', '/web/production/managed/djangular/static')\nfrom django.core.management import execute_from_command_line\n",
        "date": "14.08.2017 13:26:05",
        "repo": "jrief/django-angular",
        "type": "set",
        "chatgpt_zeroshot": "Add DJANGO_STATIC_ROOT environment variable to manage.py"
    },
    {
        "msg": "set initial default for widgets.Select",
        "diff": "diff --git a/djng/forms/fields.py b/djng/forms/fields.py @@ -277,6 +277,11 @@ class MultipleFieldMixin(DefaultFieldMixin):\nclass ChoiceField(MultipleFieldMixin, fields.ChoiceField):\n+ def __init__(self, *args, **kwargs):\n+ super(ChoiceField, self).__init__(*args, **kwargs)\n+ if isinstance(self.widget, widgets.Select) and self.initial is None and len(self.choices):\n+ self.initial = self.choices[0][0]\n+\ndef has_subwidgets(self):\nreturn isinstance(self.widget, widgets.RadioSelect)\n",
        "date": "27.09.2017 22:09:56",
        "repo": "jrief/django-angular",
        "type": "set",
        "chatgpt_zeroshot": "Add default initial value for ChoiceField when using Select widget."
    },
    {
        "msg": "set password in download context",
        "diff": "diff --git a/examples/server/forms/combined_validation.py b/examples/server/forms/combined_validation.py @@ -33,7 +33,9 @@ class SubscribeForm(NgModelFormMixin, NgFormValidationMixin, Bootstrap3Form):\nsex = fields.ChoiceField(\nchoices=(('m', 'Male'), ('f', 'Female')),\nwidget=widgets.RadioSelect,\n- error_messages={'invalid_choice': 'Please select your sex'})\n+ required=True,\n+ error_messages={'invalid_choice': 'Please select your sex'},\n+ )\nemail = fields.EmailField(\nlabel='E-Mail',\n@@ -81,8 +83,10 @@ class SubscribeForm(NgModelFormMixin, NgFormValidationMixin, Bootstrap3Form):\nnotifyme = fields.MultipleChoiceField(\nlabel='Notify by',\nchoices=NOTIFY_BY,\n- widget=widgets.CheckboxSelectMultiple, required=True,\n- help_text='Must choose at least one type of notification')\n+ widget=widgets.CheckboxSelectMultiple,\n+ required=True,\n+ help_text='Must choose at least one type of notification',\n+ )\nannotation = fields.CharField(\nlabel='Annotation',\n@@ -98,6 +102,7 @@ class SubscribeForm(NgModelFormMixin, NgFormValidationMixin, Bootstrap3Form):\nlabel='Password',\nwidget=widgets.PasswordInput,\nvalidators=[validate_password],\n+ min_length=6,\nhelp_text='The password is \"secret\"')\nconfirmation_key = fields.CharField(\n@@ -126,4 +131,5 @@ default_subscribe_data = {\n'notifyme': ['email', 'sms'],\n'annotation': \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n'agree': True,\n+ 'password': '',\n}\n",
        "date": "04.10.2017 18:40:30",
        "repo": "jrief/django-angular",
        "type": "set",
        "chatgpt_zeroshot": "Add required field and min length validation for password in SubscribeForm"
    },
    {
        "msg": "set the configuration when fetching dataset.",
        "diff": "diff --git a/src/epics/fetch-dataset-epic.js b/src/epics/fetch-dataset-epic.js @@ -17,8 +17,7 @@ const fetchDatasetEpic = (action$, store) => {\nreturn Observable\n.ajax({ url: url, crossDomain: true, responseType: 'json' })\n.map((result) => result.response )\n- // .of(fakeData.slice(0, size)).delay(1000) // Fake AJAX call for now\n- .map((data) => setDataset({ dataset: data }) )\n+ .map((data) => setDataset({ dataset: data.dataset, configuration: data.configuration }) )\n.concat(Observable.of(setHierarchyConfig([])))\n// Ignore result if another request has started.\n",
        "date": "13.03.2018 15:53:54",
        "repo": "iqtlabs/crviz",
        "type": "set",
        "chatgpt_zeroshot": "Refactor fetchDatasetEpic to include configuration data in the dataset object"
    },
    {
        "msg": "set selected category on adding extension",
        "diff": "diff --git a/src/containers/blocks.jsx b/src/containers/blocks.jsx @@ -210,6 +210,8 @@ class Blocks extends React.Component {\nconst dynamicBlocksXML = this.props.vm.runtime.getBlocksXML();\nconst toolboxXML = makeToolboxXML(dynamicBlocksXML);\nthis.props.onExtensionAdded(toolboxXML);\n+ const categoryName = blocksInfo[0].json.category;\n+ this.workspace.toolbox_.setSelectedCategoryByName(categoryName);\n}\nsetBlocks (blocks) {\nthis.blocks = blocks;\n",
        "date": "05.10.2017 15:44:31",
        "repo": "wdr-data/code4maus",
        "type": "set",
        "chatgpt_zeroshot": "Set selected category in toolbox based on first block category."
    },
    {
        "msg": "set x and y icons to aria hidden",
        "diff": "diff --git a/src/components/sprite-info/sprite-info.jsx b/src/components/sprite-info/sprite-info.jsx @@ -56,6 +56,7 @@ class SpriteInfo extends React.Component {\n<img\nclassName={classNames(styles.xIcon, styles.icon)}\nsrc={xIcon}\n+ aria-hidden=\"true\"\n/>\n</div>\n</MediaQuery>\n@@ -78,6 +79,7 @@ class SpriteInfo extends React.Component {\n<img\nclassName={classNames(styles.yIcon, styles.icon)}\nsrc={yIcon}\n+ aria-hidden=\"true\"\n/>\n</div>\n</MediaQuery>\n",
        "date": "31.10.2017 14:28:47",
        "repo": "wdr-data/code4maus",
        "type": "set",
        "chatgpt_zeroshot": "Add aria-hidden attribute to x and y icons in SpriteInfo component"
    },
    {
        "msg": "set up S3 deployment correctly on the first try",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -36,3 +36,13 @@ deploy:\nskip_cleanup: true\nemail: $NPM_EMAIL\napi_key: $NPM_TOKEN\n+- provider: s3\n+ on:\n+ branch: master\n+ access_key_id: $AWS_ACCESS_KEY_ID\n+ secret_access_key: $AWS_SECRET_ACCESS_KEY\n+ bucket: $AWS_BUCKET_NAME\n+ acl: public_read\n+ detect_encoding: true\n+ skip_cleanup: true\n+ local_dir: build\n",
        "date": "05.01.2018 11:26:24",
        "repo": "wdr-data/code4maus",
        "type": "set",
        "chatgpt_zeroshot": "Add deployment to AWS S3 in Travis CI configuration"
    },
    {
        "msg": "set smoke url automatically",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -6,7 +6,9 @@ addons:\nnode_js:\n- 8\nenv:\n+ global:\n- NODE_ENV=production\n+ - SMOKE_URL=https://llk.github.io/scratch-gui/$TRAVIS_PULL_REQUEST_BRANCH\ncache:\ndirectories:\n- node_modules\n@@ -19,7 +21,7 @@ before_deploy:\n- git config --global user.name $(git log --pretty=format:\"%an\" -n1)\nscript:\n- npm test\n-- if [ \"$TRAVIS_PULL_REQUEST\" != \"false\" ] && [ \"$TRAVIS_BRANCH\" == \"master\" ]; then npm run test:smoke; fi\n+- if [ \"$TRAVIS_EVENT_TYPE\" == \"pull_request\" ] && [ \"$TRAVIS_BRANCH\" == \"master\" ]; then npm run test:smoke; fi\ndeploy:\n- provider: script\non:\n",
        "date": "05.06.2018 16:31:42",
        "repo": "wdr-data/code4maus",
        "type": "set",
        "chatgpt_zeroshot": "Update Travis CI configuration to run smoke tests on pull requests from master branch"
    },
    {
        "msg": "set default WSL version",
        "diff": "diff --git a/sheets/wsl.md b/sheets/wsl.md @@ -23,6 +23,15 @@ Change between WSL versions\nwsl --set-version Debian 2\n```\n+## Set the default version of WSL\n+\n+When installing new Linux distros you can default them all to be WSL2\n+or or one:\n+\n+```bash\n+wsl --set-default-version 2\n+```\n+\n## List installed WSL Distros\n```bash\n",
        "date": "13.12.2020 12:59:45",
        "repo": "spences10/cheat-sheets",
        "type": "set",
        "chatgpt_zeroshot": "Set default version of WSL to WSL2"
    },
    {
        "msg": "set compact reporters for mocha",
        "diff": "diff --git a/package.json b/package.json \"build\": \"npm run gen:syntax && browserify --standalone csstree lib/index.js | uglifyjs --compress --mangle -o dist/csstree.js\",\n\"codestyle-and-test\": \"npm run codestyle && npm test\",\n\"codestyle\": \"jscs data lib scripts test && eslint data lib scripts test\",\n- \"test\": \"mocha --reporter dot\",\n- \"coverage\": \"istanbul cover _mocha -- -R dot\",\n+ \"test\": \"mocha --reporter progress\",\n+ \"coverage\": \"istanbul cover _mocha -- -R min\",\n\"prepublish\": \"npm run build\",\n\"travis\": \"npm run codestyle-and-test && npm run coveralls\",\n- \"coveralls\": \"istanbul cover _mocha --report lcovonly -- -R dot && cat ./coverage/lcov.info | coveralls\",\n+ \"coveralls\": \"istanbul cover _mocha --report lcovonly -- -R min && cat ./coverage/lcov.info | coveralls\",\n\"hydrogen\": \"node --trace-hydrogen --trace-phase=Z --trace-deopt --code-comments --hydrogen-track-positions --redirect-code-traces --redirect-code-traces-to=code.asm --trace_hydrogen_file=code.cfg --print-opt-code bin/parse --stat -o /dev/null\"\n},\n\"dependencies\": {\n",
        "date": "03.02.2017 13:29:34",
        "repo": "csstree/csstree",
        "type": "set",
        "chatgpt_zeroshot": "Update test and coverage scripts in package.json"
    },
    {
        "msg": "set build on prepublishOnly instead of prepublish",
        "diff": "diff --git a/package.json b/package.json \"test\": \"mocha --reporter progress\",\n\"gen:syntax\": \"node scripts/gen-syntax-data\",\n\"coverage\": \"istanbul cover _mocha -- -R min\",\n- \"prepublish\": \"npm run build\",\n+ \"prepublishOnly\": \"npm run build\",\n\"travis\": \"npm run lint-and-test && npm run coveralls\",\n\"coveralls\": \"istanbul cover _mocha --report lcovonly -- -R min && cat ./coverage/lcov.info | coveralls\",\n\"hydrogen\": \"node --trace-hydrogen --trace-phase=Z --trace-deopt --code-comments --hydrogen-track-positions --redirect-code-traces --redirect-code-traces-to=code.asm --trace_hydrogen_file=code.cfg --print-opt-code bin/parse --stat -o /dev/null\"\n",
        "date": "07.10.2019 18:21:33",
        "repo": "csstree/csstree",
        "type": "set",
        "chatgpt_zeroshot": "Update prepublish script in package.json to prepublishOnly"
    },
    {
        "msg": "set NODE_ENV to production for storybook",
        "diff": "diff --git a/package.json b/package.json \"format\": \"prettier --write \\\"src/**/*.js\\\"\",\n\"lint\": \"eslint .\",\n\"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n- \"storybook\": \"start-storybook -p 6006 -s static\",\n- \"build-storybook\": \"build-storybook -s static\",\n+ \"storybook\": \"NODE_ENV=production start-storybook -p 6006 -s static\",\n+ \"build-storybook\": \"NODE_ENV=production build-storybook -s static\",\n\"chromatic\": \"CHROMATIC_APP_CODE=dd2oqshntir chromatic test\"\n},\n\"devDependencies\": {\n",
        "date": "20.05.2019 07:42:46",
        "repo": "storybookjs/frontpage",
        "type": "set",
        "chatgpt_zeroshot": "Update storybook scripts to run in production mode"
    },
    {
        "msg": "set validation service lint job to small size",
        "diff": "diff --git a/buildkite/src/Jobs/Lint/ValidationService.dhall b/buildkite/src/Jobs/Lint/ValidationService.dhall @@ -58,7 +58,7 @@ in Pipeline.build Pipeline.Config::{\ncommands = commands,\nlabel = \"Validation service lint steps; employs various forms static analysis on the elixir codebase\",\nkey = \"lint\",\n- target = Size.Large,\n+ target = Size.Small,\ndocker = None Docker.Type\n}\n]\n",
        "date": "12.08.2020 23:42:15",
        "repo": "minaprotocol/mina",
        "type": "set",
        "chatgpt_zeroshot": "Update target size for linting job to small"
    },
    {
        "msg": "set http.sslVerify to false",
        "diff": "diff --git a/buildkite/src/Jobs/LintOpt.dhall b/buildkite/src/Jobs/LintOpt.dhall @@ -26,7 +26,9 @@ Pipeline.build\n, steps =\n[ Command.build\nCommand.Config::\n- { commands = OpamInit.andThenRunInDocker [\"CI=true\", \"BASE_BRANCH_NAME=$BUILDKITE_PULL_REQUEST_BASE_BRANCH\" ] \"./scripts/compare_ci_diff_types.sh\"\n+ { commands = [ Cmd.run \"git config http.sslVerify false\" ] # OpamInit.andThenRunInDocker\n+ ([\"CI=true\", \"BASE_BRANCH_NAME=$BUILDKITE_PULL_REQUEST_BASE_BRANCH\" ])\n+ (\"./scripts/compare_ci_diff_types.sh\")\n, label = \"Compare CI diff types\"\n, key = \"lint-diff-types\"\n, target = Size.Medium\n@@ -34,7 +36,9 @@ Pipeline.build\n},\nCommand.build\nCommand.Config::\n- { commands = OpamInit.andThenRunInDocker [\"CI=true\", \"BASE_BRANCH_NAME=$BUILDKITE_PULL_REQUEST_BASE_BRANCH\" ] \"./scripts/compare_ci_diff_binables.sh\"\n+ { commands = [ Cmd.run \"git config http.sslVerify false\" ] # OpamInit.andThenRunInDocker\n+ ([\"CI=true\", \"BASE_BRANCH_NAME=$BUILDKITE_PULL_REQUEST_BASE_BRANCH\" ])\n+ (\"./scripts/compare_ci_diff_binables.sh\")\n, label = \"Compare CI diff binables\"\n, key = \"lint-diff-binables\"\n, target = Size.Medium\n",
        "date": "17.08.2020 21:40:27",
        "repo": "minaprotocol/mina",
        "type": "set",
        "chatgpt_zeroshot": "Add git config command to disable SSL verification before running CI comparison scripts"
    },
    {
        "msg": "set archive docker-deploy-env coda version appropriately as DOCKER_TAG",
        "diff": "diff --git a/scripts/archive/build-release-archives.sh b/scripts/archive/build-release-archives.sh @@ -98,7 +98,7 @@ if [ -n \"${BUILDKITE+x}\" ]; then\nset -x\n# Export variables for use with downstream steps\necho \"export CODA_SERVICE=coda-archive\" >> ./ARCHIVE_DOCKER_DEPLOY\n- echo \"export CODA_VERSION=${VERSION}\" >> ./ARCHIVE_DOCKER_DEPLOY\n+ echo \"export CODA_VERSION=${DOCKER_TAG}\" >> ./ARCHIVE_DOCKER_DEPLOY\necho \"export CODA_DEB_VERSION=${VERSION}\" >> ./ARCHIVE_DOCKER_DEPLOY\necho \"export CODA_DEB_REPO=${CODENAME}\" >> ./ARCHIVE_DOCKER_DEPLOY\necho \"export CODA_GIT_HASH=${GITHASH}\" >> ./ARCHIVE_DOCKER_DEPLOY\n",
        "date": "07.10.2020 03:03:15",
        "repo": "minaprotocol/mina",
        "type": "set",
        "chatgpt_zeroshot": "Update CODA_VERSION variable to use DOCKER_TAG instead of VERSION"
    },
    {
        "msg": "set parent id if needed",
        "diff": "diff --git a/src/app/archive/archive_lib/processor.ml b/src/app/archive/archive_lib/processor.ml @@ -810,6 +810,15 @@ module Block = struct\n~protocol_state:t.protocol_state ~staged_ledger_diff:t.staged_ledger_diff\n~hash:(Protocol_state.hash t.protocol_state)\n+ let set_parent_id_if_null (module Conn : CONNECTION) ~parent_hash\n+ ~(parent_id : int) =\n+ Conn.exec\n+ (Caqti_request.exec\n+ Caqti_type.(tup2 int string)\n+ \"UPDATE blocks SET parent_id = ? WHERE parent_hash = ? AND parent_id \\\n+ IS NULL\")\n+ (parent_id, State_hash.to_base58_check parent_hash)\n+\nlet delete_if_older_than ?height ?num_blocks ?timestamp\n(module Conn : CONNECTION) =\nlet open Deferred.Result.Let_syntax in\n@@ -897,11 +906,19 @@ let run (module Conn : CONNECTION) reader ~constraint_constants ~logger\nmatch%bind\nlet open Deferred.Result.Let_syntax in\nlet%bind () = Conn.start () in\n- let%bind _ =\n+ let%bind block_id =\nBlock.add_if_doesn't_exist ~constraint_constants\n(module Conn)\nblock\nin\n+ (* if an existing block has a parent hash that's for the block just added,\n+ set its parent id\n+ *)\n+ let%bind () =\n+ Block.set_parent_id_if_null\n+ (module Conn)\n+ ~parent_hash:block.hash ~parent_id:block_id\n+ in\nmatch delete_older_than with\n| Some num_blocks ->\nBlock.delete_if_older_than ~num_blocks (module Conn)\n",
        "date": "22.12.2020 15:25:28",
        "repo": "minaprotocol/mina",
        "type": "set",
        "chatgpt_zeroshot": "Set parent id for existing blocks with null parent id when adding a new block"
    },
    {
        "msg": "set use local charts in helm.tf to false",
        "diff": "diff --git a/automation/terraform/modules/kubernetes/testnet/helm.tf b/automation/terraform/modules/kubernetes/testnet/helm.tf @@ -22,7 +22,7 @@ data \"local_file\" \"libp2p_peers\" {\n}\nlocals {\n- use_local_charts = true\n+ use_local_charts = false\nmina_helm_repo = \"https://coda-charts.storage.googleapis.com\"\nseed_peers = [\n",
        "date": "27.01.2021 11:22:34",
        "repo": "minaprotocol/mina",
        "type": "set",
        "chatgpt_zeroshot": "Disable use of local charts and update mina helm repo URL"
    },
    {
        "msg": "set artifact upload dest envvar following pushd to maintain value",
        "diff": "diff --git a/buildkite/src/Command/DeployTestnet.dhall b/buildkite/src/Command/DeployTestnet.dhall @@ -34,8 +34,8 @@ let testnetArtifactPath = \"/tmp/artifacts\" in\n),\nCmd.run (\n-- upload/cache testnet genesis_ledger\n- \"BUILDKITE_ARTIFACT_UPLOAD_DESTINATION=gs://buildkite_k8s/coda/shared/\\\\\\${BUILDKITE_JOB_ID}\" ++\n- \" pushd ${testnetArtifactPath} && buildkite-agent artifact upload \\\"genesis_ledger.json\\\" && popd\"\n+ \"pushd ${testnetArtifactPath} && BUILDKITE_ARTIFACT_UPLOAD_DESTINATION=gs://buildkite_k8s/coda/shared/\\\\\\${BUILDKITE_JOB_ID}\" ++\n+ \" buildkite-agent artifact upload \\\"genesis_ledger.json\\\" && popd\"\n),\nCmd.run (\n-- always execute post-deploy operation\n",
        "date": "04.02.2021 15:44:48",
        "repo": "minaprotocol/mina",
        "type": "set",
        "chatgpt_zeroshot": "Refactor artifact upload command in DeployTestnet script"
    },
    {
        "msg": "set archive node deployment defaults when only archive_node_count provided",
        "diff": "diff --git a/automation/terraform/modules/o1-testnet/testnet.tf b/automation/terraform/modules/o1-testnet/testnet.tf @@ -54,7 +54,24 @@ module \"kubernetes_testnet\" {\nseed_zone = var.seed_zone\nseed_region = var.seed_region\n- archive_configs = var.archive_configs\n+ archive_configs = length(var.archive_configs) != 0 ? var.archive_configs : concat(\n+ # by default, deploy a single local daemon and associated PostgresDB enabled archive server\n+ [\n+ {\n+ name = \"archive-1\"\n+ enableLocalDaemon = true\n+ enablePostgresDB = true\n+ }\n+ ],\n+ # in addition to stand-alone archive servers upto the input archive node count\n+ [\n+ for i in range(2, var.archive_node_count + 1) : {\n+ name = \"archive-${i}\"\n+ enableLocalDaemon = false\n+ enablePostgresDB = false\n+ }\n+ ]\n+ )\nmina_archive_schema = var.mina_archive_schema\nsnark_worker_replicas = var.snark_worker_replicas\n",
        "date": "23.02.2021 07:44:08",
        "repo": "minaprotocol/mina",
        "type": "set",
        "chatgpt_zeroshot": "Refactor archive_configs in testnet module to dynamically generate archive servers based on input count."
    },
    {
        "msg": "set mainnet images",
        "diff": "diff --git a/automation/terraform/testnets/mainnet/main.tf b/automation/terraform/testnets/mainnet/main.tf @@ -55,8 +55,8 @@ variable \"seed_count\" {\nlocals {\ntestnet_name = \"mainnet\"\n- coda_image = \"TODO\" # TODO\n- coda_archive_image = \"TODO\" # TODO\n+ coda_image = \"gcr.io/o1labs-192920/coda-daemon-baked:1.1.1-06691e3-mainnet-ffbe7e0\"\n+ coda_archive_image = \"gcr.io/o1labs-192920/coda-archive:1.1.1-06691e3\"\nseed_region = \"us-east4\"\nseed_zone = \"us-east4-b\"\n",
        "date": "12.03.2021 13:46:41",
        "repo": "minaprotocol/mina",
        "type": "set",
        "chatgpt_zeroshot": "Update coda_image and coda_archive_image versions in mainnet configuration"
    },
    {
        "msg": "set max height before genesis to be 0",
        "diff": "diff --git a/src/app/archive/archive_lib/metrics.ml b/src/app/archive/archive_lib/metrics.ml @@ -15,7 +15,7 @@ let default_missing_blocks_width = 2000\nmodule Max_block_height = struct\nlet query =\nCaqti_request.find Caqti_type.unit Caqti_type.int\n- \"SELECT MAX(height) FROM blocks\"\n+ \"SELECT GREATEST(0, MAX(height)) FROM blocks\"\nlet update (module Conn : Caqti_async.CONNECTION) metric_server =\ntime ~label:\"max_block_height\" (fun () ->\n",
        "date": "12.03.2021 17:20:06",
        "repo": "minaprotocol/mina",
        "type": "set",
        "chatgpt_zeroshot": "Fix query to handle negative block heights in metrics calculation"
    },
    {
        "msg": "set chain status when adding intermediate blocks",
        "diff": "diff --git a/src/app/archive/archive_lib/processor.ml b/src/app/archive/archive_lib/processor.ml @@ -1628,6 +1628,18 @@ module Block = struct\n(Caqti_request.find Caqti_type.unit Caqti_type.(tup2 int int64)\n\"SELECT id,height FROM blocks WHERE chain_status='canonical' ORDER BY height DESC LIMIT 1\")\n+ let get_nearest_canonical_block_above (module Conn : CONNECTION) height =\n+ Conn.find\n+ (Caqti_request.find Caqti_type.int64 Caqti_type.(tup2 int int64)\n+ \"SELECT id,height FROM blocks WHERE chain_status='canonical' AND height > ? ORDER BY height ASC LIMIT 1\")\n+ height\n+\n+ let get_nearest_canonical_block_below (module Conn : CONNECTION) height =\n+ Conn.find\n+ (Caqti_request.find Caqti_type.int64 Caqti_type.(tup2 int int64)\n+ \"SELECT id,height FROM blocks WHERE chain_status='canonical' AND height < ? ORDER BY height DESC LIMIT 1\")\n+ height\n+\nlet mark_as_canonical (module Conn : CONNECTION) ~state_hash =\nConn.exec\n(Caqti_request.exec Caqti_type.string\n@@ -1651,18 +1663,27 @@ module Block = struct\nlet%bind highest_canonical_block_id,greatest_canonical_height =\nget_highest_canonical_block (module Conn) () in\nif Int64.(>) block.height (Int64.(+) greatest_canonical_height k_int64) then\n- (* subchain between new block and highest canonical block *)\n+ (* a new block, allows marking some pending blocks as canonical *)\nlet%bind subchain_blocks = get_subchain (module Conn) ~start_block_id:highest_canonical_block_id ~end_block_id:block_id in\nlet block_height_less_k_int64 = Int64.(-) block.height k_int64 in\n(* mark canonical, orphaned blocks in subchain at least k behind the new block *)\nlet canonical_blocks = List.filter subchain_blocks ~f:(fun subchain_block ->\nInt64.(<=) subchain_block.height block_height_less_k_int64) in\n- let%map () = deferred_result_list_fold canonical_blocks ~init:() ~f:(fun () block ->\n+ deferred_result_list_fold canonical_blocks ~init:() ~f:(fun () block ->\n+ let%bind () = mark_as_canonical (module Conn) ~state_hash:block.state_hash in\n+ mark_as_orphaned (module Conn) ~state_hash:block.state_hash ~height:block.height)\n+ else if Int64.(<) block.height greatest_canonical_height then\n+ (* a missing block added in the middle of canonical chain *)\n+ let%bind canonical_block_above_id,_above_height = get_nearest_canonical_block_above (module Conn) block.height in\n+ let%bind canonical_block_below_id,_below_height = get_nearest_canonical_block_below (module Conn) block.height in\n+ (* we can always find this chain: the genesis block should be marked as canonical, and we've found a\n+ canonical block above this one *)\n+ let%bind canonical_blocks = get_subchain (module Conn) ~start_block_id:canonical_block_below_id ~end_block_id:canonical_block_above_id in\n+ deferred_result_list_fold canonical_blocks ~init:() ~f:(fun () block ->\nlet%bind () = mark_as_canonical (module Conn) ~state_hash:block.state_hash in\nmark_as_orphaned (module Conn) ~state_hash:block.state_hash ~height:block.height)\n- in\n- ()\nelse\n+ (* a block at or above highest canonical block, not high enough to mark any blocks as canonical *)\nDeferred.Result.return ()\nlet delete_if_older_than ?height ?num_blocks ?timestamp\n",
        "date": "10.12.2021 11:39:26",
        "repo": "minaprotocol/mina",
        "type": "set",
        "chatgpt_zeroshot": "Add functions to get nearest canonical block above and below, and handle missing blocks in the middle of the canonical chain."
    },
    {
        "msg": "set permissions to Proof before applying proof updates",
        "diff": "diff --git a/src/lib/transaction_snark/test/zkapps_examples/initialize_state/initialize_state.ml b/src/lib/transaction_snark/test/zkapps_examples/initialize_state/initialize_state.ml @@ -60,6 +60,20 @@ let%test_module \"Initialize state test\" =\n*)\nZkapp_account.digest_vk vk\n}\n+ ; permissions =\n+ Set\n+ { edit_state = Proof\n+ ; send = Proof\n+ ; receive = Proof\n+ ; set_delegate = Proof\n+ ; set_permissions = Proof\n+ ; set_verification_key = Proof\n+ ; set_zkapp_uri = Proof\n+ ; edit_sequence_state = Proof\n+ ; set_token_symbol = Proof\n+ ; increment_nonce = Proof\n+ ; set_voting_for = Proof\n+ }\n}\n; use_full_commitment = true\n; account_precondition = Accept\n",
        "date": "26.04.2022 17:27:06",
        "repo": "minaprotocol/mina",
        "type": "set",
        "chatgpt_zeroshot": "Add permissions to initialize state function"
    },
    {
        "msg": "set private type",
        "diff": "diff --git a/src/lib/mina_wire_types/mina_base/mina_base_signed_command.mli b/src/lib/mina_wire_types/mina_base/mina_base_signed_command.mli @@ -27,7 +27,7 @@ module With_valid_signature : sig\nmodule M : sig\nmodule Stable : sig\nmodule V2 : sig\n- type t = Stable.V2.t\n+ type t = private Stable.V2.t\nend\nend\nend\n",
        "date": "25.08.2022 18:04:43",
        "repo": "minaprotocol/mina",
        "type": "set",
        "chatgpt_zeroshot": "Make type t in Mina_base_signed_command module private."
    },
    {
        "msg": "set default valid_while in a test",
        "diff": "diff --git a/src/lib/transaction_snark/test/zkapps_examples/big_circuit/big_circuit.ml b/src/lib/transaction_snark/test/zkapps_examples/big_circuit/big_circuit.ml @@ -46,6 +46,7 @@ let deploy_account_update_body : Account_update.Body.t =\n{ Account_update.Preconditions.network =\nZkapp_precondition.Protocol_state.accept\n; account = Accept\n+ ; valid_while = Ignore\n}\n; call_type = Call\n; use_full_commitment = true\n",
        "date": "23.01.2023 23:13:14",
        "repo": "minaprotocol/mina",
        "type": "set",
        "chatgpt_zeroshot": "Add valid_while field to deploy_account_update_body in big_circuit.ml"
    },
    {
        "msg": "set addedTmsp on card save",
        "diff": "diff --git a/serverjs/util.js b/serverjs/util.js @@ -68,7 +68,8 @@ function addCardToCube(cube, card_details, idOverride) {\ncolors: card_details.color_identity,\ncmc: card_details.cmc,\ncardID: idOverride === undefined ? card_details._id : idOverride,\n- type: card_details.type\n+ type: card_details.type,\n+ addedTmsp: new Date()\n});\n}\n",
        "date": "31.08.2019 01:18:15",
        "repo": "dekkerglen/cubecobra",
        "type": "set",
        "chatgpt_zeroshot": "Add timestamp when adding a card to cube"
    },
    {
        "msg": "set up generatePack test with incorrect data",
        "diff": "diff --git a/__tests__/serverjs/cubefn.test.js b/__tests__/serverjs/cubefn.test.js +var sinon = require(\"sinon\");\nconst cubefn = require(\"../../serverjs/cubefn\");\nconst carddb = require(\"../../serverjs/cards\");\nconst cubefixture = require(\"../../fixtures/examplecube\");\n@@ -163,9 +164,14 @@ const exampleBasics = {\n}\n};\n-beforeEach(() => {});\n+beforeEach(() => {\n+ sinon.stub(Cube, \"findOne\");\n+});\n-afterEach(() => {});\n+afterEach(() => {\n+ Cube.findOne.restore();\n+ carddb.unloadCardDb();\n+});\ntest(\"get_cube_id returns urlAlias when defined\", () => {\nconst testCube = {\n@@ -337,4 +343,17 @@ test(\"setCubeType correctly sets the type and card_count of its input cube\", ()\ntest(\"sanitize\", () => {});\ntest(\"addAutocard\", () => {});\n-test(\"generatePack\", () => {});\n\\ No newline at end of file\n+\n+test(\"generatePack\", () => {\n+ expect.assertions(1);\n+ const seed = new Date();\n+ var exampleCube = JSON.parse(JSON.stringify(cubefixture.exampleCube));\n+ var expected = {};\n+ Cube.findOne.yields(null, exampleCube);\n+ var callback = sinon.stub();\n+ var promise = carddb.initializeCardDb(fixturesPath, true);\n+ return promise.then(function() {\n+ cubefn.generatePack('', carddb, seed, callback);\n+ sinon.assert.calledWith(callback, expected)\n+ });\n+});\n\\ No newline at end of file\n",
        "date": "28.09.2019 20:47:45",
        "repo": "dekkerglen/cubecobra",
        "type": "set",
        "chatgpt_zeroshot": "Add sinon stubs for Cube.findOne and carddb.unloadCardDb in cubefn.test.js"
    },
    {
        "msg": "set initial filterTemp properly",
        "diff": "diff --git a/src/pages/BrowsePackagesPage.js b/src/pages/BrowsePackagesPage.js @@ -45,7 +45,7 @@ const BrowsePackagesPage = ({ user, loginCallback }) => {\nconst [alerts, setAlerts] = useState([]);\nconst [page, setPage] = useQueryParam('p', 0);\nconst [filter, setFilter] = useQueryParam('f', '');\n- const [filterTemp, setFilterTemp] = useState(filter);\n+ const [filterTemp, setFilterTemp] = useState('');\nconst [sort, setSort] = useQueryParam('s', 'votes');\nconst [sortDirection, setSortDirection] = useQueryParam('d', '-1');\nconst [selectedTab, setSelectedTab] = useQueryParam('tab', '0');\n@@ -82,7 +82,7 @@ const BrowsePackagesPage = ({ user, loginCallback }) => {\n}\nreturn [];\n};\n- fetchData();\n+ fetchData().then(() => setFilterTemp(filter));\n}, [filter, page, sort, sortDirection, selectedTab, refresh, setRefresh]);\nreturn (\n",
        "date": "02.05.2021 14:36:40",
        "repo": "dekkerglen/cubecobra",
        "type": "set",
        "chatgpt_zeroshot": "Fix issue with filter not updating correctly in BrowsePackagesPage"
    },
    {
        "msg": "set more precise proptype",
        "diff": "diff --git a/src/pages/CubePlaytestPage.js b/src/pages/CubePlaytestPage.js @@ -585,7 +585,20 @@ CubePlaytestPage.propTypes = {\ndefaultDraftFormat: PropTypes.number,\n_id: PropTypes.string.isRequired,\nowner: PropTypes.string.isRequired,\n- draft_formats: PropTypes.arrayOf(PropTypes.object),\n+ draft_formats: PropTypes.shape({\n+ title: PropTypes.string,\n+ multiples: PropTypes.bool,\n+ markdown: PropTypes.string.isRequired,\n+ packs: PropTypes.arrayOf(\n+ PropTypes.shape({\n+ slots: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n+ steps: PropTypes.shape({\n+ action: PropTypes.oneOf(['pass', 'pick', 'trash', 'pickrandom', 'trashrandom']),\n+ amount: PropTypes.number,\n+ }),\n+ }).isRequired,\n+ ).isRequired,\n+ }).isRequired,\n}).isRequired,\ndecks: PropTypes.arrayOf(DeckPropType).isRequired,\nuser: UserPropType,\n",
        "date": "03.06.2021 22:53:14",
        "repo": "dekkerglen/cubecobra",
        "type": "set",
        "chatgpt_zeroshot": "Refactor draft_formats prop in CubePlaytestPage.js to use a more structured shapePropTypes."
    },
    {
        "msg": "set a simple button (no dropdown) when there is only one export option defined",
        "diff": "diff --git a/src/extensions/export/bootstrap-table-export.js b/src/extensions/export/bootstrap-table-export.js @@ -86,6 +86,41 @@ $.BootstrapTable = class extends $.BootstrapTable {\nlet $menu = $(this.constants.html.toolbarDropdown.join(''))\n+ let exportTypes = o.exportTypes\n+\n+ if (typeof exportTypes === 'string') {\n+ const types = exportTypes.slice(1, -1).replace(/ /g, '').split(',')\n+ exportTypes = types.map(t => t.slice(1, -1))\n+ }\n+\n+ if (exportTypes.length === 1) {\n+ this.$export = $(`\n+ <div class=\"export\">\n+ <button class=\"${this.constants.buttonsClass}\"\n+ aria-label=\"Export\"\n+ type=\"button\"\n+ title=\"${o.formatExport()}\">\n+ ${o.showButtonIcons ? Utils.sprintf(this.constants.html.icon, o.iconsPrefix, o.icons.export) : ''}\n+ ${o.showButtonText ? o.formatExport() : ''}\n+ </button>\n+ </div>\n+ `).appendTo($btnGroup)\n+\n+ this.updateExportButton()\n+\n+ $btnGroup.click(e => {\n+ e.preventDefault()\n+\n+ const type = exportTypes[0]\n+ const exportOptions = {\n+ type,\n+ escape: false\n+ }\n+\n+ this.exportTable(exportOptions)\n+ })\n+ }\n+ else {\nthis.$export = $(`\n<div class=\"export ${this.constants.classes.buttonsDropdown}\">\n<button class=\"${this.constants.buttonsClass} dropdown-toggle\"\n@@ -103,13 +138,6 @@ $.BootstrapTable = class extends $.BootstrapTable {\nthis.updateExportButton()\n- let exportTypes = o.exportTypes\n-\n- if (typeof exportTypes === 'string') {\n- const types = exportTypes.slice(1, -1).replace(/ /g, '').split(',')\n- exportTypes = types.map(t => t.slice(1, -1))\n- }\n-\n// themes support\nif ($menu.children().length) {\n$menu = $menu.children().eq(0)\n@@ -134,6 +162,7 @@ $.BootstrapTable = class extends $.BootstrapTable {\nthis.exportTable(exportOptions)\n})\n+ }\nthis.handleToolbar()\n}\n",
        "date": "26.08.2019 15:29:15",
        "repo": "wenzhixin/bootstrap-table",
        "type": "set",
        "chatgpt_zeroshot": "Refactor export functionality in bootstrap-table-export.js"
    },
    {
        "msg": "set the formattedValue as value if serachFormatter is true",
        "diff": "diff --git a/src/extensions/filter-control/bootstrap-table-filter-control.js b/src/extensions/filter-control/bootstrap-table-filter-control.js @@ -67,9 +67,7 @@ const UtilsFilterControl = {\n$selectControl.append($opts)\n},\nexistOptionInSelectControl (selectControl, value) {\n- const options = UtilsFilterControl.getOptionsFromSelectControl(\n- selectControl\n- )\n+ const options = UtilsFilterControl.getOptionsFromSelectControl(selectControl)\nfor (let i = 0; i < options.length; i++) {\nif (options[i].value === value.toString()) {\n// The value is not valid to add\n@@ -245,7 +243,7 @@ const UtilsFilterControl = {\nconst uniqueValues = {}\nfor (let i = 0; i < z; i++) {\n// Added a new value\n- const fieldValue = data[i][field]\n+ let fieldValue = data[i][field]\nconst formatter = that.options.editable && column.editable ? column._formatter : that.header.formatters[j]\nlet formattedValue = Utils.calculateObjectValue(that.header, formatter, [fieldValue, data[i], i], fieldValue)\n@@ -253,10 +251,12 @@ const UtilsFilterControl = {\nformattedValue = Utils.calculateObjectValue(that.header, column.filterDataCollector, [fieldValue, data[i], formattedValue], formattedValue)\n}\n+ if (column.searchFormatter) {\n+ fieldValue = formattedValue\n+ }\nuniqueValues[formattedValue] = fieldValue\nif (typeof formattedValue === 'object' && formattedValue !== null) {\n-\nformattedValue.forEach((value) => {\nUtilsFilterControl.addOptionToSelectControl(selectControl, value, value, column.filterDefault)\n})\n@@ -269,7 +269,6 @@ const UtilsFilterControl = {\n}\nUtilsFilterControl.sortSelectControl(selectControl, column.filterOrderBy)\n-\nif (that.options.hideUnusedSelectOptions) {\nUtilsFilterControl.hideUnusedSelectOptions(selectControl, uniqueValues)\n}\n",
        "date": "07.04.2020 17:50:42",
        "repo": "wenzhixin/bootstrap-table",
        "type": "set",
        "chatgpt_zeroshot": "Refactor select control options handling and value formatting in filter control extension"
    },
    {
        "msg": "set the filterStrictSearch option to true by default for filter control selects if the passed options was not false",
        "diff": "diff --git a/src/extensions/filter-control/bootstrap-table-filter-control.js b/src/extensions/filter-control/bootstrap-table-filter-control.js @@ -290,7 +290,10 @@ $.BootstrapTable = class extends $.BootstrapTable {\nisValueExpected (searchValue, value, column, key) {\nlet tmpItemIsExpected = false\n- if (column.filterStrictSearch) {\n+ if (\n+ column.filterStrictSearch ||\n+ (column.filterControl === 'select' && column.passed.filterStrictSearch !== false)\n+ ) {\ntmpItemIsExpected = value.toString().toLowerCase() === searchValue.toString().toLowerCase()\n} else if (column.filterStartsWithSearch) {\ntmpItemIsExpected = (`${value}`).toLowerCase().indexOf(searchValue) === 0\n",
        "date": "30.07.2022 01:07:35",
        "repo": "wenzhixin/bootstrap-table",
        "type": "set",
        "chatgpt_zeroshot": "Add support for strict search in select filter control"
    },
    {
        "msg": "set filterDefault only if the field is not already set",
        "diff": "diff --git a/src/extensions/filter-control/utils.js b/src/extensions/filter-control/utils.js @@ -411,8 +411,10 @@ export function createControls (that, header) {\nthat.filterColumnsPartial = {}\n}\n+ if (!(column.field in that.filterColumnsPartial)) {\nthat.filterColumnsPartial[column.field] = column.filterDefault\n}\n+ }\n$.each(header.find('th'), (_, th) => {\nconst $th = $(th)\n",
        "date": "09.08.2022 18:22:43",
        "repo": "wenzhixin/bootstrap-table",
        "type": "set",
        "chatgpt_zeroshot": "Add default filter value for column fields in createControls function"
    },
    {
        "msg": "set Chrome userDataDir to be under .vscode folder",
        "diff": "diff --git a/packages/react-scripts/template/README.md b/packages/react-scripts/template/README.md @@ -269,7 +269,7 @@ Then add the block below to your `launch.json` file and put it inside the `.vsco\n\"request\": \"launch\",\n\"url\": \"http://localhost:3000\",\n\"webRoot\": \"${workspaceRoot}/src\",\n- \"userDataDir\": \"${workspaceRoot}/.chrome\",\n+ \"userDataDir\": \"${workspaceRoot}/.vscode/chrome\",\n\"sourceMapPathOverrides\": {\n\"webpack:///src/*\": \"${webRoot}/*\"\n}\n",
        "date": "26.02.2017 17:10:42",
        "repo": "react-workspaces/create-react-app",
        "type": "set",
        "chatgpt_zeroshot": "Update userDataDir path in launch.json to point to .vscode/chrome folder"
    },
    {
        "msg": "set up ForkTsCheckerWebpackPlugin for workspaces",
        "diff": "diff --git a/packages/react-scripts/config/webpack.config.js b/packages/react-scripts/config/webpack.config.js @@ -75,6 +75,13 @@ module.exports = function(webpackEnv) {\n? workspacesMainFields\n: undefined;\n+ const includePaths =\n+ isEnvDevelopment && workspacesConfig.development\n+ ? [paths.appSrc, ...workspacesConfig.paths]\n+ : isEnvProduction && workspacesConfig.production\n+ ? [paths.appSrc, ...workspacesConfig.paths]\n+ : paths.appSrc;\n+\n// Webpack uses `publicPath` to determine where the app is being served from.\n// It requires a trailing slash, or the file assets will get an incorrect path.\n// In development, we always serve from the root. This makes config easier.\n@@ -347,11 +354,7 @@ module.exports = function(webpackEnv) {\nloader: require.resolve('eslint-loader'),\n},\n],\n- include: isEnvDevelopment && workspacesConfig.development\n- ? [paths.appSrc, workspacesConfig.paths]\n- : isEnvProduction && workspacesConfig.production\n- ? [paths.appSrc, workspacesConfig.paths]\n- : paths.appSrc,\n+ include: includePaths,\n},\n{\n// \"oneOf\" will traverse all following loaders until one will\n@@ -373,12 +376,7 @@ module.exports = function(webpackEnv) {\n// The preset includes JSX, Flow, TypeScript, and some ESnext features.\n{\ntest: /\\.(js|mjs|jsx|ts|tsx)$/,\n- include:\n- isEnvDevelopment && workspacesConfig.development\n- ? [paths.appSrc, workspacesConfig.paths]\n- : isEnvProduction && workspacesConfig.production\n- ? [paths.appSrc, workspacesConfig.paths]\n- : paths.appSrc,\n+ include: includePaths,\nloader: require.resolve('babel-loader'),\noptions: {\ncustomize: require.resolve(\n@@ -661,6 +659,10 @@ module.exports = function(webpackEnv) {\ntypescript: resolve.sync('typescript', {\nbasedir: paths.appNodeModules,\n}),\n+ compilerOptions: {\n+ skipLibCheck: true,\n+ suppressOutputPathCheck: true,\n+ },\nasync: isEnvDevelopment,\nuseTypescriptIncrementalApi: true,\ncheckSyntacticErrors: true,\n@@ -672,7 +674,7 @@ module.exports = function(webpackEnv) {\n'!**/src/setupProxy.*',\n'!**/src/setupTests.*',\n],\n- watch: paths.appSrc,\n+ watch: includePaths,\nsilent: true,\n// The formatter is invoked directly in WebpackDevServerUtils during development\nformatter: isEnvProduction ? typescriptFormatter : undefined,\n",
        "date": "16.07.2019 14:42:40",
        "repo": "react-workspaces/create-react-app",
        "type": "set",
        "chatgpt_zeroshot": "Refactor webpack configuration to include paths based on environment and workspaces configuration."
    },
    {
        "msg": "set jsonpFunction to prevent conflicts",
        "diff": "diff --git a/packages/react-scripts/config/webpack.config.js b/packages/react-scripts/config/webpack.config.js @@ -39,6 +39,8 @@ const getCacheIdentifier = require('react-dev-utils/getCacheIdentifier');\n// @remove-on-eject-end\nconst postcssNormalize = require('postcss-normalize');\n+const appPackageJson = require(paths.appPackageJson);\n+\n// Source maps are resource heavy and can cause out of memory issue for large source files.\nconst shouldUseSourceMap = process.env.GENERATE_SOURCEMAP !== 'false';\n// Some apps do not need the benefits of saving a web request, so not inlining the chunk\n@@ -189,6 +191,9 @@ module.exports = function(webpackEnv) {\n.replace(/\\\\/g, '/')\n: isEnvDevelopment &&\n(info => path.resolve(info.absoluteResourcePath).replace(/\\\\/g, '/')),\n+ // Prevents conflicts when multiple Webpack runtimes (from different apps)\n+ // are used on the same page.\n+ jsonpFunction: `webpackJsonp${appPackageJson.name}`,\n},\noptimization: {\nminimize: isEnvProduction,\n@@ -197,7 +202,7 @@ module.exports = function(webpackEnv) {\nnew TerserPlugin({\nterserOptions: {\nparse: {\n- // we want terser to parse ecma 8 code. However, we don't want it\n+ // We want terser to parse ecma 8 code. However, we don't want it\n// to apply any minification steps that turns valid ecma 5 code\n// into invalid ecma 5 code. This is why the 'compress' and 'output'\n// sections only apply transformations that are ecma 5 safe\n",
        "date": "05.08.2019 13:42:46",
        "repo": "react-workspaces/create-react-app",
        "type": "set",
        "chatgpt_zeroshot": "Add appPackageJson variable and set jsonpFunction to prevent conflicts"
    },
    {
        "msg": "set webpack mainFields to default values this fixes the issue with the debug lib:",
        "diff": "diff --git a/packages/react-scripts/config/webpack.config.js b/packages/react-scripts/config/webpack.config.js @@ -62,7 +62,7 @@ module.exports = function(webpackEnv) {\nconst isEnvDevelopment = webpackEnv === 'development';\nconst isEnvProduction = webpackEnv === 'production';\n- const workspacesMainFields = [workspacesConfig.packageEntry, 'main'];\n+ const workspacesMainFields = [workspacesConfig.packageEntry, 'browser', 'module', 'main'];\nconst mainFields =\nisEnvDevelopment && workspacesConfig.development\n? workspacesMainFields\n",
        "date": "21.09.2019 02:08:47",
        "repo": "react-workspaces/create-react-app",
        "type": "set",
        "chatgpt_zeroshot": "Add 'browser' and 'module' fields to workspacesMainFields"
    },
    {
        "msg": "set output.globalObject to 'this' Closes",
        "diff": "diff --git a/packages/react-scripts/config/webpack.config.js b/packages/react-scripts/config/webpack.config.js @@ -202,6 +202,9 @@ module.exports = function(webpackEnv) {\n// Prevents conflicts when multiple Webpack runtimes (from different apps)\n// are used on the same page.\njsonpFunction: `webpackJsonp${appPackageJson.name}`,\n+ // this defaults to 'window', but by setting it to 'this' then\n+ // module chunks which are built will work in web workers as well.\n+ globalObject: 'this',\n},\noptimization: {\nminimize: isEnvProduction,\n",
        "date": "26.09.2019 16:24:48",
        "repo": "react-workspaces/create-react-app",
        "type": "set",
        "chatgpt_zeroshot": "Set globalObject to 'this' in webpack config for compatibility with web workers"
    },
    {
        "msg": "set cwd to the workspace root for the webpack.config.js Unknown",
        "diff": "diff --git a/packages/react-scripts/config/webpack.config.js b/packages/react-scripts/config/webpack.config.js @@ -62,6 +62,10 @@ const sassModuleRegex = /\\.module\\.(scss|sass)$/;\nconst workspacesConfig = yarnWorkspaces.init(paths);\n+// Change directory to the workspace root, to resolve file paths in relation\n+// to the workspace. Useful for backtracking errors, in context of the workspace root!\n+process.chdir(workspacesConfig.root);\n+\n// This is the production and development configuration.\n// It is focused on developer experience, fast rebuilds, and a minimal bundle.\nmodule.exports = function(webpackEnv) {\n",
        "date": "16.01.2020 16:43:13",
        "repo": "react-workspaces/create-react-app",
        "type": "set",
        "chatgpt_zeroshot": "Change directory to workspace root in webpack config"
    },
    {
        "msg": "set lang to english",
        "diff": "diff --git a/pages/_document.js b/pages/_document.js @@ -6,7 +6,7 @@ import Document, { Head, Main, NextScript } from 'next/document';\nexport default class MyDocument extends Document {\nrender() {\nreturn (\n- <html>\n+ <html lang=\"en\">\n<Head>\n<link rel=\"stylesheet\" href=\"/_next/static/style.css\" />\n</Head>\n",
        "date": "26.08.2018 16:33:19",
        "repo": "operationcode/front-end",
        "type": "set",
        "chatgpt_zeroshot": "Add lang attribute to html tag in _document.js"
    },
    {
        "msg": "set advanced cookie settings only in prod",
        "diff": "diff --git a/common/utils/cookie-utils.js b/common/utils/cookie-utils.js import jwt_decode from 'jwt-decode'; // eslint-disable-line camelcase\n+const isProd = process.env.NODE_ENV !== 'development';\n+\nconst cookieOptions = {\npath: '/',\n- domain: process.env.NODE_ENV === 'development' ? 'localhost' : 'operation-code.now.sh',\n- httpOnly: true,\n- sameSite: true,\n- secure: true,\n+ domain: isProd ? 'operation-code.now.sh' : 'localhost',\n+ httpOnly: isProd,\n+ sameSite: isProd,\n+ secure: isProd,\n};\nexport const setAuthCookies = (cookies, { token, user }) => {\n",
        "date": "09.04.2019 10:19:44",
        "repo": "operationcode/front-end",
        "type": "set",
        "chatgpt_zeroshot": "Refactor cookie-utils.js to use environment variable for domain and set httpOnly, sameSite, and secure based on production environment."
    },
    {
        "msg": "set authorization header from client on every request",
        "diff": "diff --git a/common/utils/api-utils.js b/common/utils/api-utils.js import axios from 'axios';\n+import cookie from 'js-cookie';\nimport { apiUrl } from 'common/config/environment';\nexport const OperationCodeAPI = axios.create({ baseURL: apiUrl });\n-// TODO: Use cookies programatically in all HTTP requests\n-// const setAuthorizationHeader = () => {\n-// const cookies = new Cookies();\n+const setAuthorizationHeader = () => {\n+ const token = cookie.get('token');\n-// const token = cookies.get('token');\n+ if (token) {\n+ return { Authorization: `bearer ${token}` };\n+ }\n-// if (token) {\n-// return { Authorization: `bearer ${cookies.get('token')}` };\n-// }\n-\n-// return {};\n-// };\n+ return {};\n+};\nexport const get = async path => {\nconst result = await OperationCodeAPI.get(`/${path}`, {\n- // headers: setAuthorizationHeader(),\n+ headers: setAuthorizationHeader(),\n});\n+\nreturn result;\n};\nexport const post = async (path, body) => {\nconst result = await OperationCodeAPI.post(`/${path}`, body, {\n- // headers: setAuthorizationHeader(),\n+ headers: setAuthorizationHeader(),\n});\n+\nreturn result;\n};\nexport const patch = async (path, body) => {\nconst result = await OperationCodeAPI.patch(`/${path}`, body, {\n- // headers: setAuthorizationHeader(),\n+ headers: setAuthorizationHeader(),\n});\n+\nreturn result;\n};\n",
        "date": "19.04.2019 20:22:14",
        "repo": "operationcode/front-end",
        "type": "set",
        "chatgpt_zeroshot": "Refactor API utils to use cookies for authorization headers"
    },
    {
        "msg": "set isVetTecApproved default value to false",
        "diff": "diff --git a/components/Cards/SchoolCard/SchoolCard.js b/components/Cards/SchoolCard/SchoolCard.js @@ -56,7 +56,7 @@ export default class SchoolCard extends Component {\nstatic defaultProps = {\nhasHousing: false,\n- isVetTecApproved: true,\n+ isVetTecApproved: false,\n};\ntoggleModalClick = () => {\n",
        "date": "23.09.2019 13:14:47",
        "repo": "operationcode/front-end",
        "type": "set",
        "chatgpt_zeroshot": "Update default value for isVetTecApproved to false in SchoolCard component"
    },
    {
        "msg": "set overflow to the initial value",
        "diff": "diff --git a/js/cards.js b/js/cards.js $(document).on('click.card', '.card', function (e) {\nif ($(this).find('> .card-reveal').length) {\n+ if($(e.target).closest('.card').data('initialOverflow') === undefined){\n+ $(e.target).closest('.card').data(\n+ 'initialOverflow',\n+ $(e.target).closest('.card').css('overflow') === undefined ? '' :$(e.target).closest('.card').css('overflow')\n+ );\n+ }\nif ($(e.target).is($('.card-reveal .card-title')) || $(e.target).is($('.card-reveal .card-title i'))) {\n// Make Reveal animate down and display none\n$(this).find('.card-reveal').velocity(\nduration: 225,\nqueue: false,\neasing: 'easeInOutQuad',\n- complete: function() { $(this).css({ display: 'none'}); }\n+ complete: function() {\n+ $(this).css({ display: 'none'});\n+ $(e.target).closest('.card').css('overflow', $(e.target).closest('.card').data('initialOverflow'));\n+ }\n}\n);\n}\n",
        "date": "09.05.2017 15:27:02",
        "repo": "dogfalo/materialize",
        "type": "set",
        "chatgpt_zeroshot": "Fix issue with card reveal animation and overflow handling"
    },
    {
        "msg": "set environmental variable SEPAL to true in sandbox. This indicates to applications and scripts that they are run within Sepal.",
        "diff": "diff --git a/modules/geospatial-toolkit/docker/script/init_post.sh b/modules/geospatial-toolkit/docker/script/init_post.sh @@ -12,6 +12,7 @@ printf '%s\\n' \\\n'PATH=\"usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/lib/orfeo/bin\"' \\\n'JAVA_HOME=\"/usr/lib/jvm/java-8-oracle\"' \\\n'GDAL_DATA=\"/usr/share/gdal/2.1\"' \\\n+ 'SEPAL=\"true\"' \\\n>> /etc/environment\n# Remove redundant files\n",
        "date": "11.05.2017 10:52:20",
        "repo": "openforis/sepal",
        "type": "set",
        "chatgpt_zeroshot": "Add SEPAL environment variable to init_post.sh script"
    },
    {
        "msg": "set language locale environmental vars in /etc/environment to en_US.",
        "diff": "diff --git a/modules/geospatial-toolkit/docker/script/init_post.sh b/modules/geospatial-toolkit/docker/script/init_post.sh @@ -13,6 +13,17 @@ printf '%s\\n' \\\n'JAVA_HOME=\"/usr/lib/jvm/java-8-oracle\"' \\\n'GDAL_DATA=\"/usr/share/gdal/2.1\"' \\\n'SEPAL=\"true\"' \\\n+ 'LC_ALL=\"en_US.UTF-8\"' \\\n+ 'LC_PAPER=\"en_US.UTF-8\"' \\\n+ 'LC_ADDRESS=\"en_US.UTF-8\"' \\\n+ 'LC_MONETARY=\"en_US.UTF-8\"' \\\n+ 'LC_NUMERIC=\"en_US.UTF-8\"' \\\n+ 'LC_TELEPHONE=\"en_US.UTF-8\"' \\\n+ 'LC_IDENTIFICATION=\"en_US.UTF-8\"' \\\n+ 'LC_MEASUREMENT=\"en_US.UTF-8\"' \\\n+ 'LC_TIME=\"en_US.UTF-8\"' \\\n+ 'LC_NAME=\"en_US.UTF-8\"' \\\n+ 'LANG=\"en_US.UTF-8\"' \\\n>> /etc/environment\n# Remove redundant files\n",
        "date": "17.05.2017 11:07:06",
        "repo": "openforis/sepal",
        "type": "set",
        "chatgpt_zeroshot": "Add en_US.UTF-8 locale settings to environment variables"
    },
    {
        "msg": "set nodata value on time-series VRTs instead of on the TIFs.",
        "diff": "diff --git a/modules/google-earth-engine/docker/src/sepal/timeseries/download.py b/modules/google-earth-engine/docker/src/sepal/timeseries/download.py @@ -199,7 +199,10 @@ class DownloadFeature(ThreadTask):\ntile_dirs = sorted([d for d in glob(join(self.feature_dir, '*')) if isdir(d)])\nfor tile_dir in tile_dirs:\nself._tile_to_vrt(tile_dir)\n- vrt = osgeo.gdal.BuildVRT(self.feature_dir + '/stack.vrt', sorted(glob(join(self.feature_dir, '*.vrt'))))\n+ vrt = osgeo.gdal.BuildVRT(\n+ self.feature_dir + '/stack.vrt', sorted(glob(join(self.feature_dir, '*.vrt'))),\n+ VRTNodata=0\n+ )\nif vrt:\nvrt.FlushCache()\n@@ -211,12 +214,18 @@ class DownloadFeature(ThreadTask):\nif tif_file:\nfor band_index in range(1, tif_file.RasterCount + 1):\ntif_vrt_path = '{0}_{1}.vrt'.format(tif_path_no_extension, str(band_index).zfill(10))\n- vrt = osgeo.gdal.BuildVRT(tif_vrt_path, tif_path, bandList=[band_index])\n+ vrt = osgeo.gdal.BuildVRT(\n+ tif_vrt_path, tif_path,\n+ bandList=[band_index],\n+ VRTNodata=0)\nif vrt:\nvrt.FlushCache()\nstack_vrt_path = tile_dir + '_stack.vrt'\nvrt_paths = sorted(glob(join(tile_dir, '*.vrt')))\n- vrt = osgeo.gdal.BuildVRT(stack_vrt_path, vrt_paths, separate=True)\n+ vrt = osgeo.gdal.BuildVRT(\n+ stack_vrt_path, vrt_paths,\n+ separate=True,\n+ VRTNodata=0)\nif vrt:\nvrt.FlushCache()\n@@ -351,12 +360,8 @@ class ProcessYear(ProcessTask):\ntile_dir = abspath(join(parent_dir, tile))\nsubprocess.check_call(['mkdir', '-p', tile_dir])\nsubprocess.check_call(\n- 'gdal_translate '\n- '-co BIGTIFF=IF_NEEDED '\n- '-a_nodata 0 '\n- '{0} '\n- '{1}'\n- .format(abspath(join(self._year_dir, tif_name)), abspath(join(tile_dir, tif_name))).split(' '))\n+ 'mv {0} {1}'.format(abspath(join(self._year_dir, tif_name)), abspath(join(tile_dir, tif_name))),\n+ shell=True)\nsubprocess.check_call('mv {0} {1}'.format(join(self._year_dir, '*.csv'), parent_dir), shell=True)\nsubprocess.check_call('rm -rf {0}'.format(self._year_dir).split(' '))\n",
        "date": "18.01.2018 12:17:08",
        "repo": "openforis/sepal",
        "type": "set",
        "chatgpt_zeroshot": "Refactor BuildVRT calls in download and process tasks"
    },
    {
        "msg": "set current user when logged in.",
        "diff": "diff --git a/modules/gui-react/frontend/src/user.js b/modules/gui-react/frontend/src/user.js @@ -6,7 +6,6 @@ import rx from 'rxjs'\nexport const loadingCurrentUser$ = named('LOADING_CURRENT_USER', new rx.Subject())\nexport const currentUser$ = named('CURRENT_USER', new rx.ReplaySubject(1))\nexport const loggingIn$ = named('LOGGING_IN', new rx.Subject())\n-export const loggedIn$ = named('LOGGED_IN', new rx.Subject())\nexport const invalidCredentials$ = named('INVALID_CREDENTIALS', new rx.Subject())\nexport const loadCurrentUser = () => {\n@@ -25,7 +24,7 @@ export const login = (username, password) => {\nusername: username,\npassword: password,\nhandle: {\n- 200: (user) => loggedIn$.next(user),\n+ 200: (user) => currentUser$.next(user),\n401: () => invalidCredentials$.next()\n},\n}).catch((error) => httpCallFailed(error))\n",
        "date": "27.02.2018 11:26:36",
        "repo": "openforis/sepal",
        "type": "set",
        "chatgpt_zeroshot": "Refactor login function to update currentUser$ instead of loggedIn$"
    },
    {
        "msg": "set hazeScore to 1 instead of 0 when surface_reflectance.",
        "diff": "diff --git a/modules/google-earth-engine/docker/src/sepal/mosaic/analyze.py b/modules/google-earth-engine/docker/src/sepal/mosaic/analyze.py @@ -67,7 +67,7 @@ class _Analyze(ImageOperation):\n'max(100 * pow(i.aerosol - 0.15, 2), 0)')\nif self.mosaic_def.surface_reflectance:\n- self.set('hazeScore', 0)\n+ self.set('hazeScore', 1)\nelse:\nself.set('hazeScore',\n'max(1 - (i.hazeProbability + i.variabilityProbability + i.cirrusCloudProbability + i.aerosolProbability) / 10, 0)')\n",
        "date": "04.04.2018 08:59:49",
        "repo": "openforis/sepal",
        "type": "set",
        "chatgpt_zeroshot": "Set hazeScore to 1 when surface reflectance is enabled"
    },
    {
        "msg": "set surface reflection and medoid as default for composites.",
        "diff": "diff --git a/modules/gui-react/frontend/src/backend.js b/modules/gui-react/frontend/src/backend.js @@ -17,13 +17,14 @@ const transformRecipeForPreview = (recipe) => {\nsensors: toSensors(recipe.sources),\ntargetDayOfYearWeight: 0,\nshadowTolerance: 1,\n- hazeTolerance: 0.5,\n+ hazeTolerance: 1,\ngreennessWeight: 0,\nbands: ['red', 'green', 'blue'],\n- medianComposite: true,\n+ surfaceReflectance: true,\n+ medianComposite: false,\nbrdfCorrect: false,\nmaskClouds: false,\n- maskSnow: true,\n+ maskSnow: false,\ntype: 'automatic'\n}\n}\n",
        "date": "04.06.2018 10:41:22",
        "repo": "openforis/sepal",
        "type": "set",
        "chatgpt_zeroshot": "Update haze tolerance and snow masking settings in backend.js"
    },
    {
        "msg": "set a min-height on simple dates form, to make space for year selector.",
        "diff": "diff --git a/modules/gui-react/frontend/src/app/home/body/process/mosaic/panels/dates/dates.module.css b/modules/gui-react/frontend/src/app/home/body/process/mosaic/panels/dates/dates.module.css }\n}\n+.simpleLayout {\n+ min-height: 9rem;\n+}\n+\n.targetDateLabel {\ngrid-area: targetDateLabel;\nmargin-top: 0.2rem;\n",
        "date": "05.06.2018 14:02:27",
        "repo": "openforis/sepal",
        "type": "set",
        "chatgpt_zeroshot": "Add simpleLayout class with min-height to dates module CSS"
    },
    {
        "msg": "set default auto-select scene-count on init instead of performing an auto-selection.",
        "diff": "diff --git a/modules/gui-react/frontend/src/app/home/body/process/mosaic/mosaicRecipe.js b/modules/gui-react/frontend/src/app/home/body/process/mosaic/mosaicRecipe.js @@ -168,10 +168,13 @@ export const RecipeActions = (id) => {\nsetAutoSelectingScenes(selecting) {\nreturn set('SET_AUTO_SELECTING_SCENES', 'ui.autoSelectingScenes', selecting, {selecting})\n},\n+ setAutoSelectSceneCount(sceneCount) {\n+ return set('SET_SCENE_COUNT', 'ui.sceneCount', sceneCount, {sceneCount})\n+ },\nautoSelectScenes(sceneCount) {\nthis.setAutoSelectingScenes(true).dispatch()\nRecipeEvents(id).autoSelectScenes$.next(sceneCount)\n- return set('SET_SCENE_COUNT', 'ui.sceneCount', sceneCount, {sceneCount})\n+ return this.setAutoSelectSceneCount(sceneCount)\n}\n}\n}\n@@ -215,7 +218,7 @@ const initRecipe = (recipe) => {\nactions.setLabelsShown(false).dispatch()\nactions.setSceneAreasShown(true).dispatch()\nactions.setBands('red, green, blue').dispatch()\n- actions.autoSelectScenes({min: 1, max: 99}).dispatch()\n+ actions.setAutoSelectSceneCount({min: 1, max: 99}).dispatch()\n}\nconst createAoi = (aoiForm) => {\n",
        "date": "29.06.2018 11:48:58",
        "repo": "openforis/sepal",
        "type": "set",
        "chatgpt_zeroshot": "Refactor autoSelectScenes method to use setAutoSelectSceneCount in mosaicRecipe"
    },
    {
        "msg": "set vagrant box disk size.",
        "diff": "diff --git a/hosting-services/vagrant/sepal/Vagrantfile b/hosting-services/vagrant/sepal/Vagrantfile @@ -6,6 +6,7 @@ project_dir = '../../..'\nVagrant.configure(2) do |config|\nconfig.vm.network 'private_network', ip: \"#{ENV['VAGRANT_IP']}\"\nconfig.vm.box = 'ubuntu/trusty64'\n+ config.disksize.size = \"64GB\"\nconfig.vm.synced_folder project_dir, '/opt/sepal/'\nconfig.vm.provider 'virtualbox' do |v|\n",
        "date": "16.10.2018 14:28:51",
        "repo": "openforis/sepal",
        "type": "set",
        "chatgpt_zeroshot": "Add disk size configuration to Vagrantfile"
    },
    {
        "msg": "set chromeless color same as default color.",
        "diff": "diff --git a/modules/gui/frontend/src/style/look.module.css b/modules/gui/frontend/src/style/look.module.css }\n.look.default.chromeless {\n+ color: var(--look-default-color);\nbackground-color: transparent;\nborder-style: none;\n}\n}\n.look.transparent.chromeless {\n+ color: var(--look-default-color);\nbackground-color: transparent;\nborder-style: none;\n}\n}\n.look.highlight.chromeless {\n+ color: var(--look-default-color);\nbackground-color: transparent;\nborder-style: none;\n}\n}\n.look.apply.chromeless {\n+ color: var(--look-default-color);\nbackground-color: transparent;\nborder-style: none;\n}\n}\n.look.cancel.chromeless {\n+ color: var(--look-default-color);\nbackground-color: transparent;\nborder-style: none;\n}\n",
        "date": "28.11.2018 10:05:25",
        "repo": "openforis/sepal",
        "type": "set",
        "chatgpt_zeroshot": "Update chromeless styles to use default color and transparent background."
    },
    {
        "msg": "set logging level to DEBUG on sepal-server.",
        "diff": "diff --git a/modules/sepal-server/src/main/resources/logback.xml b/modules/sepal-server/src/main/resources/logback.xml </encoder>\n</appender>\n- <logger name=\"org.openforis\" additivity=\"false\" level=\"INFO\">\n+ <logger name=\"org.openforis\" additivity=\"false\" level=\"DEBUG\">\n<appender-ref ref=\"STDOUT\"/>\n</logger>\n",
        "date": "25.02.2019 11:54:39",
        "repo": "openforis/sepal",
        "type": "set",
        "chatgpt_zeroshot": "Update log level for org.openforis logger from INFO to DEBUG"
    },
    {
        "msg": "set VRT_SHARED_SOURCE to 0 when building VRTs.",
        "diff": "diff --git a/modules/google-earth-engine/docker/src/sepal/image/build_vrt.py b/modules/google-earth-engine/docker/src/sepal/image/build_vrt.py from glob import glob\n-import osgeo.gdal\n+from osgeo import gdal\nfrom ..task.task import ThreadTask\n@@ -16,7 +16,8 @@ class BuildVrt(ThreadTask):\nfiles = glob(self.files)\nelse:\nfiles = self.files\n- vrt = osgeo.gdal.BuildVRT(self.output_file, files)\n+ gdal.SetConfigOption('VRT_SHARED_SOURCE', '0')\n+ vrt = gdal.BuildVRT(self.output_file, files)\nif vrt:\nvrt.FlushCache()\nself.resolve()\n",
        "date": "14.03.2019 13:19:10",
        "repo": "openforis/sepal",
        "type": "set",
        "chatgpt_zeroshot": "Fix import statement and set VRT_SHARED_SOURCE option in build_vrt.py"
    },
    {
        "msg": "set googleapiclient logging level to WARNING.",
        "diff": "diff --git a/modules/google-earth-engine/docker/sepal-ee/sepal/drive/__init__.py b/modules/google-earth-engine/docker/sepal-ee/sepal/drive/__init__.py +import logging\nfrom threading import local\nfrom apiclient import discovery\n_local = local()\n+logging.getLogger('googleapiclient').setLevel(logging.WARNING)\ndef get_service(credentials):\n",
        "date": "12.07.2019 15:44:30",
        "repo": "openforis/sepal",
        "type": "set",
        "chatgpt_zeroshot": "Set logging level to WARNING for googleapiclient in drive module."
    },
    {
        "msg": "set default date to Segment constructor.",
        "diff": "diff --git a/modules/google-earth-engine/docker/sepal-ee/sepal/ee/temporal_segmentation/segment.py b/modules/google-earth-engine/docker/sepal-ee/sepal/ee/temporal_segmentation/segment.py @@ -5,7 +5,7 @@ from . import date_conversion, harmonic_fit\nclass Segment(object):\n- def __init__(self, segmentImage, dateFormat, defaultDate):\n+ def __init__(self, segmentImage, dateFormat, defaultDate=None):\nself.segmentImage = segmentImage\nself.dateFormat = dateFormat\nself.defaultDate = defaultDate\n",
        "date": "06.02.2020 12:44:47",
        "repo": "openforis/sepal",
        "type": "set",
        "chatgpt_zeroshot": "Add default value for defaultDate parameter in Segment class constructor"
    },
    {
        "msg": "set segment default args.",
        "diff": "diff --git a/modules/google-earth-engine/docker/sepal-ee/sepal/ee/temporal_segmentation/segment.py b/modules/google-earth-engine/docker/sepal-ee/sepal/ee/temporal_segmentation/segment.py @@ -5,7 +5,7 @@ from . import date_conversion, harmonic_fit\nclass Segment(object):\n- def __init__(self, segmentImage, dateFormat, defaultDate):\n+ def __init__(self, segmentImage, dateFormat=0, defaultDate=None):\nself.segmentImage = segmentImage\nself.dateFormat = dateFormat\nself.defaultDate = defaultDate\n",
        "date": "07.02.2020 16:36:15",
        "repo": "openforis/sepal",
        "type": "set",
        "chatgpt_zeroshot": "Update Segment class constructor to include default values for dateFormat and defaultDate"
    },
    {
        "msg": "set DEBIAN_FRONTEND=noninteractive when installing apt packages in ceo.",
        "diff": "diff --git a/modules/ceo/docker/script/init_image.sh b/modules/ceo/docker/script/init_image.sh #!/usr/bin/env bash\nset -e\n-\n-apt-get -y update && DEBIAN_FRONTEND=noninteractive apt-get install -y\\\n+export DEBIAN_FRONTEND=noninteractive\n+apt-get -y update && apt-get install -y\\\ncurl\\\npython3\\\npython3-pip\\\n",
        "date": "17.04.2020 14:38:31",
        "repo": "openforis/sepal",
        "type": "set",
        "chatgpt_zeroshot": "Update init_image.sh script to set DEBIAN_FRONTEND variable before installing packages"
    },
    {
        "msg": "set default encoding to utf8 for terminal streams.",
        "diff": "diff --git a/lib/js/shared/src/terminal.js b/lib/js/shared/src/terminal.js @@ -2,10 +2,9 @@ const {spawn} = require('child_process')\nconst {Subject} = require('rxjs')\nconst log = require('sepal/log').getLogger('terminal')\n-const terminal$ = (command, args = [], options) => {\n+const terminal$ = (command, args = [], options = {encoding: 'utf8'}) => {\nvar subject = new Subject()\nconst buffer = !options || !options.encoding || options.encoding === 'buffer'\n- console.log('****** buffer', buffer)\nconst toValue = data => buffer ? data : data.toString(options.encoding)\ntry {\nconst process = spawn(command, args, options)\n",
        "date": "11.05.2020 13:28:25",
        "repo": "openforis/sepal",
        "type": "set",
        "chatgpt_zeroshot": "Update terminal$ function to include default encoding option"
    },
    {
        "msg": "set cache max-age for app files.",
        "diff": "diff --git a/modules/sepal-server/src/main/groovy/org/openforis/sepal/component/apps/endpoint/AppsEndpoint.groovy b/modules/sepal-server/src/main/groovy/org/openforis/sepal/component/apps/endpoint/AppsEndpoint.groovy @@ -49,6 +49,7 @@ class AppsEndpoint {\ndef lastModifiedDate = new Date(file.lastModified())\ndef lastModified = format.format(lastModifiedDate)\nresponse.addHeader('Last-Modified', lastModified)\n+ response.addHeader('Cache-Control', 'max-age=10, must-revalidate')\ndef ifModifiedSince = request.getHeader('If-Modified-Since')\nif (ifModifiedSince && !lastModifiedDate.after(format.parse(ifModifiedSince))) {\nresponse.status = 304\n",
        "date": "31.07.2020 12:46:18",
        "repo": "openforis/sepal",
        "type": "set",
        "chatgpt_zeroshot": "Add Cache-Control header to AppsEndpoint to set max-age and must-revalidate properties."
    },
    {
        "msg": "set PROJ_LIB when starting Jupyter.",
        "diff": "diff --git a/modules/sandbox/docker/script/start-jupyter.sh b/modules/sandbox/docker/script/start-jupyter.sh @@ -16,7 +16,7 @@ else\necho \"User $sandbox_user initialized\"\nfi\n-sudo -iu $sandbox_user NODE_PATH=$NODE_PATH:`npm root -g`:`npm root` python3 /usr/local/bin/jupyter-notebook\\\n+sudo -iu $sandbox_user PROJ_LIB=/usr/share/proj NODE_PATH=$NODE_PATH:`npm root -g`:`npm root` python3 /usr/local/bin/jupyter-notebook\\\n--no-browser\\\n--allow-root\\\n--ip=0.0.0.0\\\n",
        "date": "07.09.2020 13:55:29",
        "repo": "openforis/sepal",
        "type": "set",
        "chatgpt_zeroshot": "Add PROJ_LIB environment variable to start-jupyter.sh script"
    },
    {
        "msg": "set PROJ_LIB env variable in geospatial-toolkit.",
        "diff": "diff --git a/modules/geospatial-toolkit/docker/script/init_post.sh b/modules/geospatial-toolkit/docker/script/init_post.sh @@ -15,6 +15,7 @@ printf '%s\\n' \\\n'GDAL_DATA=\"/usr/share/gdal\"' \\\n'SHELL=\"/bin/bash\"' \\\n'SEPAL=\"true\"' \\\n+ 'PROJ_LIB=\"/usr/share/proj\"' \\\n>> /etc/environment\n# Remove redundant files\n",
        "date": "07.09.2020 13:57:43",
        "repo": "openforis/sepal",
        "type": "set",
        "chatgpt_zeroshot": "Add PROJ_LIB environment variable to init_post.sh script"
    },
    {
        "msg": "set fitBounds padding default to zero.",
        "diff": "diff --git a/modules/gui/frontend/src/app/home/map/map.js b/modules/gui/frontend/src/app/home/map/map.js @@ -170,7 +170,7 @@ class _Map extends React.Component {\n}\n// used by aoi, map, collectPanel\n- fitBounds(bounds, padding) {\n+ fitBounds(bounds, padding = 0) {\nconst {googleMap} = this.state\nconst nextBounds = this.toGoogleBounds(bounds)\nconst currentBounds = googleMap.getBounds()\n",
        "date": "08.03.2021 12:35:31",
        "repo": "openforis/sepal",
        "type": "set",
        "chatgpt_zeroshot": "Add default value for padding in fitBounds method"
    },
    {
        "msg": "set initial value when mounting search box.",
        "diff": "diff --git a/modules/gui/frontend/src/widget/searchBox.js b/modules/gui/frontend/src/widget/searchBox.js @@ -110,8 +110,9 @@ class _SearchBox extends React.Component {\n}\ncomponentDidMount() {\n- const {onSearchValue, onSearchValues, debounce, addSubscription} = this.props\n+ const {value, onSearchValue, onSearchValues, debounce, addSubscription} = this.props\nconst {search$, showOptions$} = this\n+ this.setValue(value)\nconst debouncedShowOptions$ = merge(\nshowOptions$.pipe(\n",
        "date": "08.06.2021 19:32:11",
        "repo": "openforis/sepal",
        "type": "set",
        "chatgpt_zeroshot": "Add initial value to search box on component mount"
    },
    {
        "msg": "set sameSite to false on session cookie. Having it true prevented Google three-legged oauth.",
        "diff": "diff --git a/modules/gateway/docker/src/main.js b/modules/gateway/docker/src/main.js @@ -15,7 +15,7 @@ const sessionParser = session({\ncookie: {\nhttpOnly: true,\nmaxAge: 1000 * 60 * 30,\n- sameSite: true,\n+ sameSite: false,\nsecure: false\n},\nproxy: true,\n",
        "date": "07.07.2021 11:37:40",
        "repo": "openforis/sepal",
        "type": "set",
        "chatgpt_zeroshot": "Update session cookie sameSite attribute to false"
    },
    {
        "msg": "set ShmSize to half the instance RAM.",
        "diff": "diff --git a/modules/sepal-server/src/main/groovy/org/openforis/sepal/component/workerinstance/adapter/DockerInstanceProvisioner.groovy b/modules/sepal-server/src/main/groovy/org/openforis/sepal/component/workerinstance/adapter/DockerInstanceProvisioner.groovy @@ -102,7 +102,8 @@ class DockerInstanceProvisioner implements InstanceProvisioner {\n},\nMemory: memoryBytes,\nMemorySwap: memoryBytes,\n- KernelMemory: memoryBytes\n+ KernelMemory: memoryBytes,\n+ ShmSize: (long) instanceType.ramBytes / 2\n],\nExposedPorts: image.exposedPorts.collectEntries {\n[\"$it/tcp\", [:]]\n",
        "date": "28.09.2021 07:58:50",
        "repo": "openforis/sepal",
        "type": "set",
        "chatgpt_zeroshot": "Add ShmSize configuration to DockerInstanceProvisioner"
    },
    {
        "msg": "set kernel display_name.",
        "diff": "diff --git a/modules/app-manager/docker/src/apps.js b/modules/app-manager/docker/src/apps.js @@ -23,11 +23,12 @@ const apps$ = () =>\nfileToJson$('/var/sepal/app-manager/apps.json').pipe(\nswitchMap(({apps}) => from(apps)),\nfilter(({repository}) => repository),\n- map(({endpoint = 'shiny', repository, branch}) => {\n+ map(({endpoint = 'shiny', label, repository, branch}) => {\nconst name = basename(repository)\nreturn {\nendpoint,\nname,\n+ label,\npath: endpoint === 'jupyter'\n? `/var/sepal/app-manager/apps/${name}`\n: `/shiny/${name}`,\n@@ -61,21 +62,22 @@ const useCustomKernel$ = ({endpoint, path}) =>\n? exists$({path: join(path, 'requirements.txt')})\n: of(false)\n-const updateKernel$ = ({name, path}) => {\n+const updateKernel$ = ({name, path, label}) => {\nconst kernelPath = join('/usr/local/share/jupyter/kernels', `venv-${name}`)\nconst venvPath = join(kernelPath, 'venv')\nreturn exists$({path: kernelPath}).pipe(\n- switchMap(kernelExists => kernelExists ? of(true) : createKernel$({path: kernelPath})),\n+ switchMap(kernelExists => kernelExists ? of(true) : createKernel$({path: kernelPath, label})),\nswitchMap(() => exists$(venvPath)),\nswitchMap(venvExists => venvExists ? of(true) : createVenv$({path: venvPath})),\nswitchMap(() => installRequirements$({venvPath, requirementsPath: join(path, 'requirements.txt')}))\n)\n}\n-const createKernel$ = ({path}) => {\n+const createKernel$ = ({path, label}) => {\nconst venvPath = join(path, 'venv')\nconst kernel = {\n'argv': [join(venvPath, 'bin/python3'), '-m', 'ipykernel_launcher', '-f', '{connection_file}'],\n+ 'display_name': `App: ${label}`,\n'language': 'python'\n}\n",
        "date": "05.10.2021 11:44:29",
        "repo": "openforis/sepal",
        "type": "set",
        "chatgpt_zeroshot": "Add label to app configuration and display name to kernel."
    },
    {
        "msg": "set minZoom to 0 for GoogleMapsOverlays. The Google map can be used to constraint the zoom level.",
        "diff": "diff --git a/modules/gui/frontend/src/app/home/map/layer/googleMapsOverlay.js b/modules/gui/frontend/src/app/home/map/layer/googleMapsOverlay.js import {BalancingTileProvider} from '../tileProvider/balancingTileProvider'\n-import {MAX_ZOOM, MIN_ZOOM} from '../maps'\n+import {MAX_ZOOM} from '../maps'\nimport guid from 'guid'\n// implements google.maps.MapType\n@@ -7,7 +7,7 @@ export class GoogleMapsOverlay {\nconstructor(tileProvider, {\ngoogle,\nname,\n- minZoom = MIN_ZOOM,\n+ minZoom = 0,\nmaxZoom = MAX_ZOOM,\n} = {}, busy$) {\nthis.tileProvider = new BalancingTileProvider({tileProvider, retries: 3, busy$})\n",
        "date": "28.10.2021 15:20:13",
        "repo": "openforis/sepal",
        "type": "set",
        "chatgpt_zeroshot": "Update minZoom default value in GoogleMapsOverlay constructor"
    },
    {
        "msg": "set minZoom to 0 for PreviewMap.",
        "diff": "diff --git a/modules/gui/frontend/src/app/home/body/process/recipe/mosaic/panels/aoi/previewMap.js b/modules/gui/frontend/src/app/home/body/process/recipe/mosaic/panels/aoi/previewMap.js @@ -12,7 +12,7 @@ import styles from './previewMap.module.css'\nconst log = getLogger('previewMap')\nconst PREVIEW_MAP_OPTIONS = {\n- minZoom: 1,\n+ minZoom: 0,\nzoom: 1,\ngestureHandling: 'none',\ndraggableCursor: 'default'\n",
        "date": "28.10.2021 15:20:35",
        "repo": "openforis/sepal",
        "type": "set",
        "chatgpt_zeroshot": "Update minZoom value to 0 in previewMap options"
    },
    {
        "msg": "set the voila config to show tracebacks everywhere",
        "diff": "diff --git a/modules/sandbox/script/start-jupyter.sh b/modules/sandbox/script/start-jupyter.sh @@ -33,4 +33,5 @@ sudo -iu $sandbox_user PATH=$PATH PROJ_LIB=/usr/share/proj NODE_PATH=$NODE_PATH:\n--NotebookApp.base_url='/api/sandbox/jupyter/'\\\n--NotebookApp.notebook_dir=\"/home/$sandbox_user\"\\\n--FileContentsManager.delete_to_trash=False\\\n- --VoilaConfiguration.enable_nbextensions=True\n+ --VoilaConfiguration.enable_nbextensions=True\\\n+ --VoilaConfiguration.show_tracebacks=True\n",
        "date": "19.07.2022 09:36:41",
        "repo": "openforis/sepal",
        "type": "set",
        "chatgpt_zeroshot": "Enable showing tracebacks in VoilaConfiguration"
    },
    {
        "msg": "set zindex dirty bit.",
        "diff": "diff --git a/packages/vega-view/src/transforms/Render.js b/packages/vega-view/src/transforms/Render.js @@ -25,4 +25,10 @@ prototype.transform = function(_, pulse) {\nif (pulse.changed(pulse.MOD)) {\nview.enqueue(pulse.materialize(pulse.MOD).mod);\n}\n+\n+ // set z-index dirty flag as needed\n+ if (pulse.fields && pulse.fields['zindex']) {\n+ var item = pulse.source && pulse.source[0];\n+ if (item) item.mark.zdirty = true;\n+ }\n};\n",
        "date": "15.08.2016 13:09:33",
        "repo": "vega/vega",
        "type": "set",
        "chatgpt_zeroshot": "Add z-index dirty flag setting in Render transform"
    },
    {
        "msg": "set the typings version in Vega package",
        "diff": "diff --git a/packages/vega/package.json b/packages/vega/package.json \"vega-scenegraph\": \"^4.1.0\",\n\"vega-statistics\": \"^1.3.1\",\n\"vega-transforms\": \"^4.0.2\",\n- \"vega-typings\": \"*\",\n+ \"vega-typings\": \"^0.6.2\",\n\"vega-util\": \"^1.10.0\",\n\"vega-view\": \"^5.2.1\",\n\"vega-view-transforms\": \"^4.3.0\",\n",
        "date": "24.03.2019 20:13:19",
        "repo": "vega/vega",
        "type": "set",
        "chatgpt_zeroshot": "Update vega-typings version to 0.6.2"
    },
    {
        "msg": "set app folder name in config",
        "diff": "diff --git a/rnv-cli/src/platformTools/apple.js b/rnv-cli/src/platformTools/apple.js @@ -68,7 +68,7 @@ const _runXcodeProject = (c, platform, target) => new Promise((resolve, reject)\nconst appPath = getAppFolder(c, platform);\nconst device = c.program.device;\n- const appFolderName = _getAppFolderName(platform);\n+ const appFolderName = _getAppFolderName(c, platform);\nconst scheme = getConfigProp(c, platform, 'scheme');\nconst runScheme = getConfigProp(c, platform, 'runScheme');\nconst bundleIsDev = getConfigProp(c, platform, 'bundleIsDev') === true;\n@@ -173,7 +173,7 @@ const _runXcodeProject = (c, platform, target) => new Promise((resolve, reject)\nconst archiveXcodeProject = (c, platform) => new Promise((resolve, reject) => {\nlogTask(`archiveXcodeProject:${platform}`);\n- const appFolderName = _getAppFolderName(platform);\n+ const appFolderName = _getAppFolderName(c, platform);\nconst sdk = platform === IOS ? 'iphoneos' : 'tvos';\nconst appPath = getAppFolder(c, platform);\n@@ -236,7 +236,7 @@ const exportXcodeProject = (c, platform) => new Promise((resolve, reject) => {\nconst packageBundleForXcode = (c, platform, isDev = false) => {\nlogTask(`packageBundleForXcode:${platform}`);\n- const appFolderName = _getAppFolderName(platform);\n+ const appFolderName = _getAppFolderName(c, platform);\nconst appPath = path.join(getAppFolder(c, platform), appFolderName);\nreturn executeAsync('react-native', [\n@@ -257,7 +257,7 @@ const prepareXcodeProject = (c, platform) => new Promise((resolve, reject) => {\nconst device = c.program.device;\nconst ip = device ? getIP() : 'localhost';\nconst appFolder = getAppFolder(c, platform);\n- const appFolderName = _getAppFolderName(platform);\n+ const appFolderName = _getAppFolderName(c, platform);\nconst bundleAssets = getConfigProp(c, platform, 'bundleAssets') === true;\n// CHECK TEAM ID IF DEVICE\n@@ -296,7 +296,7 @@ const configureXcodeProject = (c, platform, ip, port) => new Promise((resolve, r\nif (process.platform !== 'darwin') return;\nif (!isPlatformActive(c, platform, resolve)) return;\n- const appFolderName = _getAppFolderName(platform);\n+ const appFolderName = _getAppFolderName(c, platform);\n// configureIfRequired(c, platform)\n// .then(() => copyAppleAssets(c, platform, appFolderName))\n@@ -480,7 +480,13 @@ const _preConfigureProject = (c, platform, appFolderName, ip = 'localhost', port\n});\n});\n-const _getAppFolderName = platform => (platform === IOS ? 'RNVApp' : 'RNVAppTVOS');\n+const _getAppFolderName = (c, platform) => {\n+ const projectFolder = getConfigProp(c, platform, 'projectFolder');\n+ if (projectFolder) {\n+ return projectFolder;\n+ }\n+ return (platform === IOS ? 'RNVApp' : 'RNVAppTVOS');\n+};\nconst listAppleDevices = (c, platform) => new Promise((resolve, reject) => {\nlogTask(`listAppleDevices:${platform}`);\n",
        "date": "26.04.2019 15:05:55",
        "repo": "pavjacko/renative",
        "type": "set",
        "chatgpt_zeroshot": "Refactor _getAppFolderName function to accept config object and platform as arguments."
    },
    {
        "msg": "set default engine as engine-rn-tvos for native tvs",
        "diff": "diff --git a/packages/app/renative.json b/packages/app/renative.json ]\n},\n\"androidtv\": {\n+ \"engine\": \"engine-rn-tvos\",\n\"includedPermissions\": [\n\"INTERNET\"\n]\n},\n\"firetv\": {\n+ \"engine\": \"engine-rn-tvos\",\n\"includedPermissions\": [\n\"INTERNET\"\n]\n",
        "date": "21.07.2021 19:29:03",
        "repo": "pavjacko/renative",
        "type": "set",
        "chatgpt_zeroshot": "Update renative.json to include engine-rn-tvos for androidtv and firetv configurations."
    },
    {
        "msg": "set admin level when using in browser setup",
        "diff": "diff --git a/server/router/setup.go b/server/router/setup.go @@ -55,6 +55,7 @@ func (rt *router) postSetup(c *gin.Context) {\n{\nEmail: req.EmailAddress,\nPassword: req.Password,\n+ AdminLevel: persistence.AccountUserAdminLevelSuperAdmin,\nAccounts: []string{accountID.String()},\n},\n},\n",
        "date": "30.04.2020 12:52:42",
        "repo": "offen/offen",
        "type": "set",
        "chatgpt_zeroshot": "Add AdminLevel field to user setup with default value of SuperAdmin"
    },
    {
        "msg": "set revision arg at build stage",
        "diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -62,6 +62,14 @@ jobs:\nsteps:\n- checkout\n- setup_remote_docker\n+ - run:\n+ name: Set revision\n+ command: |\n+ if [ -z \"$CIRCLE_TAG\" ]; then\n+ echo 'export OFFEN_GIT_REVISION=$(git rev-parse --short HEAD)' >> $BASH_ENV\n+ else\n+ echo 'export OFFEN_GIT_REVISION=$CIRCLE_TAG' >> $BASH_ENV\n+ fi\n- run:\nname: Build binaries\ncommand: |\n@@ -152,17 +160,15 @@ jobs:\n- attach_workspace:\nat: ~/offen\n- run:\n- name: Set build environment\n+ name: Set image tag\ncommand: |\nif [ -z \"$CIRCLE_TAG\" ]; then\n- echo 'export OFFEN_GIT_REVISION=$(git rev-parse --short HEAD)' >> $BASH_ENV\nif [ \"${CIRCLE_BRANCH}\" == \"master\" ]; then\necho 'export DOCKER_IMAGE_TAG=\"stable\"' >> $BASH_ENV\nelse\necho 'export DOCKER_IMAGE_TAG=\"latest\"' >> $BASH_ENV\nfi\nelse\n- echo 'export OFFEN_GIT_REVISION=$CIRCLE_TAG' >> $BASH_ENV\necho 'export DOCKER_IMAGE_TAG=$CIRCLE_TAG' >> $BASH_ENV\nfi\n- run:\n",
        "date": "22.05.2020 17:32:02",
        "repo": "offen/offen",
        "type": "set",
        "chatgpt_zeroshot": "Set revision and image tag based on CircleCI environment variables"
    },
    {
        "msg": "set host alias to 'H' instead of 'h'",
        "diff": "diff --git a/src/commands/watch.js b/src/commands/watch.js @@ -19,7 +19,8 @@ export default asyncCommand({\n},\nhost: {\ndescription: 'Hostname to start a server on',\n- default: '0.0.0.0'\n+ default: '0.0.0.0',\n+ alias: 'H'\n},\nhttps: {\ndescription: 'Use HTTPS?',\n",
        "date": "04.07.2017 01:57:16",
        "repo": "preactjs/preact-cli",
        "type": "set",
        "chatgpt_zeroshot": "Add alias option for host in watch command"
    },
    {
        "msg": "set cache directory as absolute path",
        "diff": "diff --git a/Program.cs b/Program.cs using CefSharp;\nusing CefSharp.WinForms;\nusing System;\n+using System.IO;\nusing System.Windows.Forms;\nnamespace VRCX\n@@ -19,7 +20,7 @@ namespace VRCX\n{\nvar settings = new CefSettings\n{\n- CachePath = \"cache\",\n+ CachePath = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, \"cache\"),\nPersistUserPreferences = true,\nPersistSessionCookies = true,\nWindowlessRenderingEnabled = true\n",
        "date": "28.03.2020 20:07:32",
        "repo": "pypy-vrc/vrcx",
        "type": "set",
        "chatgpt_zeroshot": "Refactor CachePath to use AppDomain.CurrentDomain.BaseDirectory"
    },
    {
        "msg": "revert TokenGrant instantiation to old style",
        "diff": "diff --git a/contracts/token/VestedToken.sol b/contracts/token/VestedToken.sol @@ -45,7 +45,8 @@ contract VestedToken is StandardToken {\nthrow;\n}\n- TokenGrant memory grant = TokenGrant({start: _start, value: _value, cliff: _cliff, vesting: _vesting, granter: msg.sender});\n+\n+ TokenGrant memory grant = TokenGrant(msg.sender, _value, _cliff, _vesting, _start);\ngrants[_to].push(grant);\ntransfer(_to, _value);\n",
        "date": "09.03.2017 14:37:02",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "revert",
        "chatgpt_zeroshot": "Refactor grant initialization in VestedToken contract"
    },
    {
        "msg": "revert em function calls to get rid of deprecation warnings",
        "diff": "diff --git a/app/styles/base/_grid-settings.scss b/app/styles/base/_grid-settings.scss @import \"neat-helpers\"; // or \"../neat/neat-helpers\" when not in Rails\n-\n// Neat Overrides\n// $column: 90px;\n// $gutter: 30px;\n// $grid-columns: 12;\n// $max-width: 1088px;\n-\n// Neat Breakpoints\n-$mobile-portrait-screen: em(480);\n-$medium-screen: em(640);\n-$large-screen: em(860);\n-\n+$mobile-portrait-screen: 30em; // 480px\n+$medium-screen: 40em; // 640px\n+$large-screen: 54em; // 864px\n$medium-screen-up: new-breakpoint(min-width $medium-screen 4);\n$medium-large-screen-up: new-breakpoint(min-width $medium-screen 8);\n$large-screen-up: new-breakpoint(min-width $large-screen 8);\n\\ No newline at end of file\n",
        "date": "21.03.2017 01:50:52",
        "repo": "ember-learn/ember-api-docs",
        "type": "revert",
        "chatgpt_zeroshot": "Update Neat breakpoints in grid settings to use em units and corresponding pixel values."
    },
    {
        "msg": "revert a couple of css changes",
        "diff": "diff --git a/app/styles/components/_highlight.scss b/app/styles/components/_highlight.scss table {\nborder: none;\nmargin: 0;\n+ table-layout: auto;\noverflow: auto;\nwidth: 100%;\nz-index: auto;\n@include size(52px 20px);\nbackground: 0 0 no-repeat;\nbackground-size: 52px 20px;\n- background-color: $code-background;\nz-index: 9;\n}\n",
        "date": "10.10.2018 23:54:24",
        "repo": "ember-learn/ember-api-docs",
        "type": "revert",
        "chatgpt_zeroshot": "Update table styling in _highlight.scss"
    },
    {
        "msg": "revert the value of azure02",
        "diff": "diff --git a/src/components/colorpicker/colorpicker.js b/src/components/colorpicker/colorpicker.js @@ -114,7 +114,7 @@ const COLORPICKER_DEFAULTS = {\n{ label: 'Azure', number: '05', value: '4EA0D1' },\n{ label: 'Azure', number: '04', value: '69B5DD' },\n{ label: 'Azure', number: '03', value: '8DC9E6' },\n- { label: 'Azure', number: '02', value: 'ADDBEB' },\n+ { label: 'Azure', number: '02', value: 'ADD8EB' },\n{ label: 'Azure', number: '01', value: 'C8E9F4' }\n],\nplaceIn: null, // null|'editor'\n",
        "date": "17.08.2018 11:15:23",
        "repo": "infor-design/enterprise",
        "type": "revert",
        "chatgpt_zeroshot": "Update color value for Azure 02 in colorpicker options"
    },
    {
        "msg": "revert style",
        "diff": "diff --git a/src/components/accordion/_accordion.scss b/src/components/accordion/_accordion.scss > [class^=\"btn\"] {\n@include btn-chevron-style;\n- &:focus:not(.hide-focus) {\n- border-color: transparent;\n- box-shadow: none;\n- }\n}\n> [class^=\"btn\"],\n// Selected color scheme\n&.is-focused:not(.hide-focus) {\n- border-color: none;\n- box-shadow: none;\n+ border-color: $accordion-focused-border-color;\n+ box-shadow: $focus-box-shadow;\n}\n&.has-chevron {\n",
        "date": "05.09.2018 12:30:38",
        "repo": "infor-design/enterprise",
        "type": "revert",
        "chatgpt_zeroshot": "Refactor accordion focus styles and add selected color scheme"
    },
    {
        "msg": "revert trackdirty.js",
        "diff": "diff --git a/src/components/trackdirty/trackdirty.js b/src/components/trackdirty/trackdirty.js @@ -184,10 +184,10 @@ Trackdirty.prototype = {\nif (!d.icon.is('.icon-dirty')) {\nif (input.is('[type=\"checkbox\"]')) {\nd.rect = this.getAbsolutePosition(label);\n- d.style = `left:${d.rect.left}px; top:${d.rect.top}px`;\n+ d.style = `left:${d.rect.left}px; top:${d.rect.top}px;`;\n} else if (input.is('.colorpicker') && !Locale.isRTL()) {\nd.rect = this.getAbsolutePosition(input);\n- d.style = `left:${d.rect.left}px; top:${d.rect.top}px`;\n+ d.style = `left:${d.rect.left}px; top:${d.rect.top}px;`;\n}\nd.icon = `<span class=\"icon-dirty${d.class}\"></span>`;\nd.msg = Locale.translate('MsgDirty') || '';\n",
        "date": "06.09.2018 09:31:02",
        "repo": "infor-design/enterprise",
        "type": "revert",
        "chatgpt_zeroshot": "Fix styling issue in Trackdirty component"
    },
    {
        "msg": "revert colorpicker",
        "diff": "diff --git a/src/components/modal/modal.js b/src/components/modal/modal.js @@ -594,14 +594,19 @@ Modal.prototype = {\n$(this.element).on('keypress.modal', (e) => {\nconst target = $(e.target);\n- if (target.is('editor, .searchfield, textarea, :button') || target.closest('.tab-list').length || $('#dropdown-list').length) {\n+ if (target.is('.editor, .searchfield, textarea, :button') || target.closest('.tab-list').length || $('#dropdown-list').length) {\nreturn;\n}\nif (e.which === 13 && this.isOnTop() &&\n!target.closest('form').find(':submit').length &&\nthis.element.find('.btn-modal-primary:enabled').length) {\n- return;\n+ e.stopPropagation();\n+ e.preventDefault();\n+\n+ if ((!target.hasClass('fileupload') && !$(target).is(':input')) || target.hasClass('colorpicker')) {\n+ this.element.find('.btn-modal-primary:enabled').trigger('click');\n+ }\n}\n});\n",
        "date": "03.10.2018 15:54:45",
        "repo": "infor-design/enterprise",
        "type": "revert",
        "chatgpt_zeroshot": "Fix modal form submission on enter key press"
    },
    {
        "msg": "revert deleted notes",
        "diff": "diff --git a/src/components/monthview/monthview.js b/src/components/monthview/monthview.js @@ -56,6 +56,7 @@ const COMPONENT_NAME_DEFAULTS = {\n* @param {number} [settings.isPopup] Is it in a popup (datepicker using it)\n* @param {number} [settings.headerStyle] Configure the header, this can be 'simple' or 'full'. Full adds a picker and today link.\n* @param {number} [settings.firstDayOfWeek=null] Set first day of the week. '1' would be Monday.\n+ * @param {object} [settings.disable] Disable dates in various ways.\n* For example `{minDate: 'M/d/yyyy', maxDate: 'M/d/yyyy'}`. Dates should be in format M/d/yyyy\n* or be a Date() object or string that can be converted to a date with new Date().\n* @param {array} [settings.disable.dates] Disable specific dates.\n",
        "date": "06.12.2018 22:49:49",
        "repo": "infor-design/enterprise",
        "type": "revert",
        "chatgpt_zeroshot": "Add support for disabling dates in monthview component"
    },
    {
        "msg": "revert tab overflow test",
        "diff": "diff --git a/test/components/tabs/tabs-api.func-spec.js b/test/components/tabs/tabs-api.func-spec.js @@ -323,8 +323,8 @@ describe('Tabs API', () => {\nexpect(allVisibleTabs.length).toEqual(4);\n});\n- it('Should not return overflowed tabs at 320px', () => {\n- tabsEl.style.width = '320px';\n+ it('Should not return overflowed tabs at 300px', () => {\n+ tabsEl.style.width = '300px';\n$('body').triggerHandler('resize');\nconst tab = tabsObj.getOverflowTabs();\n",
        "date": "22.04.2019 12:46:39",
        "repo": "infor-design/enterprise",
        "type": "revert",
        "chatgpt_zeroshot": "Update tabs API test to check for overflowed tabs at 300px instead of 320px"
    },
    {
        "msg": "revert expandablearea title styles",
        "diff": "diff --git a/src/components/expandablearea/_expandablearea.scss b/src/components/expandablearea/_expandablearea.scss //Icon on the header\n.title {\ncolor: $expandable-area-title-color;\n- font-size: $theme-size-font-lg;\n- font-weight: $theme-number-font-weight-bold;\n-\n- span {\n- font-weight: $theme-number-font-weight-bold;\n- }\n+ font-size: $theme-size-font-md;\n}\n//Push the switch out a bit, qualified to panes only not nested children\n",
        "date": "16.05.2019 17:53:06",
        "repo": "infor-design/enterprise",
        "type": "revert",
        "chatgpt_zeroshot": "Adjust font size in expandable area title and push switch out for panes only"
    },
    {
        "msg": "revert change to totalWidth center to pass tests",
        "diff": "diff --git a/src/components/datagrid/datagrid.js b/src/components/datagrid/datagrid.js @@ -4183,6 +4183,7 @@ Datagrid.prototype = {\nwidthPercent: this.widthPercent\n};\nthis.totalMinWidths[container] = this.totalWidths[container];\n+ this.totalWidths[container] = this.isInModal ? this.elemWidth : '100%';\n}\nif (diff > 0 && diff < colWidth && !this.widthPercent && !col.width) {\ncolWidth += diff;\n@@ -4203,9 +4204,9 @@ Datagrid.prototype = {\nif ((diff2 > 0) && !stretchColumn[0].widthPercent) {\nstretchColumn[0].width += diff2 - 2;\n}\n+ this.totalWidths[container] = this.isInModal ? this.elemWidth : '100%';\n}\n- this.totalWidths.center = this.isInModal ? this.elemWidth : '100%';\nif (this.widthPercent) {\nthis.table.css('width', '100%');\n",
        "date": "21.05.2019 17:59:14",
        "repo": "infor-design/enterprise",
        "type": "revert",
        "chatgpt_zeroshot": "Update totalWidths calculation in Datagrid component"
    },
    {
        "msg": "revert usage of `path.sep` in URL handling",
        "diff": "diff --git a/app/src/js/utils.js b/app/src/js/utils.js @@ -5,9 +5,12 @@ const commandLineArgs = require('yargs').argv;\nconst utils = {};\n+// Returns only the filename from the specified request\nutils.getFileName = function getFileName(filePath) {\nfilePath = utils.getPathWithoutQuery(filePath);\n- let sepIndex = filePath.lastIndexOf(path.sep);\n+\n+ // NOTE: `path.sep` is not used on purpose, since this is a URL.\n+ let sepIndex = filePath.lastIndexOf('/');\nsepIndex = sepIndex === -1 ? 0 : sepIndex + 1;\nreturn filePath.substring(sepIndex, filePath.length);\n",
        "date": "18.06.2019 14:29:35",
        "repo": "infor-design/enterprise",
        "type": "revert",
        "chatgpt_zeroshot": "Refactor getFileName function to use '/' instead of path.sep"
    },
    {
        "msg": "revert test page",
        "diff": "diff --git a/app/views/components/editor/example-dirty-tracking.html b/app/views/components/editor/example-dirty-tracking.html </div>\n</div>\n-\n-<script>\n- $('body').one('initialized', function () {\n- $('#editor1').editor().on('change.editor', function (e) {\n- console.log(\"Change detected\");\n- });\n- });\n-</script>\n",
        "date": "30.04.2021 19:35:00",
        "repo": "infor-design/enterprise",
        "type": "revert",
        "chatgpt_zeroshot": "Remove unnecessary dirty tracking script from editor component"
    },
    {
        "msg": "revert initial fix",
        "diff": "diff --git a/src/components/datagrid/datagrid.js b/src/components/datagrid/datagrid.js @@ -7374,10 +7374,6 @@ Datagrid.prototype = {\n// Sync the Ui and call the events\nthis.dontSyncUi = false;\n- // It should not clear the selectedRows in lookup\n- const isLookup = $('.lookup');\n- this._selectedRows = !isLookup.length ? [] : this._selectedRows;\n-\n// Update the display counts when unselecting all rows\nthis.displayCounts();\n",
        "date": "05.05.2021 17:06:41",
        "repo": "infor-design/enterprise",
        "type": "revert",
        "chatgpt_zeroshot": "Refactor selectedRows logic in Datagrid"
    },
    {
        "msg": "revert skip on 2 test in resize",
        "diff": "diff --git a/test/components/applicationmenu/applicationmenu.puppeteer-spec.js b/test/components/applicationmenu/applicationmenu.puppeteer-spec.js @@ -102,7 +102,7 @@ describe('Application Menu Puppeteer Test', () => {\n.then(boundingBox => expect(boundingBox.width).toEqual(menuSize.width));\n});\n- it('should resize at the near end of the page', async () => {\n+ it.skip('should resize at the near end of the page', async () => {\nconst windowSize = await page.viewport();\nconst location = [{ y: 0, x: windowSize.width - (windowSize.width * 0.1) }];\n@@ -128,7 +128,7 @@ describe('Application Menu Puppeteer Test', () => {\n.then(boundingBox => expect(boundingBox.width).toEqual(menuSize.width));\n});\n- it('should save last resize', async () => {\n+ it.skip('should save last resize', async () => {\nconst windowSize = await page.viewport();\nconst location = [{ y: 0, x: windowSize.width - (windowSize.width * 0.1) }];\n",
        "date": "02.03.2022 13:25:42",
        "repo": "infor-design/enterprise",
        "type": "revert",
        "chatgpt_zeroshot": "Skip resizing tests at the near end of the page and save last resize."
    },
    {
        "msg": "revert back web driver ver",
        "diff": "diff --git a/package.json b/package.json \"e2e:puppeteer\": \"npx --no-install jest --config=test/jest.config.js --runInBand --detectOpenHandles --forceExit\",\n\"e2e:update-imagesnapshots\": \"npx --no-install jest --config=test/jest.config.js --updateSnapshot --runInBand --detectOpenHandles --forceExit\",\n\"webdriver:clean\": \"npx webdriver-manager clean\",\n- \"webdriver:update\": \"npx webdriver-manager update --versions.chrome=99.0.4844.35 --standalone false --quiet --gecko=false\",\n+ \"webdriver:update\": \"npx webdriver-manager update --standalone false --quiet --gecko=false\",\n\"zip-dist\": \"npx grunt zip-dist\",\n\"documentation\": \"node ./scripts/deploy-documentation.js\",\n\"release:dev\": \"node scripts/publish-nightly-manual\",\n",
        "date": "11.03.2022 04:45:22",
        "repo": "infor-design/enterprise",
        "type": "revert",
        "chatgpt_zeroshot": "Remove specific Chrome version from webdriver update command"
    },
    {
        "msg": "revert original fix from lower version",
        "diff": "diff --git a/src/components/datagrid/_datagrid.scss b/src/components/datagrid/_datagrid.scss @@ -2822,10 +2822,12 @@ $datagrid-small-row-height: 25px;\n}\n}\n- //Cell Editting\n+ //Cell Editing\n&.is-editing {\nbackground-color: $datagrid-cell-editing-bg-color;\nposition: relative;\n+ outline: 1px solid $ids-color-brand-primary-base;\n+ outline-offset: -1px;\n&.has-singlecolumn {\ndisplay: block;\n@@ -2833,7 +2835,6 @@ $datagrid-small-row-height: 25px;\n}\n.datagrid-cell-wrapper {\n- border: 1px solid $ids-color-brand-primary-base;\nleft: 0;\nposition: absolute;\ntext-overflow: clip;\n",
        "date": "21.07.2022 19:26:43",
        "repo": "infor-design/enterprise",
        "type": "revert",
        "chatgpt_zeroshot": "Refactor cell editing styles in datagrid component"
    },
    {
        "msg": "revert another test",
        "diff": "diff --git a/test/components/datagrid/datagrid-validation.func-spec.js b/test/components/datagrid/datagrid-validation.func-spec.js @@ -15,23 +15,23 @@ let datagridObj;\n// Define Columns for the Grid.\nconst columns = [];\n-columns.push({ id: 'selectionCheckbox', sortable: false, resizable: false, formatter: Soho.Formatters.SelectionCheckbox, align: 'center' });\n-columns.push({ id: 'productId', name: 'Id', field: 'productId', reorderable: true, formatter: Soho.Formatters.Text, width: 100, filterType: 'Text' });\n+columns.push({ id: 'selectionCheckbox', sortable: false, resizable: false, formatter: Formatters.SelectionCheckbox, align: 'center' });\n+columns.push({ id: 'productId', name: 'Id', field: 'productId', reorderable: true, formatter: Formatters.Text, width: 100, filterType: 'Text' });\ncolumns.push({\n- id: 'productName', name: 'Product Name', field: 'productName', reorderable: true, formatter: Soho.Formatters.Hyperlink, width: 300, filterType: 'Text', editor: Editors.Input\n+ id: 'productName', name: 'Product Name', field: 'productName', reorderable: true, formatter: Formatters.Hyperlink, width: 300, filterType: 'Text', editor: Editors.Input\n});\ncolumns.push({\nid: 'activity', name: 'Activity', field: 'activity', reorderable: true, filterType: 'Text', required: true, validate: 'required', editor: Editors.Input\n});\ncolumns.push({ id: 'hidden', hidden: true, name: 'Hidden', field: 'hidden', filterType: 'Text' });\ncolumns.push({\n- id: 'price', align: 'right', name: 'Actual Price', field: 'price', reorderable: true, formatter: Soho.Formatters.Decimal, validate: 'required', numberFormat: { minimumFractionDigits: 0, maximumFractionDigits: 0, style: 'currency', currencySign: '$' }, editor: Editors.Input\n+ id: 'price', align: 'right', name: 'Actual Price', field: 'price', reorderable: true, formatter: Formatters.Decimal, validate: 'required', numberFormat: { minimumFractionDigits: 0, maximumFractionDigits: 0, style: 'currency', currencySign: '$' }, editor: Editors.Input\n});\n-columns.push({ id: 'percent', align: 'right', name: 'Actual %', field: 'percent', reorderable: true, formatter: Soho.Formatters.Decimal, numberFormat: { minimumFractionDigits: 0, maximumFractionDigits: 0, style: 'percent' } });\n+columns.push({ id: 'percent', align: 'right', name: 'Actual %', field: 'percent', reorderable: true, formatter: Formatters.Decimal, numberFormat: { minimumFractionDigits: 0, maximumFractionDigits: 0, style: 'percent' } });\ncolumns.push({\n- id: 'orderDate', name: 'Order Date', field: 'orderDate', reorderable: true, formatter: Soho.Formatters.Date, dateFormat: 'M/d/yyyy', validate: 'required date', editor: Editors.Date\n+ id: 'orderDate', name: 'Order Date', field: 'orderDate', reorderable: true, formatter: Formatters.Date, dateFormat: 'M/d/yyyy', validate: 'required date', editor: Editors.Date\n});\n-columns.push({ id: 'phone', name: 'Phone', field: 'phone', reorderable: true, filterType: 'Text', formatter: Soho.Formatters.Text });\n+columns.push({ id: 'phone', name: 'Phone', field: 'phone', reorderable: true, filterType: 'Text', formatter: Formatters.Text });\ndescribe('Datagrid Validation API', () => {\nconst Locale = window.Soho.Locale;\n",
        "date": "21.11.2022 22:29:08",
        "repo": "infor-design/enterprise",
        "type": "revert",
        "chatgpt_zeroshot": "Refactor datagrid column formatters to use local imports"
    },
    {
        "msg": "revert cards tests",
        "diff": "diff --git a/test/components/cards/cards.puppeteer-spec.js b/test/components/cards/cards.puppeteer-spec.js @@ -248,22 +248,22 @@ describe('Cards', () => {\nexpect(await page.$eval('.card:nth-child(2)', el => el.getAttribute('class'))).toBe('card auto-height is-selectable is-selected');\n});\n- // it.skip('should not visual regress', async () => {\n- // await page.waitForSelector('.card', { visible: true })\n- // .then(element => expect(element).toBeTruthy());\n+ it.skip('should not visual regress', async () => {\n+ await page.waitForSelector('.card', { visible: true })\n+ .then(element => expect(element).toBeTruthy());\n- // const button1 = await page.$('.card:nth-child(1)');\n- // await button1.click();\n+ const button1 = await page.$('.card:nth-child(1)');\n+ await button1.click();\n- // const button2 = await page.$('.card:nth-child(2)');\n- // await button2.click();\n+ const button2 = await page.$('.card:nth-child(2)');\n+ await button2.click();\n- // const window = await page.$('#cardlist');\n- // const image = await window.screenshot();\n- // const config = getConfig('cards-multi-select');\n+ const window = await page.$('#cardlist');\n+ const image = await window.screenshot();\n+ const config = getConfig('cards-multi-select');\n- // expect(image).toMatchImageSnapshot(config);\n- // });\n+ expect(image).toMatchImageSnapshot(config);\n+ });\n});\ndescribe('Actionable', () => {\n",
        "date": "04.01.2023 02:26:04",
        "repo": "infor-design/enterprise",
        "type": "revert",
        "chatgpt_zeroshot": "Fix visual regression test for Cards component"
    },
    {
        "msg": "revert accidental change to chart width",
        "diff": "diff --git a/web/stock.js b/web/stock.js @@ -411,7 +411,7 @@ d3.csv('ndx.csv').then(function (data) {\n// [Line Chart](https://github.com/dc-js/dc.js/blob/master/web/docs/api-latest.md#line-chart)\nmoveChart /* dc.lineChart('#monthly-move-chart', 'chartGroup') */\n.renderArea(true)\n- .width(300)\n+ .width(990)\n.height(200)\n.transitionDuration(1000)\n.margins({top: 30, right: 50, bottom: 25, left: 40})\n",
        "date": "28.06.2019 07:03:55",
        "repo": "dc-js/dc.js",
        "type": "revert",
        "chatgpt_zeroshot": "Increase width of line chart to 990 pixels"
    },
    {
        "msg": "revert grunt related version change in package.json",
        "diff": "diff --git a/package.json b/package.json \"adal-node\": \"^0.1.17\",\n\"azure-storage-legacy\": \"0.9.14\",\n\"glob\": \"^7.1.1\",\n- \"grunt\": \"^1.0.1\",\n- \"grunt-contrib-connect\": \"^1.0.2\",\n- \"grunt-contrib-symlink\": \"^1.0.0\",\n- \"grunt-devserver\": \"^0.6.0\",\n- \"grunt-jsdoc\": \"^2.1.0\",\n+ \"grunt\": \"~0.4\",\n+ \"grunt-contrib-connect\": \"^0.10.1\",\n+ \"grunt-contrib-symlink\": \"^0.3.0\",\n+ \"grunt-devserver\": \"~0.6\",\n+ \"grunt-jsdoc\": \"~0.6\",\n\"grunt-gh-pages\": \"1.1.0\",\n\"jshint\": \"2.9.4\",\n\"minami\": \"git://github.com/devigned/minami#master\",\n",
        "date": "28.03.2017 17:30:00",
        "repo": "azure/azure-sdk-for-node",
        "type": "revert",
        "chatgpt_zeroshot": "Update grunt and related packages versions in package.json"
    },
    {
        "msg": "revert cli change",
        "diff": "diff --git a/package.json b/package.json \"bin\": \"wmr.cjs\",\n\"type\": \"module\",\n\"scripts\": {\n- \"demo\": \"cd demo && node --experimental-modules ../src/cli.js build 2>&1 | grep -v ExperimentalWarning\",\n+ \"demo\": \"cd demo && node --experimental-modules ../src/cli.js 2>&1 | grep -v ExperimentalWarning\",\n+ \"demo:prod\": \"cd demo && node --experimental-modules ../src/cli.js build 2>&1 | grep -v ExperimentalWarning\",\n\"dev\": \"PROFILE=true nodemon -w src --exec \\\"npm run -s demo\\\"\",\n\"build\": \"rollup -c\",\n\"test\": \"eslint && jest --runInBand\"\n",
        "date": "14.06.2020 09:28:54",
        "repo": "preactjs/wmr",
        "type": "revert",
        "chatgpt_zeroshot": "Update demo script in package.json"
    },
    {
        "msg": "revert Restoring default tsconfig include behavior",
        "diff": "diff --git a/packages/create-wmr/tpl/tsconfig.json b/packages/create-wmr/tpl/tsconfig.json \"allowSyntheticDefaultImports\": true,\n\"downlevelIteration\": true\n},\n- \"include\": [\"node_modules/wmr/types.d.ts\"],\n+ \"include\": [\"node_modules/wmr/types.d.ts\", \"**/*\"],\n\"typeAcquisition\": {\n\"enable\": true\n}\n",
        "date": "01.04.2021 11:13:46",
        "repo": "preactjs/wmr",
        "type": "revert",
        "chatgpt_zeroshot": "Add all files to tsconfig include list"
    },
    {
        "msg": "revert debug=false change",
        "diff": "diff --git a/examples/demo/package.json b/examples/demo/package.json \"private\": true,\n\"type\": \"module\",\n\"scripts\": {\n- \"start\": \"cross-env DEBUG=false node ../../packages/wmr/src/cli.js\",\n+ \"start\": \"cross-env DEBUG=true node ../../packages/wmr/src/cli.js\",\n\"build\": \"yarn start build --prerender\",\n\"serve\": \"yarn start serve\",\n\"start:prod\": \"cross-env DEBUG=true wmr\",\n",
        "date": "25.09.2021 14:30:13",
        "repo": "preactjs/wmr",
        "type": "revert",
        "chatgpt_zeroshot": "Enable debug mode in start script"
    },
    {
        "msg": "revert change icon back to exclamation and resize",
        "diff": "diff --git a/src/features/visualization/d3-viz/setup-annotations.js b/src/features/visualization/d3-viz/setup-annotations.js @@ -39,7 +39,7 @@ const setupAnnotations = ({packedData, annotationRoot}) =>{\n.append('text')\n.classed('svg-icon', true)\n.classed('nag', true)\n- .style('font-size', (d) => (3 * d.height * fontScale) + \"%\")\n+ .style('font-size', (d) => (4 * d.height * fontScale) + \"%\")\n.text('\\uf06a');//font-awesome\nannotations\n",
        "date": "10.06.2019 15:56:51",
        "repo": "iqtlabs/crviz",
        "type": "revert",
        "chatgpt_zeroshot": "Increase font size for annotations in d3 visualization."
    },
    {
        "msg": "revert RTCConfig change",
        "diff": "diff --git a/test/common.js b/test/common.js @@ -4,7 +4,7 @@ var thunky = require('thunky')\nexports.getConfig = thunky(function (cb) {\n// Includes TURN -- needed for tests to pass on Sauce Labs\n// https://github.com/feross/simple-peer/issues/41\n- get.concat('https://instant.io/__rtcConfig__', function (err, res, data) {\n+ get.concat('https://instant.io/_rtcConfig', function (err, res, data) {\nif (err) return cb(err)\ndata = data.toString()\ntry {\n",
        "date": "14.07.2018 17:00:33",
        "repo": "feross/simple-peer",
        "type": "revert",
        "chatgpt_zeroshot": "Fix URL typo in getConfig function"
    },
    {
        "msg": "revert changes to see if bugs go away",
        "diff": "diff --git a/src/containers/stage.jsx b/src/containers/stage.jsx @@ -179,7 +179,7 @@ class Stage extends React.Component {\nthis.updateRect();\nconst {x, y} = getEventXY(e);\nconst mousePosition = [x - this.rect.left, y - this.rect.top];\n- if (e.which === 1) {\n+ if (true) {\nthis.setState({\nmouseDown: true,\nmouseDownPosition: mousePosition,\n",
        "date": "04.10.2017 13:08:36",
        "repo": "wdr-data/code4maus",
        "type": "revert",
        "chatgpt_zeroshot": "Update mouse event condition in Stage component"
    },
    {
        "msg": "revert div to Box",
        "diff": "diff --git a/src/components/library-item/library-item.jsx b/src/components/library-item/library-item.jsx @@ -46,7 +46,7 @@ class LibraryItem extends React.PureComponent {\n</div>\n</div>\n) : (\n- <div\n+ <Box\nclassName={styles.libraryItem}\nrole=\"button\"\ntabIndex=\"0\"\n@@ -64,7 +64,7 @@ class LibraryItem extends React.PureComponent {\n</Box>\n</Box>\n<span className={styles.libraryItemName}>{this.props.name}</span>\n- </div>\n+ </Box>\n);\n}\n}\n",
        "date": "20.11.2017 09:53:10",
        "repo": "wdr-data/code4maus",
        "type": "revert",
        "chatgpt_zeroshot": "Refactor library-item component to use Box component instead of div"
    },
    {
        "msg": "revert changes to sensing of",
        "diff": "diff --git a/src/lib/blocks.js b/src/lib/blocks.js @@ -126,16 +126,9 @@ export default function (vm) {\n};\nScratchBlocks.Blocks.sensing_of_object_menu.init = function () {\n- const start = [\n+ const json = jsonForMenuBlock('OBJECT', spriteMenu, sensingColors, [\n['Stage', '_stage_']\n- ];\n- if (vm.editingTarget) {\n- start.splice(0, 0,\n- [vm.editingTarget.sprite.name, vm.editingTarget.sprite.name]\n- );\n- }\n-\n- const json = jsonForMenuBlock('OBJECT', spriteMenu, sensingColors, start);\n+ ]);\nthis.jsonInit(json);\n};\n",
        "date": "09.01.2018 17:34:43",
        "repo": "wdr-data/code4maus",
        "type": "revert",
        "chatgpt_zeroshot": "Refactor sensing_of_object_menu block initialization in blocks.js"
    },
    {
        "msg": "revert css for FeaturesLayout",
        "diff": "diff --git a/src/components/layout/FeaturesLayout.js b/src/components/layout/FeaturesLayout.js import React from 'react';\nimport PropTypes from 'prop-types';\n-import styled from 'styled-components';\n+import styled, { css } from 'styled-components';\nimport { styles } from '@storybook/design-system';\n@@ -26,7 +26,7 @@ const Layout = styled.div`\n${(props) =>\nprops.columns === 2 &&\n- `\n+ css`\n${pageMargins};\n@media (min-width: ${breakpoint * 1}px) {\nmargin: 0 ${pageMargin * 3}%;\n@@ -41,7 +41,7 @@ const Layout = styled.div`\n${(props) =>\nprops.columns === 3 &&\n- `\n+ css`\n${pageMargins};\n@media (min-width: ${breakpoint * 1}px) {\n> * {\n",
        "date": "07.12.2020 09:29:31",
        "repo": "storybookjs/frontpage",
        "type": "revert",
        "chatgpt_zeroshot": "Refactor styled-components in FeaturesLayout to use css helper"
    },
    {
        "msg": "revert trigger command agent metadata change",
        "diff": "diff --git a/buildkite/src/Pipeline/TriggerCommand.dhall b/buildkite/src/Pipeline/TriggerCommand.dhall @@ -3,5 +3,5 @@ in\n(\n\\(dhallPipelineRelativeToBuildKiteDir : Text) ->\n- Cmd.quietly \"dhall-to-yaml --quoted <<< '(./buildkite/${dhallPipelineRelativeToBuildKiteDir}).pipeline' | BUILDKITE_AGENT_META_DATA_SIZE=small buildkite-agent pipeline upload\"\n+ Cmd.quietly \"dhall-to-yaml --quoted <<< '(./buildkite/${dhallPipelineRelativeToBuildKiteDir}).pipeline' | buildkite-agent pipeline upload\"\n) : Text -> Cmd.Type\n",
        "date": "13.08.2020 07:27:25",
        "repo": "minaprotocol/mina",
        "type": "revert",
        "chatgpt_zeroshot": "Remove BUILDKITE_AGENT_META_DATA_SIZE environment variable from trigger command"
    },
    {
        "msg": "revert lint-opt step agent target sizing",
        "diff": "diff --git a/buildkite/src/Jobs/Lint/Fast.dhall b/buildkite/src/Jobs/Lint/Fast.dhall @@ -44,7 +44,7 @@ Pipeline.build\n(\"./scripts/compare_ci_diff_types.sh\")\n, label = \"Optional fast lint steps; versions compatability changes\"\n, key = \"lint-optional-types\"\n- , target = Size.Large\n+ , target = Size.Medium\n, soft_fail = Some (Command.SoftFail.Boolean True)\n, docker = None Docker.Type\n},\n@@ -55,7 +55,7 @@ Pipeline.build\n(\"./scripts/compare_ci_diff_binables.sh\")\n, label = \"Optional fast lint steps; binable compatability changes\"\n, key = \"lint-optional-binable\"\n- , target = Size.Large\n+ , target = Size.Medium\n, soft_fail = Some (Command.SoftFail.Boolean True)\n, docker = None Docker.Type\n}\n",
        "date": "19.08.2020 14:59:07",
        "repo": "minaprotocol/mina",
        "type": "revert",
        "chatgpt_zeroshot": "Update lint job targets to Size.Medium for optional types and binable compatibility changes."
    },
    {
        "msg": "revert coda-automation location",
        "diff": "diff --git a/src/lib/integration_test_cloud_engine/coda_automation.ml b/src/lib/integration_test_cloud_engine/coda_automation.ml @@ -76,7 +76,7 @@ module Network_config = struct\nin\nlet testnet_name = \"integration-test-\" ^ test_name in\n(* HARD CODED NETWORK VALUES *)\n- let coda_automation_location = \"/home/steck/tmp/coda-automation\" in\n+ let coda_automation_location = \"../automation\" in\nlet project_id = \"o1labs-192920\" in\nlet cluster_id = \"gke_o1labs-192920_us-east1_coda-infra-east\" in\nlet cluster_name = \"coda-infra-east\" in\n",
        "date": "19.08.2020 13:41:34",
        "repo": "minaprotocol/mina",
        "type": "revert",
        "chatgpt_zeroshot": "Update coda_automation_location path in integration test script"
    },
    {
        "msg": "revert s3 log change",
        "diff": "diff --git a/src/lib/genesis_ledger_helper/genesis_ledger_helper.ml b/src/lib/genesis_ledger_helper/genesis_ledger_helper.ml @@ -482,7 +482,7 @@ module Ledger = struct\n| Ok () ->\nfile_exists filename Cache_dir.s3_install_path\n| Error e ->\n- [%log info] \"Could not download $ledger from $uri\"\n+ [%log info] \"Could not download $ledger from $uri: $error\"\n~metadata:\n[ (\"ledger\", `String ledger_name_prefix)\n; (\"uri\", `String s3_path)\n@@ -886,7 +886,8 @@ module Genesis_proof = struct\n| Ok () ->\nfile_exists filename Cache_dir.s3_install_path\n| Error e ->\n- [%log info] \"Could not download genesis proof file from $uri\"\n+ [%log info]\n+ \"Could not download genesis proof file from $uri: $error\"\n~metadata:\n[ (\"uri\", `String s3_path)\n; (\"error\", Error_json.error_to_yojson e) ] ;\n",
        "date": "13.11.2020 16:46:48",
        "repo": "minaprotocol/mina",
        "type": "revert",
        "chatgpt_zeroshot": "Refactor error logging messages in genesis ledger and proof download functions"
    },
    {
        "msg": "revert spacing change",
        "diff": "diff --git a/scripts/run_local_network.sh b/scripts/run_local_network.sh @@ -210,8 +210,6 @@ for i in $(seq 1 $nodes); do\nmetrics_port=$(echo $node_start_port + 3 + $i*5 | bc)\nlibp2p_metrics_port=$(echo $node_start_port + 4 + $i*5 | bc)\n- echo \"rest port\" $rest_port\n-\nCODA_PRIVKEY_PASS=\"naughty blue worm\" $CODA daemon -peer \"/ip4/127.0.0.1/tcp/3002/p2p/12D3KooWAFFq2yEQFFzhU5dt64AWqawRuomG9hL8rSmm5vxhAsgr\" -client-port $client_port -rest-port $rest_port -external-port $ext_port -metrics-port $metrics_port -libp2p-metrics-port $libp2p_metrics_port -config-directory $folder -config-file $daemon -generate-genesis-proof true -log-json -log-level Trace &> $logfile &\nnode_pids[${i}]=$!\nnode_logfiles[${i}]=$logfile\n",
        "date": "21.12.2020 17:29:33",
        "repo": "minaprotocol/mina",
        "type": "revert",
        "chatgpt_zeroshot": "Remove unnecessary echo statement and update run_local_network.sh script"
    },
    {
        "msg": "revert inadvertant change",
        "diff": "diff --git a/scripts/run_local_network.sh b/scripts/run_local_network.sh @@ -146,7 +146,7 @@ mkdir -p $nodesfolder\nmkdir $nodesfolder/seed\n-$CODA daemon -seed -client-port 3000 -rest-port 3001 -external-port 3002 -metrics-port 3003 -libp2p-metrics-port 3004 -config-directory $nodesfolder/seed -config-file $daemon -generate-genesis-proof true -discovery-keypair CAESQNf7ldToowe604aFXdZ76GqW/XVlDmnXmBT+otorvIekBmBaDWu/6ZwYkZzqfr+3IrEh6FLbHQ3VSmubV9I9Kpc=,CAESIAZgWg1rv+mcGJGc6n6/tyKxIehS2x0N1Uprm1fSPSqX,12D3KooWAFFq2yEQFFzhU5dt64AWqawRuomG9hL8rSmm5vxhAsgr -log-json -log-level Trace -archive-address 3086 &> $nodesfolder/seed/log.txt &\n+$CODA daemon -seed -client-port 3000 -rest-port 3001 -external-port 3002 -metrics-port 3003 -libp2p-metrics-port 3004 -config-directory $nodesfolder/seed -config-file $daemon -generate-genesis-proof true -discovery-keypair CAESQNf7ldToowe604aFXdZ76GqW/XVlDmnXmBT+otorvIekBmBaDWu/6ZwYkZzqfr+3IrEh6FLbHQ3VSmubV9I9Kpc=,CAESIAZgWg1rv+mcGJGc6n6/tyKxIehS2x0N1Uprm1fSPSqX,12D3KooWAFFq2yEQFFzhU5dt64AWqawRuomG9hL8rSmm5vxhAsgr -log-json -log-level Trace &> $nodesfolder/seed/log.txt &\nseed_pid=$!\necho 'waiting for seed to go up...'\n",
        "date": "14.01.2021 14:39:30",
        "repo": "minaprotocol/mina",
        "type": "revert",
        "chatgpt_zeroshot": "Update seed node startup command in run_local_network.sh"
    },
    {
        "msg": "revert debug code",
        "diff": "diff --git a/src/app/rosetta/rosetta.conf b/src/app/rosetta/rosetta.conf \"network\": \"mainnet\"\n},\n\"online_url\": \"http://localhost:3087\",\n- \"data_directory\": \"rosetta-cli\",\n+ \"data_directory\": \"/data/rosetta-cli\",\n\"http_timeout\": 500,\n\"max_sync_concurrency\": 64,\n\"retry_elapsed_time\": 0,\n\"inactive_discrepency_search_disabled\": false,\n\"balance_tracking_disabled\": false,\n\"coin_tracking_disabled\": false,\n- \"results_output_file\": \"rosetta-cli/results\",\n+ \"results_output_file\": \"/data/rosetta-cli/results\",\n\"end_conditions\": {\n\"tip\": true\n}\n",
        "date": "09.12.2021 20:42:45",
        "repo": "minaprotocol/mina",
        "type": "revert",
        "chatgpt_zeroshot": "Update data_directory and results_output_file paths in rosetta.conf"
    },
    {
        "msg": "revert block time deriver",
        "diff": "diff --git a/src/lib/mina_base/zkapp_precondition.ml b/src/lib/mina_base/zkapp_precondition.ml @@ -186,8 +186,11 @@ module Numeric = struct\nopen Fields_derivers_zkapps.Derivers\nlet block_time_inner obj =\n+ let ( ^^ ) = Fn.compose in\niso_string ~name:\"BlockTime\" ~js_type:UInt64\n- ~of_string:Block_time.of_string_exn ~to_string:Block_time.to_string obj\n+ ~of_string:(Block_time.of_uint64 ^^ Unsigned_extended.UInt64.of_string)\n+ ~to_string:(Unsigned_extended.UInt64.to_string ^^ Block_time.to_uint64)\n+ obj\nlet nonce obj = deriver \"Nonce\" uint32 obj\n@@ -227,14 +230,6 @@ module Numeric = struct\n|> finish \"T\" ~t_toplevel_annots\nend\n- let%test_unit \"to string\" =\n- [%test_eq: string] Block_time.(to_string max_value) \"-1\"\n-\n- let%test_unit \"of string\" =\n- [%test_eq: Block_time.t]\n- Block_time.(of_string_exn \"-1\")\n- Block_time.max_value\n-\nlet%test_unit \"roundtrip json\" =\nlet open Fields_derivers_zkapps.Derivers in\nlet full = o () in\n",
        "date": "28.07.2022 21:16:19",
        "repo": "minaprotocol/mina",
        "type": "revert",
        "chatgpt_zeroshot": "Refactor BlockTime conversion functions in zkapp_precondition.ml"
    },
    {
        "msg": "revert wording",
        "diff": "diff --git a/src/lib/integration_test_lib/wait_condition.ml b/src/lib/integration_test_lib/wait_condition.ml @@ -280,7 +280,7 @@ struct\nin\nlet soft_timeout_in_slots = 4 in\n{ id = Persisted_frontier_loaded\n- ; description = \"persisted transition frontier loaded\"\n+ ; description = \"persisted transition frontier to load\"\n; predicate =\nEvent_predicate (Event_type.Persisted_frontier_loaded, (), check)\n; soft_timeout = Slots soft_timeout_in_slots\n",
        "date": "09.09.2022 18:24:06",
        "repo": "minaprotocol/mina",
        "type": "revert",
        "chatgpt_zeroshot": "Update description of persisted transition frontier to load in wait condition module"
    },
    {
        "msg": "revert ME: Run the replayer with --continue-on-error",
        "diff": "diff --git a/buildkite/scripts/replayer-test.sh b/buildkite/scripts/replayer-test.sh @@ -38,4 +38,4 @@ cd /workdir\necho \"Running replayer\"\nmina-replayer --archive-uri postgres://postgres:$PGPASSWORD@localhost:5432/archive \\\n- --input-file $TEST_DIR/input.json --output-file /dev/null\n+ --input-file $TEST_DIR/input.json --output-file /dev/null --continue-on-error\n",
        "date": "27.09.2022 15:47:26",
        "repo": "minaprotocol/mina",
        "type": "revert",
        "chatgpt_zeroshot": "Add --continue-on-error flag to mina-replayer command in replayer-test.sh"
    },
    {
        "msg": "revert timeout",
        "diff": "diff --git a/src/app/test_executive/zkapps.ml b/src/app/test_executive/zkapps.ml @@ -529,7 +529,7 @@ module Make (Inputs : Intf.Test.Inputs_intf) = struct\n, zkapp_command_token_transfer2 )\nin\nlet with_timeout =\n- let soft_slots = 6 in\n+ let soft_slots = 4 in\nlet soft_timeout = Network_time_span.Slots soft_slots in\nlet hard_timeout = Network_time_span.Slots (soft_slots * 2) in\nWait_condition.with_timeouts ~soft_timeout ~hard_timeout\n",
        "date": "28.09.2022 18:23:57",
        "repo": "minaprotocol/mina",
        "type": "revert",
        "chatgpt_zeroshot": "Update soft_slots value from 6 to 4 in zkapps.ml"
    },
    {
        "msg": "revert auto formatting",
        "diff": "diff --git a/src/lib/crypto/kimchi_bindings/js/bindings.js b/src/lib/crypto/kimchi_bindings/js/bindings.js @@ -2124,12 +2124,6 @@ var caml_pasta_fq_plonk_proof_verify = function (index, proof) {\nreturn plonk_wasm.caml_pasta_fq_plonk_proof_verify(index, proof);\n};\n-// Provides: prover_to_json\n-// Requires: plonk_wasm\n-var prover_to_json = function (prover_index) {\n- return plonk_wasm.prover_to_json(prover_index);\n-};\n-\n// Provides: caml_pasta_fq_plonk_proof_batch_verify\n// Requires: plonk_wasm, caml_array_to_rust_vector, caml_pallas_poly_comm_to_rust, caml_pasta_fq_plonk_verifier_index_to_rust, caml_pasta_fq_proof_to_rust\nvar caml_pasta_fq_plonk_proof_batch_verify = function(indexes, proofs) {\n@@ -2315,3 +2309,9 @@ function caml_pasta_fp_plonk_proof_example_with_lookup() {\n// This is only used in the pickles unit tests\nthrow new Error(\"Unimplemented caml_pasta_fp_plonk_proof_example_with_lookup\");\n}\n+\n+// Provides: prover_to_json\n+// Requires: plonk_wasm\n+var prover_to_json = function (prover_index) {\n+ return plonk_wasm.prover_to_json(prover_index);\n+};\n",
        "date": "30.11.2022 13:18:33",
        "repo": "minaprotocol/mina",
        "type": "revert",
        "chatgpt_zeroshot": "Refactor prover_to_json function and move it to the end of the file"
    },
    {
        "msg": "revert accidental commit",
        "diff": "diff --git a/src/lib/crypto/kimchi_bindings/stubs/kimchi_types.ml b/src/lib/crypto/kimchi_bindings/stubs/kimchi_types.ml @@ -16,8 +16,10 @@ type nonrec 'caml_f random_oracles =\n; v_chal : 'caml_f scalar_challenge\n; u_chal : 'caml_f scalar_challenge\n}\n+[@@boxed]\ntype nonrec 'evals point_evaluations = { zeta : 'evals; zeta_omega : 'evals }\n+[@@boxed]\ntype nonrec 'caml_f lookup_evaluations =\n{ sorted : 'caml_f array point_evaluations array\n@@ -25,6 +27,7 @@ type nonrec 'caml_f lookup_evaluations =\n; table : 'caml_f array point_evaluations\n; runtime : 'caml_f array point_evaluations option\n}\n+[@@boxed]\ntype nonrec 'caml_f proof_evaluations =\n{ w :\n@@ -71,21 +74,26 @@ type nonrec 'caml_f proof_evaluations =\n; generic_selector : 'caml_f array point_evaluations\n; poseidon_selector : 'caml_f array point_evaluations\n}\n+[@@boxed]\ntype nonrec 'caml_g poly_comm =\n{ unshifted : 'caml_g array; shifted : 'caml_g option }\n+[@@boxed]\ntype nonrec ('caml_g, 'caml_f) recursion_challenge =\n{ chals : 'caml_f array; comm : 'caml_g poly_comm }\n+[@@boxed]\ntype nonrec ('g, 'f) opening_proof =\n{ lr : ('g * 'g) array; delta : 'g; z1 : 'f; z2 : 'f; sg : 'g }\n+[@@boxed]\ntype nonrec 'caml_g lookup_commitments =\n{ sorted : 'caml_g poly_comm array\n; aggreg : 'caml_g poly_comm\n; runtime : 'caml_g poly_comm option\n}\n+[@@boxed]\ntype nonrec 'caml_g prover_commitments =\n{ w_comm :\n@@ -108,6 +116,7 @@ type nonrec 'caml_g prover_commitments =\n; t_comm : 'caml_g poly_comm\n; lookup : 'caml_g lookup_commitments option\n}\n+[@@boxed]\ntype nonrec ('caml_g, 'caml_f) prover_proof =\n{ commitments : 'caml_g prover_commitments\n@@ -117,8 +126,9 @@ type nonrec ('caml_g, 'caml_f) prover_proof =\n; public : 'caml_f array\n; prev_challenges : ('caml_g, 'caml_f) recursion_challenge array\n}\n+[@@boxed]\n-type nonrec wire = { row : int; col : int }\n+type nonrec wire = { row : int; col : int } [@@boxed]\ntype nonrec gate_type =\n| Zero\n@@ -155,6 +165,7 @@ type nonrec 'f circuit_gate =\n; wires : wire * wire * wire * wire * wire * wire * wire\n; coeffs : 'f array\n}\n+[@@boxed]\ntype nonrec curr_or_next = Curr | Next\n@@ -164,6 +175,7 @@ type nonrec 'f oracles =\n; opening_prechallenges : 'f array\n; digest_before_evaluations : 'f\n}\n+[@@boxed]\nmodule VerifierIndex = struct\nmodule Lookup = struct\n@@ -182,6 +194,7 @@ module VerifierIndex = struct\n; max_joint_size : int\n; uses_runtime_tables : bool\n}\n+ [@@boxed]\ntype nonrec 't lookup_selectors = { lookup_gate : 't option } [@@boxed]\n@@ -193,9 +206,11 @@ module VerifierIndex = struct\n; lookup_info : lookup_info\n; runtime_tables_selector : 'poly_comm option\n}\n+ [@@boxed]\nend\ntype nonrec 'fr domain = { log_size_of_group : int; group_gen : 'fr }\n+ [@@boxed]\ntype nonrec 'poly_comm verification_evals =\n{ sigma_comm : 'poly_comm array\n@@ -208,6 +223,7 @@ module VerifierIndex = struct\n; endomul_scalar_comm : 'poly_comm\n; chacha_comm : 'poly_comm array option\n}\n+ [@@boxed]\ntype nonrec ('fr, 'srs, 'poly_comm) verifier_index =\n{ domain : 'fr domain\n@@ -220,4 +236,5 @@ module VerifierIndex = struct\n; shifts : 'fr array\n; lookup_index : 'poly_comm Lookup.t option\n}\n+ [@@boxed]\nend\n",
        "date": "16.12.2022 13:33:04",
        "repo": "minaprotocol/mina",
        "type": "revert",
        "chatgpt_zeroshot": "Add boxed attribute to various types in kimchi_types.ml"
    },
    {
        "msg": "revert changelog",
        "diff": "diff --git a/changelog.md b/changelog.md @@ -2,6 +2,10 @@ Since you are interested in what happens next, in case, you work for a for-profi\n## Next (version and date will be generated, add changes below)\n+### Bug fixes\n+\n+- Reverting [1563](https://github.com/cssinjs/jss/pull/1563) because of regression [1565](https://github.com/cssinjs/jss/issues/1565)\n+\n## 10.8.1 (2021-10-16)\n### Bug fixes\n",
        "date": "25.10.2021 10:55:28",
        "repo": "cssinjs/jss",
        "type": "revert",
        "chatgpt_zeroshot": "Revert bug fix from PR 1563 due to regression in issue 1565"
    },
    {
        "msg": "revert supertype to previous sort",
        "diff": "diff --git a/public/js/editcube.js b/public/js/editcube.js @@ -635,7 +635,7 @@ function getLabels(sort) {\n}\nelse if (sort == 'Supertype')\n{\n- return ['Basic','Elite','Host','Legendary','Ongoing','Tribal','World','Snow'];\n+ return ['Snow','Legendary','Tribal','Basic','Elite','Host','Ongoing','World'];\n}\nelse if (sort == 'Tags')\n{\n",
        "date": "22.08.2019 19:02:09",
        "repo": "dekkerglen/cubecobra",
        "type": "revert",
        "chatgpt_zeroshot": "Reorder labels in getLabels function to match new sorting order"
    },
    {
        "msg": "replace var by uint256 in StandardToken. Fix",
        "diff": "diff --git a/contracts/token/StandardToken.sol b/contracts/token/StandardToken.sol @@ -26,7 +26,7 @@ contract StandardToken is ERC20, BasicToken {\nfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\nrequire(_to != address(0));\n- var _allowance = allowed[_from][msg.sender];\n+ uint256 _allowance = allowed[_from][msg.sender];\n// Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\n// require (_value <= _allowance);\n",
        "date": "15.09.2017 19:55:34",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor transferFrom function to use uint256 for _allowance variable"
    },
    {
        "msg": "replace Medium widget by link",
        "diff": "diff --git a/src/components/Home/Home.css b/src/components/Home/Home.css }\n}\n-.events {\n- display: flex;\n- justify-content: center;\n- flex-wrap: wrap;\n+.events a {\n+ color: #fff;\n}\n-.events iframe {\n- margin: 1em;\n+.events a:hover {\n+ color: #fff;\n+ text-decoration: underline;\n}\n.catalogs {\n",
        "date": "07.03.2017 18:17:50",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "replace",
        "chatgpt_zeroshot": "Style changes to event links in Home component"
    },
    {
        "msg": "replace raw url by environment variable",
        "diff": "diff --git a/src/routes/Dataset/components/DatasetView/DatasetView.js b/src/routes/Dataset/components/DatasetView/DatasetView.js @@ -22,6 +22,8 @@ import DatasetContactList from '../DatasetContactList'\nimport styles from './DatasetView.scss'\n+const { INSPIRE_API_URL } = process.env\n+\nclass DatasetView extends React.PureComponent {\nstatic propTypes = {\ndataset: PropTypes.shape({\n@@ -79,9 +81,13 @@ class DatasetView extends React.PureComponent {\n<Helmet title={dataset.metadata.title}>\n<meta name='twitter:title' content={dataset.metadata.title} />\n<meta name='twitter:description' content={dataset.metadata.description} />\n- { hasThumbnails && <meta name='twitter:image' content={`https://inspire.data.gouv.fr/api/geogw/records/${dataset.recordId}/thumbnails/${dataset.metadata.thumbnails[0].originalUrlHash}`} />}\n+ {hasThumbnails && (\n+ <meta name='twitter:image' content={`${INSPIRE_API_URL}/records/${dataset.recordId}/thumbnails/${dataset.metadata.thumbnails[0].originalUrlHash}`} />\n+ )}\n<meta property='og:title' content={dataset.metadata.title} />\n- { hasThumbnails && <meta name='og:image' content={`https://inspire.data.gouv.fr/api/geogw/records/${dataset.recordId}/thumbnails/${dataset.metadata.thumbnails[0].originalUrlHash}`} />}\n+ {hasThumbnails && (\n+ <meta name='og:image' content={`${INSPIRE_API_URL}/records/${dataset.recordId}/thumbnails/${dataset.metadata.thumbnails[0].originalUrlHash}`} />\n+ )}\n<meta property='og:description' content={dataset.metadata.description} />\n</Helmet>\n{i18n.exists(`Dataset:components.DatasetView.consequences.${status}`) && (\n",
        "date": "24.08.2017 10:28:51",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor meta image URLs in DatasetView component"
    },
    {
        "msg": "replace dataset info last update by dataset last update in header",
        "diff": "diff --git a/src/routes/Dataset/components/DatasetHeader/DatasetHeader.js b/src/routes/Dataset/components/DatasetHeader/DatasetHeader.js @@ -12,12 +12,17 @@ import styles from './DatasetHeader.scss'\nconst DatasetHeader = ({ dataset, t }) => {\nconst { title, description, type, purpose, lineage, inspireTheme } = dataset.metadata\n- const revisionDate = doneSince(dataset.revisionDate)\nconst license = getLicense(dataset.metadata.license)\nconst dataType = t(`Common:enums.dataTypes.${type}`, {\ndefaultValue: type\n})\n+ const { creationDate, revisionDate } = dataset.metadata\n+ const updatedAt = revisionDate || creationDate\n+ const updatedAtLabel = updatedAt\n+ ? doneSince(updatedAt)\n+ : t('Common:enums.unknownData.unknown', { context: 'female' })\n+\nreturn (\n<div className={styles.container}>\n<div className={styles.inspireThemeHead}>\n@@ -34,7 +39,7 @@ const DatasetHeader = ({ dataset, t }) => {\n) : license}</span>\n</div>\n<div>\n- {t('components.DatasetHeader.lastUpdate')} : <span>{revisionDate}</span>\n+ {t('components.DatasetHeader.lastUpdate')} : <span>{updatedAtLabel}</span>\n</div>\n</div>\n</div>\n",
        "date": "15.10.2017 22:52:14",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor DatasetHeader component to display updated date with proper label"
    },
    {
        "msg": "replace invalid p with div in Markdown component",
        "diff": "diff --git a/src/components/Markdown/Markdown.js b/src/components/Markdown/Markdown.js @@ -7,7 +7,7 @@ import styles from './Markdown.scss'\nconst Markdown = ({ markdown, renderer }) => {\nconst md = marked(markdown, { renderer })\nreturn (\n- <p\n+ <div\nclassName={`${styles.wrapper}`}\ndangerouslySetInnerHTML={{ __html : md }}\n/>\n",
        "date": "18.10.2017 16:23:33",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "replace",
        "chatgpt_zeroshot": "Change wrapper element from <p> to <div> in Markdown component"
    },
    {
        "msg": "replace text by flag for language selection",
        "diff": "diff --git a/src/components/Dropdown/Dropdown.scss b/src/components/Dropdown/Dropdown.scss position: absolute;\nbackground-color: #fff;\ntext-align: left;\n- margin-left: -100%;\n+ margin-left: -90px;\nbox-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\nz-index: 1;\n",
        "date": "18.10.2017 15:55:57",
        "repo": "etalab/geo.data.gouv.fr",
        "type": "replace",
        "chatgpt_zeroshot": "Adjust margin-left in Dropdown component to improve positioning"
    },
    {
        "msg": "replace mediaInterval with mediaStarted",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/toolbar.js b/MaterialSkin/HTML/material/html/js/toolbar.js @@ -41,11 +41,10 @@ function startMediaSession() {\n}\nfunction stopMediaSession() {\n- if (!mediaInterval) {\n+ if (!mediaStarted) {\nreturn;\n}\n- clearInterval(mediaInterval);\n- mediaInterval = undefined;\n+ mediaStarted = false;\nif (mediaAudio.src) {\nmediaAudio.src = undefined;\n}\n",
        "date": "05.10.2019 14:33:31",
        "repo": "cdrummond/lms-material",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor media session start and stop functions to use a boolean flag instead of an interval."
    },
    {
        "msg": "replace dash with space for theme names",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/ui-settings.js b/MaterialSkin/HTML/material/html/js/ui-settings.js @@ -459,7 +459,9 @@ Vue.component('lms-ui-settings', {\n}\n}\nif (data && data.result && data.result.themes) {\n- this.themes.push.apply(this.themes, data.result.themes);\n+ for (var i=0, list=data.result.themes, len=list.length; i<len; ++i) {\n+ this.themes.push({label:list[i].label.replace('-', ' '), key:list[i].key});\n+ }\n}\n}).catch(err => {\n});\n",
        "date": "13.05.2020 09:07:46",
        "repo": "cdrummond/lms-material",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor theme data processing in UI settings component"
    },
    {
        "msg": "replace $HOST with location's hostname",
        "diff": "diff --git a/MaterialSkin/HTML/material/html/js/customactions.js b/MaterialSkin/HTML/material/html/js/customactions.js @@ -122,6 +122,7 @@ function doReplacements(string, player, item) {\n}\n}\n}\n+ val=val.replace(\"$HOST\", window.location.hostname);\nfor (var i=0, len=ACTION_KEYS.length; i<len; ++i) {\nval = val.replace(\"+$\"+ACTION_KEYS[i], \"\").replace(\"$\"+ACTION_KEYS[i]+\"+\", \"\").replace(\"$\"+ACTION_KEYS[i], \"\");\n}\n",
        "date": "10.08.2021 21:43:04",
        "repo": "cdrummond/lms-material",
        "type": "replace",
        "chatgpt_zeroshot": "Add replacement for $HOST in customactions.js"
    },
    {
        "msg": "replace yarn with npm",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -9,19 +9,15 @@ addons:\n- google-chrome\npackages:\n- google-chrome-stable\n-cache:\n- yarn: true\nbefore_install:\n- export DISPLAY=:99.0\n- sh -e /etc/init.d/xvfb start\n- npm config set spin false\n-- curl -o- -L https://yarnpkg.com/install.sh | bash\n-- export PATH=$HOME/.yarn/bin:$PATH\ninstall:\n-- yarn install\n+- npm install\n- bower install\nscript:\n-- yarn test\n+- npm test\ndeploy:\nprovider: heroku\nbuildpack: https://codon-buildpacks.s3.amazonaws.com/buildpacks/hone/emberjs.tgz\n",
        "date": "25.03.2017 13:21:12",
        "repo": "ember-learn/ember-api-docs",
        "type": "replace",
        "chatgpt_zeroshot": "Update npm and bower install commands in .travis.yml"
    },
    {
        "msg": "replace dead link with live library link",
        "diff": "diff --git a/lib/types/index.js b/lib/types/index.js @@ -8,7 +8,7 @@ var protocolVersion = require('./protocol-version');\n/** @module types */\n/**\n- * Long constructor, wrapper of the internal library used: {@link http://docs.closure-library.googlecode.com/git/class_goog_math_Long.html Google Closure Long}.\n+ * Long constructor, wrapper of the internal library used: {@link https://github.com/dcodeIO/long.js Long.js}.\n* @constructor\n*/\nvar Long = require('long');\n",
        "date": "15.03.2017 11:20:28",
        "repo": "datastax/nodejs-driver",
        "type": "replace",
        "chatgpt_zeroshot": "Update Long constructor to use Long.js library instead of Google Closure Long"
    },
    {
        "msg": "replace graphite03",
        "diff": "diff --git a/src/core/_config.scss b/src/core/_config.scss @@ -73,7 +73,7 @@ $hyperlink-disabled-color: $link-disabled-color;\n$hyperlink-hover-color: $link-hover-color;\n// Rules\n-$hr-top-color: $graphite03;\n+$hr-top-color: $color-default;\n$hr-bottom-color: $white;\n// Circle Pager\n@@ -288,7 +288,7 @@ $swaplist-text-color-selected: $white;\n//Date Picker\n$datepicker-icon-active-color: $trigger-active-color;\n$datepicker-month-year-color: $graphite10;\n-$datepicker-alternate-month-color: $graphite03;\n+$datepicker-alternate-month-color: $color-default;\n$datepicker-day-color: $graphite06;\n$datepicker-focus-border-color: $color-primary;\n$datepicker-selected-bg-color: $color-primary;\n@@ -308,7 +308,7 @@ $timepicker-disabled-color: $graphite03;\n// Color Picker\n$colorpicker-is-empty-bg-color: $white;\n-$colorpicker-initial-bg-color: $graphite03;\n+$colorpicker-initial-bg-color: $color-default;\n$colorpicker-swatch-border-color: $graphite02;\n$colorpicker-checkmark-one-color: $graphite05;\n$colorpicker-checkmark-two-color: $white;\n@@ -599,12 +599,12 @@ $datagrid-list-header-border-color: $graphite03;\n$datagrid-list-header-color: $graphite06;\n$datagrid-list-header-hover-color: $list-hover-color;\n$datagrid-list-row-hover-color: transparent;\n-$datagrid-list-sort-icon-color: $graphite03;\n+$datagrid-list-sort-icon-color: $color-default;\n$datagrid-list-sort-icon-hover-color: $graphite05;\n$datagrid-header-focus-bg-color: $datagrid-header-bg-color;\n$datagrid-header-focus-border-color: $white;\n$datagrid-list-header-checkbox-border-color: $graphite04;\n-$datagrid-list-header-active-color: $graphite03;\n+$datagrid-list-header-active-color: $color-default;\n$datagrid-filter-border-color: $slate04;\n$datagrid-filter-hover-border-color: $slate02;\n@@ -654,16 +654,16 @@ $progress-border-color: $graphite04;\n$progress-bar-bg-color: $color-primary;\n//Chart Progress Bar\n-$chart-progressbar-bg-color: $graphite03;\n+$chart-progressbar-bg-color: $color-default;\n$chart-progressbar-bg-color-dark: $graphite04;\n$chart-progressbar-completed-fill: $emerald07;\n$chart-progressbar-target-fill: $graphite04;\n$chart-progressbar-primary-fill: $color-primary;\n$chart-progressbar-dark-fill: $graphite06;\n-$chart-targeted-achievement-bg-color: $graphite03;\n+$chart-targeted-achievement-bg-color: $color-default;\n//Timeline\n-$timeline-indicator-color: $graphite03;\n+$timeline-indicator-color: $color-default;\n$timeline-indicator-processing-color: $color-primary;\n$timeline-indicator-complete-color: $color-primary;\n$timeline-line-color: $graphite04;\n@@ -671,7 +671,7 @@ $timeline-header-color: $color-primary;\n//Wizard\n$wizard-default-bg: $body-bg-color-primary;\n-$wizard-bar-bg: $graphite03;\n+$wizard-bar-bg: $color-default;\n$wizard-color: $graphite06;\n$wizard-disabled-color: $graphite04;\n$wizard-active-color: $color-primary;\n@@ -707,7 +707,7 @@ $searchfield-context-text-color: $font-color;\n$searchfield-card-bg-color: $graphite01;\n$searchfield-card-border-color: $graphite02;\n-$searchfield-card-icon-color: $graphite03;\n+$searchfield-card-icon-color: $color-default;\n$searchfield-card-text-color: $font-color;\n$searchfield-header-bg-color: $slate08;\n",
        "date": "29.08.2018 16:46:11",
        "repo": "infor-design/enterprise",
        "type": "replace",
        "chatgpt_zeroshot": "Update color variables in _config.scss to use $color-default instead of $graphite03."
    },
    {
        "msg": "replace graphite08",
        "diff": "diff --git a/src/core/_config.scss b/src/core/_config.scss @@ -50,7 +50,7 @@ $inverse-color: $button-primary-text-color;\n// Text Color\n// These are Deprecated. Use \"Default, Descriptive, Link, Muted, Alert\" ect going forward\n$font-color-extrahighcontrast: $graphite10;\n-$font-color-highcontrast: $graphite08;\n+$font-color-highcontrast: $color-default-contrast;\n$font-color: $graphite06;\n$font-color-lowcontrast: $color-default-alt;\n$label-color: $graphite06;\n@@ -80,7 +80,7 @@ $hr-bottom-color: $white;\n$circlepager-bg-color: transparent;\n$circlepager-border-color: $color-default-alt;\n$circlepager-hover-bg-color: transparent;\n-$circlepager-hover-border-color: $graphite08;\n+$circlepager-hover-border-color: $color-default-contrast;\n$circlepager-focus-bg-color: transparent;\n$circlepager-focus-border-color: $color-primary;\n@@ -251,7 +251,7 @@ $listbuilder-input-selection-bg-color: $azure08;\n// Toolbar\n$toolbar-standalone-bg-color: $graphite02;\n$toolbar-standalone-border-color: $graphite03;\n-$toolbar-standalone-disabled-color: $graphite08;\n+$toolbar-standalone-disabled-color: $color-default-contrast;\n$toolbar-separator-color: $graphite03;\n// Field Filter\n@@ -560,7 +560,7 @@ $mutlitabs-section-alt-border-color: $graphite02;\n$chart-line-color: $graphite02;\n$chart-line-color-axis: $color-default-alt;\n$chart-font-color: $graphite06;\n-$chart-font-color-inverse: $graphite08;\n+$chart-font-color-inverse: $color-default-contrast;\n$chart-bar-stroke: $white;\n$chart-arc-stroke: $white;\n@@ -571,8 +571,8 @@ $datagrid-header-bg-color: $slate06;\n$datagrid-nested-header-bg-color: $slate05;\n$datagrid-nested-header-border-color: $graphite03;\n$datagrid-header-border-color: $graphite03;\n-$datagrid-header-hover-color: $graphite08;\n-$datagrid-header-active-color: $graphite08;\n+$datagrid-header-hover-color: $color-default-contrast;\n+$datagrid-header-active-color: $color-default-contrast;\n$datagrid-header-checkbox-border-color: $graphite03;\n$datagrid-sort-icon-color: $color-default-alt;\n$datagrid-sort-icon-sorted-color: $white;\n@@ -814,7 +814,7 @@ $calendar-selected-border-color: $color-primary;\n$calendar-selected-bg-color: $graphite01;\n$calendar-hover-bg-color: $graphite01;\n$calendar-disabled-bg-color: $graphite01;\n-$calendar-disabled-color: $graphite08;\n+$calendar-disabled-color: $color-default-contrast;\n// Breakpoint sizes - Grid\n$breakpoint-phone: 320px;\n",
        "date": "07.09.2018 17:06:59",
        "repo": "infor-design/enterprise",
        "type": "replace",
        "chatgpt_zeroshot": "Update font and color variables to use default contrast color."
    },
    {
        "msg": "replace primary-color with color-primary",
        "diff": "diff --git a/src/core/_config.scss b/src/core/_config.scss @@ -43,7 +43,6 @@ $focus-box-shadow-spinbox-up: 0 -3px 3px 0 $focus-box-shadow-color,\n3px 0 3px 0 $focus-box-shadow-color;\n// Base Colors\n-$color-primary: $color-primary;\n$inverse-color: $button-primary-text-color;\n// Text Color\n",
        "date": "11.09.2018 21:45:42",
        "repo": "infor-design/enterprise",
        "type": "replace",
        "chatgpt_zeroshot": "Remove duplicate variable declaration for $color-primary in _config.scss"
    },
    {
        "msg": "replace random colors with defaults in HTML script tag. Remove class btn in favor of only btn-secondary. Add some markup notes for clarity.",
        "diff": "diff --git a/app/views/components/personalize/example-state.html b/app/views/components/personalize/example-state.html <div class=\"page-container no-scroll\">\n+\n<header class=\"header is-personalizable\">\n<div class=\"toolbar\">\n<div class=\"title\">\n</header>\n<div id=\"maincontent\" class=\"page-container scrollable\" role=\"main\">\n+\n<div class=\"row\">\n+ <div class=\"six columns\">\n+ <p>This example tests state maintenance for personalization of colors and theme. Personalizations should maintain upon reinitialization of elements after having chosen a theme or color from the \"...\" button in the header.</p>\n+ <p>Personalization button will set all colors to defaults as declared in HTML <em>script</em> tag, regardless of theme.</p><br><br>\n+ </div>\n+ </div>\n+ <div class=\"row\">\n<div class=\"one columns\">\n- <button id=\"reinitialize\" class=\"btn btn-secondary\">Reinitialize</button>\n+ <button id=\"reinitialize\" class=\"btn-secondary\">Reinitialize</button>\n<br></br>\n- <button id=\"personalize\" class=\"btn btn-secondary\">Personalize</button>\n+ <button id=\"personalize\" class=\"btn-secondary\">Personalize Colors to Defaults</button>\n</div>\n-\n</div>\n+\n</div>\n</div>\n<script>\n- // these are random colors for example purposes only\n+ // component defaults\nvar colors = {\n- header: '#800000',\n- subheader: '#700000',\n- text: '#000000',\n- verticalBorder: '#000000',\n- horizontalBorder: '#000000',\n- inactive: '#CCCCCC',\n- hover: '#CCCCCC'\n+ header: '2578A9',\n+ subheader: '1d5f8a',\n+ text: 'ffffff',\n+ verticalBorder: '133C59',\n+ horizontalBorder: '134D71',\n+ inactive: '1d5f8a',\n+ hover: '133C59',\n+ btnColorHeader: '368AC0',\n+ btnColorSubheader: '54a1d3'\n};\n$('html').personalize({colors: colors});\n",
        "date": "04.12.2018 14:27:01",
        "repo": "infor-design/enterprise",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor personalize example-state.html for better theme personalization and color maintenance"
    },
    {
        "msg": "replace darken function with existing theme color.",
        "diff": "diff --git a/src/components/modal/_modal.scss b/src/components/modal/_modal.scss }\n.hyperlink {\n- color: darken($hyperlink-color, 5%);\n+ color: $theme-color-palette-azure-70;\n}\n}\n}\n.btn-modal-primary {\n- color: darken($modal-btn-primary-color, 5%);\n+ color: $theme-color-palette-azure-70;\n&:hover {\ncolor: $modal-btn-primary-hover-color;\n",
        "date": "17.04.2019 09:30:18",
        "repo": "infor-design/enterprise",
        "type": "replace",
        "chatgpt_zeroshot": "Update hyperlink and primary button colors to use theme color palette azure-70."
    },
    {
        "msg": "replace pie example",
        "diff": "diff --git a/app/views/components/pie/example-index.html b/app/views/components/pie/example-index.html <h2 class=\"widget-title\">Pie Chart Title</h2>\n</div>\n<div class=\"widget-content\">\n- <div id=\"example-1\" class=\"chart-container\">\n+ <div id=\"pie-chart-example\" class=\"chart-container\">\n</div>\n</div>\n</div>\n@@ -77,25 +77,12 @@ $('body').on('initialized', function () {\n}]\n}];\n- // $('#pie-chart-example').chart({type: 'bar-stacked', dataset: pieData})\n- // .on('selected', function(e, args) {\n- // if (args[0] && args[0].data) {\n- // console.log(args[0].data, args[0].data.url);\n- // }\n- // });\n-\n-\n- var dataset1 = [{\n- data: [{\n- name: {text: 'Label A'},\n- completed: {text: '50K of 250K', value: 50000, format: '.2s', color: 'primary'},\n- remaining: {value: 20000, format: '.2s', text: ' To Target'},\n- total: {value: 250000, format: '.2s'},\n- }]\n-}];\n-\n-var api1 = $('#example-1').chart({dataset: dataset1, type: 'targeted-achievement'}).data('chart');\n-\n+ $('#pie-chart-example').chart({type: 'pie', dataset: pieData})\n+ .on('selected', function(e, args) {\n+ if (args[0] && args[0].data) {\n+ console.log(args[0].data, args[0].data.url);\n+ }\n+ });\n});\n</script>\n",
        "date": "19.03.2021 14:57:53",
        "repo": "infor-design/enterprise",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor pie chart component to use new ID and update chart type to 'pie'"
    },
    {
        "msg": "replace direct parent to closest field",
        "diff": "diff --git a/src/components/lookup/lookup.js b/src/components/lookup/lookup.js @@ -1086,7 +1086,7 @@ Lookup.prototype = {\n*/\nenable() {\nthis.element.prop('disabled', false).prop('readonly', false).removeClass('is-not-editable');\n- this.element.parent().removeClass('is-disabled');\n+ this.element.closest('.field').removeClass('is-disabled');\nthis.icon.prop('disabled', false);\n},\n",
        "date": "06.10.2022 14:01:29",
        "repo": "infor-design/enterprise",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor enable method to remove parent class and add closest class for better styling."
    },
    {
        "msg": "replace `d3.set` with ES6 `Set`",
        "diff": "diff --git a/spec/heatmap-spec.js b/spec/heatmap-spec.js @@ -228,7 +228,7 @@ describe('dc.heatmap', () => {\np.cols.add(d.colData);\np.rows.add(d.rowData);\nreturn p;\n- }, {cols: d3.set(), rows: d3.set()});\n+ }, {cols: new Set(), rows: new Set()});\n};\nbeforeEach(() => {\n@@ -245,21 +245,21 @@ describe('dc.heatmap', () => {\nit('should have the correct number of columns', () => {\nchart.selectAll('.box-group').each(d => {\n- expect(originalDomain.cols.has(d.key[0])).toBeTruthy();\n+ expect(originalDomain.cols.has(`${d.key[0]}`)).toBeTruthy();\n});\nchart.selectAll('.cols.axis text').each(d => {\n- expect(originalDomain.cols.has(d)).toBeTruthy();\n+ expect(originalDomain.cols.has(`${d}`)).toBeTruthy();\n});\n});\nit('should have the correct number of rows', () => {\nchart.selectAll('.box-group').each(d => {\n- expect(originalDomain.rows.has(d.key[1])).toBeTruthy();\n+ expect(originalDomain.rows.has(`${d.key[1]}`)).toBeTruthy();\n});\nchart.selectAll('.rows.axis text').each(d => {\n- expect(originalDomain.rows.has(d)).toBeTruthy();\n+ expect(originalDomain.rows.has(`${d}`)).toBeTruthy();\n});\n});\n});\n",
        "date": "29.08.2020 14:13:34",
        "repo": "dc-js/dc.js",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor heatmap-spec.js to use Set instead of d3.set for cols and rows. Fix comparison checks to use string interpolation."
    },
    {
        "msg": "replace readme.nodejs.md file search with glob call",
        "diff": "diff --git a/gulpfile.js b/gulpfile.js @@ -22,32 +22,8 @@ const use = args['use'];\nconst regexForExcludedServices = /\\/(intune|documentdbManagement|insightsManagement|insights|search)\\//i;\nfunction findReadmeNodejsMdFilePaths(azureRestAPISpecsRoot) {\n- const nodejsReadmeFilePaths = [];\n-\n- // Find all of the readme.nodejs.md files within the azure-rest-api-specs/specification folder.\nconst specificationFolderPath = path.resolve(azureRestAPISpecsRoot, 'specification');\n-\n- const folderPathsToSearch = [specificationFolderPath];\n- while (folderPathsToSearch.length > 0) {\n- const folderPathToSearch = folderPathsToSearch.pop();\n-\n- const folderEntryPaths = fs.readdirSync(folderPathToSearch);\n- for (let i = 0; i < folderEntryPaths.length; ++i) {\n- const folderEntryPath = path.resolve(folderPathToSearch, folderEntryPaths[i]);\n- const folderEntryStats = fs.lstatSync(folderEntryPath);\n- if (folderEntryStats.isDirectory()) {\n- folderPathsToSearch.push(folderEntryPath);\n- }\n- else if (folderEntryStats.isFile()) {\n- const fileName = path.basename(folderEntryPath);\n- if (fileName === 'readme.nodejs.md') {\n- nodejsReadmeFilePaths.push(folderEntryPath);\n- }\n- }\n- }\n- }\n-\n- return nodejsReadmeFilePaths;\n+ return glob.sync('**/readme.nodejs.md', { absolute: true, cwd: specificationFolderPath });\n}\nfunction getPackageNameFromReadmeNodejsMdFileContents(readmeNodejsMdFileContents) {\n@@ -243,6 +219,8 @@ gulp.task('publish-packages', (cb) => {\nfor (let i = 0; i < nodejsReadmeFilePaths.length; ++i) {\nconst nodejsReadmeFilePath = nodejsReadmeFilePaths[i];\n+ // console.log(`INFO: Processing ${nodejsReadmeFilePath}`);\n+\nconst nodejsReadmeFileContents = fs.readFileSync(nodejsReadmeFilePath, 'utf8');\nconst relativeOutputFolderPath = nodejsReadmeFileContents.match(/output\\-folder: \\$\\(node\\-sdks\\-folder\\)\\/(lib\\/services\\/\\S+)/)[1];\nconst packageFolderPath = path.resolve(azureSDKForNodeRepoRoot, relativeOutputFolderPath);\n",
        "date": "02.04.2018 10:38:24",
        "repo": "azure/azure-sdk-for-node",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor findReadmeNodejsMdFilePaths function to use glob.sync for better performance."
    },
    {
        "msg": "replace destructuring with local variables",
        "diff": "diff --git a/runtime/ms-rest/lib/serialization.js b/runtime/ms-rest/lib/serialization.js @@ -75,7 +75,8 @@ exports.serialize = function (mapper, object, objectName) {\n// false || X | undefined\n// undefined || X | undefined/null\n- const { required, nullable } = mapper;\n+ const required = mapper.required;\n+ const nullable = mapper.nullable;\nif (required && nullable && object === undefined) {\nthrow new Error(`${objectName} cannot be undefined.`);\n",
        "date": "24.06.2018 15:57:22",
        "repo": "azure/azure-sdk-for-node",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor serialization.js to separate required and nullable properties in mapper."
    },
    {
        "msg": "replace remaining CSS middleware with rollup plugin",
        "diff": "diff --git a/packages/wmr/src/wmr-middleware.js b/packages/wmr/src/wmr-middleware.js @@ -10,8 +10,6 @@ import { debug, formatPath } from './lib/output-utils.js';\nimport { getPlugins } from './lib/plugins.js';\nimport { watch } from './lib/fs-watcher.js';\nimport { matchAlias, resolveAlias } from './lib/aliasing.js';\n-import { modularizeCss } from './plugins/wmr/styles/css-modules.js';\n-import { processSass } from './plugins/wmr/styles/sass.js';\nconst NOOP = () => {};\n@@ -237,17 +235,15 @@ export default function wmrMiddleware(options) {\n} else if (queryParams.has('asset')) {\ncacheKey += '?asset';\ntransform = TRANSFORMS.asset;\n- } else if (prefix || hasIdPrefix || isModule || /\\.([mc]js|[tj]sx?)$/.test(file)) {\n+ } else if (prefix || hasIdPrefix || isModule || /\\.([mc]js|[tj]sx?)$/.test(file) || /\\.(css|s[ac]ss)$/.test(file)) {\ntransform = TRANSFORMS.js;\n- } else if (/\\.(css|s[ac]ss)$/.test(file)) {\n- transform = TRANSFORMS.css;\n} else {\ntransform = TRANSFORMS.generic;\n}\ntry {\nconst start = Date.now();\n- const result = await transform({\n+ let result = await transform({\nreq,\nres,\nid,\n@@ -266,6 +262,20 @@ export default function wmrMiddleware(options) {\n// return a value to use it as the response:\nif (result != null) {\n+ // Grab the asset id out of the compiled js\n+ // TODO: Wire this up into Style-Plugin by passing the\n+ // import type through resolution somehow\n+ if (!isModule && /\\.(css|s[ac]ss)$/.test(file) && typeof result === 'string') {\n+ const match = result.match(/style\\([\"']\\/([^\"']+?)[\"'].*?\\);/m);\n+\n+ if (match) {\n+ if (WRITE_CACHE.has(match[1])) {\n+ result = /** @type {string} */ WRITE_CACHE.get(match[1]);\n+ res.setHeader('Content-Type', 'text/css;charset=utf-8');\n+ }\n+ }\n+ }\n+\nlog(`<-- ${kl.cyan(formatPath(id))} as ${kl.dim('' + res.getHeader('Content-Type'))}`);\nconst time = Date.now() - start;\nres.writeHead(200, {\n@@ -554,41 +564,6 @@ export const TRANSFORMS = {\n}\n},\n- // Handles CSS Modules (the actual CSS)\n- async css({ id, path, file, root, out, res, alias, cacheKey }) {\n- if (!/\\.(css|s[ac]ss)$/.test(path)) throw null;\n-\n- const isModular = /\\.module\\.(css|s[ac]ss)$/.test(path);\n-\n- const isSass = /\\.(s[ac]ss)$/.test(path);\n-\n- res.setHeader('Content-Type', 'text/css;charset=utf-8');\n-\n- if (WRITE_CACHE.has(id)) return WRITE_CACHE.get(id);\n-\n- const idAbsolute = resolveFile(file, root, alias);\n- let code = await fs.readFile(idAbsolute, 'utf-8');\n-\n- if (isModular) {\n- code = await modularizeCss(code, id.replace(/^\\.\\//, ''), undefined, idAbsolute);\n- } else if (isSass) {\n- code = processSass(code);\n- }\n-\n- // const plugin = wmrStylesPlugin({ cwd, hot: false, fullPath: true });\n- // let code;\n- // const context = {\n- // emitFile(asset) {\n- // code = asset.source;\n- // }\n- // };\n- // await plugin.load.call(context, file);\n-\n- writeCacheFile(out, cacheKey, code);\n-\n- return code;\n- },\n-\n// Falls through to sirv\nasync generic(ctx) {\n// Serve ~/200.html fallback for requests with no extension\n",
        "date": "12.06.2021 18:44:29",
        "repo": "preactjs/wmr",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor CSS handling in wmr-middleware"
    },
    {
        "msg": "replace _onError with _destroy",
        "diff": "diff --git a/index.js b/index.js @@ -199,7 +199,7 @@ Peer.prototype.signal = function (data) {\nself._pendingCandidates = []\nif (self._pc.remoteDescription.type === 'offer') self._createAnswer()\n- }, function (err) { self._onError(err) })\n+ }, function (err) { self._destroy(err) })\n}\nif (!data.sdp && !data.candidate) {\nself._destroy(new Error('signal() called with invalid signal data'))\n@@ -212,7 +212,7 @@ Peer.prototype._addIceCandidate = function (candidate) {\nself._pc.addIceCandidate(\nnew self._wrtc.RTCIceCandidate(candidate),\nnoop,\n- function (err) { self._onError(err) }\n+ function (err) { self._destroy(err) }\n)\n} catch (err) {\nself._destroy(new Error('error adding candidate: ' + err.message))\n@@ -245,7 +245,7 @@ Peer.prototype._destroy = function (err, onclose) {\nif (self.destroyed) return\nif (onclose) self.once('close', onclose)\n- self._debug('destroy (error: %s)', err && err.message)\n+ self._debug('destroy (error: %s)', err && (err.message || err))\nself.readable = self.writable = false\n@@ -307,7 +307,7 @@ Peer.prototype._setupData = function (event) {\n// In some situations `pc.createDataChannel()` returns `undefined` (in wrtc),\n// which is invalid behavior. Handle it gracefully.\n// See: https://github.com/feross/simple-peer/issues/163\n- return self._onError(new Error('Data channel event is missing `channel` property'))\n+ return self._destroy(new Error('Data channel event is missing `channel` property'))\n}\nself._channel = event.channel\n@@ -343,7 +343,7 @@ Peer.prototype._write = function (chunk, encoding, cb) {\ntry {\nself.send(chunk)\n} catch (err) {\n- return self._onError(err)\n+ return self._destroy(err)\n}\nif (self._channel.bufferedAmount > MAX_BUFFERED_AMOUNT) {\nself._debug('start backpressure: bufferedAmount %d', self._channel.bufferedAmount)\n@@ -386,7 +386,7 @@ Peer.prototype._createOffer = function () {\nself._pc.createOffer(function (offer) {\nif (self.destroyed) return\noffer.sdp = self.sdpTransform(offer.sdp)\n- self._pc.setLocalDescription(offer, noop, function (err) { self._onError(err) })\n+ self._pc.setLocalDescription(offer, noop, function (err) { self._destroy(err) })\nvar sendOffer = function () {\nvar signal = self._pc.localDescription || offer\nself._debug('signal')\n@@ -397,7 +397,7 @@ Peer.prototype._createOffer = function () {\n}\nif (self.trickle || self._iceComplete) sendOffer()\nelse self.once('_iceComplete', sendOffer) // wait for candidates\n- }, function (err) { self._onError(err) }, self.offerConstraints)\n+ }, function (err) { self._destroy(err) }, self.offerConstraints)\n}\nPeer.prototype._createAnswer = function () {\n@@ -407,7 +407,7 @@ Peer.prototype._createAnswer = function () {\nself._pc.createAnswer(function (answer) {\nif (self.destroyed) return\nanswer.sdp = self.sdpTransform(answer.sdp)\n- self._pc.setLocalDescription(answer, noop, function (err) { self._onError(err) })\n+ self._pc.setLocalDescription(answer, noop, function (err) { self._destroy(err) })\nif (self.trickle || self._iceComplete) sendAnswer()\nelse self.once('_iceComplete', sendAnswer)\n@@ -419,7 +419,7 @@ Peer.prototype._createAnswer = function () {\nsdp: signal.sdp\n})\n}\n- }, function (err) { self._onError(err) }, self.answerConstraints)\n+ }, function (err) { self._destroy(err) }, self.answerConstraints)\n}\nPeer.prototype._onIceConnectionStateChange = function () {\n@@ -594,7 +594,7 @@ Peer.prototype._maybeReady = function () {\ntry {\nself.send(self._chunk)\n} catch (err) {\n- return self._onError(err)\n+ return self._destroy(err)\n}\nself._chunk = null\nself._debug('sent chunk from \"write before connect\"')\n@@ -696,13 +696,6 @@ Peer.prototype._onTrack = function (event) {\nself.emit('stream', event.streams[0])\n}\n-Peer.prototype._onError = function (err) {\n- var self = this\n- if (self.destroyed) return\n- self._debug('error %s', err.message || err)\n- self._destroy(err)\n-}\n-\nPeer.prototype._debug = function () {\nvar self = this\nvar args = [].slice.call(arguments)\n",
        "date": "07.04.2017 16:41:14",
        "repo": "feross/simple-peer",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor error handling in Peer class"
    },
    {
        "msg": "replace `setInterval()` with `setTimeout()` when actually necessary",
        "diff": "diff --git a/index.js b/index.js @@ -553,15 +553,9 @@ Peer.prototype._maybeReady = function () {\nself._connecting = true\n- var withinIntervalCallback = false\n// We can't rely on order here, for details see https://github.com/js-platform/node-webrtc/issues/339\n- var interval = setInterval(function () {\n- if (self.destroyed) {\n- clearInterval(interval)\n- return\n- }\n- if (withinIntervalCallback) return\n- withinIntervalCallback = true\n+ function findCandidatePair () {\n+ if (self.destroyed) return\nself.getStats(function (err, items) {\nif (self.destroyed) return\n@@ -647,10 +641,8 @@ Peer.prototype._maybeReady = function () {\n)\n}\n- withinIntervalCallback = false\n- if (self.connected) {\n- clearInterval(interval)\n- } else {\n+ if (!self.connected) {\n+ setTimeout(findCandidatePair, 100)\nreturn\n}\n@@ -682,7 +674,8 @@ Peer.prototype._maybeReady = function () {\nself._earlyMessage = null\n}\n})\n- }, 100)\n+ }\n+ findCandidatePair()\n}\nPeer.prototype._onInterval = function () {\n",
        "date": "28.11.2017 15:06:08",
        "repo": "feross/simple-peer",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor _maybeReady function to use setTimeout instead of setInterval"
    },
    {
        "msg": "replace multistream tests on iOS safari",
        "diff": "diff --git a/test/multistream.js b/test/multistream.js @@ -12,6 +12,11 @@ test('get config', function (t) {\n})\ntest('multistream', function (t) {\n+ if (common.isBrowser('ios')) {\n+ t.pass('Skip on iOS emulator which does not support this reliably') // iOS emulator issue #486\n+ t.end()\n+ return\n+ }\nt.plan(20)\nvar peer1 = new Peer({\n@@ -54,6 +59,49 @@ test('multistream', function (t) {\n})\n})\n+test('multistream (track event)', function (t) {\n+ t.plan(20)\n+\n+ var peer1 = new Peer({\n+ config: config,\n+ initiator: true,\n+ wrtc: common.wrtc,\n+ streams: (new Array(5)).fill(null).map(function () { return common.getMediaStream() })\n+ })\n+ var peer2 = new Peer({\n+ config: config,\n+ wrtc: common.wrtc,\n+ streams: (new Array(5)).fill(null).map(function () { return common.getMediaStream() })\n+ })\n+\n+ peer1.on('signal', function (data) { if (!peer2.destroyed) peer2.signal(data) })\n+ peer2.on('signal', function (data) { if (!peer1.destroyed) peer1.signal(data) })\n+\n+ var receivedIds = {}\n+\n+ peer1.on('track', function (track) {\n+ t.pass('peer1 got track')\n+ if (receivedIds[track.id]) {\n+ t.fail('received one unique track per event')\n+ } else {\n+ receivedIds[track.id] = true\n+ }\n+ })\n+ peer2.on('track', function (track) {\n+ t.pass('peer2 got track')\n+ if (receivedIds[track.id]) {\n+ t.fail('received one unique track per event')\n+ } else {\n+ receivedIds[track.id] = true\n+ }\n+ })\n+\n+ t.on('end', () => {\n+ peer1.destroy()\n+ peer2.destroy()\n+ })\n+})\n+\ntest('multistream on non-initiator only', function (t) {\nt.plan(30)\n@@ -135,6 +183,11 @@ test('delayed stream on non-initiator', function (t) {\n})\ntest('incremental multistream', function (t) {\n+ if (common.isBrowser('ios')) {\n+ t.pass('Skip on iOS emulator which does not support this reliably') // iOS emulator issue #486\n+ t.end()\n+ return\n+ }\nt.plan(12)\nvar peer1 = new Peer({\n@@ -197,7 +250,75 @@ test('incremental multistream', function (t) {\n})\n})\n+test('incremental multistream (track event)', function (t) {\n+ t.plan(22)\n+\n+ var peer1 = new Peer({\n+ config: config,\n+ initiator: true,\n+ wrtc: common.wrtc,\n+ streams: []\n+ })\n+ var peer2 = new Peer({\n+ config: config,\n+ wrtc: common.wrtc,\n+ streams: []\n+ })\n+\n+ peer1.on('signal', function (data) { if (!peer2.destroyed) peer2.signal(data) })\n+ peer2.on('signal', function (data) { if (!peer1.destroyed) peer1.signal(data) })\n+\n+ peer1.on('connect', function () {\n+ t.pass('peer1 connected')\n+ peer1.addStream(common.getMediaStream())\n+ })\n+ peer2.on('connect', function () {\n+ t.pass('peer2 connected')\n+ peer2.addStream(common.getMediaStream())\n+ })\n+\n+ var receivedIds = {}\n+\n+ var count1 = 0\n+ peer1.on('track', function (track) {\n+ t.pass('peer1 got track')\n+ if (receivedIds[track.id]) {\n+ t.fail('received one unique track per event')\n+ } else {\n+ receivedIds[track.id] = true\n+ }\n+ count1++\n+ if (count1 % 2 === 0 && count1 < 10) {\n+ peer1.addStream(common.getMediaStream())\n+ }\n+ })\n+\n+ var count2 = 0\n+ peer2.on('track', function (track) {\n+ t.pass('peer2 got track')\n+ if (receivedIds[track.id]) {\n+ t.fail('received one unique track per event')\n+ } else {\n+ receivedIds[track.id] = true\n+ }\n+ count2++\n+ if (count2 % 2 === 0 && count2 < 10) {\n+ peer2.addStream(common.getMediaStream())\n+ }\n+ })\n+\n+ t.on('end', () => {\n+ peer1.destroy()\n+ peer2.destroy()\n+ })\n+})\n+\ntest('incremental multistream on non-initiator only', function (t) {\n+ if (common.isBrowser('ios')) {\n+ t.pass('Skip on iOS emulator which does not support this reliably') // iOS emulator issue #486\n+ t.end()\n+ return\n+ }\nt.plan(7)\nvar peer1 = new Peer({\n@@ -245,6 +366,54 @@ test('incremental multistream on non-initiator only', function (t) {\n})\n})\n+test('incremental multistream on non-initiator only (track event)', function (t) {\n+ t.plan(12)\n+\n+ var peer1 = new Peer({\n+ config: config,\n+ initiator: true,\n+ wrtc: common.wrtc,\n+ streams: []\n+ })\n+ var peer2 = new Peer({\n+ config: config,\n+ wrtc: common.wrtc,\n+ streams: []\n+ })\n+\n+ peer1.on('signal', function (data) { if (!peer2.destroyed) peer2.signal(data) })\n+ peer2.on('signal', function (data) { if (!peer1.destroyed) peer1.signal(data) })\n+\n+ peer1.on('connect', function () {\n+ t.pass('peer1 connected')\n+ })\n+ peer2.on('connect', function () {\n+ t.pass('peer2 connected')\n+ peer2.addStream(common.getMediaStream())\n+ })\n+\n+ var receivedIds = {}\n+\n+ var count = 0\n+ peer1.on('track', function (track) {\n+ t.pass('peer1 got track')\n+ if (receivedIds[track.id]) {\n+ t.fail('received one unique track per event')\n+ } else {\n+ receivedIds[track.id] = true\n+ }\n+ count++\n+ if (count % 2 === 0 && count < 10) {\n+ peer2.addStream(common.getMediaStream())\n+ }\n+ })\n+\n+ t.on('end', () => {\n+ peer1.destroy()\n+ peer2.destroy()\n+ })\n+})\n+\ntest('addStream after removeStream', function (t) {\nif (common.isBrowser('safari') || common.isBrowser('ios')) {\nt.pass('Skip on Safari and iOS which do not support this reliably') // TODO: Enable in Safari 12.2\n",
        "date": "29.07.2019 20:22:02",
        "repo": "feross/simple-peer",
        "type": "replace",
        "chatgpt_zeroshot": "Add multistream track event tests and skip on iOS emulator."
    },
    {
        "msg": "replace white rectangle bitmap with empty svg for default backdrop. Resolves",
        "diff": "diff --git a/src/lib/default-project/project.json b/src/lib/default-project/project.json \"currentCostume\": 0,\n\"costumes\": [\n{\n- \"assetId\": \"739b5e2a2435f6e1ec2993791b423146\",\n+ \"assetId\": \"cd21514d0531fdffb22204e0ec5ed84a\",\n\"name\": \"backdrop1\",\n- \"bitmapResolution\": 1,\n- \"md5ext\": \"739b5e2a2435f6e1ec2993791b423146.png\",\n- \"dataFormat\": \"png\",\n+ \"md5ext\": \"cd21514d0531fdffb22204e0ec5ed84a.svg\",\n+ \"dataFormat\": \"svg\",\n\"rotationCenterX\": 240,\n\"rotationCenterY\": 180\n}\n",
        "date": "15.05.2018 10:35:47",
        "repo": "wdr-data/code4maus",
        "type": "replace",
        "chatgpt_zeroshot": "Update project.json with new costume assetId and dataFormat for backdrop1 costume."
    },
    {
        "msg": "replace vowels in string",
        "diff": "diff --git a/sheets/javascript.md b/sheets/javascript.md @@ -224,3 +224,39 @@ axios({\nconsole.log(result.data);\n});\n```\n+\n+## Remove vowels from string\n+\n+Use a regular expression:\n+\n+```js\n+'replace vowels from string'.replace(/[aeiou]/gi, '');\n+```\n+\n+Output:\n+\n+```bash\n+\"rplc vwls frm strng\"\n+```\n+\n+With JavaScript functions:\n+\n+```js\n+'replace vowels from string'\n+ .split('a')\n+ .join('')\n+ .split('e')\n+ .join('')\n+ .split('i')\n+ .join('')\n+ .split('o')\n+ .join('')\n+ .split('u')\n+ .join('');\n+```\n+\n+Output:\n+\n+```bash\n+\"rplc vwls frm strng\"\n+```\n",
        "date": "24.11.2019 07:10:55",
        "repo": "spences10/cheat-sheets",
        "type": "replace",
        "chatgpt_zeroshot": "Add code examples for removing vowels from a string in JavaScript"
    },
    {
        "msg": "replace url match pattern with SDK constant",
        "diff": "diff --git a/lib/run/index.js b/lib/run/index.js @@ -112,7 +112,7 @@ module.exports = function (options, callback) {\n},\ncertificates: options.sslClientCert && new sdk.CertificateList({}, [{\nname: 'client-cert',\n- matches: ['<all_urls>'], // todo - expose this as a constant from the SDK.\n+ matches: [sdk.UrlMatchPattern.MATCH_ALL_URLS],\nkey: { src: options.sslClientKey },\ncert: { src: options.sslClientCert },\npassphrase: options.sslClientPassphrase\n",
        "date": "17.03.2017 13:47:07",
        "repo": "postmanlabs/newman",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor SSL client certificate matching to use SDK constant."
    },
    {
        "msg": "replace parseInt with Integer, modified option definnitions",
        "diff": "diff --git a/lib/cli/index.js b/lib/cli/index.js @@ -6,6 +6,22 @@ var _ = require('lodash'),\ncolors = require('colors'),\nversion = require('../../package.json').version,\n+ /**\n+ * A CLI parser helper to process stringified numbers into integers, perform safety checks, and return the result.\n+ *\n+ * @param {String} arg - The stringified number argument pulled from the CLI arguments list.\n+ * @returns {Number} - The supplied argument, casted to an integer.\n+ */\n+ Integer = (arg) => {\n+ var num = Number(arg);\n+\n+ if (!_.isSafeInteger(num)) {\n+ throw new Error('The value must be an integer.');\n+ }\n+\n+ return num.valueOf();\n+ },\n+\n/**\n* Separates reporter specific arguments from the rest.\n*\n@@ -55,6 +71,7 @@ var _ = require('lodash'),\n* @returns {{key, value}} - The object representation of the current CLI variable.\n*/\nfunction collect (val, memo) {\n+ console.log(\"Val : \", val);\nvar arg = val,\neqIndex = arg.indexOf('='),\nhasEq = eqIndex !== -1;\n@@ -73,27 +90,27 @@ var _ = require('lodash'),\n.option('-g, --globals <path>', 'Specify a URL or Path to a file containing Postman Globals.')\n.option('--folder <path>', 'Run a single folder from a collection.')\n.option('-r, --reporters [reporters]', 'Specify the reporters to use for this run.', 'cli')\n- .option('-n, --iteration-count <n>', 'Define the number of iterations to run.', parseInt)\n+ .option('-n, --iteration-count <n>', 'Define the number of iterations to run.', Integer)\n.option('-d, --iteration-data <path>', 'Specify a data file to use for iterations (either json or csv).')\n.option('--export-environment <path>', 'Exports the environment to a file after completing the run.')\n.option('--export-globals <path>', 'Specify an output file to dump Globals before exiting.')\n- .option('--export-collection', 'Specify an output file to save the executed collection')\n- .option('--delay-request [n]', 'Specify the extent of delay between requests (milliseconds)', parseInt, 0)\n+ .option('--export-collection <path>', 'Specify an output file to save the executed collection')\n+ .option('--delay-request [n]', 'Specify the extent of delay between requests (milliseconds)', Integer)\n.option('--bail',\n- 'Specify whether or not to gracefully stop a collection run on encountering the first error', false)\n+ 'Specify whether or not to gracefully stop a collection run on encountering the first error.')\n.option('-x , --suppress-exit-code',\n- 'Specify whether or not to override the default exit code for the current run', false)\n- .option('--silent', 'Prevents newman from showing output to CLI', false)\n+ 'Specify whether or not to override the default exit code for the current run.')\n+ .option('--silent', 'Prevents newman from showing output to CLI.')\n.option('--disable-unicode',\n'Forces unicode compliant symbols to be replaced by their plain text equivalents')\n- .option('--global-var [value]',\n+ .option('--global-var <value>',\n'Allows the specification of global variables via the command line, in a key=value format', collect, [])\n// commander had some issue with flags starting with --no, thus camelCased\n// resolved https://github.com/tj/commander.js/pull/709\n.option('--no-color', 'Disable colored output.')\n.option('--color', 'Force colored output (for use in CI environments).')\n- .option('--timeout-request <n>', 'Specify a timeout for requests (in milliseconds).', parseInt)\n- .option('--timeout-script <n>', 'Specify a timeout for script (in milliseconds).', parseInt)\n+ .option('--timeout-request <n>', 'Specify a timeout for requests (in milliseconds).', Integer)\n+ .option('--timeout-script <n>', 'Specify a timeout for script (in milliseconds).', Integer)\n.option('--ignore-redirects', 'If present, Newman will not follow HTTP Redirects.')\n.option('-k, --insecure', 'Disables SSL validations.')\n.option('--ssl-client-cert <path>',\n@@ -166,7 +183,7 @@ var _ = require('lodash'),\nvar command = options._name,\noptionsObj = { [command]: {} };\n- optionsObj[command].version = options.version || false;\n+ optionsObj[command].version = options._version || false;\noptionsObj[command].noColor = !options.color || false;\noptionsObj[command].color = options.color || false;\noptionsObj[command].timeoutRequest = options.timeoutRequest || null;\n",
        "date": "26.10.2017 12:39:35",
        "repo": "postmanlabs/newman",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor CLI parser to handle stringified numbers and improve error handling"
    },
    {
        "msg": "replace istanbul with nyc in devDependencies",
        "diff": "diff --git a/package.json b/package.json \"eslint-plugin-mocha\": \"4.11.0\",\n\"eslint-plugin-security\": \"1.4.0\",\n\"expect.js\": \"0.3.1\",\n- \"istanbul\": \"0.4.5\",\n\"js-yaml\": \"3.10.0\",\n\"jsdoc\": \"3.5.5\",\n\"jsdoc-to-markdown\": \"3.0.1\",\n\"mocha\": \"4.0.1\",\n\"nsp\": \"2.8.1\",\n+ \"nyc\": \"11.3.0\",\n\"packity\": \"0.3.2\",\n\"parse-gitignore\": \"0.4.0\",\n\"postman-jsdoc-theme\": \"0.0.3\",\n",
        "date": "08.11.2017 15:27:38",
        "repo": "postmanlabs/newman",
        "type": "replace",
        "chatgpt_zeroshot": "Update package.json dependencies, remove istanbul and add nyc version 11.3.0"
    },
    {
        "msg": "replace cli-table2 with cli-table3 in dependencies",
        "diff": "diff --git a/package.json b/package.json \"dependencies\": {\n\"async\": \"2.6.1\",\n\"cli-progress\": \"1.8.0\",\n- \"cli-table2\": \"0.2.0\",\n+ \"cli-table3\": \"0.4.0\",\n\"colors\": \"1.3.0\",\n\"commander\": \"2.15.1\",\n\"csv-parse\": \"1.3.3\",\n",
        "date": "10.06.2018 19:56:08",
        "repo": "postmanlabs/newman",
        "type": "replace",
        "chatgpt_zeroshot": "Update cli-table2 to cli-table3 version 0.4.0 in dependencies"
    },
    {
        "msg": "replace cli-table2 with cli-table3 in cli reporter code",
        "diff": "diff --git a/lib/reporters/cli/index.js b/lib/reporters/cli/index.js var _ = require('lodash'),\ncolors = require('colors/safe'),\n- Table = require('cli-table2'),\n+ Table = require('cli-table3'),\nformat = require('util').format,\nutil = require('../../util'),\n",
        "date": "10.06.2018 19:56:20",
        "repo": "postmanlabs/newman",
        "type": "replace",
        "chatgpt_zeroshot": "Update Table dependency from cli-table2 to cli-table3"
    },
    {
        "msg": "replace Number.isInteger for polyfill",
        "diff": "diff --git a/lib/syntax/index.js b/lib/syntax/index.js @@ -21,7 +21,13 @@ function createParseContext(name) {\n}\nfunction isValidNumber(value) {\n- return Number.isInteger(value) && value >= 0;\n+ // Number.isInteger(value) && value >= 0\n+ return (\n+ typeof value === 'number' &&\n+ isFinite(value) &&\n+ Math.floor(value) === value &&\n+ value >= 0\n+ );\n}\nfunction isValidLocation(loc) {\n",
        "date": "27.02.2017 13:20:43",
        "repo": "csstree/csstree",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor isValidNumber function to improve number validation"
    },
    {
        "msg": "replace FPO with the real link to the Storybook intro video!",
        "diff": "diff --git a/src/components/screens/IndexScreen/Hero.js b/src/components/screens/IndexScreen/Hero.js @@ -374,7 +374,7 @@ export default function Hero({\ntitle=\"Chromatic intro video\"\nwidth=\"560\"\nheight=\"315\"\n- src=\"https://www.youtube.com/embed/dQw4w9WgXcQ?autoplay=1&rel=0&amp;showinfo=0\"\n+ src=\"https://www.youtube.com/embed/wj9tcB5CGxI?autoplay=1&rel=0&amp;showinfo=0\"\nframeBorder=\"0\"\nallow=\"autoplay; encrypted-media\"\nallowFullScreen\n",
        "date": "04.03.2019 16:04:52",
        "repo": "storybookjs/frontpage",
        "type": "replace",
        "chatgpt_zeroshot": "Update intro video URL in Hero component"
    },
    {
        "msg": "replace some codaprocotol.org with .com version .org should redirect but it's having some issues and we should probably be consistent anyway",
        "diff": "diff --git a/README.md b/README.md -<a href=\"https://codaprotocol.org\">\n+<a href=\"https://codaprotocol.com\">\n<img width=\"200\" src=\"./frontend/website/static/img/coda-logo@3x.png\" alt=\"Coda Logo\" />\n</a>\n<hr/>\n-Coda is the first cryptocurrency with a lightweight, constant-sized blockchain. This is the main source code repository for the Coda project. It contains code for the OCaml protocol implementation, [website](https://codaprotocol.org), and wallet.\n+Coda is the first cryptocurrency with a lightweight, constant-sized blockchain. This is the main source code repository for the Coda project. It contains code for the OCaml protocol implementation, [website](https://codaprotocol.com), and wallet.\n## Notes\n",
        "date": "19.08.2019 16:52:20",
        "repo": "minaprotocol/mina",
        "type": "replace",
        "chatgpt_zeroshot": "Update website link to codaprotocol.com"
    },
    {
        "msg": "replace typo package -> submodule",
        "diff": "diff --git a/scripts/pin-external-packages.sh b/scripts/pin-external-packages.sh PACKAGES=\"ocaml-sodium rpc_parallel ocaml-extlib digestif ocaml-extlib async_kernel coda_base58 graphql_ppx\"\n-git package sync && git package update --init --recursive\n+git submodule sync && git submodule update --init --recursive\nfor pkg in $PACKAGES; do\necho \"Pinning package\" $pkg\n",
        "date": "29.04.2020 19:52:10",
        "repo": "minaprotocol/mina",
        "type": "replace",
        "chatgpt_zeroshot": "Update package syncing command in pin-external-packages script"
    },
    {
        "msg": "replace circle-ci specific pipeline.git.base_revision var with Buildkite version",
        "diff": "diff --git a/buildkite/src/Jobs/LintOpt.dhall b/buildkite/src/Jobs/LintOpt.dhall @@ -24,7 +24,7 @@ Pipeline.build\n, steps =\n[ Command.build\nCommand.Config::\n- { commands = OpamInit.andThenRunInDocker ([] : List Text) \"CI=true BASE_BRANCH_NAME=$(pipeline.git.base_revision) ./scripts/compare_ci_diff_types.sh\"\n+ { commands = OpamInit.andThenRunInDocker ([] : List Text) \"CI=true BASE_BRANCH_NAME=$BUILDKITE_PULL_REQUEST_BASE_BRANCH ./scripts/compare_ci_diff_types.sh\"\n, label = \"Compare CI diff types\"\n, key = \"lint-diff-types\"\n, target = Size.Medium\n@@ -32,7 +32,7 @@ Pipeline.build\n},\nCommand.build\nCommand.Config::\n- { commands = OpamInit.andThenRunInDocker ([] : List Text) \"CI=true BASE_BRANCH_NAME=$(pipeline.git.base_revision) ./scripts/compare_ci_diff_binables.sh\"\n+ { commands = OpamInit.andThenRunInDocker ([] : List Text) \"CI=true BASE_BRANCH_NAME=$BUILDKITE_PULL_REQUEST_BASE_BRANCH ./scripts/compare_ci_diff_binables.sh\"\n, label = \"Compare CI diff binables\"\n, key = \"lint-diff-binables\"\n, target = Size.Medium\n",
        "date": "17.08.2020 19:41:14",
        "repo": "minaprotocol/mina",
        "type": "replace",
        "chatgpt_zeroshot": "Update BASE_BRANCH_NAME variable in linting scripts to use BUILDKITE_PULL_REQUEST_BASE_BRANCH instead of pipeline.git.base_revision"
    },
    {
        "msg": "replace dummy values with failwith(\"TODO\")s",
        "diff": "diff --git a/src/lib/zexe_backend/zexe_backend_common/plonk_dlog_keypair.ml b/src/lib/zexe_backend/zexe_backend_common/plonk_dlog_keypair.ml @@ -102,9 +102,9 @@ module Make (Inputs : Inputs_intf) = struct\nlet urs = ref None in\nlet degree = 1 lsl Pickles_types.Nat.to_int Rounds.n in\n(* TODO *)\n- let public_inputs = Unsigned.Size_t.of_int 0 in\n+ let public_inputs = failwith \"TODO\" in\n(* TODO *)\n- let size = Unsigned.Size_t.of_int 0 in\n+ let size = failwith \"TODO\" in\nlet set_urs_info specs =\nSet_once.set_exn urs_info Lexing.dummy_pos specs\nin\n",
        "date": "16.09.2020 12:15:30",
        "repo": "minaprotocol/mina",
        "type": "replace",
        "chatgpt_zeroshot": "Add error messages for TODO placeholders in plonk_dlog_keypair.ml"
    },
    {
        "msg": "replace failwith(\"TODO\") with dummy value in staged ledger test",
        "diff": "diff --git a/src/lib/staged_ledger/staged_ledger.ml b/src/lib/staged_ledger/staged_ledger.ml @@ -1910,7 +1910,7 @@ let%test_module \"test\" =\n| (cmd : User_command.Valid.t) :: cmds ->\nlet%bind _ =\nLedger.apply_transaction ~constraint_constants test_ledger\n- ~txn_state_view:(failwith \"TODO\")\n+ ~txn_state_view:(dummy_state_view ())\n(Command (cmd :> User_command.t))\nin\napply_cmds cmds\n",
        "date": "18.09.2020 12:27:08",
        "repo": "minaprotocol/mina",
        "type": "replace",
        "chatgpt_zeroshot": "Fix missing implementation in Ledger.apply_transaction call"
    },
    {
        "msg": "replace `date` with `commit_date`, add justification and context",
        "diff": "diff --git a/rfcs/0039-snark-keys-management.md b/rfcs/0039-snark-keys-management.md @@ -52,7 +52,12 @@ JSON format before the actual contents, specifying\nzexe repos used when generating the keys\n* the length of the binary data following the header, so that we can validate\nthat the file was successfully downloaded in full, where applicable\n-* the date when the file's contents were created\n+* the date associated with the current commit\n+ - we don't chose the file generation time, in order to make the header\n+ reproducible\n+ - it is helpful to have some notion of date, so that we can build a simple\n+ `ls`-style tool that we can use to identify out-of-date keys in the local\n+ cache etc.\n* the type of the file's contents\n* the constraint system hash (for keys) or domain size (for URS)\n* any other input information\n@@ -82,7 +87,7 @@ For example, a header for the transaction snark key file might look like:\n, \"marlin\": \"COMMIT_SHA_HERE\"\n, \"zexe\": \"COMMIT_SHA_HERE\" }\n, \"length\": 1000000000\n-, \"date\": \"1970-01-01 00:00:00\"\n+, \"commit_date\": \"1970-01-01 00:00:00\"\n, \"constraint_system_hash\": \"MD5_HERE\"\n, \"identifying_hash\": \"HASH_HERE\" }\n```\n",
        "date": "12.10.2020 19:10:20",
        "repo": "minaprotocol/mina",
        "type": "replace",
        "chatgpt_zeroshot": "Update header in snark keys management RFC to use commit date instead of file generation date"
    },
    {
        "msg": "replace defaults misuse with merge",
        "diff": "diff --git a/automation/terraform/modules/kubernetes/testnet/helm.tf b/automation/terraform/modules/kubernetes/testnet/helm.tf @@ -119,13 +119,13 @@ locals {\n# in addition to stand-alone servers up to input count\n[\nfor index in range(2, var.archive_node_count + 1):\n- defaults(\n+ merge(\n+ local.default_archive_node,\n{\nname = \"archive-${index}\",\nenableLocalDaemon = false,\nenablePostgresDB = false\n- },\n- local.default_archive_node\n+ }\n)\n]\n)\n",
        "date": "18.02.2021 16:00:56",
        "repo": "minaprotocol/mina",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor archive node creation in helm.tf"
    },
    {
        "msg": "replace old base64 code",
        "diff": "diff --git a/src/lib/genesis_ledger_helper/lib/genesis_ledger_helper_lib.ml b/src/lib/genesis_ledger_helper/lib/genesis_ledger_helper_lib.ml @@ -129,29 +129,9 @@ module Accounts = struct\nt (List.length state)\nelse Ok (Snapp_state.V.of_list_exn state)\nin\n- let%bind verification_key =\n- (* Use a URI-safe alphabet to make life easier for maintaining json\n- We prefer this to base58-check here because users should not\n- be manually entering verification keys.\n- *)\n- Option.value_map ~default:(Ok None) verification_key\n- ~f:(fun verification_key ->\n- let%map vk =\n- Base64.decode ~alphabet:Base64.uri_safe_alphabet\n- verification_key\n- |> Result.map_error ~f:(function `Msg s ->\n- Error.createf\n- !\"Could not parse verification key account \\\n- %{sexp:Runtime_config.Accounts.Single.t}: %s\"\n- t s)\n- |> Result.map\n- ~f:\n- (Binable.of_string\n- ( module Pickles.Side_loaded.Verification_key\n- .Stable\n- .Latest ))\n- in\n- Some (With_hash.of_data ~hash_data:Snapp_account.digest_vk vk))\n+ let verification_key =\n+ Option.map verification_key\n+ ~f:(With_hash.of_data ~hash_data:Snapp_account.digest_vk)\nin\nlet%map rollup_state =\nif\n@@ -288,12 +268,7 @@ module Accounts = struct\n->\nlet state = Snapp_state.V.to_list app_state in\nlet verification_key =\n- Option.map verification_key ~f:(fun vk ->\n- With_hash.data vk\n- |> Binable.to_string\n- ( module Pickles.Side_loaded.Verification_key.Stable\n- .Latest )\n- |> Base64.encode_exn ~alphabet:Base64.uri_safe_alphabet)\n+ Option.map verification_key ~f:With_hash.data\nin\nlet rollup_state = Pickles_types.Vector.to_list rollup_state in\nlet last_rollup_slot =\n",
        "date": "27.10.2021 12:06:35",
        "repo": "minaprotocol/mina",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor verification key handling in genesis ledger helper module"
    },
    {
        "msg": "replace untrue comment",
        "diff": "diff --git a/src/lib/crypto/kimchi_bindings/stubs/README.md b/src/lib/crypto/kimchi_bindings/stubs/README.md @@ -28,7 +28,12 @@ There are two ways of dealing with types:\nThe first option is the easiest one, unless there are some foreign types in there. (Because of Rust's [*orphan rule*](https://github.com/Ixrec/rust-orphan-rules)) you can't implement the ToValue and FromValue traits on foreign types.)\n-This means that you'll have to use the second option anytime you're dealing with foreign types, by wrapping them into a local type and using `custom!`.\n+You should use a custom type where OCaml doesn't need to access the internal\n+fields of the type (or if it is itself a primitive, such as a field element or\n+bigint); otherwise, you must create the desired OCaml structure/enum as a rust\n+structure and perform a conversion between this new type and the original\n+foreign rust type. In general, the choice of which to use should be governed by\n+what's required in OCaml, **not** by limitations in the rust language.\n### The ToValue and FromValue traits\n",
        "date": "16.12.2021 22:19:03",
        "repo": "minaprotocol/mina",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor handling of foreign types in kimchi_bindings/stubs README.md"
    },
    {
        "msg": "replace branch URLs with commit URLs",
        "diff": "diff --git a/src/lib/crypto/kimchi_bindings/stubs/README.md b/src/lib/crypto/kimchi_bindings/stubs/README.md @@ -37,7 +37,7 @@ what's required in OCaml, **not** by limitations in the rust language.\n### The ToValue and FromValue traits\n-In both methods, the [traits ToValue and FromValue](https://github.com/zshipko/ocaml-rs/blob/master/src/value.rs#L55:L73) are used:\n+In both methods, the [traits ToValue and FromValue](https://github.com/zshipko/ocaml-rs/blob/f300f2f382a694a6cc51dc14a9b3f849191580f0/src/value.rs#L55:L73) are used:\n```rust=\npub unsafe trait IntoValue {\n@@ -48,7 +48,7 @@ pub unsafe trait FromValue<'a> {\n}\n```\n-these traits are implemented for all primitive Rust types ([here](https://github.com/zshipko/ocaml-rs/blob/master/src/conv.rs)), and can be derived automatically via [derive macros](https://docs.rs/ocaml/0.22.0/ocaml/#derives). Don't forget that you can use [cargo expand](https://github.com/dtolnay/cargo-expand) to expand macros, which is really useful to understand what the ocaml-rs macros are doing.\n+these traits are implemented for all primitive Rust types ([here](https://github.com/zshipko/ocaml-rs/blob/f300f2f382a694a6cc51dc14a9b3f849191580f0/src/conv.rs)), and can be derived automatically via [derive macros](https://docs.rs/ocaml/0.22.0/ocaml/#derives). Don't forget that you can use [cargo expand](https://github.com/dtolnay/cargo-expand) to expand macros, which is really useful to understand what the ocaml-rs macros are doing.\n```\n$ cargo expand -- some_filename_without_rs > expanded.rs\n@@ -56,7 +56,7 @@ $ cargo expand -- some_filename_without_rs > expanded.rs\n### Custom types\n-The macro [custom!](https://github.com/zshipko/ocaml-rs/blob/master/src/custom.rs) allows you to quickly create custom types.\n+The macro [custom!](https://github.com/zshipko/ocaml-rs/blob/f300f2f382a694a6cc51dc14a9b3f849191580f0/src/custom.rs) allows you to quickly create custom types.\nValues of custom types are opaque to OCaml, used to store the data of some rust\nvalue on the OCaml heap. When this data may contain pointers to the rust heap,\n@@ -89,7 +89,7 @@ pub unsafe fn alloc_custom<T: crate::Custom>() -> Value {\n}\n```\n-and the data of your type (probably a pointer to some Rust memory) is copied into the OCaml's heap ([source](https://github.com/zshipko/ocaml-rs/blob/master/src/types.rs#L80)):\n+and the data of your type (probably a pointer to some Rust memory) is copied into the OCaml's heap ([source](https://github.com/zshipko/ocaml-rs/blob/f300f2f382a694a6cc51dc14a9b3f849191580f0/src/types.rs#L80)):\n```rust=\npub fn set(&mut self, x: T) {\n",
        "date": "16.12.2021 22:21:14",
        "repo": "minaprotocol/mina",
        "type": "replace",
        "chatgpt_zeroshot": "Update links to traits and macros in README.md"
    },
    {
        "msg": "replace TODO with doc-comment",
        "diff": "diff --git a/src/lib/crypto/kimchi_backend/common/plonk_constraint_system.ml b/src/lib/crypto/kimchi_backend/common/plonk_constraint_system.ml @@ -198,7 +198,10 @@ module Plonk_constraint = struct\n; b8 = f b8\n}\n- (* TODO: this seems to be a \"double check\" type of function? It just checks that the basic gate is equal to 0? what is eval_one? what is v and f? *)\n+ (** [eval (module F) get_variable gate] checks that [gate]'s polynomial is\n+ satisfied by the assignments given by [get_variable].\n+ Currently only implemented for the [Basic] gate.\n+ *)\nlet eval (type v f)\n(module F : Snarky_backendless.Field_intf.S with type t = f)\n(eval_one : v -> f) (t : (v, f) t) =\n",
        "date": "16.12.2021 23:33:25",
        "repo": "minaprotocol/mina",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor eval function to check polynomial satisfaction for Basic gate"
    },
    {
        "msg": "replace TODO with a warning",
        "diff": "diff --git a/src/lib/crypto/kimchi_backend/common/plonk_constraint_system.ml b/src/lib/crypto/kimchi_backend/common/plonk_constraint_system.ml @@ -200,7 +200,7 @@ module Plonk_constraint = struct\n(** [eval (module F) get_variable gate] checks that [gate]'s polynomial is\nsatisfied by the assignments given by [get_variable].\n- Currently only implemented for the [Basic] gate.\n+ Warning: currently only implemented for the [Basic] gate.\n*)\nlet eval (type v f)\n(module F : Snarky_backendless.Field_intf.S with type t = f)\n@@ -228,7 +228,6 @@ module Plonk_constraint = struct\nfalse )\nelse true\n| _ ->\n- (* TODO: this fails open for other gates than basic? *)\ntrue\nend\n",
        "date": "16.12.2021 23:34:44",
        "repo": "minaprotocol/mina",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor eval function to include a warning for only implemented Basic gate."
    },
    {
        "msg": "replace `Obj.magic` abuses with less-bad, more type-safe abuses",
        "diff": "diff --git a/src/lib/snarky_js_bindings/lib/snarky_js_bindings_lib.ml b/src/lib/snarky_js_bindings/lib/snarky_js_bindings_lib.ml @@ -1622,39 +1622,79 @@ let dummy_constraints =\n(Kimchi_backend_common.Scalar_challenge.create x)\n: Field.t * Field.t )\n-type ('a_var, 'a_value, 'a_weird) pickles_rule =\n- { identifier : string\n- ; prevs : 'a_weird list\n- ; main : 'a_var list -> 'a_var -> Boolean.var list\n- ; main_value : 'a_value list -> 'a_value -> bool list\n- }\n+type ('a_var, 'a_value) packed_pickles_rule =\n+ | Packed_inductive :\n+ ( 'prev_vars\n+ , 'prev_values\n+ , 'widths\n+ , 'heights\n+ , 'a_var\n+ , 'a_value )\n+ Pickles.Inductive_rule.t\n+ -> ('a_var, 'a_value) packed_pickles_rule\n+\n+type ('a_var, 'a_value) packed_pickles_rules =\n+ | Packed_inductive_list :\n+ ( 'prev_varss\n+ , 'prev_valuess\n+ , 'widthss\n+ , 'heightss\n+ , 'a_var\n+ , 'a_value )\n+ Pickles_types.Hlist.H4_2.T(Pickles.Inductive_rule).t\n+ -> ('a_var, 'a_value) packed_pickles_rules\n+\n+let rec combine_packed_rules :\n+ type a_var a_value.\n+ (a_var, a_value) packed_pickles_rule list\n+ -> (a_var, a_value) packed_pickles_rules = function\n+ | [] ->\n+ Packed_inductive_list []\n+ | Packed_inductive hd :: tl ->\n+ let (Packed_inductive_list tl) = combine_packed_rules tl in\n+ Packed_inductive_list (hd :: tl)\n+\n+let rec split_packed_rules :\n+ type a_var a_value.\n+ (a_var, a_value) packed_pickles_rules\n+ -> (a_var, a_value) packed_pickles_rule list = function\n+ | Packed_inductive_list [] ->\n+ []\n+ | Packed_inductive_list (hd :: tl) ->\n+ Packed_inductive hd :: split_packed_rules (Packed_inductive_list tl)\ntype pickles_rule_js = Js.js_string Js.t * (zkapp_statement_js -> unit)\nlet create_pickles_rule ((identifier, main) : pickles_rule_js) =\n+ Packed_inductive\n{ identifier = Js.to_string identifier\n; prevs = []\n; main =\n- (fun _ statement ->\n+ (fun statement ->\ndummy_constraints () ;\nmain (Zkapp_statement.to_js statement) ;\n[] )\n- ; main_value = (fun _ _ -> [])\n}\nlet dummy_rule self =\n+ Packed_inductive\n{ identifier = \"dummy\"\n; prevs = [ self; self ]\n- ; main_value = (fun _ _ -> [ true; true ])\n; main =\n- (fun _ _ ->\n+ (fun _ ->\ndummy_constraints () ;\n(* unsatisfiable *)\nlet x =\nImpl.exists Field.typ ~compute:(fun () -> Field.Constant.zero)\nin\nField.(Assert.equal x (x + one)) ;\n- Boolean.[ true_; true_ ] )\n+ let public_input =\n+ Impl.exists zkapp_statement_typ ~compute:(fun () ->\n+ assert false )\n+ in\n+ [ { public_input; proof_must_verify = Boolean.true_ }\n+ ; { public_input; proof_must_verify = Boolean.true_ }\n+ ] )\n}\nlet other_verification_key_constr :\n@@ -1697,13 +1737,55 @@ let nat_module (i : int) : (module Pickles_types.Nat.Intf) =\nlet pickles_compile (choices : pickles_rule_js Js.js_array Js.t) =\nlet choices = choices |> Js.to_array |> Array.to_list in\nlet branches = List.length choices + 1 in\n+ let module Types = struct\n+ type prev_varss\n+\n+ type prev_valuess\n+\n+ type widthss\n+\n+ type heightss\n+ end in\nlet choices ~self =\n+ let (Packed_inductive_list l) =\nList.map choices ~f:create_pickles_rule @ [ dummy_rule self ]\n+ |> combine_packed_rules\n+ in\n+ let convert_unsafe :\n+ type prev_varss prev_valuess widthss heightss.\n+ ( prev_varss\n+ , prev_valuess\n+ , widthss\n+ , heightss\n+ , Zkapp_statement.t\n+ , Zkapp_statement.Constant.t )\n+ Pickles_types.Hlist.H4_2.T(Pickles.Inductive_rule).t\n+ -> ( Types.prev_varss\n+ , Types.prev_valuess\n+ , Types.widthss\n+ , Types.heightss\n+ , Zkapp_statement.t\n+ , Zkapp_statement.Constant.t )\n+ Pickles_types.Hlist.H4_2.T(Pickles.Inductive_rule).t =\n+ fun l ->\n+ (* Be very careful with this value. *)\n+ let (T, T, T, T)\n+ : (prev_varss, Types.prev_varss) Core_kernel.Type_equal.t\n+ * (prev_valuess, Types.prev_valuess) Core_kernel.Type_equal.t\n+ * (widthss, Types.widthss) Core_kernel.Type_equal.t\n+ * (heightss, Types.heightss) Core_kernel.Type_equal.t =\n+ ( Obj.magic Core_kernel.Type_equal.T\n+ , Obj.magic Core_kernel.Type_equal.T\n+ , Obj.magic Core_kernel.Type_equal.T\n+ , Obj.magic Core_kernel.Type_equal.T )\n+ in\n+ l\n+ in\n+ convert_unsafe l\nin\nlet (module Branches) = nat_module branches in\n- (* TODO get rid of Obj.magic for choices *)\nlet tag, _cache, p, provers =\n- Pickles.compile_promise ~choices:(Obj.magic choices)\n+ Pickles.compile_promise ~choices\n(module Zkapp_statement)\n(module Zkapp_statement.Constant)\n~typ:zkapp_statement_typ\n@@ -1728,8 +1810,7 @@ let pickles_compile (choices : pickles_rule_js Js.js_array Js.t) =\nlet module Proof = (val p) in\nlet to_js_prover prover =\nlet prove (statement_js : zkapp_statement_js) =\n- (* TODO: get rid of Obj.magic, this should be an empty \"H3.T\" *)\n- let prevs = Obj.magic [] in\n+ let prevs: (_, _, _) Statement_with_proof.t = Obj.magic [] in\nlet statement = Zkapp_statement.(statement_js |> of_js |> to_constant) in\nprover ?handler:None prevs statement |> Promise_js_helpers.to_js\nin\n",
        "date": "24.05.2022 21:14:12",
        "repo": "minaprotocol/mina",
        "type": "replace",
        "chatgpt_zeroshot": "Restructure pickles_rule type and add combine/split functions"
    },
    {
        "msg": "replace deprecated jsoo symbol",
        "diff": "diff --git a/src/app/client_sdk/js_util.ml b/src/app/client_sdk/js_util.ml @@ -6,7 +6,8 @@ open Mina_base\nmodule Global_slot = Mina_numbers.Global_slot\nmodule Memo = Signed_command_memo\n-let raise_js_error s = Js.raise_js_error (new%js Js.error_constr (Js.string s))\n+let raise_js_error s =\n+ Js_error.(raise_ @@ of_error (new%js Js.error_constr (Js.string s)))\ntype string_js = Js.js_string Js.t\n",
        "date": "31.05.2022 19:36:41",
        "repo": "minaprotocol/mina",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor raise_js_error function to use Js_error module"
    },
    {
        "msg": "replace H4.Map with explicit function",
        "diff": "diff --git a/src/lib/pickles/pickles.ml b/src/lib/pickles/pickles.ml @@ -520,12 +520,13 @@ struct\nlet step_data =\nlet i = ref 0 in\nTimer.clock __LOC__ ;\n- let module M =\n- H4.Map (IR) (Branch_data)\n- (struct\n- let f :\n- type a b c d. (a, b, c, d) IR.t -> (a, b, c, d) Branch_data.t =\n- fun rule ->\n+ let rec f :\n+ type a b c d.\n+ (a, b, c, d) H4.T(IR).t -> (a, b, c, d) H4.T(Branch_data).t = function\n+ | [] ->\n+ []\n+ | rule :: rules ->\n+ let first =\nTimer.clock __LOC__ ;\nlet res =\nCommon.time \"make step data\" (fun () ->\n@@ -536,9 +537,10 @@ struct\n~wrap_domains ~proofs_verifieds )\nin\nTimer.clock __LOC__ ; incr i ; res\n- end)\nin\n- M.f choices\n+ first :: f rules\n+ in\n+ f choices\nin\nTimer.clock __LOC__ ;\nlet step_domains =\n",
        "date": "01.08.2022 15:56:46",
        "repo": "minaprotocol/mina",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor step_data function in pickles.ml to use recursive pattern matching for better readability."
    },
    {
        "msg": "replace placeholder value with a failwith",
        "diff": "diff --git a/src/lib/pickles/pseudo/pseudo.ml b/src/lib/pickles/pseudo/pseudo.ml @@ -64,7 +64,7 @@ module Make (Impl : Snarky_backendless.Snark_intf.Run) = struct\nlet all_shifts = Vector.map log2s ~f:(fun d -> shifts ~log2_size:d) in\nmatch all_shifts with\n| [] ->\n- Array.init num_shifts ~f:(fun _ -> Field.zero)\n+ failwith \"Pseudo.Domain.shifts: no domains were given\"\n| shifts :: other_shiftss ->\n(* Runtime check that the shifts across all domains are consistent.\nThe optimisation below will not work if this is not true; if the\n",
        "date": "08.08.2022 12:35:26",
        "repo": "minaprotocol/mina",
        "type": "replace",
        "chatgpt_zeroshot": "Add error handling for when no domains are given in Pseudo.Domain.shifts"
    },
    {
        "msg": "replace inline legality check with method call",
        "diff": "diff --git a/serverjs/cubefn.js b/serverjs/cubefn.js @@ -106,7 +106,7 @@ function setCubeType(cube, carddb) {\nlet peasant = false;\nlet type = FORMATS.length - 1;\nfor (const card of cube.cards) {\n- if (pauper && !['legal', 'banned'].includes(carddb.cardFromId(card.cardID).legalities.Pauper)) {\n+ if (pauper && !cardIsLegal(carddb.cardFromId(card.cardID), 'Pauper')) {\npauper = false;\npeasant = true;\n}\n",
        "date": "20.10.2020 18:39:57",
        "repo": "dekkerglen/cubecobra",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor cube type setting logic to use cardIsLegal function"
    },
    {
        "msg": "replace dead bower usage with yarn",
        "diff": "diff --git a/README.md b/README.md @@ -49,10 +49,10 @@ To get started, check out:\nUse [Releases page](https://github.com/wenzhixin/bootstrap-table/releases) or [the source](https://github.com/wenzhixin/bootstrap-table/archive/master.zip).\n-### Bower\n+### Yarn\n```\n-bower install bootstrap-table\n+yarn add bootstrap-table\n```\n### Npm\n",
        "date": "11.11.2021 21:51:56",
        "repo": "wenzhixin/bootstrap-table",
        "type": "replace",
        "chatgpt_zeroshot": "Switched from using Bower to Yarn for installing bootstrap-table."
    },
    {
        "msg": "replace deprecated VSCode launch.json variable Replace deprecated ${workspaceRoot} variable with ${workspaceFolder} in VSCode launch.json. See",
        "diff": "diff --git a/docusaurus/docs/setting-up-your-editor.md b/docusaurus/docs/setting-up-your-editor.md @@ -55,7 +55,7 @@ Then add the block below to your `launch.json` file and put it inside the `.vsco\n\"type\": \"chrome\",\n\"request\": \"launch\",\n\"url\": \"http://localhost:3000\",\n- \"webRoot\": \"${workspaceRoot}/src\",\n+ \"webRoot\": \"${workspaceFolder}/src\",\n\"sourceMapPathOverrides\": {\n\"webpack:///src/*\": \"${webRoot}/*\"\n}\n",
        "date": "02.01.2019 00:02:48",
        "repo": "react-workspaces/create-react-app",
        "type": "replace",
        "chatgpt_zeroshot": "Update webRoot path in launch.json to use workspaceFolder instead of workspaceRoot"
    },
    {
        "msg": "replace deprecated SFC with FunctionComponent",
        "diff": "diff --git a/packages/react-scripts/lib/react-app.d.ts b/packages/react-scripts/lib/react-app.d.ts @@ -42,7 +42,7 @@ declare module '*.webp' {\ndeclare module '*.svg' {\nimport * as React from 'react';\n- export const ReactComponent: React.SFC<React.SVGProps<SVGSVGElement>>;\n+ export const ReactComponent: React.FunctionComponent<React.SVGProps<SVGSVGElement>>;\nconst src: string;\nexport default src;\n",
        "date": "05.04.2019 08:30:10",
        "repo": "react-workspaces/create-react-app",
        "type": "replace",
        "chatgpt_zeroshot": "Update ReactComponent type to use FunctionComponent in react-app.d.ts"
    },
    {
        "msg": "replace PING with TIMEOUT Otherwise earthing's nosy firewall bitches about it.",
        "diff": "diff --git a/updater.bat b/updater.bat @@ -39,7 +39,7 @@ IF DEFINED _updateb (\nIF NOT \"!_myname:~0,9!\"==\"[updated]\" (\nECHO Checking updater version...\nECHO.\n- DEL /F \"[updated]!_myname!.bat\" 2>nul\n+ IF EXIST \"[updated]!_myname!.bat\" ( DEL /F \"[updated]!_myname!.bat\" )\nREM Uncomment the next line and comment the powershell call for testing.\nREM COPY /B /V /Y \"!_myname!.bat\" \"[updated]!_myname!.bat\"\n(\n@@ -51,7 +51,7 @@ IF DEFINED _updateb (\n) ELSE (\nECHO Failed. Make sure PowerShell is allowed internet access.\nECHO.\n- PING -n 301 127.0.0.1>nul\n+ TIMEOUT 300\nEXIT /B\n)\n) ELSE (\n@@ -63,7 +63,7 @@ IF DEFINED _updateb (\n) ELSE (\nECHO.\nECHO The [updated] label is reserved. Do not run an [updated] script directly, or rename it to something else before you run it.\n- PING -n 301 127.0.0.1>nul\n+ TIMEOUT 300\nEXIT /B\n)\n)\n",
        "date": "29.11.2017 15:49:21",
        "repo": "arkenfox/user.js",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor updater.bat to use TIMEOUT command instead of PING for delay."
    },
    {
        "msg": "replace -multibackups with -singlebackup also minor changes to the merge function.",
        "diff": "diff --git a/updater.bat b/updater.bat @@ -16,7 +16,7 @@ IF /I \"%~1\"==\"-logp\" (SET _log=1 & SET _logp=1)\nIF /I \"%~1\"==\"-multioverrides\" (SET _multi=1)\nIF /I \"%~1\"==\"-merge\" (SET _merge=1)\nIF /I \"%~1\"==\"-updatebatch\" (SET _updateb=1)\n-IF /I \"%~1\"==\"-multibackups\" (SET _multibackups=1)\n+IF /I \"%~1\"==\"-singlebackup\" (SET _singlebackup=1)\nSHIFT\nGOTO parse\n:endparse\n@@ -158,10 +158,10 @@ IF EXIST user.js.new (\n)\nIF \"!_changed!\"==\"true\" (\nCALL :message \"Backing up...\"\n- IF DEFINED _multibackups (\n- MOVE /Y user.js \"user-backup-!date:/=-!_!time::=.!.js\" >nul\n- ) ELSE (\n+ IF DEFINED _singlebackup (\nMOVE /Y user.js user.js.bak >nul\n+ ) ELSE (\n+ MOVE /Y user.js \"user-backup-!date:/=-!_!time::=.!.js\" >nul\n)\nREN user.js.new user.js\nCALL :message \"Update complete.\"\n@@ -196,18 +196,14 @@ REM ############ Merge function ############\n:merge\nSETLOCAL DisableDelayedExpansion\n(\n- FOR /F tokens^=2^,^*^ delims^=^'^\" %%G IN ('FINDSTR /B /R /C:\"user_pref.*\\).*;\" \"%~1\"') DO (\n- IF NOT \"%%G\"==\"\" (\n- IF NOT \"%%H\"==\"\" (SET \"%%G=%%H\")\n- )\n- )\n+ FOR /F tokens^=2^,^*^ delims^=^'^\" %%G IN ('FINDSTR /B /R /C:\"user_pref.*\\)[ ]*;\" \"%~1\"') DO (IF NOT \"%%H\"==\"\" (SET \"%%G=%%H\"))\nFOR /F \"tokens=1,* delims=:\" %%I IN ('FINDSTR /N \"^\" \"%~1\"') DO (\nSET \"_temp=%%J\"\nSETLOCAL EnableDelayedExpansion\n- IF \"!_temp:)=!\"==\"!_temp!\" (\n+ IF NOT \"!_temp:~0,9!\"==\"user_pref\" (\nENDLOCAL & ECHO:%%J\n) ELSE (\n- IF NOT \"!_temp:~0,9!\"==\"user_pref\" (\n+ IF \"!_temp:;=!\"==\"!_temp!\" (\nENDLOCAL & ECHO:%%J\n) ELSE (\nENDLOCAL\n",
        "date": "17.01.2018 12:30:02",
        "repo": "arkenfox/user.js",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor updater.bat to add support for single backups and improve merge function."
    },
    {
        "msg": "replace white spaces in url",
        "diff": "diff --git a/pages/code_schools.js b/pages/code_schools.js @@ -57,7 +57,7 @@ export default class CodeSchools extends React.Component {\nisFullTime={school.full_time}\nlocations={school.locations}\nlogoSource={`${s3}codeSchoolLogos/${school.name\n- .replace(/ /g, '_')\n+ .replace(/[ \\u00A0]/g, '_')\n.toLowerCase()}.jpg`}\nname={school.name}\nwebsite={school.url}\n",
        "date": "23.11.2018 21:28:16",
        "repo": "operationcode/front-end",
        "type": "replace",
        "chatgpt_zeroshot": "Fix logoSource generation to replace all whitespace characters with underscores."
    },
    {
        "msg": "replace <Section> with <Content> in /history",
        "diff": "diff --git a/pages/history.js b/pages/history.js import Head from 'components/head';\nimport { s3 } from 'common/constants/urls';\n-import Section from 'components/_common_/Section/Section';\n+import Content from 'components/Content/Content';\nimport HeroBanner from 'components/HeroBanner/HeroBanner';\nimport Timeline from 'components/Timeline/Timeline';\nimport styles from './styles/history.css';\n@@ -24,9 +24,7 @@ export default function() {\n</>\n</HeroBanner>\n- <Section theme=\"white\" hasHeadingLines={false}>\n- <Timeline />\n- </Section>\n+ <Content theme=\"white\" columns={[<Timeline />]} />\n</>\n);\n}\n",
        "date": "23.02.2019 15:33:45",
        "repo": "operationcode/front-end",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor history page to use Content component instead of Section component for better structure."
    },
    {
        "msg": "replace <Section> with <Content> on /leadership_circle",
        "diff": "diff --git a/pages/styles/leadership_circle.css b/pages/styles/leadership_circle.css -.center {\n- align-self: center;\n+.linkButtonContainer {\n+ text-align: center;\n+ margin-top: 2rem;\n}\n",
        "date": "23.02.2019 16:08:18",
        "repo": "operationcode/front-end",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor alignment in leadership_circle.css to use linkButtonContainer class"
    },
    {
        "msg": "replace missing picture",
        "diff": "diff --git a/jade/page-contents/media_content.html b/jade/page-contents/media_content.html <h4>Captions</h4>\n<p>It is very easy to add a short caption to your photo. Just add the caption as a <code class=\"language-markup\">data-caption</code> attribute.</p>\n- <img class=\"materialboxed\" data-caption=\"A picture of some deer and tons of trees\" width=\"250\" src=\"http://th01.deviantart.net/fs70/PRE/i/2013/126/1/e/nature_portrait_by_pw_fotografie-d63tx0n.jpg\">\n+ <img class=\"materialboxed\" data-caption=\"A picture of a way with a group of trees in a park\" width=\"250\" src=\"http://lorempixel.com/800/400/nature/4\">\n<pre><code class=\"language-markup\">\n- &lt;img class=\"materialboxed\" data-caption=\"A picture of some deer and tons of trees\" width=\"250\" src=\"http://th01.deviantart.net/fs70/PRE/i/2013/126/1/e/nature_portrait_by_pw_fotografie-d63tx0n.jpg\">\n+ &lt;img class=\"materialboxed\" data-caption=\"A picture of a way with a group of trees in a park\" width=\"250\" src=\"http://lorempixel.com/800/400/nature/4\">\n</code></pre>\n</div>\n",
        "date": "02.04.2017 12:45:36",
        "repo": "dogfalo/materialize",
        "type": "replace",
        "chatgpt_zeroshot": "Update caption for image in media content page"
    },
    {
        "msg": "replace bucket file instead of appending to it.",
        "diff": "diff --git a/modules/backup/docker/script/init_container.sh b/modules/backup/docker/script/init_container.sh @@ -10,7 +10,7 @@ printf '%s\\n' \\\nprintf '%s\\n' \\\n\"$S3_BACKUP_BUCKET\" \\\n- >> ~/bucket\n+ > ~/bucket\nprintf '%s\\n' \\\n\"$BACKUP_CRON_EXP root flock -xn ~/backup.lck -c /script/backup.sh\" \\\n",
        "date": "24.04.2017 09:16:17",
        "repo": "openforis/sepal",
        "type": "replace",
        "chatgpt_zeroshot": "Fix redirection in init_container.sh script"
    },
    {
        "msg": "replace action builder method delValueByKey with delValueByTemplate",
        "diff": "diff --git a/modules/gui/frontend/src/app/home/body/browse/browse.js b/modules/gui/frontend/src/app/home/body/browse/browse.js @@ -87,7 +87,7 @@ const removeFile$ = (path) => {\nconst directory = Path.dirname(path)\nconst fileName = Path.basename(path)\nreturn actionBuilder('FILE_REMOVED', {directory, fileName})\n- .delValueByKey(['files', 'loaded', directory, 'files'], 'name', fileName)\n+ .delValueByTemplate(['files', 'loaded', directory, 'files'], {name: fileName})\n.build()\n})\n}\n@@ -97,7 +97,7 @@ const removeDirectory$ = (path) => {\nconst directory = Path.dirname(path)\nconst fileName = Path.basename(path)\nreturn actionBuilder('DIRECTORY_REMOVED', path)\n- .delValueByKey(['files', 'loaded', directory, 'files'], 'name', fileName)\n+ .delValueByTemplate(['files', 'loaded', directory, 'files'], {name: fileName})\n.del(['files', 'loaded', path])\n.build()\n})\n",
        "date": "27.09.2018 11:28:25",
        "repo": "openforis/sepal",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor file and directory removal logic to use template matching for deletion."
    },
    {
        "msg": "replace browser location to '/process' when '/'.",
        "diff": "diff --git a/modules/gui/frontend/src/app/home/body/body.js b/modules/gui/frontend/src/app/home/body/body.js @@ -2,7 +2,7 @@ import {CenteredProgress} from 'widget/progress'\nimport {Select} from 'widget/selectable'\nimport {connect} from 'store'\nimport {initGoogleMapsApi$} from '../map/map'\n-import {isPathInLocation, location} from 'route'\n+import {isPathInLocation, location, history} from 'route'\nimport {loadApps$, requestedApps, runApp$} from 'apps'\nimport {msg} from 'translate'\nimport Account from './account/account'\n@@ -33,6 +33,11 @@ class Body extends React.Component {\n.dispatch()\n}\n+ componentDidUpdate() {\n+ if (this.props.location.pathname === '/')\n+ history().replace('/process').dispatch()\n+ }\n+\nUNSAFE_componentWillReceiveProps({action, location, requestedApps}) {\nif (action('LOAD_APPS').dispatched && isPathInLocation('/app/sandbox')) {\nconst path = location.pathname.replace(/^\\/app/, '')\n",
        "date": "03.10.2018 10:26:51",
        "repo": "openforis/sepal",
        "type": "replace",
        "chatgpt_zeroshot": "Add history object to route import and redirect to '/process' on component update."
    },
    {
        "msg": "replace 'Surface reflectance' with 'SR'.",
        "diff": "diff --git a/modules/gui/frontend/src/locale/en/translations.json b/modules/gui/frontend/src/locale/en/translations.json \"corrections\": {\n\"label\": \"Corrections\",\n\"surfaceReflectance\": {\n- \"label\": \"Surface reflectance\",\n+ \"label\": \"SR\",\n\"tooltip\": \"Use scenes atmospherically corrected surface reflectance.\"\n},\n\"brdf\": {\n",
        "date": "29.11.2018 13:38:58",
        "repo": "openforis/sepal",
        "type": "replace",
        "chatgpt_zeroshot": "Shorten label for surface reflectance in translations.json"
    },
    {
        "msg": "replace missing format.GB function with format.fileSize.",
        "diff": "diff --git a/modules/gui/frontend/src/app/home/body/users/users.js b/modules/gui/frontend/src/app/home/body/users/users.js @@ -403,8 +403,8 @@ class User extends React.Component {\n<div className={styles.number}>{format.dollars(monthlyInstanceSpending)}</div>\n<div className={styles.number}>{format.dollars(monthlyStorageBudget, 0)}</div>\n<div className={styles.number}>{format.dollars(monthlyStorageSpending)}</div>\n- <div className={styles.number}>{format.GB(storageQuota, 0)}</div>\n- <div className={styles.number}>{format.GB(storageUsed)}</div>\n+ <div className={styles.number}>{format.fileSize(storageQuota, 0)}</div>\n+ <div className={styles.number}>{format.fileSize(storageUsed)}</div>\n</div>\n)\n}\n",
        "date": "13.12.2018 10:23:00",
        "repo": "openforis/sepal",
        "type": "replace",
        "chatgpt_zeroshot": "Update storage quota and usage display format in User component"
    },
    {
        "msg": "replace tabs bar wrapping with horizontal scrolling.",
        "diff": "diff --git a/modules/gui/frontend/src/widget/tabs.module.css b/modules/gui/frontend/src/widget/tabs.module.css .container {\n+ position: relative;\npadding: 0;\npointer-events: none;\n}\npointer-events: all;\n}\n+/* .tabBar:before {\n+ content: '';\n+ position: absolute;\n+ height: 3rem;\n+ width: 5rem;\n+ right: 5.3rem;\n+ z-index: 3;\n+ background: red;\n+ mask-image: linear-gradient(to right, rgba(0, 0, 0, 1), transparent);\n+} */\n+\n.tabs {\n+ position: relative;\npadding: 0 0 0 1rem;\ndisplay: flex;\n- flex-wrap: wrap;\nwidth: 100%;\n+ overflow-x: auto;\n+ margin-right: .5rem;\n}\n.newTab {\n.tab {\nposition: relative;\ndisplay: flex;\n+ flex-grow: 1;\nbackground-color: #2B2B29;\nborder-bottom: 3px solid var(--tab-default-border-color);\nborder-top-right-radius: 0.5rem;\n",
        "date": "20.12.2018 14:09:00",
        "repo": "openforis/sepal",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor tab styling and positioning in tabs module"
    },
    {
        "msg": "replace Slider 'float' attribute with 'decimals' (default 0).",
        "diff": "diff --git a/modules/gui/frontend/src/widget/slider.js b/modules/gui/frontend/src/widget/slider.js @@ -69,14 +69,14 @@ class SliderContainer extends React.Component {\n}\nrenderDynamics() {\n- const {input, width, range, float, ticks, snap, minValue, maxValue} = this.props\n+ const {input, width, range, decimals, ticks, snap, minValue, maxValue} = this.props\nreturn (\n<SliderDynamics\ninput={input}\nminValue={minValue}\nmaxValue={maxValue}\nwidth={width}\n- float={float}\n+ decimals={decimals}\nticks={ticks}\nsnap={snap}\nrange={range}\n@@ -106,6 +106,7 @@ class SliderContainer extends React.Component {\nSliderContainer.propTypes = {\ninput: PropTypes.object.isRequired,\n+ decimals: PropTypes.number,\ndenormalize: PropTypes.func,\ndisabled: PropTypes.any,\ninfo: PropTypes.oneOfType([\n@@ -115,7 +116,6 @@ SliderContainer.propTypes = {\nmaxValue: PropTypes.number,\nminValue: PropTypes.number,\nnormalize: PropTypes.func,\n- float: PropTypes.bool,\nsnap: PropTypes.bool,\nticks: PropTypes.oneOfType([\nPropTypes.number,\n@@ -349,11 +349,9 @@ class SliderDynamics extends React.Component {\nif (position !== this.state.position) {\nthis.setState(prevState => ({...prevState, position}))\nconst value = this.toValue(this.snapPosition(position))\n- this.props.input.set(\n- this.props.float\n- ? value\n- : Math.round(value)\n- )\n+ const factor = Math.pow(10, this.props.decimals)\n+ const roundedValue = Math.round(value * factor) / factor\n+ this.props.input.set(roundedValue)\n}\n}\n}\n@@ -391,7 +389,7 @@ SliderDynamics.propTypes = {\nmaxValue: PropTypes.number.isRequired,\nminValue: PropTypes.number.isRequired,\nnormalize: PropTypes.func.isRequired,\n- float: PropTypes.bool,\n+ decimals: PropTypes.number,\nsnap: PropTypes.bool,\nticks: PropTypes.array,\nwidth: PropTypes.number\n@@ -462,14 +460,14 @@ export default class Slider extends React.Component {\n}\nrenderContainer() {\n- const {input, logScale, float = false, snap, range = 'left', info, disabled} = this.props\n+ const {input, logScale, decimals = 0, snap, range = 'left', info, disabled} = this.props\nconst {ticks, minValue, maxValue, width} = this.state\nreturn (\n<SliderContainer\ninput={input}\nminValue={minValue}\nmaxValue={maxValue}\n- float={float}\n+ decimals={decimals}\nticks={ticks}\nsnap={snap}\nrange={range}\n@@ -513,6 +511,7 @@ export default class Slider extends React.Component {\nSlider.propTypes = {\ninput: PropTypes.object.isRequired,\n+ decimals: PropTypes.number,\ndisabled: PropTypes.any,\ninfo: PropTypes.oneOfType([\nPropTypes.string,\n@@ -523,7 +522,6 @@ Slider.propTypes = {\nmaxValue: PropTypes.number,\nminValue: PropTypes.number,\nrange: PropTypes.oneOf(['none', 'left', 'right']),\n- float: PropTypes.any,\nsnap: PropTypes.any,\nticks: PropTypes.oneOfType([\n// PropTypes.number,\n",
        "date": "15.01.2019 11:43:50",
        "repo": "openforis/sepal",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor Slider component to use 'decimals' instead of 'float' prop."
    },
    {
        "msg": "replace unit with suffix in dollarsPerHour and dollarsPerMonth.",
        "diff": "diff --git a/modules/gui/frontend/src/format.js b/modules/gui/frontend/src/format.js @@ -15,8 +15,8 @@ const decimal = (value, decimals = 2) =>\nconst units = (value, precisionDigits = 3) => number({value, precisionDigits})\nconst unitsPerHour = (value, precisionDigits = 3) => number({value, precisionDigits, suffix: '/h'})\nconst dollars = (value, {precisionDigits = 3, prefix = '$'} = {}) => number({value, precisionDigits, prefix, minScale: ''})\n-const dollarsPerHour = (value, {precisionDigits = 3, prefix = '$'} = {}) => number({value, precisionDigits, minScale: '', prefix, unit: '/h'})\n-const dollarsPerMonth = (value, {precisionDigits = 3, prefix = '$'} = {}) => number({value, precisionDigits, minScale: '', prefix, unit: '/mon'})\n+const dollarsPerHour = (value, {precisionDigits = 3, prefix = '$'} = {}) => number({value, precisionDigits, minScale: '', prefix, suffix: '/h'})\n+const dollarsPerMonth = (value, {precisionDigits = 3, prefix = '$'} = {}) => number({value, precisionDigits, minScale: '', prefix, suffix: '/mon'})\nconst hours = (value, decimals = 2) =>\n<NumberFormat\n",
        "date": "26.02.2019 11:15:10",
        "repo": "openforis/sepal",
        "type": "replace",
        "chatgpt_zeroshot": "Fix suffix for dollarsPerHour and dollarsPerMonth functions"
    },
    {
        "msg": "replace asyncActionBuilder with stream in SceneAreas.",
        "diff": "diff --git a/modules/gui/frontend/src/app/home/body/process/mosaic/sceneAreas.js b/modules/gui/frontend/src/app/home/body/process/mosaic/sceneAreas.js @@ -40,10 +40,10 @@ class SceneAreas extends React.Component {\n}\nrender() {\n- const {sceneAreasShown, action} = this.props\n+ const {sceneAreasShown, stream} = this.props\nreturn (\n<React.Fragment>\n- {action('LOAD_SCENE_AREAS').dispatched\n+ {stream('LOAD_SCENE_AREAS') === 'COMPLETED'\n? sceneAreasShown && this.state.show ? this.renderSceneAreas() : null\n: <MapStatus message={msg('process.mosaic.sceneAreas.loading')}/>}\n</React.Fragment>\n@@ -79,14 +79,14 @@ class SceneAreas extends React.Component {\nloadSceneAreas(aoi, source) {\nthis.loadSceneArea$.next()\nthis.recipeActions.setSceneAreas(null).dispatch()\n- this.props.asyncActionBuilder('LOAD_SCENE_AREAS',\n+ this.props.stream('LOAD_SCENE_AREAS',\napi.gee.sceneAreas$({aoi, source}).pipe(\n- map(sceneAreas =>\n- this.recipeActions.setSceneAreas(sceneAreas)\n+ map(sceneAreas => {\n+ this.recipeActions.setSceneAreas(sceneAreas).dispatch()\n+ }\n),\ntakeUntil(this.loadSceneArea$)\n))\n- .dispatch()\n}\n}\n",
        "date": "06.03.2019 15:28:41",
        "repo": "openforis/sepal",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor sceneAreas.js to use stream instead of action for loading scene areas."
    },
    {
        "msg": "replace Combo onBlur with onCancel. Added searchable text in options.",
        "diff": "diff --git a/modules/gui/frontend/src/app/home/body/process/radarMosaic/bandSelection.js b/modules/gui/frontend/src/app/home/body/process/radarMosaic/bandSelection.js @@ -32,6 +32,7 @@ class BandSelection extends React.Component {\n'VH',\n'VV/VH'\n],\n+ searchableText: 'VV VH VV_VH VV/VH',\ntimeScan: false,\npointInTime: true\n}, {\n@@ -41,6 +42,7 @@ class BandSelection extends React.Component {\n<span>VH<sub>med</sub></span>,\n<span>VV<sub>sd</sub></span>\n],\n+ searchableText: 'VV_median VH_median VV_stdDev median stdDev sd',\ntimeScan: true,\npointInTime: false\n}, {\n@@ -50,6 +52,7 @@ class BandSelection extends React.Component {\n<span>VH<sub>med</sub></span>,\n<span>VV<sub>med</sub>/VH<sub>med</sub></span>\n],\n+ searchableText: 'VV_median VH_median VV_median_VH_median median',\ntimeScan: true,\npointInTime: false\n}, {\n@@ -59,6 +62,7 @@ class BandSelection extends React.Component {\n<span>VV<sub>min</sub></span>,\n<span>VV<sub>sd</sub></span>\n],\n+ searchableText: 'VV_max VV_min VV_stdDev max min stdDev sd',\ntimeScan: true,\npointInTime: false\n}, {\n@@ -68,6 +72,7 @@ class BandSelection extends React.Component {\n<span>VH<sub>min</sub></span>,\n<span>VV<sub>sd</sub></span>\n],\n+ searchableText: 'VV_min VH_min VV_stdDev min stdDev sd',\ntimeScan: true,\npointInTime: false\n}]\n@@ -106,7 +111,8 @@ class BandSelection extends React.Component {\nrecipeActions={this.recipeActions}\nselection={selection}\noptions={options}\n- onChange={() => this.setSelectorShown(false)}/>\n+ onChange={() => this.setSelectorShown(false)}\n+ onCancel={() => this.setSelectorShown(false)}/>\n: <SelectedBands\nselectedOption={this.optionByValue[selection.value]}\nonClick={() => this.setSelectorShown(true)}/>\n@@ -141,14 +147,12 @@ class BandSelection extends React.Component {\nreturn bandOptions\n}\n- setSelectorShown(shown) {\n- this.setState(prevState =>\n- ({...prevState, showSelector: shown})\n- )\n+ setSelectorShown(showSelector) {\n+ this.setState({showSelector})\n}\n}\n-const BandSelector = ({recipeActions, selection, options, onChange}) =>\n+const BandSelector = ({recipeActions, selection, options, onChange, onCancel}) =>\n<form>\n<Combo\ninput={selection}\n@@ -159,11 +163,11 @@ const BandSelector = ({recipeActions, selection, options, onChange}) =>\nkeepOpen\ninputClassName={styles.comboInput}\noptionsClassName={styles.comboOptions}\n- onBlur={onChange}\nonChange={option => {\n- recipeActions.setBands(option ? option.value : null).dispatch()\n+ recipeActions.setBands(option.value).dispatch()\nonChange()\n- }}/>\n+ }}\n+ onCancel={onCancel}/>\n</form>\nconst SelectedBands = ({selectedOption, onClick}) => {\n",
        "date": "17.04.2019 18:01:44",
        "repo": "openforis/sepal",
        "type": "replace",
        "chatgpt_zeroshot": "Add searchable text and cancel functionality to BandSelector component"
    },
    {
        "msg": "replace DataePicker overscroll with unselectable years before and after.",
        "diff": "diff --git a/modules/gui/frontend/src/widget/datePicker.js b/modules/gui/frontend/src/widget/datePicker.js @@ -147,7 +147,11 @@ class _DatePickerPanel extends React.Component {\nconst startYear = startDate.year()\nconst endYear = endDate.year()\nconst selectedYear = date.year()\n- const options = _.range(startYear, endYear + 1).map(year => ({label: year, value: year}))\n+ const options = _.concat(\n+ _.range(startYear - 5, startYear).map(year => ({label: year})),\n+ _.range(startYear, endYear + 1).map(year => ({label: year, value: year})),\n+ _.range(endYear + 1, endYear + 6).map(year => ({label: year}))\n+ )\nconst selectedOption = _.find(options, ({value}) => value === selectedYear)\nreturn (\n<div className={styles.years}>\n@@ -155,7 +159,6 @@ class _DatePickerPanel extends React.Component {\noptions={options}\nselectedOption={selectedOption}\nonSelect={option => this.updateDate('year', option.value)}\n- overScroll={true}\n/>\n</div>\n)\n",
        "date": "03.05.2019 14:23:13",
        "repo": "openforis/sepal",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor year options in date picker panel"
    },
    {
        "msg": "replace Label with Combo label in RecipeSection to fix spacing.",
        "diff": "diff --git a/modules/gui/frontend/src/app/home/body/process/classification/inputImagery/recipeSection.js b/modules/gui/frontend/src/app/home/body/process/classification/inputImagery/recipeSection.js @@ -3,7 +3,6 @@ import {connect, select} from 'store'\nimport {isMobile} from 'widget/userAgent'\nimport {msg} from 'translate'\nimport Combo from 'widget/combo'\n-import Label from 'widget/label'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n@@ -22,9 +21,9 @@ class RecipeSection extends React.Component {\n}))\nreturn (\n<React.Fragment>\n- <Label msg={msg('process.classification.panel.inputImagery.form.recipe.label')}/>\n<Combo\ninput={recipe}\n+ label={msg('process.classification.panel.inputImagery.form.recipe.label')}\nplaceholder={msg('process.classification.panel.inputImagery.form.recipe.placeholder')}\noptions={options}\nautoFocus={!isMobile()}/>\n",
        "date": "21.05.2019 12:49:07",
        "repo": "openforis/sepal",
        "type": "replace",
        "chatgpt_zeroshot": "Remove Label component from RecipeSection and use label prop in Combo component instead"
    },
    {
        "msg": "replace pointer event shield with a wrapper with display block/none.",
        "diff": "diff --git a/modules/gui/frontend/src/store.js b/modules/gui/frontend/src/store.js @@ -169,6 +169,7 @@ export const dispatchable = action => ({\nconst EnabledContext = React.createContext()\nexport class Enabled extends React.PureComponent {\n+ ref = React.createRef()\nrender() {\nconst {value} = this.props\nreturn (\n@@ -182,27 +183,17 @@ export class Enabled extends React.PureComponent {\nconst {children} = this.props\nreturn (\n<EnabledContext.Provider value={enabled}>\n- <React.Fragment>\n+ <div style={{\n+ width: '100%',\n+ height: '100%',\n+ display: enabled ? 'block' : 'none'\n+ }}>\n{children}\n- {enabled ? null : this.renderPointerEventsShield()}\n- </React.Fragment>\n+ </div>\n</EnabledContext.Provider>\n)\n}\n- renderPointerEventsShield() {\n- return (\n- <div style={{\n- position: 'absolute',\n- top: '0',\n- bottom: '0',\n- left: '0',\n- right: '0',\n- pointerEvents: 'all'\n- }}/>\n- )\n- }\n-\ncomponentDidUpdate(prevProps) {\nconst prevValue = prevProps.value\nconst value = this.props.value\n",
        "date": "23.05.2019 17:22:16",
        "repo": "openforis/sepal",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor Enabled component to use a div wrapper and remove unnecessary renderPointerEventsShield method"
    },
    {
        "msg": "replace rx.defer/of with rx.from_callback.",
        "diff": "diff --git a/modules/google-earth-engine/docker/sepal-ee/sepal/drive/rx/operators.py b/modules/google-earth-engine/docker/sepal-ee/sepal/drive/rx/operators.py import rx\n-from rx import defer, of\n+from rx import from_callable\nfrom rx.core.typing import Mapper\nfrom rx.operators import flat_map\nfrom sepal.rx.workqueue import WorkQueue\n@@ -41,7 +41,7 @@ def execute(\nenqueue(\ncredentials,\nqueue=_drive_executions,\n- mapper=lambda value: defer(lambda _: of(mapper(value))),\n+ mapper=lambda value: from_callable(lambda: mapper(value)),\ndescription=description,\nretries=retries\n)\n",
        "date": "12.07.2019 15:43:58",
        "repo": "openforis/sepal",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor drive rx operators to use from_callable instead of defer and of."
    },
    {
        "msg": "replace SuperButton drag button with full component drag.",
        "diff": "diff --git a/modules/gui/frontend/src/widget/superButton.js b/modules/gui/frontend/src/widget/superButton.js @@ -78,7 +78,7 @@ class _SuperButton extends React.Component {\nclassName\n]).join(' ')\nreturn (\n- <div className={classNames}>\n+ <div className={classNames} ref={this.ref}>\n<div className={styles.main}>\n<div className={styles.clickTarget} onClick={() => this.handleClick()}/>\n<div className={styles.info}>\n@@ -90,7 +90,7 @@ class _SuperButton extends React.Component {\nclassName={styles.buttons}>\n{this.renderTimestamp()}\n{this.renderExtraButtons()}\n- {this.renderDragButton()}\n+ {/* {this.renderDragButton()} */}\n{this.renderEditButton()}\n{this.renderDuplicateButton()}\n{this.renderRemoveButton()}\n",
        "date": "06.09.2019 17:35:49",
        "repo": "openforis/sepal",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor superButton.js to remove renderDragButton() method"
    },
    {
        "msg": "replace task-executor module with task.",
        "diff": "diff --git a/dev-env/sepal.sh b/dev-env/sepal.sh @@ -3,7 +3,7 @@ set -e\nSEPAL_CONFIG=/etc/sepal/module.d\nSEPAL=/usr/local/lib/sepal\n-SEPAL_MODULES=\"user sepal-server api-gateway task-executor gee gui\"\n+SEPAL_MODULES=\"user sepal-server api-gateway task gee gui\"\npidof () {\nscreen -ls | grep \"sepal:$1\" | cut -d \".\" -f 1\n@@ -157,10 +157,17 @@ run-api-gateway)\n-DconfigDir=\"$SEPAL_CONFIG/api-gateway\"\n;;\nrun-gee)\n+ cd $SEPAL/lib/js/shared\n+ npm install\ncd $SEPAL/modules/gee/docker\nnpm i\nSEPAL_CONFIG=$SEPAL_CONFIG source ./dev.sh\n;;\n+run-gui)\n+ cd $SEPAL/modules/gui/frontend\n+ npm install\n+ npm start\n+ ;;\nrun-sepal-server)\n$SEPAL/gradlew \\\n-p $SEPAL \\\n@@ -169,11 +176,12 @@ run-sepal-server)\n-DconfigDir=\"$SEPAL_CONFIG/sepal-server\"\n#-DskipSceneMetaDataUpdate\n;;\n-run-task-executor)\n- $SEPAL/gradlew \\\n- -p $SEPAL \\\n- --no-daemon \\\n- :task-executor:runDev --args=\"$SEPAL_CONFIG/task-executor/task-executor.properties\"\n+run-task)\n+ cd $SEPAL/lib/js/shared\n+ npm install\n+ cd $SEPAL/modules/task/docker\n+ npm i\n+ SEPAL_CONFIG=$SEPAL_CONFIG source ./dev.sh\n;;\nrun-user)\n$SEPAL/gradlew \\\n@@ -182,24 +190,6 @@ run-user)\n:sepal-user:runDev \\\n-DconfigDir=\"$SEPAL_CONFIG/user\"\n;;\n-run-gui)\n- cd $SEPAL/lib/js/shared\n- npm install\n- cd $SEPAL/modules/gui/frontend\n- npm install\n- npm start\n- # pip3 install -r $SEPAL/modules/google-earth-engine/docker/requirements.txt\n- # pip3 install -e $SEPAL/modules/google-earth-engine/docker/sepal-ee\n- # python3\\\n- # $SEPAL/modules/google-earth-engine/docker/src/test_server.py \\\n- # --gee-email google-earth-engine@openforis-sepal.iam.gserviceaccount.com \\\n- # --gee-key-path $SEPAL_CONFIG/google-earth-engine/gee-service-account.pem \\\n- # --sepal-host localhost:3000 \\\n- # --sepal-username \"sepalAdmin\" \\\n- # --sepal-password \"the admin password\" \\\n- # --home-dir $SEPAL_CONFIG/sepal-server/home/admin \\\n- # --username admin\n- ;;\n*)\nusage\n;;\n",
        "date": "25.03.2020 11:44:23",
        "repo": "openforis/sepal",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor module dependencies and update npm scripts for task and gui modules."
    },
    {
        "msg": "replace fromPromise with promise$ in ee.$.",
        "diff": "diff --git a/lib/js/shared/src/ee/extensions/utils.js b/lib/js/shared/src/ee/extensions/utils.js @@ -2,7 +2,7 @@ const {defer} = require('rxjs')\nconst log = require('sepal/log').getLogger('ee')\nconst {limiter$} = require('../eeLimiter')\nconst {v4: uuid} = require('uuid')\n-const {fromPromise} = require('sepal/rxjs')\n+const {promise$} = require('sepal/rxjs')\nconst {retry} = require('sepal/rxjs/operators')\nconst {EEException} = require('sepal/ee/exception')\n@@ -14,8 +14,7 @@ module.exports = ee => {\nconst $ = ({operation, operationId = uuid().substr(-4), ee, maxRetries = MAX_RETRIES}) =>\ndefer(() =>\nlimiter$(\n- fromPromise(\n- new Promise(\n+ promise$(\n(resolve, reject) => {\nconst report = Report(operation, operationId)\ntry {\n@@ -33,7 +32,7 @@ module.exports = ee => {\nlog.debug(report(error))\nreject(createEEException(error, operation, operationId))\n}\n- })\n+ }\n).pipe(\nretry(maxRetries)\n), operationId\n",
        "date": "31.05.2020 01:13:20",
        "repo": "openforis/sepal",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor promise handling in ee extensions utils"
    },
    {
        "msg": "replace deprecated method call.",
        "diff": "diff --git a/modules/gateway/docker/src/main.js b/modules/gateway/docker/src/main.js @@ -5,7 +5,6 @@ const express = require('express')\nconst session = require('express-session')\nconst {logout} = require('./logout')\nconst {proxyEndpoints} = require('./proxy')\n-const {parse} = require('url')\nconst log = require('sepal/log').getLogger('gateway')\nconst app = express()\n@@ -29,7 +28,7 @@ const server = app.listen(port)\nserver.on('upgrade', (req, socket, head) => {\nsessionParser(req, {}, () => { // Make sure we have access to session for the websocket\n- const requestPath = parse(req.url).pathname\n+ const requestPath = new URL(req.url).pathname\nconst user = req.session.user\nconst username = user ? user.username : 'not-authenticated'\nif (user) {\n",
        "date": "31.08.2021 14:58:28",
        "repo": "openforis/sepal",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor URL parsing in main.js"
    },
    {
        "msg": "replace Buttons with ButtonSelect in vis params.",
        "diff": "diff --git a/modules/gui/frontend/src/app/home/map/visParams/visParamsPanel.js b/modules/gui/frontend/src/app/home/map/visParams/visParamsPanel.js @@ -215,15 +215,29 @@ class _VisParamsPanel extends React.Component {\nrenderTypeButtons() {\nconst {inputs: {type}} = this.props\nreturn (\n- <Form.Buttons\n+ <ButtonSelect\n+ chromeless\n+ shape='pill'\n+ placement='below'\ninput={type}\n- alignment='right'\n- options={[\n- {value: 'continuous', label: msg('map.visParams.type.continuous.label'), tooltip: msg('map.visParams.type.continuous.tooltip')},\n- {value: 'categorical', label: msg('map.visParams.type.categorical.label'), tooltip: msg('map.visParams.type.categorical.tooltip')},\n- {value: 'rgb', label: msg('map.visParams.type.rgb.label'), tooltip: msg('map.visParams.type.rgb.tooltip')},\n- {value: 'hsv', label: msg('map.visParams.type.hsv.label'), tooltip: msg('map.visParams.type.hsv.tooltip')},\n- ]}\n+ tooltipPlacement='bottom'\n+ options={[{\n+ value: 'continuous',\n+ label: msg('map.visParams.type.continuous.label'),\n+ tooltip: msg('map.visParams.type.continuous.tooltip')\n+ }, {\n+ value: 'categorical',\n+ label: msg('map.visParams.type.categorical.label'),\n+ tooltip: msg('map.visParams.type.categorical.tooltip')\n+ }, {\n+ value: 'rgb',\n+ label: msg('map.visParams.type.rgb.label'),\n+ tooltip: msg('map.visParams.type.rgb.tooltip')\n+ }, {\n+ value: 'hsv',\n+ label: msg('map.visParams.type.hsv.label'),\n+ tooltip: msg('map.visParams.type.hsv.tooltip')\n+ }]}\nonChange={nextType => this.onTypeChanged(nextType)}\n/>\n)\n",
        "date": "23.11.2021 22:17:07",
        "repo": "openforis/sepal",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor type buttons in visParamsPanel.js to use ButtonSelect component with updated props and options."
    },
    {
        "msg": "replace xmlhttprequest lib with custom version. Original lib does not work correctly when running in workers.",
        "diff": "diff --git a/lib/js/shared/package.json b/lib/js/shared/package.json \"serialize-error\": \"^8.1.0\",\n\"short-unique-id\": \"^4.4.4\",\n\"uuid\": \"^8.3.2\",\n- \"ws\": \"^8.5.0\"\n+ \"ws\": \"^8.6.0\",\n+ \"xmlhttprequest\": \"npm:@lpaolini/xmlhttprequest@^1.8.1\"\n},\n\"devDependencies\": {\n\"eslint\": \"^8.14.0\",\n",
        "date": "09.05.2022 14:22:30",
        "repo": "openforis/sepal",
        "type": "replace",
        "chatgpt_zeroshot": "Update ws to version 8.6.0 and add xmlhttprequest dependency"
    },
    {
        "msg": "replace deprecated ansible tasks.",
        "diff": "diff --git a/hosting-services/aws/sepal/provision.yml b/hosting-services/aws/sepal/provision.yml gather_facts: false\ntasks:\n+ # TODO: Use community.aws.iam_access_key to create keys instead\n# - name: Create letsencrypt AWS user\n# community.aws.iam:\n# iam_type: user\n# access_key_state: create\n# register: letsencrypt_user\n- - name: Create letsencrypt AWS user\n- community.aws.iam_user:\n- name: letsencrypt\n- state: present\n- register: letsencrypt_user\n+ # - name: Create letsencrypt AWS user\n+ # community.aws.iam_user:\n+ # name: letsencrypt\n+ # state: present\n+ # register: letsencrypt_user\n- - name: Create letsencrypt user policy\n- community.aws.iam_policy:\n- iam_type: user\n- iam_name: letsencrypt\n- policy_name: letsencrypt_policy\n- policy_json: >\n- {\n- \"Version\": \"2012-10-17\",\n- \"Statement\": [\n- {\n- \"Effect\": \"Allow\",\n- \"Action\": [\n- \"route53:GetHostedZone\",\n- \"route53:ListHostedZones\",\n- \"route53:ListHostedZonesByName\",\n- \"route53:GetHostedZoneCount\",\n- \"route53:ChangeResourceRecordSets\",\n- \"route53:ListResourceRecordSets\"\n- ],\n- \"Resource\": \"*\"\n- }\n- ]\n- }\n- state: present\n+ # - name: Create letsencrypt user policy\n+ # community.aws.iam_policy:\n+ # iam_type: user\n+ # iam_name: letsencrypt\n+ # policy_name: letsencrypt_policy\n+ # policy_json: >\n+ # {\n+ # \"Version\": \"2012-10-17\",\n+ # \"Statement\": [\n+ # {\n+ # \"Effect\": \"Allow\",\n+ # \"Action\": [\n+ # \"route53:GetHostedZone\",\n+ # \"route53:ListHostedZones\",\n+ # \"route53:ListHostedZonesByName\",\n+ # \"route53:GetHostedZoneCount\",\n+ # \"route53:ChangeResourceRecordSets\",\n+ # \"route53:ListResourceRecordSets\"\n+ # ],\n+ # \"Resource\": \"*\"\n+ # }\n+ # ]\n+ # }\n+ # state: present\n# - name: Store letsencrypt keys\n# copy:\nregister: sepal_storage_group\n- name: Provision Sepal-Storage instance\n- ec2:\n+ ec2_instance:\nkey_name: \"{{ lookup('env', 'AWS_REGION') }}\"\n- group: \"Sepal-Storage\"\n+ security_groups:\n+ - \"Sepal-Storage\"\ninstance_type: m5a.large\n- image: \"{{ lookup('env', 'AWS_AMI') }}\"\n+ image_id: \"{{ lookup('env', 'AWS_AMI') }}\"\nregion: \"{{ lookup('env', 'AWS_REGION') }}\"\n- zone: \"{{ lookup('env', 'AWS_AVAILABILITY_ZONE') }}\"\n+ availability_zone: \"{{ lookup('env', 'AWS_AVAILABILITY_ZONE') }}\"\nwait: true\n- instance_tags:\n- Name: \"Sepal-Storage - {{ lookup('env', 'DEPLOY_ENVIRONMENT') }}\"\n- Type: \"SepalStorage\"\n- Environment: \"{{ lookup('env', 'DEPLOY_ENVIRONMENT') }}\"\n+ filters:\n+ tag:Name: \"Sepal-Storage - {{ lookup('env', 'DEPLOY_ENVIRONMENT') }}\"\n+ tag:Type: \"SepalStorage\"\n+ tag:Environment: \"{{ lookup('env', 'DEPLOY_ENVIRONMENT') }}\"\nexact_count: 1\n- count_tag:\n+ purge_tags: false\n+ tags:\nType: \"SepalStorage\"\nEnvironment: \"{{ lookup('env', 'DEPLOY_ENVIRONMENT') }}\"\nvolumes:\ncidr_ip: 0.0.0.0/0\n- name: Provision Sepal instance\n- ec2:\n+ ec2_instance:\nkey_name: \"{{ lookup('env', 'AWS_REGION') }}\"\n- group: \"Sepal\"\n+ security_groups:\n+ - \"Sepal\"\ninstance_type: \"{{ lookup('env', 'AWS_INSTANCE_TYPE') }}\"\n- image: \"{{ lookup('env', 'AWS_AMI') }}\"\n+ image_id: \"{{ lookup('env', 'AWS_AMI') }}\"\nregion: \"{{ lookup('env', 'AWS_REGION') }}\"\n- zone: \"{{ lookup('env', 'AWS_AVAILABILITY_ZONE') }}\"\n+ availability_zone: \"{{ lookup('env', 'AWS_AVAILABILITY_ZONE') }}\"\nwait: true\nexact_count: 1\n- count_tag:\n- Type: Sepal\n- Environment: \"{{ lookup('env', 'DEPLOY_ENVIRONMENT') }}\"\n- instance_tags:\n+ filters:\n+ tag:Type: Sepal\n+ tag:Environment: \"{{ lookup('env', 'DEPLOY_ENVIRONMENT') }}\"\n+ purge_tags: false\n+ tags:\nName: \"Sepal - {{ lookup('env', 'DEPLOY_ENVIRONMENT') }}\"\nType: Sepal\nEnvironment: \"{{ lookup('env', 'DEPLOY_ENVIRONMENT') }}\"\nvolume_size: 100\nregister: started_ec2_sepal\n+ - ec2_instance_info:\n+ region: \"{{ lookup('env', 'AWS_REGION') }}\"\n+ filters:\n+ \"tag:Type\": \"Sepal\"\n+ \"tag:Environment\": \"{{ lookup('env', 'DEPLOY_ENVIRONMENT') }}\"\n+ register: ec2_sepal\n+\n- name: Wait for SSH to be available on Sepal\n- local_action: wait_for host=\"{{ item.public_ip }}\"\n+ local_action: wait_for host=\"{{ item.public_ip_address }}\"\nport=22\nstate=\"started\"\n- with_items: \"{{ started_ec2_sepal.instances }}\"\n+ with_items: \"{{ ec2_sepal.instances }}\"\n- name: Wait for SSH to be available on Sepal-Storage\n- local_action: wait_for host=\"{{ item.public_ip }}\"\n+ local_action: wait_for host=\"{{ item.public_ip_address }}\"\nport=22\nstate=\"started\"\n- with_items: \"{{ started_ec2_sepal_storage.instances }}\"\n+ with_items: \"{{ ec2_sepal_storage.instances }}\"\n",
        "date": "23.06.2022 06:57:58",
        "repo": "openforis/sepal",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor IAM user creation and policy assignment, update EC2 instance provisioning configurations."
    },
    {
        "msg": "replace VgSort with Compare",
        "diff": "diff --git a/packages/vega-typings/types/spec/transform.d.ts b/packages/vega-typings/types/spec/transform.d.ts @@ -11,6 +11,7 @@ import {\nDataRef,\nEventStream,\nFieldValue,\n+ Compare,\n} from '.';\nexport type FieldRef =\n@@ -130,7 +131,7 @@ export interface VgAggregateTransform {\nexport interface VgCollectTransform {\ntype: 'collect';\n- sort: VgSort;\n+ sort: Compare;\n}\nexport interface VgCountPatternTransform {\n@@ -159,7 +160,7 @@ export interface VgStackTransform {\noffset?: StackOffset;\ngroupby: string[];\nfield: string;\n- sort: VgSort;\n+ sort: Compare;\nas: string[];\n}\n@@ -256,15 +257,6 @@ export interface VgLegendEncode {\n}\nexport type VgGuideEncode = any; // TODO: replace this (See guideEncode in Vega Schema)\n-export type VgSort =\n- | {\n- field: string;\n- order?: 'ascending' | 'descending';\n- }\n- | {\n- field: string[];\n- order?: ('ascending' | 'descending')[];\n- };\nexport interface VgImputeTransform {\ntype: 'impute';\n",
        "date": "23.02.2018 01:18:48",
        "repo": "vega/vega",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor sort types in transform interfaces to use Compare type."
    },
    {
        "msg": "replace arch tryouts with the one returned from the device",
        "diff": "diff --git a/packages/rnv/src/platformTools/android.js b/packages/rnv/src/platformTools/android.js @@ -416,7 +416,7 @@ const _runGradle = async (c, platform) => {\n// Only one that is active, running on that one\nconst dv = activeDevices[0];\nlogInfo(`Found device ${dv.name}:${dv.udid}!`);\n- await _runGradleApp(c, platform, appFolder, signingConfig, dv);\n+ await _runGradleApp(c, platform, dv);\n} else if (activeDevices.length === 0 && inactiveDevices.length > 0) {\n// No device active, but there are emulators created\nconst devicesString = composeDevicesString(inactiveDevices, true);\n@@ -430,7 +430,7 @@ const _runGradle = async (c, platform) => {\nif (response.chosenEmulator) {\nawait launchAndroidSimulator(c, platform, response.chosenEmulator, true);\nconst devices = await _checkForActiveEmulator(c, platform);\n- await _runGradleApp(c, platform, appFolder, signingConfig, devices);\n+ await _runGradleApp(c, platform, devices);\n}\n} else if (activeDevices.length > 1) {\nconst devicesString = composeDevicesString(activeDevices, true);\n@@ -443,11 +443,11 @@ const _runGradle = async (c, platform) => {\n}]);\nif (response.chosenEmulator) {\nconst dev = activeDevices.find(d => d.name === response.chosenEmulator);\n- await _runGradleApp(c, platform, appFolder, signingConfig, dev);\n+ await _runGradleApp(c, platform, dev);\n}\n} else {\nconst devices = await _checkForActiveEmulator(c, platform);\n- await _runGradleApp(c, platform, appFolder, signingConfig, devices);\n+ await _runGradleApp(c, platform, devices);\n}\n};\n@@ -520,6 +520,7 @@ const _runGradleApp = (c, platform, device) => new Promise((resolve, reject) =>\nconst appFolder = getAppFolder(c, platform);\nconst bundleId = getConfigProp(c, platform, 'id');\nconst outputFolder = signingConfig === 'Debug' ? 'debug' : 'release';\n+ const { arch, name } = device;\nshell.cd(`${appFolder}`);\n@@ -534,14 +535,9 @@ const _runGradleApp = (c, platform, device) => new Promise((resolve, reject) =>\nif (!fs.existsSync(apkPath)) {\napkPath = path.join(appFolder, `app/build/outputs/apk/${outputFolder}/app-${outputFolder}-unsigned.apk`);\n} if (!fs.existsSync(apkPath)) {\n- apkPath = path.join(appFolder, `app/build/outputs/apk/${outputFolder}/app-x86-${outputFolder}.apk`);\n- } if (!fs.existsSync(apkPath)) {\n- apkPath = path.join(appFolder, `app/build/outputs/apk/${outputFolder}/app-x86_64-${outputFolder}.apk`);\n- } if (!fs.existsSync(apkPath)) {\n- apkPath = path.join(appFolder, `app/build/outputs/apk/${outputFolder}/app-arm64-v8a-${outputFolder}.apk`);\n- } if (!fs.existsSync(apkPath)) {\n- apkPath = path.join(appFolder, `app/build/outputs/apk/${outputFolder}/app-armeabi-v7a-${outputFolder}.apk`);\n+ apkPath = path.join(appFolder, `app/build/outputs/apk/${outputFolder}/app-${arch}-${outputFolder}.apk`);\n}\n+ logInfo(`Installing ${apkPath} on ${name}`);\nreturn executeAsync(c.cli[CLI_ANDROID_ADB], ['-s', device.udid, 'install', '-r', '-d', '-f', apkPath]);\n})\n.then(() => ((device.isDevice && platform !== ANDROID_WEAR)\n@@ -565,7 +561,6 @@ const buildAndroid = (c, platform) => new Promise((resolve, reject) => {\nconst appFolder = getAppFolder(c, platform);\nconst signingConfig = getConfigProp(c, platform, 'signingConfig', 'Debug');\n- const outputFolder = signingConfig === 'Debug' ? 'debug' : 'release';\nshell.cd(`${appFolder}`);\n",
        "date": "06.06.2019 15:46:24",
        "repo": "pavjacko/renative",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor Android build process and simplify device handling"
    },
    {
        "msg": "replace \\package.json on windows",
        "diff": "diff --git a/packages/rnv/src/resolve.js b/packages/rnv/src/resolve.js @@ -115,7 +115,7 @@ const _doResolveExternalPackage = (aPath, options) => {\n...options,\nextensions: ['.js', '.json'].concat(options.extensions ?? [])\n})\n- .replace(/\\/package.json$/, '');\n+ .replace(/(\\\\|\\/)package.json$/, '');\nreturn options.keepSuffix ?? false\n? `${resolvedPath}/${packageSuffix}`\n: resolvedPath;\n",
        "date": "29.04.2020 12:09:08",
        "repo": "pavjacko/renative",
        "type": "replace",
        "chatgpt_zeroshot": "Fix path separator in resolve.js for Windows OS"
    },
    {
        "msg": "replace APP_VERSION in tizen template",
        "diff": "diff --git a/packages/rnv/src/platformTools/tizen/index.js b/packages/rnv/src/platformTools/tizen/index.js import path from 'path';\nimport fs from 'fs';\nimport chalk from 'chalk';\n+import semver from 'semver';\nimport inquirer from 'inquirer';\nimport net from 'net';\nimport parser from 'xml2json';\n@@ -15,6 +16,7 @@ import {\n} from '../../constants';\nimport {\ngetAppFolder,\n+ getAppVersion,\nwriteCleanFile,\ngetAppTemplateFolder,\ngetConfigProp,\n@@ -506,7 +508,8 @@ export const configureProject = (c, platform) => new Promise((resolve) => {\n[\n{ pattern: '{{PACKAGE}}', override: p.package },\n{ pattern: '{{ID}}', override: p.id },\n- { pattern: '{{APP_NAME}}', override: p.appName }\n+ { pattern: '{{APP_NAME}}', override: p.appName },\n+ { pattern: '{{APP_VERSION}}', override: semver.coerce(getAppVersion(c, platform))\n]\n);\n",
        "date": "14.05.2020 11:35:56",
        "repo": "pavjacko/renative",
        "type": "replace",
        "chatgpt_zeroshot": "Add version placeholder in Tizen project configuration"
    },
    {
        "msg": "replace backslashes",
        "diff": "diff --git a/packages/rnv/src/resolve.js b/packages/rnv/src/resolve.js @@ -115,7 +115,7 @@ const _doResolveExternalPackage = (aPath, options) => {\n...options,\nextensions: ['.js', '.json'].concat(options.extensions ?? [])\n})\n- .replace(/\\/package.json$/, '');\n+ .replace(/\\/package.json$/, '').replace(/\\\\/g, '/');\nreturn options.keepSuffix ?? false\n? `${resolvedPath}/${packageSuffix}`\n: resolvedPath;\n",
        "date": "22.05.2020 11:56:56",
        "repo": "pavjacko/renative",
        "type": "replace",
        "chatgpt_zeroshot": "Fix path resolution issue in resolve.js"
    },
    {
        "msg": "replace the imageWaitClick usage by sleep and imageClick because of the wrong behavior.",
        "diff": "diff --git a/scripts/com.r2studio.MarvelFutureFight2/index.js b/scripts/com.r2studio.MarvelFutureFight2/index.js @@ -77,7 +77,8 @@ MarvelFutureFight.prototype.runAutoCowork = function(task) {\nconsole.log(\"[MMFS][Co-Op] choose a hero\");\nrbm.click({ x: 118, y: 900 });\nconsole.log(\"[MMFS][Co-Op] start to match\");\n- rbm.imageWaitClick(\"match_start.1920x1080.png\", 10000);\n+ sleep(1000);\n+ rbm.imageClick(\"match_start.1920x1080.png\");\nsleep(30000); continue;\n}\n}\n",
        "date": "15.10.2017 00:38:36",
        "repo": "r2-studio/robotmon-scripts",
        "type": "replace",
        "chatgpt_zeroshot": "Add sleep before clicking on match start button in Co-Op mode"
    },
    {
        "msg": "replace state in router",
        "diff": "diff --git a/src/kickstart/ks-route.js b/src/kickstart/ks-route.js @@ -4,7 +4,6 @@ kickStart.register('route', function () {\nvar app = kickStart;\nvar routes = {};\nvar routeRE = {};\n- var silent;\naddListener();\n@@ -75,16 +74,14 @@ kickStart.register('route', function () {\nfunction go(route) {\nroute = String('/'+route).replace(/\\/{2,}/g, '/');\n- setTimeout(function () { window.location.hash = route; }, 1);\n+ window.history.replaceState({}, document.title, '#' + route)\n+ process()\nreturn app.route;\n}\nfunction set(route) {\n- silent = true;\n- // do not use go(route) here\nroute = String('/'+route).replace(/\\/{2,}/g, '/');\n- window.location.hash = route;\n- setTimeout(function () { silent = false }, 1);\n+ window.history.replaceState({}, document.title, '#' + route)\nreturn app.route;\n}\n@@ -105,7 +102,6 @@ kickStart.register('route', function () {\n}\nfunction process() {\n- if (silent === true) return;\nprepare();\n// match routes\nvar hash = window.location.hash.substr(1).replace(/\\/{2,}/g, '/');\n",
        "date": "11.06.2019 09:25:04",
        "repo": "vitmalina/w2ui",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor route handling to use history.replaceState instead of setting window.location.hash directly"
    },
    {
        "msg": "replace label color from lightgray -> white",
        "diff": "diff --git a/packages/cli/lib/lib/webpack/webpack-base-config.js b/packages/cli/lib/lib/webpack/webpack-base-config.js @@ -302,7 +302,7 @@ module.exports = function(env) {\n}),\nnew ProgressBarPlugin({\nformat:\n- '\\u001b[37m\\u001b[44m Build \\u001b[49m\\u001b[39m [:bar] \\u001b[32m\\u001b[1m:percent\\u001b[22m\\u001b[39m (:elapseds) \\u001b[2m:msg\\u001b[22m',\n+ '\\u001b[97m\\u001b[44m Build \\u001b[49m\\u001b[39m [:bar] \\u001b[32m\\u001b[1m:percent\\u001b[22m\\u001b[39m (:elapseds) \\u001b[2m:msg\\u001b[22m',\nrenderThrottle: 100,\nsummary: false,\nclear: true,\n",
        "date": "04.08.2019 21:55:04",
        "repo": "preactjs/preact-cli",
        "type": "replace",
        "chatgpt_zeroshot": "Update progress bar format in webpack base config"
    },
    {
        "msg": "replace getFriendStatus with friendRequestStatus",
        "diff": "diff --git a/html/src/app.js b/html/src/app.js @@ -12706,6 +12706,13 @@ speechSynthesis.getVoices();\nreturn;\n}\nD.ref = ref;\n+ D.incomingRequest = false;\n+ D.outgoingRequest = false;\n+ if (D.ref.friendRequestStatus === 'incoming') {\n+ D.incomingRequest = true;\n+ } else if (D.ref.friendRequestStatus === 'outgoing') {\n+ D.outgoingRequest = true;\n+ }\n$app.applyUserDialogLocation();\n});\n@@ -12941,6 +12948,11 @@ speechSynthesis.getVoices();\n}\n}\nD.isFavorite = API.cachedFavoritesByObjectId.has(D.id);\n+ if (D.ref.friendRequestStatus === 'incoming') {\n+ D.incomingRequest = true;\n+ } else if (D.ref.friendRequestStatus === 'outgoing') {\n+ D.outgoingRequest = true;\n+ }\nthis.applyUserDialogLocation();\nif (this.$refs.userDialogTabs.currentName === '0') {\nthis.userDialogLastActiveTab = 'Info';\n@@ -12972,9 +12984,6 @@ speechSynthesis.getVoices();\nthis.userDialogLastActiveTab = 'JSON';\nthis.refreshUserDialogTreeData();\n}\n- API.getFriendStatus({\n- userId: D.id\n- });\nif (args.cache) {\nAPI.getUser(args.params);\n}\n",
        "date": "12.05.2022 05:09:03",
        "repo": "pypy-vrc/vrcx",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor friend request status handling in app.js"
    },
    {
        "msg": "replace dependencies badge by peer dependencies badge",
        "diff": "diff --git a/README.md b/README.md @@ -55,7 +55,7 @@ Read the [Getting started page](https://getbootstrap.com/getting-started/) for i\n[![npm version](https://img.shields.io/npm/v/bootstrap.svg)](https://www.npmjs.com/package/bootstrap)\n[![Gem version](https://img.shields.io/gem/v/bootstrap.svg)](https://rubygems.org/gems/bootstrap)\n[![Build Status](https://img.shields.io/travis/twbs/bootstrap/v4-dev.svg)](https://travis-ci.org/twbs/bootstrap)\n-[![dependencies Status](https://david-dm.org/twbs/bootstrap/status.svg)](https://david-dm.org/twbs/bootstrap)\n+[![peerDependencies Status](https://david-dm.org/twbs/bootstrap/peer-status.svg)](https://david-dm.org/twbs/bootstrap?type=peer)\n[![devDependency Status](https://img.shields.io/david/dev/twbs/bootstrap.svg)](https://david-dm.org/twbs/bootstrap?type=dev)\n[![Meteor Atmosphere](https://img.shields.io/badge/meteor-twbs%3Abootstrap-blue.svg)](https://atmospherejs.com/twbs/bootstrap)\n[![Packagist Prerelease](https://img.shields.io/packagist/vpre/twbs/bootstrap.svg)](https://packagist.org/packages/twbs/bootstrap)\n",
        "date": "11.08.2017 13:36:36",
        "repo": "coreui/coreui",
        "type": "replace",
        "chatgpt_zeroshot": "Update dependencies status badge in README.md"
    },
    {
        "msg": "replace basic line-heights variable with button's line-heights variable for button size classes",
        "diff": "diff --git a/scss/_buttons.scss b/scss/_buttons.scss @@ -105,11 +105,11 @@ fieldset[disabled] a.btn {\n//\n.btn-lg {\n- @include button-size($input-btn-padding-y-lg, $input-btn-padding-x-lg, $font-size-lg, $line-height-lg, $btn-border-radius-lg);\n+ @include button-size($input-btn-padding-y-lg, $input-btn-padding-x-lg, $font-size-lg, $input-btn-line-height-lg, $btn-border-radius-lg);\n}\n.btn-sm {\n- @include button-size($input-btn-padding-y-sm, $input-btn-padding-x-sm, $font-size-sm, $line-height-sm, $btn-border-radius-sm);\n+ @include button-size($input-btn-padding-y-sm, $input-btn-padding-x-sm, $font-size-sm, $input-btn-line-height-sm, $btn-border-radius-sm);\n}\n",
        "date": "22.08.2017 17:25:23",
        "repo": "coreui/coreui",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor button sizes to use input line heights for consistency"
    },
    {
        "msg": "replace img-fluid by w-100 to conform with HTML",
        "diff": "diff --git a/docs/4.0/components/carousel.md b/docs/4.0/components/carousel.md @@ -24,7 +24,7 @@ Carousels don't automatically normalize slide dimensions. As such, you may need\n### Slides only\n-Here's a carousel with slides only. Note the presence of the `.d-block` and `.img-fluid` on carousel images to prevent browser default image alignment.\n+Here's a carousel with slides only. Note the presence of the `.d-block` and `.w-100` on carousel images to prevent browser default image alignment.\n{% example html %}\n<div id=\"carouselExampleSlidesOnly\" class=\"carousel slide\" data-ride=\"carousel\">\n",
        "date": "18.02.2018 18:22:41",
        "repo": "coreui/coreui",
        "type": "replace",
        "chatgpt_zeroshot": "Update carousel image classes to use .w-100 instead of .img-fluid"
    },
    {
        "msg": "replace freenode with libera IRC server",
        "diff": "diff --git a/site/content/docs/5.0/getting-started/introduction.md b/site/content/docs/5.0/getting-started/introduction.md @@ -154,7 +154,7 @@ Stay up to date on the development of Bootstrap and reach out to the community w\n- Read and subscribe to [The Official Bootstrap Blog]({{< param blog >}}).\n- Join [the official Slack room]({{< param slack >}}).\n-- Chat with fellow Bootstrappers in IRC. On the `irc.freenode.net` server, in the `##bootstrap` channel.\n+- Chat with fellow Bootstrappers in IRC. On the `irc.libera.chat` server, in the `#bootstrap` channel.\n- Implementation help may be found at Stack Overflow (tagged [`bootstrap-5`](https://stackoverflow.com/questions/tagged/bootstrap-5)).\n- Developers should use the keyword `bootstrap` on packages that modify or add to the functionality of Bootstrap when distributing through [npm](https://www.npmjs.com/search?q=keywords:bootstrap) or similar delivery mechanisms for maximum discoverability.\n",
        "date": "21.05.2021 07:08:04",
        "repo": "coreui/coreui",
        "type": "replace",
        "chatgpt_zeroshot": "Update IRC server for Bootstrap chat channel"
    },
    {
        "msg": "replace dummy text with English for Text truncation page",
        "diff": "diff --git a/site/content/docs/5.1/helpers/text-truncation.md b/site/content/docs/5.1/helpers/text-truncation.md @@ -12,12 +12,12 @@ For longer content, you can add a `.text-truncate` class to truncate the text wi\n<!-- Block level -->\n<div class=\"row\">\n<div class=\"col-2 text-truncate\">\n- Praeterea iter est quasdam res quas ex communi.\n+ This text is quite long, and will be truncated once displayed.\n</div>\n</div>\n<!-- Inline level -->\n<span class=\"d-inline-block text-truncate\" style=\"max-width: 150px;\">\n- Praeterea iter est quasdam res quas ex communi.\n+ This text is quite long, and will be truncated once displayed.\n</span>\n{{< /example >}}\n",
        "date": "09.09.2021 20:30:41",
        "repo": "coreui/coreui",
        "type": "replace",
        "chatgpt_zeroshot": "Update text truncation examples in documentation"
    },
    {
        "msg": "replace inline styles in example \"Dropdowns\"",
        "diff": "diff --git a/site/content/docs/5.1/examples/dropdowns/index.html b/site/content/docs/5.1/examples/dropdowns/index.html @@ -107,19 +107,19 @@ body_class: \"\"\n</form>\n<ul class=\"list-unstyled mb-0\">\n<li><a class=\"dropdown-item d-flex align-items-center gap-2 py-2\" href=\"#\">\n- <span class=\"d-inline-block bg-success rounded-circle\" style=\"width: .5em; height: .5em;\"></span>\n+ <span class=\"d-inline-block bg-success rounded-circle p-1\"></span>\nAction\n</a></li>\n<li><a class=\"dropdown-item d-flex align-items-center gap-2 py-2\" href=\"#\">\n- <span class=\"d-inline-block bg-primary rounded-circle\" style=\"width: .5em; height: .5em;\"></span>\n+ <span class=\"d-inline-block bg-primary rounded-circle p-1\"></span>\nAnother action\n</a></li>\n<li><a class=\"dropdown-item d-flex align-items-center gap-2 py-2\" href=\"#\">\n- <span class=\"d-inline-block bg-danger rounded-circle\" style=\"width: .5em; height: .5em;\"></span>\n+ <span class=\"d-inline-block bg-danger rounded-circle p-1\"></span>\nSomething else here\n</a></li>\n<li><a class=\"dropdown-item d-flex align-items-center gap-2 py-2\" href=\"#\">\n- <span class=\"d-inline-block bg-info rounded-circle\" style=\"width: .5em; height: .5em;\"></span>\n+ <span class=\"d-inline-block bg-info rounded-circle p-1\"></span>\nSeparated link\n</a></li>\n</ul>\n@@ -131,19 +131,19 @@ body_class: \"\"\n</form>\n<ul class=\"list-unstyled mb-0\">\n<li><a class=\"dropdown-item d-flex align-items-center gap-2 py-2\" href=\"#\">\n- <span class=\"d-inline-block bg-success rounded-circle\" style=\"width: .5em; height: .5em;\"></span>\n+ <span class=\"d-inline-block bg-success rounded-circle p-1\"></span>\nAction\n</a></li>\n<li><a class=\"dropdown-item d-flex align-items-center gap-2 py-2\" href=\"#\">\n- <span class=\"d-inline-block bg-primary rounded-circle\" style=\"width: .5em; height: .5em;\"></span>\n+ <span class=\"d-inline-block bg-primary rounded-circle p-1\"></span>\nAnother action\n</a></li>\n<li><a class=\"dropdown-item d-flex align-items-center gap-2 py-2\" href=\"#\">\n- <span class=\"d-inline-block bg-danger rounded-circle\" style=\"width: .5em; height: .5em;\"></span>\n+ <span class=\"d-inline-block bg-danger rounded-circle p-1\"></span>\nSomething else here\n</a></li>\n<li><a class=\"dropdown-item d-flex align-items-center gap-2 py-2\" href=\"#\">\n- <span class=\"d-inline-block bg-info rounded-circle\" style=\"width: .5em; height: .5em;\"></span>\n+ <span class=\"d-inline-block bg-info rounded-circle p-1\"></span>\nSeparated link\n</a></li>\n</ul>\n",
        "date": "07.12.2021 21:45:56",
        "repo": "coreui/coreui",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor dropdown item styles to use padding instead of fixed width and height for rounded circles."
    },
    {
        "msg": "replace unused money format input and moved around other fields",
        "diff": "diff --git a/src/react/Pages/Connect/BudgetFields.jsx b/src/react/Pages/Connect/BudgetFields.jsx @@ -7,7 +7,7 @@ import Switch from \"@material-ui/core/Switch\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n-import MoneyFormatInputDefault from \"../../Components/FormFields/MoneyFormatInputDefault\";\n+import MoneyFormatInput from \"../../Components/FormFields/MoneyFormatInput\";\nimport TranslateMenuItem from \"../../Components/TranslationHelpers/MenuItem\";\nconst styles = {\n@@ -27,7 +27,7 @@ export default props => {\nreturn (\n<Grid item xs={12}>\n<Grid container spacing={8}>\n- <Grid item xs={12} md={4}>\n+ <Grid item xs={12} sm={4}>\n<FormControlLabel\nstyle={styles.formControl}\ncontrol={\n@@ -47,21 +47,7 @@ export default props => {\n{props.setBudget ? (\n<React.Fragment>\n- <Grid item xs={12} sm={6} md={4}>\n- <FormControl\n- style={styles.formControl}\n- error={props.budgetError}\n- >\n- <MoneyFormatInputDefault\n- id=\"budget\"\n- onChange={e => console.log(e.target.value)}\n- onValueChange={e => console.log(e)}\n- value={props.budget}\n- />\n- {/*handleChangeFormatted(\"budget\")*/}\n- </FormControl>\n- </Grid>\n- <Grid item xs={12} sm={6} md={4}>\n+ <Grid item xs={12} sm={8}>\n<FormControl style={styles.formControl}>\n<Select\nvalue={props.budgetFrequency}\n@@ -88,6 +74,18 @@ export default props => {\n</Select>\n</FormControl>\n</Grid>\n+ <Grid item xs={12}>\n+ <FormControl\n+ style={styles.formControl}\n+ error={props.budgetError}\n+ >\n+ <MoneyFormatInput\n+ id=\"budget\"\n+ value={props.budget}\n+ onValueChange={handleChangeFormatted(\"budget\")}\n+ />\n+ </FormControl>\n+ </Grid>\n</React.Fragment>\n) : null}\n</Grid>\n",
        "date": "24.06.2018 22:07:52",
        "repo": "bunqcommunity/bunqdesktop",
        "type": "replace",
        "chatgpt_zeroshot": "Refactor BudgetFields component to use MoneyFormatInput instead of MoneyFormatInputDefault and update grid layout for better responsiveness."
    }
]